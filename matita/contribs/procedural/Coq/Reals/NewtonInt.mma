(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

(* This file was automatically generated: do not edit *********************)

include "Coq.ma".

(*#***********************************************************************)

(*  v      *   The Coq Proof Assistant  /  The Coq Development Team     *)

(* <O___,, * CNRS-Ecole Polytechnique-INRIA Futurs-Universite Paris Sud *)

(*   \VV/  **************************************************************)

(*    //   *      This file is distributed under the terms of the       *)

(*         *       GNU Lesser General Public License Version 2.1        *)

(*#***********************************************************************)

(*i $Id: NewtonInt.v,v 1.11.2.1 2004/07/16 19:31:10 herbelin Exp $ i*)

include "Reals/Rbase.ma".

include "Reals/Rfunctions.ma".

include "Reals/SeqSeries.ma".

include "Reals/Rtrigo.ma".

include "Reals/Ranalysis.ma".

(* UNEXPORTED
Open Local Scope R_scope.
*)

(*#******************************************)

(*            Newton's Integral            *)

(*#******************************************)

inline procedural "cic:/Coq/Reals/NewtonInt/Newton_integrable.con" as definition.

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt.con" as definition.

(* If f is differentiable, then f' is Newton integrable (Tautology ?) *)

inline procedural "cic:/Coq/Reals/NewtonInt/FTCN_step1.con" as lemma.

(* By definition, we have the Fondamental Theorem of Calculus *)

inline procedural "cic:/Coq/Reals/NewtonInt/FTC_Newton.con" as lemma.

(* $\int_a^a f$ exists forall a:R and f:R->R *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P1.con" as lemma.

(* $\int_a^a f = 0$ *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P2.con" as lemma.

(* If $\int_a^b f$ exists, then $\int_b^a f$ exists too *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P3.con" as lemma.

(* $\int_a^b f = -\int_b^a f$ *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P4.con" as lemma.

(* The set of Newton integrable functions is a vectorial space *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P5.con" as lemma.

(*#*********)

inline procedural "cic:/Coq/Reals/NewtonInt/antiderivative_P1.con" as lemma.

(* $\int_a^b \lambda f + g = \lambda \int_a^b f + \int_a^b f *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P6.con" as lemma.

inline procedural "cic:/Coq/Reals/NewtonInt/antiderivative_P2.con" as lemma.

inline procedural "cic:/Coq/Reals/NewtonInt/antiderivative_P3.con" as lemma.

inline procedural "cic:/Coq/Reals/NewtonInt/antiderivative_P4.con" as lemma.

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P7.con" as lemma.

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P8.con" as lemma.

(* Chasles' relation *)

inline procedural "cic:/Coq/Reals/NewtonInt/NewtonInt_P9.con" as lemma.

