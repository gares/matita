(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

(* This file was automatically generated: do not edit *********************)

include "Coq.ma".

(*#***********************************************************************)

(*  v      *   The Coq Proof Assistant  /  The Coq Development Team     *)

(* <O___,, * CNRS-Ecole Polytechnique-INRIA Futurs-Universite Paris Sud *)

(*   \VV/  **************************************************************)

(*    //   *      This file is distributed under the terms of the       *)

(*         *       GNU Lesser General Public License Version 2.1        *)

(*#***********************************************************************)

(* $Id: Bool_nat.v,v 1.5.2.1 2004/07/16 19:30:59 herbelin Exp $ *)

include "Arith/Compare_dec.ma".

include "Arith/Peano_dec.ma".

include "Bool/Sumbool.ma".

(* UNEXPORTED
Open Local Scope nat_scope.
*)

(* UNEXPORTED
Implicit Types m n x y : nat.
*)

(*#* The decidability of equality and order relations over
    type [nat] give some boolean functions with the adequate specification. *)

inline procedural "cic:/Coq/Arith/Bool_nat/notzerop.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/lt_ge_dec.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_lt_ge_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_ge_lt_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_le_gt_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_gt_le_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_eq_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/nat_noteq_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/zerop_bool.con" as definition.

inline procedural "cic:/Coq/Arith/Bool_nat/notzerop_bool.con" as definition.

