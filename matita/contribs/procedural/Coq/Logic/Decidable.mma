(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

(* This file was automatically generated: do not edit *********************)

include "Coq.ma".

include "Init/Prelude.ma".

(*#***********************************************************************)

(*  v      *   The Coq Proof Assistant  /  The Coq Development Team     *)

(* <O___,, * CNRS-Ecole Polytechnique-INRIA Futurs-Universite Paris Sud *)

(*   \VV/  **************************************************************)

(*    //   *      This file is distributed under the terms of the       *)

(*         *       GNU Lesser General Public License Version 2.1        *)

(*#***********************************************************************)

(*i 	$Id: Decidable.v,v 1.5.2.1 2004/07/16 19:31:06 herbelin Exp $	 i*)

(*#* Properties of decidable propositions *)

inline procedural "cic:/Coq/Logic/Decidable/decidable.con" as definition.

inline procedural "cic:/Coq/Logic/Decidable/dec_not_not.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_True.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_False.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_or.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_and.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_not.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/dec_imp.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/not_not.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/not_or.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/not_and.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/not_imp.con" as theorem.

inline procedural "cic:/Coq/Logic/Decidable/imp_simp.con" as theorem.

