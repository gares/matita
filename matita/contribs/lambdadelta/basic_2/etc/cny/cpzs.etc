(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/notation/relations/pdeltaconvstar_6.ma".
include "basic_2/substitution/cpye_lift.ma".

(* CONTEXT-SENSITIVE EXTENDED DELTA-EQUIVALENCE FOR TERMS *******************)

definition cpzs: ynat ‚Üí ynat ‚Üí relation4 genv lenv term term ‚âù
                 Œªd,e,G,L,T1,T2.
                 ‚àÉ‚àÉT. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚ñ∂*[d, e] ùêç‚¶ÉT‚¶Ñ & ‚¶ÉG, L‚¶Ñ ‚ä¢ T2 ‚ñ∂*[d, e] ùêç‚¶ÉT‚¶Ñ.

interpretation "context-sensitive extended delta-equivalence (term)"
   'PDeltaConvStar G L T1 d e T2 = (cpzs d e G L T1 T2).

(* Basic properties **********************************************************)

lemma cpye_div: ‚àÄG,L,T1,T,d,e.  ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚ñ∂*[d, e] ùêç‚¶ÉT‚¶Ñ ‚Üí
                ‚àÄT2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T2 ‚ñ∂*[d, e] ùêç‚¶ÉT‚¶Ñ ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚óÜ*[d, e] T2.
/2 width=3 by ex2_intro/ qed.

lemma cpzs_refl: ‚àÄG,L,d,e. reflexive ‚Ä¶ (cpzs d e G L).
#G #L #d #e #T elim (cpye_total G L T d e) /2 width=3 by cpye_div/
qed.

lemma cpzs_bind: ‚àÄG,L,V1,V2,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ V1 ‚óÜ*[d, e] V2 ‚Üí
                 ‚àÄI,T1,T2. ‚¶ÉG, L.‚ìë{I}V1‚¶Ñ ‚ä¢ T1 ‚óÜ*[‚´Ød, e] T2 ‚Üí
                 ‚àÄa. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ìë{a,I}V1.T1 ‚óÜ*[d, e] ‚ìë{a,I}V2.T2.
#G #L #V1 #V2 #d #e * #V #HV1 #HV2 #I #T1 #T2 *
/5 width=10 by cpye_div, cpye_bind, leqy_cpye_trans, cny_bind, lsuby_succ/
qed.

lemma cpzs_flat: ‚àÄG,L,V1,V2,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ V1 ‚óÜ*[d, e] V2 ‚Üí
                 ‚àÄT1,T2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚óÜ*[d, e] T2 ‚Üí
                 ‚àÄI. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ìï{I}V1.T1 ‚óÜ*[d, e] ‚ìï{I}V2.T2.
#G #L #V1 #V2 #d #e * #V #HV1 #HV2 #T1 #T2 *
/3 width=5 by cpye_div, cpye_flat, cny_flat/
qed.

(* Basic inversion lemmas ***************************************************)

lemma cpzs_inv_sort: ‚àÄG,L,d,e,k1,k2. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ãÜk1 ‚óÜ*[d, e] ‚ãÜk2 ‚Üí k1 = k2.
#G #L #d #e #k1 #k2 * #X #H1 #H2
lapply (cpye_inv_sort1 ‚Ä¶ H1) -H1 #H1
lapply (cpye_inv_sort1 ‚Ä¶ H2) -H2 #H2
destruct //
qed-.

lemma cpzs_inv_bind: ‚àÄa1,a2,I1,I2,G,L,V1,V2,T1,T2,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ìë{a1,I1}V1.T1 ‚óÜ*[d, e] ‚ìë{a2,I2}V2.T2 ‚Üí
                     ‚àß‚àß a1 = a2 & I1 = I2
                      & ‚¶ÉG, L‚¶Ñ ‚ä¢ V1 ‚óÜ*[d, e] V2 & ‚¶ÉG, L.‚ìë{I1}V1‚¶Ñ ‚ä¢ T1 ‚óÜ*[‚´Ød, e] T2.
#a1 #a2 #I1 #I2 #G #L #V1 #V2 #T1 #T2 #d #e * #X #H1 #H2
elim (cpye_inv_bind1 ‚Ä¶ H1) -H1 #V2 #T2 #HV12 #HT12 #H1
elim (cpye_inv_bind1 ‚Ä¶ H2) -H2 #W2 #U2 #HW12 #HU12 #H2
destruct /5 width=8 by cpye_div, leqy_cpye_trans, lsuby_succ, and4_intro/
qed-.

lemma cpzs_inv_flat: ‚àÄI1,I2,G,L,V1,V2,T1,T2,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ìï{I1}V1.T1 ‚óÜ*[d, e] ‚ìï{I2}V2.T2 ‚Üí
                     ‚àß‚àß I1 = I2
                      & ‚¶ÉG, L‚¶Ñ ‚ä¢ V1 ‚óÜ*[d, e] V2 & ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚óÜ*[d, e] T2.
#I1 #I2 #G #L #V1 #V2 #T1 #T2 #d #e * #X #H1 #H2
elim (cpye_inv_flat1 ‚Ä¶ H1) -H1 #V2 #T2 #HV12 #HT12 #H1
elim (cpye_inv_flat1 ‚Ä¶ H2) -H2 #W2 #U2 #HW12 #HU12 #H2
destruct /3 width=3 by cpye_div, and3_intro/
qed-.

lemma cpzs_inv_flat_bind: ‚àÄa2,I1,I2,G,L,V1,V2,T1,T2,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚ìï{I1}V1.T1 ‚óÜ*[d, e] ‚ìë{a2,I2}V2.T2 ‚Üí ‚ä•.
#a2 #I1 #I2 #G #L #V1 #V2 #T1 #T2 #d #e * #X #H1 #H2
elim (cpye_inv_flat1 ‚Ä¶ H1) -H1 #V2 #T2 #HV12 #HT12 #H1
elim (cpye_inv_bind1 ‚Ä¶ H2) -H2 #W2 #U2 #HW12 #HU12 #H2
destruct
qed-.
