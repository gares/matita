(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

notation "hvbox( ⦃ term 46 L1, break term 46 T1 ⦄ ➡ break ⦃ term 46 L2 , break term 46 T2 ⦄ )"
   non associative with precedence 45
   for @{ 'FocalizedPRed $L1 $T1 $L2 $T2 }.

include "basic_2/reducibility/tpr.ma".

(* CONTEXT-FREE PARALLEL REDUCTION ON CLOSURES ******************************)

definition fpr: bi_relation lenv term ≝
                λL1,T1,L2,T2. |L1| = |L2| ∧ L1 @@ T1 ➡ L2 @@ T2.

interpretation
   "context-free parallel reduction (closure)"
   'FocalizedPRed L1 T1 L2 T2 = (fpr L1 T1 L2 T2).

(* Basic properties *********************************************************)

lemma fpr_refl: bi_reflexive … fpr.
/2 width=1/ qed.

lemma fpr_shift: ∀I1,I2,L1,L2,V1,V2,T1,T2.
                 ⦃L1, -ⓑ{I1}V1.T1⦄ ➡ ⦃L2, -ⓑ{I2}V2.T2⦄ →
                 ⦃L1.ⓑ{I1}V1, T1⦄ ➡ ⦃L2.ⓑ{I2}V2, T2⦄.
#I1 #I2 #L1 #L2 #V1 #V2 #T1 #T2 * #HL12 #HT12
@conj // normalize // (**) (* explicit constructor *)
qed.

(* Basic inversion lemmas ***************************************************)

lemma fpr_inv_atom1: ∀L2,T1,T2. ⦃⋆, T1⦄ ➡ ⦃L2, T2⦄ → T1 ➡ T2 ∧ L2 = ⋆.
#L2 #T1 #T2 * #H
lapply (length_inv_zero_sn … H) -H #H destruct /2 width=1/
qed-.

lemma fpr_inv_atom3: ∀L1,T1,T2. ⦃L1,T1⦄ ➡ ⦃⋆,T2⦄ → T1 ➡ T2 ∧ L1 = ⋆.
#L1 #T1 #T2 * #H
lapply (length_inv_zero_dx … H) -H #H destruct /2 width=1/
qed-.

(* Basic forward lemmas *****************************************************)

lemma fpr_fwd_pair1: ∀I1,K1,L2,V1,T1,T2. ⦃K1.ⓑ{I1}V1, T1⦄ ➡ ⦃L2, T2⦄ →
                     ∃∃I2,K2,V2. ⦃K1, -ⓑ{I1}V1.T1⦄ ➡ ⦃K2, -ⓑ{I2}V2.T2⦄  &
                                 L2 = K2.ⓑ{I2}V2.
#I1 #K1 #L2 #V1 #T1 #T2 * #H
elim (length_inv_pos_sn … H) -H #I2 #K2 #V2 #HK12 #H destruct /3 width=5/
qed-.

lemma fpr_fwd_pair3: ∀I2,L1,K2,V2,T1,T2. ⦃L1, T1⦄ ➡ ⦃K2.ⓑ{I2}V2, T2⦄ →
                     ∃∃I1,K1,V1. ⦃K1, -ⓑ{I1}V1.T1⦄ ➡ ⦃K2, -ⓑ{I2}V2.T2⦄  &
                                 L1 = K1.ⓑ{I1}V1.
#I2 #L1 #K2 #V2 #T1 #T2 * #H
elim (length_inv_pos_dx … H) -H #I1 #K1 #V1 #HK12 #H destruct /3 width=5/
qed-.
