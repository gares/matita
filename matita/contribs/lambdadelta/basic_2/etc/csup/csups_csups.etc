(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/substitution/csup_csup.ma".
include "basic_2/unfold/csups.ma".

(* STAR-ITERATED SUPCLOSURE *************************************************)

(* Advanced forward lemmas **************************************************)

(*
lemma csupp_strap2_fwd_refl: ∀L,L0,T1,T2. ⦃L, T1⦄ > ⦃L0, T2⦄ →
                             ∀T3. ⦃L0, T2⦄ >+ ⦃L, T3⦄ →
                             L = L0 ∨ ⦃L, T1⦄ >+ ⦃L, T3⦄.
#L #L0 #T1 #T2 * -L -L0 -T1 -T2 /2 width=1/
[ #I #L0 #K0 #V0 #i #HLK0 #T3 #H
  lapply (ldrop_pair2_fwd_cw … HLK0 T3) -HLK0 #H1
  lapply (csupp_fwd_cw … H) -H #H2
  lapply (transitive_lt … H1 H2) -H1 -H2 #H
  elim (lt_refl_false … H)
| #a #I #L0 #V2 #T2 #T3 #HT23
  /3 width=5/

  elim (csup_inv_ldrop … HT23 I V2 0 ?) -HT23 // #H1 #H2 destruct /2 width=1/
  qed-.








lemma csups_strap1_fwd_refl: ∀L,L0,T1,T2. ⦃L, T1⦄ >* ⦃L0, T2⦄ →
                             ∀T3. ⦃L0, T2⦄ > ⦃L, T3⦄ → L = L0.
#L #L0 #T1 #T2 #H @(csups_ind_dx … H) -L -T1 //
#L1 #L #T1 #T #HL1 #_ #IHL0 #T3 #HL0
lapply (csup_trans_fwd_refl … HL10) … HL0) -T2
*) 
lemma lift_csups_trans_aux: ∀T1,U1,d,e. ⇧[d, e] T1 ≡ U1 →
                            ∀L1,L2,U2. ⦃L1, U1⦄ >* ⦃L2, U2⦄ → L1 = L2 →
                            ∃T2. ⇧[d, e] T2 ≡ U2.
#T1 #U1 #d #e #HTU1 #L1 #L2 #U2 #H @(csups_ind … H) -L2 -U2 /2 width=2/ -T1
#L #L2 #U #U2 #HL1 #HL2 #IHL1 #H destruct

* -T1 -U1 -d -e
