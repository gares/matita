CLASH, statistics insufficient
4578: Facts:
4578:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4578:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4578:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4578:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4578:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =<=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
4578:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =<=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
4578:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
4578:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
4578:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
4578:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
4578:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
4578:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
4578:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
4578:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
4578: Goal:
4578:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4578: Order:
4578:   nrkbo
4578: Leaf order:
4578:  additive_identity 4 0 0 
4578:  multiplicative_identity 4 0 0 
4578:  inverse 4 1 0 
4578:  add 16 2 0 multiply
4578:  multiply 20 2 4 0,2add
4578:  c 2 0 2 2,2,2
4578:  b 2 0 2 1,2,2
4578:  a 2 0 2 1,2
CLASH, statistics insufficient
4579: Facts:
4579:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4579:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4579:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4579:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4579:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =<=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
4579:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =<=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
4579:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
4579:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
4579:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
4579:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
4579:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
4579:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
4579:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
4579:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
4579: Goal:
4579:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4579: Order:
4579:   kbo
4579: Leaf order:
4579:  additive_identity 4 0 0 
4579:  multiplicative_identity 4 0 0 
4579:  inverse 4 1 0 
4579:  add 16 2 0 multiply
4579:  multiply 20 2 4 0,2add
4579:  c 2 0 2 2,2,2
4579:  b 2 0 2 1,2,2
4579:  a 2 0 2 1,2
CLASH, statistics insufficient
4580: Facts:
4580:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4580:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4580:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4580:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4580:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =>=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
4580:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =>=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
4580:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
4580:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
4580:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
4580:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
4580:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
4580:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
4580:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
4580:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
4580: Goal:
4580:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4580: Order:
4580:   lpo
4580: Leaf order:
4580:  additive_identity 4 0 0 
4580:  multiplicative_identity 4 0 0 
4580:  inverse 4 1 0 
4580:  add 16 2 0 multiply
4580:  multiply 20 2 4 0,2add
4580:  c 2 0 2 2,2,2
4580:  b 2 0 2 1,2,2
4580:  a 2 0 2 1,2
Statistics :
Max weight : 22
Found proof, 16.914436s
% SZS status Unsatisfiable for BOO007-2.p
% SZS output start CNFRefutation for BOO007-2.p
Id :  12, {_}: multiply ?32 multiplicative_identity =>= ?32 [32] by multiplicative_id1 ?32
Id :   7, {_}: multiply ?20 (add ?21 ?22) =<= add (multiply ?20 ?21) (multiply ?20 ?22) [22, 21, 20] by distributivity4 ?20 ?21 ?22
Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
Id :  10, {_}: multiply ?28 (inverse ?28) =>= additive_identity [28] by multiplicative_inverse1 ?28
Id :  13, {_}: multiply multiplicative_identity ?34 =>= ?34 [34] by multiplicative_id2 ?34
Id :   8, {_}: add ?24 (inverse ?24) =>= multiplicative_identity [24] by additive_inverse1 ?24
Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
Id :  31, {_}: add (multiply ?78 ?79) ?80 =<= multiply (add ?78 ?80) (add ?79 ?80) [80, 79, 78] by distributivity1 ?78 ?79 ?80
Id :   5, {_}: add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14) [14, 13, 12] by distributivity2 ?12 ?13 ?14
Id :   3, {_}: multiply ?5 ?6 =?= multiply ?6 ?5 [6, 5] by commutativity_of_multiply ?5 ?6
Id :   6, {_}: multiply (add ?16 ?17) ?18 =<= add (multiply ?16 ?18) (multiply ?17 ?18) [18, 17, 16] by distributivity3 ?16 ?17 ?18
Id :   4, {_}: add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10) [10, 9, 8] by distributivity1 ?8 ?9 ?10
Id :  65, {_}: add (multiply ?156 (multiply ?157 ?158)) (multiply ?159 ?158) =<= multiply (add ?156 (multiply ?159 ?158)) (multiply (add ?157 ?159) ?158) [159, 158, 157, 156] by Super 4 with 6 at 2,3
Id :  46, {_}: multiply (add ?110 ?111) (add ?110 ?112) =>= add ?110 (multiply ?112 ?111) [112, 111, 110] by Super 3 with 5 at 3
Id :  58, {_}: add ?110 (multiply ?111 ?112) =?= add ?110 (multiply ?112 ?111) [112, 111, 110] by Demod 46 with 5 at 2
Id :  32, {_}: add (multiply ?82 ?83) ?84 =<= multiply (add ?82 ?84) (add ?84 ?83) [84, 83, 82] by Super 31 with 2 at 2,3
Id : 121, {_}: add ?333 (multiply (inverse ?333) ?334) =>= multiply multiplicative_identity (add ?333 ?334) [334, 333] by Super 5 with 8 at 1,3
Id : 2169, {_}: add ?2910 (multiply (inverse ?2910) ?2911) =>= add ?2910 ?2911 [2911, 2910] by Demod 121 with 13 at 3
Id : 2179, {_}: add ?2938 additive_identity =<= add ?2938 (inverse (inverse ?2938)) [2938] by Super 2169 with 10 at 2,2
Id : 2230, {_}: ?2938 =<= add ?2938 (inverse (inverse ?2938)) [2938] by Demod 2179 with 14 at 2
Id : 2429, {_}: add (multiply ?3159 (inverse (inverse ?3160))) ?3160 =>= multiply (add ?3159 ?3160) ?3160 [3160, 3159] by Super 32 with 2230 at 2,3
Id : 2455, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= multiply (add ?3159 ?3160) ?3160 [3159, 3160] by Demod 2429 with 2 at 2
Id : 2456, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= multiply ?3160 (add ?3159 ?3160) [3159, 3160] by Demod 2455 with 3 at 3
Id : 248, {_}: add (multiply additive_identity ?467) ?468 =<= multiply ?468 (add ?467 ?468) [468, 467] by Super 4 with 15 at 1,3
Id : 2457, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= add (multiply additive_identity ?3159) ?3160 [3159, 3160] by Demod 2456 with 248 at 3
Id : 120, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= multiply (add ?330 ?331) multiplicative_identity [331, 330] by Super 5 with 8 at 2,3
Id : 124, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= multiply multiplicative_identity (add ?330 ?331) [331, 330] by Demod 120 with 3 at 3
Id : 3170, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= add ?330 ?331 [331, 330] by Demod 124 with 13 at 3
Id : 144, {_}: multiply ?347 (add (inverse ?347) ?348) =>= add additive_identity (multiply ?347 ?348) [348, 347] by Super 7 with 10 at 1,3
Id : 3378, {_}: multiply ?4138 (add (inverse ?4138) ?4139) =>= multiply ?4138 ?4139 [4139, 4138] by Demod 144 with 15 at 3
Id : 3399, {_}: multiply ?4195 (inverse ?4195) =<= multiply ?4195 (inverse (inverse (inverse ?4195))) [4195] by Super 3378 with 2230 at 2,2
Id : 3488, {_}: additive_identity =<= multiply ?4195 (inverse (inverse (inverse ?4195))) [4195] by Demod 3399 with 10 at 2
Id : 3900, {_}: add (inverse (inverse ?4844)) additive_identity =?= add (inverse (inverse ?4844)) ?4844 [4844] by Super 3170 with 3488 at 2,2
Id : 3924, {_}: add additive_identity (inverse (inverse ?4844)) =<= add (inverse (inverse ?4844)) ?4844 [4844] by Demod 3900 with 2 at 2
Id : 3925, {_}: add additive_identity (inverse (inverse ?4844)) =?= add ?4844 (inverse (inverse ?4844)) [4844] by Demod 3924 with 2 at 3
Id : 3926, {_}: inverse (inverse ?4844) =<= add ?4844 (inverse (inverse ?4844)) [4844] by Demod 3925 with 15 at 2
Id : 3927, {_}: inverse (inverse ?4844) =>= ?4844 [4844] by Demod 3926 with 2230 at 3
Id : 6845, {_}: add ?3160 (multiply ?3159 ?3160) =?= add (multiply additive_identity ?3159) ?3160 [3159, 3160] by Demod 2457 with 3927 at 2,2,2
Id : 1130, {_}: add (multiply additive_identity ?1671) ?1672 =<= multiply ?1672 (add ?1671 ?1672) [1672, 1671] by Super 4 with 15 at 1,3
Id : 1134, {_}: add (multiply additive_identity ?1683) (inverse ?1683) =>= multiply (inverse ?1683) multiplicative_identity [1683] by Super 1130 with 8 at 2,3
Id : 1186, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= multiply (inverse ?1683) multiplicative_identity [1683] by Demod 1134 with 2 at 2
Id : 1187, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= multiply multiplicative_identity (inverse ?1683) [1683] by Demod 1186 with 3 at 3
Id : 1188, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= inverse ?1683 [1683] by Demod 1187 with 13 at 3
Id : 3360, {_}: multiply ?347 (add (inverse ?347) ?348) =>= multiply ?347 ?348 [348, 347] by Demod 144 with 15 at 3
Id : 3364, {_}: add (inverse (add (inverse additive_identity) ?4095)) (multiply additive_identity ?4095) =>= inverse (add (inverse additive_identity) ?4095) [4095] by Super 1188 with 3360 at 2,2
Id : 3442, {_}: add (multiply additive_identity ?4095) (inverse (add (inverse additive_identity) ?4095)) =>= inverse (add (inverse additive_identity) ?4095) [4095] by Demod 3364 with 2 at 2
Id : 249, {_}: inverse additive_identity =>= multiplicative_identity [] by Super 8 with 15 at 2
Id : 3443, {_}: add (multiply additive_identity ?4095) (inverse (add (inverse additive_identity) ?4095)) =>= inverse (add multiplicative_identity ?4095) [4095] by Demod 3442 with 249 at 1,1,3
Id : 3444, {_}: add (multiply additive_identity ?4095) (inverse (add multiplicative_identity ?4095)) =>= inverse (add multiplicative_identity ?4095) [4095] by Demod 3443 with 249 at 1,1,2,2
Id : 2180, {_}: add ?2940 (inverse ?2940) =>= add ?2940 multiplicative_identity [2940] by Super 2169 with 12 at 2,2
Id : 2231, {_}: multiplicative_identity =<= add ?2940 multiplicative_identity [2940] by Demod 2180 with 8 at 2
Id : 2263, {_}: add multiplicative_identity ?3015 =>= multiplicative_identity [3015] by Super 2 with 2231 at 3
Id : 3445, {_}: add (multiply additive_identity ?4095) (inverse (add multiplicative_identity ?4095)) =>= inverse multiplicative_identity [4095] by Demod 3444 with 2263 at 1,3
Id : 3446, {_}: add (multiply additive_identity ?4095) (inverse multiplicative_identity) =>= inverse multiplicative_identity [4095] by Demod 3445 with 2263 at 1,2,2
Id : 191, {_}: inverse multiplicative_identity =>= additive_identity [] by Super 10 with 13 at 2
Id : 3447, {_}: add (multiply additive_identity ?4095) (inverse multiplicative_identity) =>= additive_identity [4095] by Demod 3446 with 191 at 3
Id : 3448, {_}: add (inverse multiplicative_identity) (multiply additive_identity ?4095) =>= additive_identity [4095] by Demod 3447 with 2 at 2
Id : 3449, {_}: add additive_identity (multiply additive_identity ?4095) =>= additive_identity [4095] by Demod 3448 with 191 at 1,2
Id : 3450, {_}: multiply additive_identity ?4095 =>= additive_identity [4095] by Demod 3449 with 15 at 2
Id : 6846, {_}: add ?3160 (multiply ?3159 ?3160) =>= add additive_identity ?3160 [3159, 3160] by Demod 6845 with 3450 at 1,3
Id : 6847, {_}: add ?3160 (multiply ?3159 ?3160) =>= ?3160 [3159, 3160] by Demod 6846 with 15 at 3
Id : 6852, {_}: add ?8316 (multiply ?8316 ?8317) =>= ?8316 [8317, 8316] by Super 58 with 6847 at 3
Id : 7003, {_}: add (multiply ?8541 (multiply ?8542 ?8543)) (multiply ?8541 ?8543) =>= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8543, 8542, 8541] by Super 65 with 6852 at 1,3
Id : 7114, {_}: add (multiply ?8541 ?8543) (multiply ?8541 (multiply ?8542 ?8543)) =>= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8542, 8543, 8541] by Demod 7003 with 2 at 2
Id : 7115, {_}: multiply ?8541 (add ?8543 (multiply ?8542 ?8543)) =?= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8542, 8543, 8541] by Demod 7114 with 7 at 2
Id : 21444, {_}: multiply ?30534 ?30535 =<= multiply ?30534 (multiply (add ?30536 ?30534) ?30535) [30536, 30535, 30534] by Demod 7115 with 6847 at 2,2
Id : 21466, {_}: multiply (multiply ?30625 ?30626) ?30627 =<= multiply (multiply ?30625 ?30626) (multiply ?30626 ?30627) [30627, 30626, 30625] by Super 21444 with 6847 at 1,2,3
Id : 147, {_}: multiply (add ?355 ?356) (inverse ?355) =>= add additive_identity (multiply ?356 (inverse ?355)) [356, 355] by Super 6 with 10 at 1,3
Id : 152, {_}: multiply (inverse ?355) (add ?355 ?356) =>= add additive_identity (multiply ?356 (inverse ?355)) [356, 355] by Demod 147 with 3 at 2
Id : 4375, {_}: multiply (inverse ?355) (add ?355 ?356) =>= multiply ?356 (inverse ?355) [356, 355] by Demod 152 with 15 at 3
Id : 532, {_}: add (multiply ?866 ?867) ?868 =<= multiply (add ?866 ?868) (add ?868 ?867) [868, 867, 866] by Super 31 with 2 at 2,3
Id : 547, {_}: add (multiply ?925 ?926) (inverse ?925) =?= multiply multiplicative_identity (add (inverse ?925) ?926) [926, 925] by Super 532 with 8 at 1,3
Id : 583, {_}: add (inverse ?925) (multiply ?925 ?926) =?= multiply multiplicative_identity (add (inverse ?925) ?926) [926, 925] by Demod 547 with 2 at 2
Id : 584, {_}: add (inverse ?925) (multiply ?925 ?926) =>= add (inverse ?925) ?926 [926, 925] by Demod 583 with 13 at 3
Id : 4646, {_}: multiply (inverse (inverse ?5719)) (add (inverse ?5719) ?5720) =>= multiply (multiply ?5719 ?5720) (inverse (inverse ?5719)) [5720, 5719] by Super 4375 with 584 at 2,2
Id : 4685, {_}: multiply ?5720 (inverse (inverse ?5719)) =<= multiply (multiply ?5719 ?5720) (inverse (inverse ?5719)) [5719, 5720] by Demod 4646 with 4375 at 2
Id : 4686, {_}: multiply ?5720 (inverse (inverse ?5719)) =<= multiply (inverse (inverse ?5719)) (multiply ?5719 ?5720) [5719, 5720] by Demod 4685 with 3 at 3
Id : 4687, {_}: multiply ?5720 ?5719 =<= multiply (inverse (inverse ?5719)) (multiply ?5719 ?5720) [5719, 5720] by Demod 4686 with 3927 at 2,2
Id : 4688, {_}: multiply ?5720 ?5719 =<= multiply ?5719 (multiply ?5719 ?5720) [5719, 5720] by Demod 4687 with 3927 at 1,3
Id : 21467, {_}: multiply (multiply ?30629 ?30630) ?30631 =<= multiply (multiply ?30629 ?30630) (multiply ?30629 ?30631) [30631, 30630, 30629] by Super 21444 with 6852 at 1,2,3
Id : 36399, {_}: multiply (multiply ?58815 ?58816) (multiply ?58815 ?58817) =<= multiply (multiply ?58815 ?58817) (multiply (multiply ?58815 ?58817) ?58816) [58817, 58816, 58815] by Super 4688 with 21467 at 2,3
Id : 36627, {_}: multiply (multiply ?58815 ?58816) ?58817 =<= multiply (multiply ?58815 ?58817) (multiply (multiply ?58815 ?58817) ?58816) [58817, 58816, 58815] by Demod 36399 with 21467 at 2
Id : 36628, {_}: multiply (multiply ?58815 ?58816) ?58817 =>= multiply ?58816 (multiply ?58815 ?58817) [58817, 58816, 58815] by Demod 36627 with 4688 at 3
Id : 36893, {_}: multiply ?30626 (multiply ?30625 ?30627) =<= multiply (multiply ?30625 ?30626) (multiply ?30626 ?30627) [30627, 30625, 30626] by Demod 21466 with 36628 at 2
Id : 36894, {_}: multiply ?30626 (multiply ?30625 ?30627) =<= multiply ?30626 (multiply ?30625 (multiply ?30626 ?30627)) [30627, 30625, 30626] by Demod 36893 with 36628 at 3
Id : 3522, {_}: add additive_identity ?468 =<= multiply ?468 (add ?467 ?468) [467, 468] by Demod 248 with 3450 at 1,2
Id : 3543, {_}: ?468 =<= multiply ?468 (add ?467 ?468) [467, 468] by Demod 3522 with 15 at 2
Id : 7020, {_}: add (multiply ?8599 (multiply ?8600 ?8601)) ?8600 =>= multiply (add ?8599 ?8600) ?8600 [8601, 8600, 8599] by Super 32 with 6852 at 2,3
Id : 7087, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= multiply (add ?8599 ?8600) ?8600 [8601, 8599, 8600] by Demod 7020 with 2 at 2
Id : 7088, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= multiply ?8600 (add ?8599 ?8600) [8601, 8599, 8600] by Demod 7087 with 3 at 3
Id : 7089, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= ?8600 [8601, 8599, 8600] by Demod 7088 with 3543 at 3
Id : 20142, {_}: multiply ?27776 (multiply ?27777 ?27778) =<= multiply (multiply ?27776 (multiply ?27777 ?27778)) ?27777 [27778, 27777, 27776] by Super 3543 with 7089 at 2,3
Id : 20329, {_}: multiply ?27776 (multiply ?27777 ?27778) =<= multiply ?27777 (multiply ?27776 (multiply ?27777 ?27778)) [27778, 27777, 27776] by Demod 20142 with 3 at 3
Id : 36895, {_}: multiply ?30626 (multiply ?30625 ?30627) =?= multiply ?30625 (multiply ?30626 ?30627) [30627, 30625, 30626] by Demod 36894 with 20329 at 3
Id :  34, {_}: add (multiply ?90 ?91) ?92 =<= multiply (add ?92 ?90) (add ?91 ?92) [92, 91, 90] by Super 31 with 2 at 1,3
Id : 6868, {_}: add (multiply (multiply ?8366 ?8367) ?8368) ?8367 =>= multiply ?8367 (add ?8368 ?8367) [8368, 8367, 8366] by Super 34 with 6847 at 1,3
Id : 6940, {_}: add ?8367 (multiply (multiply ?8366 ?8367) ?8368) =>= multiply ?8367 (add ?8368 ?8367) [8368, 8366, 8367] by Demod 6868 with 2 at 2
Id : 6941, {_}: add ?8367 (multiply (multiply ?8366 ?8367) ?8368) =>= ?8367 [8368, 8366, 8367] by Demod 6940 with 3543 at 3
Id : 19816, {_}: multiply (multiply ?27180 ?27181) ?27182 =<= multiply (multiply (multiply ?27180 ?27181) ?27182) ?27181 [27182, 27181, 27180] by Super 3543 with 6941 at 2,3
Id : 19977, {_}: multiply (multiply ?27180 ?27181) ?27182 =<= multiply ?27181 (multiply (multiply ?27180 ?27181) ?27182) [27182, 27181, 27180] by Demod 19816 with 3 at 3
Id : 36891, {_}: multiply ?27181 (multiply ?27180 ?27182) =<= multiply ?27181 (multiply (multiply ?27180 ?27181) ?27182) [27182, 27180, 27181] by Demod 19977 with 36628 at 2
Id : 36892, {_}: multiply ?27181 (multiply ?27180 ?27182) =<= multiply ?27181 (multiply ?27181 (multiply ?27180 ?27182)) [27182, 27180, 27181] by Demod 36891 with 36628 at 2,3
Id : 36900, {_}: multiply ?27181 (multiply ?27180 ?27182) =?= multiply (multiply ?27180 ?27182) ?27181 [27182, 27180, 27181] by Demod 36892 with 4688 at 3
Id : 36901, {_}: multiply ?27181 (multiply ?27180 ?27182) =?= multiply ?27182 (multiply ?27180 ?27181) [27182, 27180, 27181] by Demod 36900 with 36628 at 3
Id : 37364, {_}: multiply c (multiply b a) =?= multiply c (multiply b a) [] by Demod 37363 with 3 at 2,2
Id : 37363, {_}: multiply c (multiply a b) =?= multiply c (multiply b a) [] by Demod 37362 with 3 at 2,3
Id : 37362, {_}: multiply c (multiply a b) =?= multiply c (multiply a b) [] by Demod 37361 with 36901 at 2
Id : 37361, {_}: multiply b (multiply a c) =>= multiply c (multiply a b) [] by Demod 37360 with 3 at 3
Id : 37360, {_}: multiply b (multiply a c) =<= multiply (multiply a b) c [] by Demod 1 with 36895 at 2
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for BOO007-2.p
4579: solved BOO007-2.p in 8.372523 using kbo
4579: status Unsatisfiable for BOO007-2.p
CLASH, statistics insufficient
4588: Facts:
4588:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4588:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4588:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4588:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =<=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4588:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
4588:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
4588:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
4588:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
4588: Goal:
4588:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4588: Order:
4588:   nrkbo
4588: Leaf order:
4588:  inverse 2 1 0 
4588:  multiplicative_identity 2 0 0 
4588:  additive_identity 2 0 0 
4588:  add 9 2 0 multiply
4588:  multiply 13 2 4 0,2add
4588:  c 2 0 2 2,2,2
4588:  b 2 0 2 1,2,2
4588:  a 2 0 2 1,2
CLASH, statistics insufficient
4589: Facts:
4589:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4589:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4589:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4589:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =<=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4589:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
4589:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
4589:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
4589:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
4589: Goal:
4589:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4589: Order:
4589:   kbo
4589: Leaf order:
4589:  inverse 2 1 0 
4589:  multiplicative_identity 2 0 0 
4589:  additive_identity 2 0 0 
4589:  add 9 2 0 multiply
4589:  multiply 13 2 4 0,2add
4589:  c 2 0 2 2,2,2
4589:  b 2 0 2 1,2,2
4589:  a 2 0 2 1,2
CLASH, statistics insufficient
4590: Facts:
4590:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
4590:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
4590:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
4590:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =>=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
4590:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
4590:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
4590:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
4590:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
4590: Goal:
4590:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
4590: Order:
4590:   lpo
4590: Leaf order:
4590:  inverse 2 1 0 
4590:  multiplicative_identity 2 0 0 
4590:  additive_identity 2 0 0 
4590:  add 9 2 0 multiply
4590:  multiply 13 2 4 0,2add
4590:  c 2 0 2 2,2,2
4590:  b 2 0 2 1,2,2
4590:  a 2 0 2 1,2
Statistics :
Max weight : 25
Found proof, 23.495904s
% SZS status Unsatisfiable for BOO007-4.p
% SZS output start CNFRefutation for BOO007-4.p
Id :  44, {_}: multiply ?112 (add ?113 ?114) =<= add (multiply ?112 ?113) (multiply ?112 ?114) [114, 113, 112] by distributivity2 ?112 ?113 ?114
Id :   4, {_}: add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10) [10, 9, 8] by distributivity1 ?8 ?9 ?10
Id :   9, {_}: multiply ?22 (inverse ?22) =>= additive_identity [22] by multiplicative_inverse1 ?22
Id :   5, {_}: multiply ?12 (add ?13 ?14) =<= add (multiply ?12 ?13) (multiply ?12 ?14) [14, 13, 12] by distributivity2 ?12 ?13 ?14
Id :   7, {_}: multiply ?18 multiplicative_identity =>= ?18 [18] by multiplicative_id1 ?18
Id :   3, {_}: multiply ?5 ?6 =?= multiply ?6 ?5 [6, 5] by commutativity_of_multiply ?5 ?6
Id :   8, {_}: add ?20 (inverse ?20) =>= multiplicative_identity [20] by additive_inverse1 ?20
Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
Id :  25, {_}: add ?62 (multiply ?63 ?64) =<= multiply (add ?62 ?63) (add ?62 ?64) [64, 63, 62] by distributivity1 ?62 ?63 ?64
Id : 516, {_}: add ?742 (multiply ?743 ?744) =<= multiply (add ?742 ?743) (add ?744 ?742) [744, 743, 742] by Super 25 with 2 at 2,3
Id : 530, {_}: add ?796 (multiply additive_identity ?797) =<= multiply ?796 (add ?797 ?796) [797, 796] by Super 516 with 6 at 1,3
Id : 1019, {_}: add ?1448 (multiply additive_identity ?1449) =<= multiply ?1448 (add ?1449 ?1448) [1449, 1448] by Super 516 with 6 at 1,3
Id : 1024, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= multiply (inverse ?1462) multiplicative_identity [1462] by Super 1019 with 8 at 2,3
Id : 1064, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= multiply multiplicative_identity (inverse ?1462) [1462] by Demod 1024 with 3 at 3
Id :  75, {_}: multiply multiplicative_identity ?178 =>= ?178 [178] by Super 3 with 7 at 3
Id : 1065, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= inverse ?1462 [1462] by Demod 1064 with 75 at 3
Id :  97, {_}: multiply ?204 (add (inverse ?204) ?205) =>= add additive_identity (multiply ?204 ?205) [205, 204] by Super 5 with 9 at 1,3
Id :  63, {_}: add additive_identity ?160 =>= ?160 [160] by Super 2 with 6 at 3
Id : 2714, {_}: multiply ?204 (add (inverse ?204) ?205) =>= multiply ?204 ?205 [205, 204] by Demod 97 with 63 at 3
Id : 2718, {_}: add (inverse (add (inverse additive_identity) ?3390)) (multiply additive_identity ?3390) =>= inverse (add (inverse additive_identity) ?3390) [3390] by Super 1065 with 2714 at 2,2
Id : 2791, {_}: add (multiply additive_identity ?3390) (inverse (add (inverse additive_identity) ?3390)) =>= inverse (add (inverse additive_identity) ?3390) [3390] by Demod 2718 with 2 at 2
Id : 184, {_}: inverse additive_identity =>= multiplicative_identity [] by Super 8 with 63 at 2
Id : 2792, {_}: add (multiply additive_identity ?3390) (inverse (add (inverse additive_identity) ?3390)) =>= inverse (add multiplicative_identity ?3390) [3390] by Demod 2791 with 184 at 1,1,3
Id : 2793, {_}: add (multiply additive_identity ?3390) (inverse (add multiplicative_identity ?3390)) =>= inverse (add multiplicative_identity ?3390) [3390] by Demod 2792 with 184 at 1,1,2,2
Id :  86, {_}: add ?193 (multiply (inverse ?193) ?194) =>= multiply multiplicative_identity (add ?193 ?194) [194, 193] by Super 4 with 8 at 1,3
Id : 1836, {_}: add ?2310 (multiply (inverse ?2310) ?2311) =>= add ?2310 ?2311 [2311, 2310] by Demod 86 with 75 at 3
Id : 1846, {_}: add ?2338 (inverse ?2338) =>= add ?2338 multiplicative_identity [2338] by Super 1836 with 7 at 2,2
Id : 1890, {_}: multiplicative_identity =<= add ?2338 multiplicative_identity [2338] by Demod 1846 with 8 at 2
Id : 1917, {_}: add multiplicative_identity ?2407 =>= multiplicative_identity [2407] by Super 2 with 1890 at 3
Id : 2794, {_}: add (multiply additive_identity ?3390) (inverse (add multiplicative_identity ?3390)) =>= inverse multiplicative_identity [3390] by Demod 2793 with 1917 at 1,3
Id : 2795, {_}: add (multiply additive_identity ?3390) (inverse multiplicative_identity) =>= inverse multiplicative_identity [3390] by Demod 2794 with 1917 at 1,2,2
Id : 476, {_}: inverse multiplicative_identity =>= additive_identity [] by Super 9 with 75 at 2
Id : 2796, {_}: add (multiply additive_identity ?3390) (inverse multiplicative_identity) =>= additive_identity [3390] by Demod 2795 with 476 at 3
Id : 2797, {_}: add (inverse multiplicative_identity) (multiply additive_identity ?3390) =>= additive_identity [3390] by Demod 2796 with 2 at 2
Id : 2798, {_}: add additive_identity (multiply additive_identity ?3390) =>= additive_identity [3390] by Demod 2797 with 476 at 1,2
Id : 2799, {_}: multiply additive_identity ?3390 =>= additive_identity [3390] by Demod 2798 with 63 at 2
Id : 2854, {_}: add ?796 additive_identity =<= multiply ?796 (add ?797 ?796) [797, 796] by Demod 530 with 2799 at 2,2
Id : 2870, {_}: ?796 =<= multiply ?796 (add ?797 ?796) [797, 796] by Demod 2854 with 6 at 2
Id : 2113, {_}: add (multiply ?2595 ?2596) (multiply ?2597 (multiply ?2595 ?2598)) =<= multiply (add (multiply ?2595 ?2596) ?2597) (multiply ?2595 (add ?2596 ?2598)) [2598, 2597, 2596, 2595] by Super 4 with 5 at 2,3
Id : 2126, {_}: add (multiply ?2655 multiplicative_identity) (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (add (multiply ?2655 multiplicative_identity) ?2656) (multiply ?2655 multiplicative_identity) [2657, 2656, 2655] by Super 2113 with 1917 at 2,2,3
Id : 2201, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (add (multiply ?2655 multiplicative_identity) ?2656) (multiply ?2655 multiplicative_identity) [2657, 2656, 2655] by Demod 2126 with 7 at 1,2
Id : 2202, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (multiply ?2655 multiplicative_identity) (add (multiply ?2655 multiplicative_identity) ?2656) [2657, 2656, 2655] by Demod 2201 with 3 at 3
Id :  62, {_}: add ?157 (multiply additive_identity ?158) =<= multiply ?157 (add ?157 ?158) [158, 157] by Super 4 with 6 at 1,3
Id : 2203, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= add (multiply ?2655 multiplicative_identity) (multiply additive_identity ?2656) [2657, 2656, 2655] by Demod 2202 with 62 at 3
Id : 2204, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= add ?2655 (multiply additive_identity ?2656) [2657, 2656, 2655] by Demod 2203 with 7 at 1,3
Id : 12654, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= add ?2655 additive_identity [2657, 2656, 2655] by Demod 2204 with 2799 at 2,3
Id : 12655, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= ?2655 [2657, 2656, 2655] by Demod 12654 with 6 at 3
Id : 12666, {_}: multiply ?15534 (multiply ?15535 ?15536) =<= multiply (multiply ?15534 (multiply ?15535 ?15536)) ?15535 [15536, 15535, 15534] by Super 2870 with 12655 at 2,3
Id : 21339, {_}: multiply ?30912 (multiply ?30913 ?30914) =<= multiply ?30913 (multiply ?30912 (multiply ?30913 ?30914)) [30914, 30913, 30912] by Demod 12666 with 3 at 3
Id : 21342, {_}: multiply ?30924 (multiply ?30925 ?30926) =<= multiply ?30925 (multiply ?30924 (multiply ?30926 ?30925)) [30926, 30925, 30924] by Super 21339 with 3 at 2,2,3
Id :  28, {_}: add ?74 (multiply ?75 ?76) =<= multiply (add ?75 ?74) (add ?74 ?76) [76, 75, 74] by Super 25 with 2 at 1,3
Id : 4808, {_}: multiply ?5796 (add ?5797 ?5798) =<= add (multiply ?5796 ?5797) (multiply ?5798 ?5796) [5798, 5797, 5796] by Super 44 with 3 at 2,3
Id : 4837, {_}: multiply ?5913 (add multiplicative_identity ?5914) =?= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Super 4808 with 7 at 1,3
Id : 4917, {_}: multiply ?5913 multiplicative_identity =<= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Demod 4837 with 1917 at 2,2
Id : 4918, {_}: ?5913 =<= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Demod 4917 with 7 at 2
Id : 5091, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= multiply (add ?6287 ?6286) ?6286 [6288, 6287, 6286] by Super 28 with 4918 at 2,3
Id : 5151, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= multiply ?6286 (add ?6287 ?6286) [6288, 6287, 6286] by Demod 5091 with 3 at 3
Id : 5152, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= ?6286 [6288, 6287, 6286] by Demod 5151 with 2870 at 3
Id : 19536, {_}: multiply ?27546 (multiply ?27547 ?27548) =<= multiply (multiply ?27546 (multiply ?27547 ?27548)) ?27548 [27548, 27547, 27546] by Super 2870 with 5152 at 2,3
Id : 19689, {_}: multiply ?27546 (multiply ?27547 ?27548) =<= multiply ?27548 (multiply ?27546 (multiply ?27547 ?27548)) [27548, 27547, 27546] by Demod 19536 with 3 at 3
Id : 31289, {_}: multiply ?30924 (multiply ?30925 ?30926) =?= multiply ?30924 (multiply ?30926 ?30925) [30926, 30925, 30924] by Demod 21342 with 19689 at 3
Id : 521, {_}: add (inverse ?761) (multiply ?762 ?761) =?= multiply (add (inverse ?761) ?762) multiplicative_identity [762, 761] by Super 516 with 8 at 2,3
Id : 550, {_}: add (inverse ?761) (multiply ?762 ?761) =?= multiply multiplicative_identity (add (inverse ?761) ?762) [762, 761] by Demod 521 with 3 at 3
Id : 551, {_}: add (inverse ?761) (multiply ?762 ?761) =>= add (inverse ?761) ?762 [762, 761] by Demod 550 with 75 at 3
Id : 3740, {_}: multiply ?4638 (add (inverse ?4638) ?4639) =>= multiply ?4638 (multiply ?4639 ?4638) [4639, 4638] by Super 2714 with 551 at 2,2
Id : 3782, {_}: multiply ?4638 ?4639 =<= multiply ?4638 (multiply ?4639 ?4638) [4639, 4638] by Demod 3740 with 2714 at 2
Id : 3863, {_}: multiply ?4768 (add ?4769 (multiply ?4770 ?4768)) =>= add (multiply ?4768 ?4769) (multiply ?4768 ?4770) [4770, 4769, 4768] by Super 5 with 3782 at 2,3
Id : 15840, {_}: multiply ?20984 (add ?20985 (multiply ?20986 ?20984)) =>= multiply ?20984 (add ?20985 ?20986) [20986, 20985, 20984] by Demod 3863 with 5 at 3
Id : 15903, {_}: multiply ?21234 (multiply ?21235 (add ?21236 ?21234)) =?= multiply ?21234 (add (multiply ?21235 ?21236) ?21235) [21236, 21235, 21234] by Super 15840 with 5 at 2,2
Id : 16059, {_}: multiply ?21234 (multiply ?21235 (add ?21236 ?21234)) =?= multiply ?21234 (add ?21235 (multiply ?21235 ?21236)) [21236, 21235, 21234] by Demod 15903 with 2 at 2,3
Id : 4814, {_}: multiply ?5818 (add ?5819 multiplicative_identity) =?= add (multiply ?5818 ?5819) ?5818 [5819, 5818] by Super 4808 with 75 at 2,3
Id : 4891, {_}: multiply ?5818 multiplicative_identity =<= add (multiply ?5818 ?5819) ?5818 [5819, 5818] by Demod 4814 with 1890 at 2,2
Id : 4892, {_}: multiply ?5818 multiplicative_identity =<= add ?5818 (multiply ?5818 ?5819) [5819, 5818] by Demod 4891 with 2 at 3
Id : 4893, {_}: ?5818 =<= add ?5818 (multiply ?5818 ?5819) [5819, 5818] by Demod 4892 with 7 at 2
Id : 26804, {_}: multiply ?40743 (multiply ?40744 (add ?40745 ?40743)) =>= multiply ?40743 ?40744 [40745, 40744, 40743] by Demod 16059 with 4893 at 2,3
Id : 26854, {_}: multiply (multiply ?40962 ?40963) (multiply ?40964 ?40962) =>= multiply (multiply ?40962 ?40963) ?40964 [40964, 40963, 40962] by Super 26804 with 4893 at 2,2,2
Id : 38294, {_}: multiply (multiply ?63621 ?63622) (multiply ?63621 ?63623) =>= multiply (multiply ?63621 ?63622) ?63623 [63623, 63622, 63621] by Super 31289 with 26854 at 3
Id : 26855, {_}: multiply (multiply ?40966 ?40967) (multiply ?40968 ?40967) =>= multiply (multiply ?40966 ?40967) ?40968 [40968, 40967, 40966] by Super 26804 with 4918 at 2,2,2
Id : 38958, {_}: multiply (multiply ?65058 ?65059) (multiply ?65059 ?65060) =>= multiply (multiply ?65058 ?65059) ?65060 [65060, 65059, 65058] by Super 31289 with 26855 at 3
Id : 38330, {_}: multiply (multiply ?63784 ?63785) (multiply ?63785 ?63786) =>= multiply (multiply ?63785 ?63786) ?63784 [63786, 63785, 63784] by Super 3 with 26854 at 3
Id : 46713, {_}: multiply (multiply ?65059 ?65060) ?65058 =?= multiply (multiply ?65058 ?65059) ?65060 [65058, 65060, 65059] by Demod 38958 with 38330 at 2
Id : 46797, {_}: multiply ?81775 (multiply ?81776 ?81777) =<= multiply (multiply ?81775 ?81776) ?81777 [81777, 81776, 81775] by Super 3 with 46713 at 3
Id : 47389, {_}: multiply ?63621 (multiply ?63622 (multiply ?63621 ?63623)) =>= multiply (multiply ?63621 ?63622) ?63623 [63623, 63622, 63621] by Demod 38294 with 46797 at 2
Id : 47390, {_}: multiply ?63621 (multiply ?63622 (multiply ?63621 ?63623)) =>= multiply ?63621 (multiply ?63622 ?63623) [63623, 63622, 63621] by Demod 47389 with 46797 at 3
Id : 12809, {_}: multiply ?15534 (multiply ?15535 ?15536) =<= multiply ?15535 (multiply ?15534 (multiply ?15535 ?15536)) [15536, 15535, 15534] by Demod 12666 with 3 at 3
Id : 47391, {_}: multiply ?63622 (multiply ?63621 ?63623) =?= multiply ?63621 (multiply ?63622 ?63623) [63623, 63621, 63622] by Demod 47390 with 12809 at 2
Id : 47371, {_}: multiply ?40962 (multiply ?40963 (multiply ?40964 ?40962)) =>= multiply (multiply ?40962 ?40963) ?40964 [40964, 40963, 40962] by Demod 26854 with 46797 at 2
Id : 47372, {_}: multiply ?40962 (multiply ?40963 (multiply ?40964 ?40962)) =>= multiply ?40962 (multiply ?40963 ?40964) [40964, 40963, 40962] by Demod 47371 with 46797 at 3
Id : 47409, {_}: multiply ?40963 (multiply ?40964 ?40962) =?= multiply ?40962 (multiply ?40963 ?40964) [40962, 40964, 40963] by Demod 47372 with 19689 at 2
Id : 47847, {_}: multiply c (multiply b a) =?= multiply c (multiply b a) [] by Demod 47846 with 3 at 2,3
Id : 47846, {_}: multiply c (multiply b a) =?= multiply c (multiply a b) [] by Demod 47845 with 47409 at 2
Id : 47845, {_}: multiply b (multiply a c) =>= multiply c (multiply a b) [] by Demod 47844 with 3 at 3
Id : 47844, {_}: multiply b (multiply a c) =<= multiply (multiply a b) c [] by Demod 1 with 47391 at 2
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for BOO007-4.p
4589: solved BOO007-4.p in 11.664728 using kbo
4589: status Unsatisfiable for BOO007-4.p
CLASH, statistics insufficient
4606: Facts:
4606:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
4606:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
4606:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
4606:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
4606:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
4606:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
4606:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
4606:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
4606:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
4606:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =?= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
4606:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =?= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
4606: Goal:
4606:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
4606: Order:
4606:   nrkbo
4606: Leaf order:
4606:  n0 1 0 0 
4606:  n1 1 0 0 
4606:  inverse 4 1 0 
4606:  multiply 22 2 3 0,2add
4606:  add 21 2 2 0,2,2multiply
4606:  c 2 0 2 2,2,2
4606:  b 2 0 2 1,2,2
4606:  a 3 0 3 1,2
CLASH, statistics insufficient
4607: Facts:
4607:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
4607:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
4607:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
4607:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
4607:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
4607:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
4607:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
4607:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
4607:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
4607:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
CLASH, statistics insufficient
4608: Facts:
4608:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
4608:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
4608:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
4608:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
4608:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
4608:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
4608:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
4608:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
4608:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
4608:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
4607:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
4607: Goal:
4607:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
4607: Order:
4607:   kbo
4607: Leaf order:
4607:  n0 1 0 0 
4607:  n1 1 0 0 
4607:  inverse 4 1 0 
4607:  multiply 22 2 3 0,2add
4607:  add 21 2 2 0,2,2multiply
4607:  c 2 0 2 2,2,2
4607:  b 2 0 2 1,2,2
4607:  a 3 0 3 1,2
4608:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
4608: Goal:
4608:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
4608: Order:
4608:   lpo
4608: Leaf order:
4608:  n0 1 0 0 
4608:  n1 1 0 0 
4608:  inverse 4 1 0 
4608:  multiply 22 2 3 0,2add
4608:  add 21 2 2 0,2,2multiply
4608:  c 2 0 2 2,2,2
4608:  b 2 0 2 1,2,2
4608:  a 3 0 3 1,2
Statistics :
Max weight : 29
Found proof, 44.648027s
% SZS status Unsatisfiable for BOO031-1.p
% SZS output start CNFRefutation for BOO031-1.p
Id :   7, {_}: multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22 [23, 22, 21] by l4 ?21 ?22 ?23
Id :  10, {_}: multiply ?30 (inverse ?30) =>= n0 [30] by multiplicative_inverse ?30
Id :   8, {_}: add (multiply ?25 (inverse ?25)) ?26 =>= ?26 [26, 25] by property3_dual ?25 ?26
Id :  12, {_}: multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38) [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
Id :  52, {_}: multiply (multiply (add ?189 ?190) (add ?190 ?191)) ?190 =>= ?190 [191, 190, 189] by l4 ?189 ?190 ?191
Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
Id :   5, {_}: multiply (add ?14 (inverse ?14)) ?15 =>= ?15 [15, 14] by property3 ?14 ?15
Id :   2, {_}: add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2)) =>= multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2)) [4, 3, 2] by distributivity ?2 ?3 ?4
Id :  18, {_}: add (add (multiply ?58 ?59) (multiply ?59 ?60)) ?59 =>= ?59 [60, 59, 58] by l3 ?58 ?59 ?60
Id :  11, {_}: add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34) [34, 33, 32] by associativity_of_add ?32 ?33 ?34
Id :   4, {_}: add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11 [12, 11, 10] by l3 ?10 ?11 ?12
Id :  37, {_}: multiply ?128 (add ?129 (add ?128 ?130)) =>= ?128 [130, 129, 128] by l2 ?128 ?129 ?130
Id :   6, {_}: multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17 [19, 18, 17] by l2 ?17 ?18 ?19
Id :   3, {_}: add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6 [8, 7, 6] by l1 ?6 ?7 ?8
Id :  35, {_}: add ?121 (multiply ?122 ?121) =>= ?121 [122, 121] by Super 3 with 6 at 2,2,2
Id :  42, {_}: multiply ?149 (add ?149 ?150) =>= ?149 [150, 149] by Super 37 with 4 at 2,2
Id : 1579, {_}: add (add ?2436 ?2437) ?2436 =>= add ?2436 ?2437 [2437, 2436] by Super 35 with 42 at 2,2
Id : 1609, {_}: add ?2436 (add ?2437 ?2436) =>= add ?2436 ?2437 [2437, 2436] by Demod 1579 with 11 at 2
Id :  19, {_}: add (multiply ?62 ?63) ?63 =>= ?63 [63, 62] by Super 18 with 3 at 1,2
Id :  39, {_}: multiply ?137 (add ?138 ?137) =>= ?137 [138, 137] by Super 37 with 3 at 2,2,2
Id : 1363, {_}: add ?2089 (add ?2090 ?2089) =>= add ?2090 ?2089 [2090, 2089] by Super 19 with 39 at 1,2
Id : 2844, {_}: add ?2437 ?2436 =?= add ?2436 ?2437 [2436, 2437] by Demod 1609 with 1363 at 2
Id :  32, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add (multiply ?109 ?107) ?107) =<= multiply (add (add ?106 (add ?107 ?108)) ?109) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Super 2 with 6 at 2,2,2
Id : 5786, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add (add ?106 (add ?107 ?108)) ?109) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Demod 32 with 2844 at 2,2
Id : 5787, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Demod 5786 with 11 at 1,3
Id : 1088, {_}: add (multiply ?1721 ?1722) ?1722 =>= ?1722 [1722, 1721] by Super 18 with 3 at 1,2
Id : 1091, {_}: add ?1730 (add ?1731 (add ?1730 ?1732)) =>= add ?1731 (add ?1730 ?1732) [1732, 1731, 1730] by Super 1088 with 6 at 1,2
Id : 5788, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5787 with 1091 at 2,2,3
Id : 5789, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) ?107 =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5788 with 35 at 2,2
Id : 5790, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) ?107 =<= multiply (add ?106 (add ?107 (add ?108 ?109))) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5789 with 11 at 2,1,3
Id : 5814, {_}: add ?7785 (multiply (add ?7786 (add ?7785 ?7787)) ?7788) =<= multiply (add ?7786 (add ?7785 (add ?7787 ?7788))) (multiply (add ?7788 ?7785) (add ?7786 (add ?7785 ?7787))) [7788, 7787, 7786, 7785] by Demod 5790 with 2844 at 2
Id :  79, {_}: multiply n1 ?15 =>= ?15 [15] by Demod 5 with 9 at 1,2
Id : 1095, {_}: add ?1743 ?1743 =>= ?1743 [1743] by Super 1088 with 79 at 1,2
Id : 5853, {_}: add ?7982 (multiply (add (add ?7982 ?7983) (add ?7982 ?7983)) ?7984) =<= multiply (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) (multiply (add ?7984 ?7982) (add ?7982 ?7983)) [7984, 7983, 7982] by Super 5814 with 1095 at 2,2,3
Id : 6183, {_}: add ?7982 (multiply (add ?7982 (add ?7983 (add ?7982 ?7983))) ?7984) =<= multiply (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) (multiply (add ?7984 ?7982) (add ?7982 ?7983)) [7984, 7983, 7982] by Demod 5853 with 11 at 1,2,2
Id : 1663, {_}: multiply (add ?2570 ?2571) ?2571 =>= ?2571 [2571, 2570] by Super 52 with 6 at 1,2
Id : 1673, {_}: multiply ?2601 (multiply ?2602 ?2601) =>= multiply ?2602 ?2601 [2602, 2601] by Super 1663 with 35 at 1,2
Id : 1365, {_}: multiply ?2095 (add ?2096 ?2095) =>= ?2095 [2096, 2095] by Super 37 with 3 at 2,2,2
Id :  22, {_}: add ?71 (multiply ?71 ?72) =>= ?71 [72, 71] by Super 3 with 5 at 2,2
Id : 1374, {_}: multiply (multiply ?2123 ?2124) ?2123 =>= multiply ?2123 ?2124 [2124, 2123] by Super 1365 with 22 at 2,2
Id : 1408, {_}: multiply ?2123 (multiply ?2124 ?2123) =>= multiply ?2123 ?2124 [2124, 2123] by Demod 1374 with 12 at 2
Id : 2987, {_}: multiply ?2601 ?2602 =?= multiply ?2602 ?2601 [2602, 2601] by Demod 1673 with 1408 at 2
Id : 6184, {_}: add ?7982 (multiply (add ?7982 (add ?7983 (add ?7982 ?7983))) ?7984) =<= multiply (multiply (add ?7984 ?7982) (add ?7982 ?7983)) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) [7984, 7983, 7982] by Demod 6183 with 2987 at 3
Id : 6185, {_}: add ?7982 (multiply (add ?7983 (add ?7982 ?7983)) ?7984) =<= multiply (multiply (add ?7984 ?7982) (add ?7982 ?7983)) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) [7984, 7983, 7982] by Demod 6184 with 1091 at 1,2,2
Id : 6186, {_}: add ?7982 (multiply (add ?7983 (add ?7982 ?7983)) ?7984) =<= multiply (add ?7984 ?7982) (multiply (add ?7982 ?7983) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984)))) [7984, 7983, 7982] by Demod 6185 with 12 at 3
Id : 6187, {_}: add ?7982 (multiply (add ?7982 ?7983) ?7984) =<= multiply (add ?7984 ?7982) (multiply (add ?7982 ?7983) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984)))) [7984, 7983, 7982] by Demod 6186 with 1363 at 1,2,2
Id : 13074, {_}: add ?18195 (multiply (add ?18195 ?18196) ?18197) =>= multiply (add ?18197 ?18195) (add ?18195 ?18196) [18197, 18196, 18195] by Demod 6187 with 42 at 2,3
Id : 16401, {_}: add ?22734 (multiply (add ?22735 ?22734) ?22736) =>= multiply (add ?22736 ?22734) (add ?22734 ?22735) [22736, 22735, 22734] by Super 13074 with 2844 at 1,2,2
Id : 18162, {_}: add ?24925 (multiply ?24926 (add ?24927 ?24925)) =>= multiply (add ?24926 ?24925) (add ?24925 ?24927) [24927, 24926, 24925] by Super 16401 with 2987 at 2,2
Id : 18171, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =<= multiply (add ?24965 (multiply ?24963 ?24964)) (add (multiply ?24963 ?24964) ?24964) [24965, 24964, 24963] by Super 18162 with 35 at 2,2,2
Id : 18379, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =<= multiply (add ?24965 (multiply ?24963 ?24964)) (add ?24964 (multiply ?24963 ?24964)) [24965, 24964, 24963] by Demod 18171 with 2844 at 2,3
Id : 18380, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply (add ?24965 (multiply ?24963 ?24964)) ?24964 [24965, 24964, 24963] by Demod 18379 with 35 at 2,3
Id : 18381, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply ?24964 (add ?24965 (multiply ?24963 ?24964)) [24965, 24964, 24963] by Demod 18380 with 2987 at 3
Id : 1575, {_}: multiply ?2421 ?2422 =<= multiply ?2421 (multiply (add ?2421 ?2423) ?2422) [2423, 2422, 2421] by Super 12 with 42 at 1,2
Id : 16456, {_}: add ?22968 (multiply ?22969 (add ?22970 ?22968)) =>= multiply (add ?22969 ?22968) (add ?22968 ?22970) [22970, 22969, 22968] by Super 16401 with 2987 at 2,2
Id : 1247, {_}: add ?1879 ?1880 =<= add ?1879 (add (multiply ?1879 ?1881) ?1880) [1881, 1880, 1879] by Super 11 with 22 at 1,2
Id : 6619, {_}: multiply (multiply ?8607 ?8608) (add ?8607 ?8609) =>= multiply ?8607 ?8608 [8609, 8608, 8607] by Super 6 with 1247 at 2,2
Id : 6763, {_}: multiply ?8607 (multiply ?8608 (add ?8607 ?8609)) =>= multiply ?8607 ?8608 [8609, 8608, 8607] by Demod 6619 with 12 at 2
Id :  65, {_}: add (multiply ?237 ?238) (multiply (inverse ?238) ?237) =<= multiply (add ?237 ?238) (multiply (add ?238 (inverse ?238)) (add (inverse ?238) ?237)) [238, 237] by Super 2 with 8 at 2,2
Id :  76, {_}: add (multiply ?237 ?238) (multiply (inverse ?238) ?237) =>= multiply (add ?237 ?238) (add (inverse ?238) ?237) [238, 237] by Demod 65 with 5 at 2,3
Id : 18170, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =<= multiply (add ?24961 (multiply ?24959 ?24960)) (add (multiply ?24959 ?24960) ?24959) [24961, 24960, 24959] by Super 18162 with 22 at 2,2,2
Id : 18376, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =<= multiply (add ?24961 (multiply ?24959 ?24960)) (add ?24959 (multiply ?24959 ?24960)) [24961, 24960, 24959] by Demod 18170 with 2844 at 2,3
Id : 18377, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =>= multiply (add ?24961 (multiply ?24959 ?24960)) ?24959 [24961, 24960, 24959] by Demod 18376 with 22 at 2,3
Id : 18378, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =>= multiply ?24959 (add ?24961 (multiply ?24959 ?24960)) [24961, 24960, 24959] by Demod 18377 with 2987 at 3
Id : 22657, {_}: multiply ?237 (add (inverse ?238) (multiply ?237 ?238)) =<= multiply (add ?237 ?238) (add (inverse ?238) ?237) [238, 237] by Demod 76 with 18378 at 2
Id : 22699, {_}: multiply (inverse ?30910) (multiply ?30911 (add (inverse ?30910) (multiply ?30911 ?30910))) =>= multiply (inverse ?30910) (add ?30911 ?30910) [30911, 30910] by Super 6763 with 22657 at 2,2
Id : 22814, {_}: multiply (inverse ?30910) ?30911 =<= multiply (inverse ?30910) (add ?30911 ?30910) [30911, 30910] by Demod 22699 with 6763 at 2
Id : 23609, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =<= multiply (add (inverse ?31619) ?31619) (add ?31619 ?31620) [31620, 31619] by Super 16456 with 22814 at 2,2
Id : 23775, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =<= multiply (add ?31619 (inverse ?31619)) (add ?31619 ?31620) [31620, 31619] by Demod 23609 with 2844 at 1,3
Id : 23776, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =>= multiply n1 (add ?31619 ?31620) [31620, 31619] by Demod 23775 with 9 at 1,3
Id : 24286, {_}: add ?32553 (multiply (inverse ?32553) ?32554) =>= add ?32553 ?32554 [32554, 32553] by Demod 23776 with 79 at 3
Id : 13130, {_}: add ?18432 (multiply ?18433 (add ?18432 ?18434)) =>= multiply (add ?18433 ?18432) (add ?18432 ?18434) [18434, 18433, 18432] by Super 13074 with 2987 at 2,2
Id : 22705, {_}: multiply ?30931 (add (inverse ?30932) (multiply ?30931 ?30932)) =<= multiply (add ?30931 ?30932) (add (inverse ?30932) ?30931) [30932, 30931] by Demod 76 with 18378 at 2
Id : 22751, {_}: multiply ?31084 (add (inverse (inverse ?31084)) (multiply ?31084 (inverse ?31084))) =>= multiply n1 (add (inverse (inverse ?31084)) ?31084) [31084] by Super 22705 with 9 at 1,3
Id : 23065, {_}: multiply ?31084 (add (inverse (inverse ?31084)) n0) =?= multiply n1 (add (inverse (inverse ?31084)) ?31084) [31084] by Demod 22751 with 10 at 2,2,2
Id : 23066, {_}: multiply ?31084 (add (inverse (inverse ?31084)) n0) =>= add (inverse (inverse ?31084)) ?31084 [31084] by Demod 23065 with 79 at 3
Id : 130, {_}: multiply (add ?21 ?22) (multiply (add ?22 ?23) ?22) =>= ?22 [23, 22, 21] by Demod 7 with 12 at 2
Id :  89, {_}: n0 =<= inverse n1 [] by Super 79 with 10 at 2
Id : 360, {_}: add n1 n0 =>= n1 [] by Super 9 with 89 at 2,2
Id : 382, {_}: multiply n1 (multiply (add n0 ?765) n0) =>= n0 [765] by Super 130 with 360 at 1,2
Id : 422, {_}: multiply (add n0 ?765) n0 =>= n0 [765] by Demod 382 with 79 at 2
Id :  88, {_}: add n0 ?26 =>= ?26 [26] by Demod 8 with 10 at 1,2
Id : 423, {_}: multiply ?765 n0 =>= n0 [765] by Demod 422 with 88 at 1,2
Id : 831, {_}: add ?1448 (multiply ?1449 n0) =>= ?1448 [1449, 1448] by Super 3 with 423 at 2,2,2
Id : 867, {_}: add ?1448 n0 =>= ?1448 [1448] by Demod 831 with 423 at 2,2
Id : 23067, {_}: multiply ?31084 (inverse (inverse ?31084)) =<= add (inverse (inverse ?31084)) ?31084 [31084] by Demod 23066 with 867 at 2,2
Id : 23068, {_}: multiply ?31084 (inverse (inverse ?31084)) =<= add ?31084 (inverse (inverse ?31084)) [31084] by Demod 23067 with 2844 at 3
Id : 23215, {_}: add ?31334 (multiply ?31335 (multiply ?31334 (inverse (inverse ?31334)))) =>= multiply (add ?31335 ?31334) (add ?31334 (inverse (inverse ?31334))) [31335, 31334] by Super 13130 with 23068 at 2,2,2
Id : 23280, {_}: ?31334 =<= multiply (add ?31335 ?31334) (add ?31334 (inverse (inverse ?31334))) [31335, 31334] by Demod 23215 with 3 at 2
Id : 23281, {_}: ?31334 =<= multiply (add ?31335 ?31334) (multiply ?31334 (inverse (inverse ?31334))) [31335, 31334] by Demod 23280 with 23068 at 2,3
Id : 2547, {_}: multiply (multiply ?3698 ?3699) ?3700 =<= multiply ?3698 (multiply (multiply ?3699 ?3698) ?3700) [3700, 3699, 3698] by Super 12 with 1408 at 1,2
Id : 2578, {_}: multiply ?3698 (multiply ?3699 ?3700) =<= multiply ?3698 (multiply (multiply ?3699 ?3698) ?3700) [3700, 3699, 3698] by Demod 2547 with 12 at 2
Id : 2579, {_}: multiply ?3698 (multiply ?3699 ?3700) =<= multiply ?3698 (multiply ?3699 (multiply ?3698 ?3700)) [3700, 3699, 3698] by Demod 2578 with 12 at 2,3
Id : 1667, {_}: multiply ?2583 (multiply ?2584 (multiply ?2583 ?2585)) =>= multiply ?2584 (multiply ?2583 ?2585) [2585, 2584, 2583] by Super 1663 with 3 at 1,2
Id : 12236, {_}: multiply ?3698 (multiply ?3699 ?3700) =?= multiply ?3699 (multiply ?3698 ?3700) [3700, 3699, 3698] by Demod 2579 with 1667 at 3
Id : 23282, {_}: ?31334 =<= multiply ?31334 (multiply (add ?31335 ?31334) (inverse (inverse ?31334))) [31335, 31334] by Demod 23281 with 12236 at 3
Id : 1360, {_}: multiply ?2077 ?2078 =<= multiply ?2077 (multiply (add ?2079 ?2077) ?2078) [2079, 2078, 2077] by Super 12 with 39 at 1,2
Id : 23283, {_}: ?31334 =<= multiply ?31334 (inverse (inverse ?31334)) [31334] by Demod 23282 with 1360 at 3
Id : 23386, {_}: add (inverse (inverse ?31435)) ?31435 =>= inverse (inverse ?31435) [31435] by Super 35 with 23283 at 2,2
Id : 23494, {_}: add ?31435 (inverse (inverse ?31435)) =>= inverse (inverse ?31435) [31435] by Demod 23386 with 2844 at 2
Id : 23374, {_}: ?31084 =<= add ?31084 (inverse (inverse ?31084)) [31084] by Demod 23068 with 23283 at 2
Id : 23495, {_}: ?31435 =<= inverse (inverse ?31435) [31435] by Demod 23494 with 23374 at 2
Id : 24293, {_}: add (inverse ?32572) (multiply ?32572 ?32573) =>= add (inverse ?32572) ?32573 [32573, 32572] by Super 24286 with 23495 at 1,2,2
Id : 23619, {_}: multiply (multiply (inverse ?31653) ?31654) ?31655 =<= multiply (inverse ?31653) (multiply (add ?31654 ?31653) ?31655) [31655, 31654, 31653] by Super 12 with 22814 at 1,2
Id : 23754, {_}: multiply (inverse ?31653) (multiply ?31654 ?31655) =<= multiply (inverse ?31653) (multiply (add ?31654 ?31653) ?31655) [31655, 31654, 31653] by Demod 23619 with 12 at 2
Id : 77768, {_}: add (inverse (inverse ?103133)) (multiply (inverse ?103133) (multiply ?103134 ?103135)) =>= add (inverse (inverse ?103133)) (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Super 24293 with 23754 at 2,2
Id : 78028, {_}: add (inverse (inverse ?103133)) (multiply ?103134 ?103135) =<= add (inverse (inverse ?103133)) (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 77768 with 24293 at 2
Id : 78029, {_}: add (inverse (inverse ?103133)) (multiply ?103134 ?103135) =?= add ?103133 (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 78028 with 23495 at 1,3
Id : 78030, {_}: add ?103133 (multiply ?103134 ?103135) =<= add ?103133 (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 78029 with 23495 at 1,2
Id : 13094, {_}: add ?18275 (multiply (add ?18276 ?18275) ?18277) =>= multiply (add ?18277 ?18275) (add ?18275 ?18276) [18277, 18276, 18275] by Super 13074 with 2844 at 1,2,2
Id : 78031, {_}: add ?103133 (multiply ?103134 ?103135) =<= multiply (add ?103135 ?103133) (add ?103133 ?103134) [103135, 103134, 103133] by Demod 78030 with 13094 at 3
Id : 78812, {_}: multiply ?104288 (add ?104289 ?104290) =<= multiply ?104288 (add ?104289 (multiply ?104290 ?104288)) [104290, 104289, 104288] by Super 1575 with 78031 at 2,3
Id : 80954, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply ?24964 (add ?24965 ?24963) [24965, 24964, 24963] by Demod 18381 with 78812 at 3
Id : 81595, {_}: multiply a (add c b) =?= multiply a (add c b) [] by Demod 81594 with 2844 at 2,3
Id : 81594, {_}: multiply a (add c b) =?= multiply a (add b c) [] by Demod 81593 with 80954 at 3
Id : 81593, {_}: multiply a (add c b) =<= add (multiply c a) (multiply b a) [] by Demod 81592 with 2844 at 3
Id : 81592, {_}: multiply a (add c b) =<= add (multiply b a) (multiply c a) [] by Demod 1 with 2844 at 2,2
Id :   1, {_}: multiply a (add b c) =<= add (multiply b a) (multiply c a) [] by prove_multiply_add_property
% SZS output end CNFRefutation for BOO031-1.p
4607: solved BOO031-1.p in 22.309393 using kbo
4607: status Unsatisfiable for BOO031-1.p
NO CLASH, using fixed ground order
4619: Facts:
4619:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4619: Goal:
4619:  Id :   1, {_}: add b a =>= add a b [] by huntinton_1
4619: Order:
4619:   nrkbo
4619: Leaf order:
4619:  inverse 7 1 0 
4619:  add 8 2 2 0,2
4619:  a 2 0 2 2,2
4619:  b 2 0 2 1,2
NO CLASH, using fixed ground order
4620: Facts:
4620:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4620: Goal:
4620:  Id :   1, {_}: add b a =>= add a b [] by huntinton_1
4620: Order:
4620:   kbo
4620: Leaf order:
4620:  inverse 7 1 0 
4620:  add 8 2 2 0,2
4620:  a 2 0 2 2,2
4620:  b 2 0 2 1,2
NO CLASH, using fixed ground order
4621: Facts:
4621:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4621: Goal:
4621:  Id :   1, {_}: add b a =>= add a b [] by huntinton_1
4621: Order:
4621:   lpo
4621: Leaf order:
4621:  inverse 7 1 0 
4621:  add 8 2 2 0,2
4621:  a 2 0 2 2,2
4621:  b 2 0 2 1,2
Statistics :
Max weight : 70
Found proof, 56.468020s
% SZS status Unsatisfiable for BOO072-1.p
% SZS output start CNFRefutation for BOO072-1.p
Id :   3, {_}: inverse (add (inverse (add (inverse (add ?7 ?8)) ?9)) (inverse (add ?7 (inverse (add (inverse ?9) (inverse (add ?9 ?10))))))) =>= ?9 [10, 9, 8, 7] by dn1 ?7 ?8 ?9 ?10
Id :   2, {_}: inverse (add (inverse (add (inverse (add ?2 ?3)) ?4)) (inverse (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5))))))) =>= ?4 [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
Id :  15, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?74)) ?75)) ?74)) ?76)) (inverse ?74))) ?74) =>= inverse ?74 [76, 75, 74] by Super 3 with 2 at 2,1,2
Id :  20, {_}: inverse (add (inverse (add ?104 (inverse ?104))) ?104) =>= inverse ?104 [104] by Super 15 with 2 at 1,1,1,1,2
Id :  99, {_}: inverse (add (inverse ?355) (inverse (add ?355 (inverse (add (inverse ?355) (inverse (add ?355 ?356))))))) =>= ?355 [356, 355] by Super 2 with 20 at 1,1,2
Id : 136, {_}: inverse (add (inverse (add (inverse (add ?450 ?451)) ?452)) (inverse (add ?450 ?452))) =>= ?452 [452, 451, 450] by Super 2 with 99 at 2,1,2,1,2
Id : 536, {_}: inverse (add (inverse (add (inverse (add ?1808 ?1809)) ?1810)) (inverse (add ?1808 ?1810))) =>= ?1810 [1810, 1809, 1808] by Super 2 with 99 at 2,1,2,1,2
Id : 550, {_}: inverse (add (inverse (add ?1882 ?1883)) (inverse (add (inverse ?1882) ?1883))) =>= ?1883 [1883, 1882] by Super 536 with 99 at 1,1,1,1,2
Id : 724, {_}: inverse (add ?2517 (inverse (add ?2518 (inverse (add (inverse ?2518) ?2517))))) =>= inverse (add (inverse ?2518) ?2517) [2518, 2517] by Super 136 with 550 at 1,1,2
Id : 1584, {_}: inverse (add (inverse ?4978) (inverse (add ?4978 (inverse (add (inverse ?4978) (inverse ?4978)))))) =>= ?4978 [4978] by Super 99 with 724 at 2,1,2,1,2
Id : 1652, {_}: inverse (add (inverse ?4978) (inverse ?4978)) =>= ?4978 [4978] by Demod 1584 with 724 at 2
Id : 763, {_}: inverse (add (inverse (add ?2736 ?2737)) (inverse (add (inverse ?2736) ?2737))) =>= ?2737 [2737, 2736] by Super 536 with 99 at 1,1,1,1,2
Id : 144, {_}: inverse (add (inverse ?482) (inverse (add ?482 (inverse (add (inverse ?482) (inverse (add ?482 ?483))))))) =>= ?482 [483, 482] by Super 2 with 20 at 1,1,2
Id : 155, {_}: inverse (add (inverse ?528) (inverse (add ?528 ?528))) =>= ?528 [528] by Super 144 with 99 at 2,1,2,1,2
Id : 782, {_}: inverse (add (inverse (add ?2830 (inverse (add ?2830 ?2830)))) ?2830) =>= inverse (add ?2830 ?2830) [2830] by Super 763 with 155 at 2,1,2
Id : 871, {_}: inverse (add (inverse (add ?3076 ?3076)) (inverse (add ?3076 ?3076))) =>= ?3076 [3076] by Super 136 with 782 at 1,1,2
Id : 1724, {_}: add ?3076 ?3076 =>= ?3076 [3076] by Demod 871 with 1652 at 2
Id : 1754, {_}: inverse (inverse ?5284) =>= ?5284 [5284] by Demod 1652 with 1724 at 1,2
Id : 1761, {_}: inverse ?5314 =<= add (inverse (add ?5315 ?5314)) (inverse (add (inverse ?5315) ?5314)) [5315, 5314] by Super 1754 with 550 at 1,2
Id : 1733, {_}: inverse (inverse ?4978) =>= ?4978 [4978] by Demod 1652 with 1724 at 1,2
Id :   6, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?26)) ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Super 3 with 2 at 2,1,2
Id : 1734, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add ?26 ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Demod 6 with 1733 at 1,1,1,1,1,1,1,1,1,1,2
Id : 921, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse (add ?3102 ?3102))))) =>= inverse (add ?3102 ?3102) [3102] by Super 136 with 871 at 1,1,2
Id : 1725, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse (add ?3102 ?3102) [3102] by Demod 921 with 1724 at 1,2,1,2,1,2
Id : 1726, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse ?3102 [3102] by Demod 1725 with 1724 at 1,3
Id : 1763, {_}: inverse (inverse ?5320) =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Super 1754 with 1726 at 1,2
Id : 1786, {_}: ?5320 =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Demod 1763 with 1733 at 2
Id : 2715, {_}: inverse (add (inverse (add (inverse ?7389) (inverse (inverse ?7389)))) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Super 724 with 1786 at 1,2,1,2,1,2
Id : 2755, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2715 with 1733 at 2,1,1,1,2
Id : 2756, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =?= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2755 with 1733 at 2,1,2,1,2
Id : 2757, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =>= inverse (inverse ?7389) [7389] by Demod 2756 with 1786 at 1,3
Id : 2758, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= inverse (inverse ?7389) [7389] by Demod 2757 with 1724 at 1,2,1,2
Id : 2759, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= ?7389 [7389] by Demod 2758 with 1733 at 3
Id : 2920, {_}: inverse ?7714 =<= add (inverse (add (inverse ?7714) ?7714)) (inverse ?7714) [7714] by Super 1733 with 2759 at 1,2
Id : 3142, {_}: inverse (add (inverse (add (inverse (add (inverse (inverse ?8118)) ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Super 1734 with 2920 at 1,1,1,1,1,1,1,2
Id : 3172, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3142 with 1733 at 1,1,1,1,1,1,2
Id : 3173, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) ?8118)) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3172 with 1733 at 2,1,1,1,2
Id : 8100, {_}: inverse (add (inverse (add (inverse (add ?15581 ?15582)) ?15581)) (inverse ?15581)) =>= ?15581 [15582, 15581] by Demod 3173 with 1733 at 3
Id : 8144, {_}: inverse (add ?15759 (inverse (inverse (add ?15760 ?15759)))) =>= inverse (add ?15760 ?15759) [15760, 15759] by Super 8100 with 136 at 1,1,2
Id : 8459, {_}: inverse (add ?16264 (add ?16265 ?16264)) =>= inverse (add ?16265 ?16264) [16265, 16264] by Demod 8144 with 1733 at 2,1,2
Id : 1749, {_}: inverse (add (inverse (add (inverse ?5262) ?5263)) (inverse (add ?5262 ?5263))) =>= ?5263 [5263, 5262] by Super 550 with 1733 at 1,1,2,1,2
Id : 5602, {_}: inverse ?11750 =<= add (inverse (add (inverse ?11751) ?11750)) (inverse (add ?11751 ?11750)) [11751, 11750] by Super 1733 with 1749 at 1,2
Id : 8468, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =<= inverse (add (inverse (add (inverse ?16285) ?16286)) (inverse (add ?16285 ?16286))) [16286, 16285] by Super 8459 with 5602 at 2,1,2
Id : 8598, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= inverse (inverse ?16286) [16286, 16285] by Demod 8468 with 5602 at 1,3
Id : 8599, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= ?16286 [16286, 16285] by Demod 8598 with 1733 at 3
Id : 8791, {_}: inverse ?16774 =<= add (inverse (add ?16775 ?16774)) (inverse ?16774) [16775, 16774] by Super 1733 with 8599 at 1,2
Id : 10568, {_}: inverse (add (inverse (inverse ?20566)) (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Super 136 with 8791 at 1,1,1,2
Id : 10805, {_}: inverse (add ?20566 (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Demod 10568 with 1733 at 1,1,2
Id : 11153, {_}: inverse (inverse ?21486) =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Super 1733 with 10805 at 1,2
Id : 11260, {_}: ?21486 =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Demod 11153 with 1733 at 2
Id : 12127, {_}: inverse (inverse (add ?22871 (inverse (inverse ?22872)))) =<= add (inverse (add ?22872 (inverse (add ?22871 (inverse (inverse ?22872)))))) (inverse (inverse ?22872)) [22872, 22871] by Super 1761 with 11260 at 1,2,3
Id : 12312, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 (inverse (inverse ?22872)))))) (inverse (inverse ?22872)) [22872, 22871] by Demod 12127 with 1733 at 2
Id : 12313, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) (inverse (inverse ?22872)) [22872, 22871] by Demod 12312 with 1733 at 2,1,2,1,1,3
Id : 12314, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) ?22872 [22872, 22871] by Demod 12313 with 1733 at 2,3
Id : 12315, {_}: add ?22871 ?22872 =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) ?22872 [22872, 22871] by Demod 12314 with 1733 at 2,2
Id :  12, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Super 2 with 6 at 2,1,2
Id : 3710, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 12 with 1733 at 1,1,1,1,1,1,1,1,1,1,1,1,1,1,2
Id : 3711, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3710 with 1733 at 2,1,1,1,1,1,1,1,2
Id : 3712, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (add (inverse ?57) (inverse (add ?57 ?58)))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3711 with 1733 at 2,1,2
Id : 10590, {_}: inverse (add (inverse (inverse ?20667)) (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Super 3712 with 8791 at 1,1,1,2
Id : 10753, {_}: inverse (add ?20667 (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10590 with 1733 at 1,1,2
Id : 10754, {_}: inverse (add ?20667 (add ?20667 (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10753 with 1733 at 1,2,1,2
Id : 15430, {_}: inverse (inverse ?28103) =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Super 1733 with 10754 at 1,2
Id : 15735, {_}: ?28103 =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Demod 15430 with 1733 at 2
Id : 1762, {_}: inverse (inverse (add (inverse ?5317) ?5318)) =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Super 1754 with 724 at 1,2
Id : 1785, {_}: add (inverse ?5317) ?5318 =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Demod 1762 with 1733 at 2
Id : 11176, {_}: inverse (add ?21600 (inverse (add ?21601 (inverse ?21600)))) =>= inverse ?21600 [21601, 21600] by Demod 10568 with 1733 at 1,1,2
Id : 11183, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= inverse (inverse ?21642) [21643, 21642] by Super 11176 with 1733 at 2,1,2,1,2
Id : 11564, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= ?21642 [21643, 21642] by Demod 11183 with 1733 at 3
Id : 13294, {_}: inverse ?24726 =<= add (inverse ?24726) (inverse (add ?24727 ?24726)) [24727, 24726] by Super 1733 with 11564 at 1,2
Id : 13313, {_}: inverse (add (inverse ?24792) (inverse (add ?24792 ?24793))) =<= add (inverse (add (inverse ?24792) (inverse (add ?24792 ?24793)))) ?24792 [24793, 24792] by Super 13294 with 3712 at 2,3
Id : 16466, {_}: add (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) ?29660 =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Super 1785 with 13313 at 1,2,1,2,3
Id : 16829, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Demod 16466 with 13313 at 2
Id : 16830, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (add (inverse ?29660) (inverse (add ?29660 ?29661))))) [29661, 29660] by Demod 16829 with 1733 at 2,1,2,3
Id : 16831, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) [29661, 29660] by Demod 16830 with 1724 at 1,2,3
Id : 17624, {_}: ?31105 =<= add ?31105 (inverse (add (inverse ?31105) (inverse (add ?31105 ?31106)))) [31106, 31105] by Super 15735 with 16831 at 2,3
Id : 17680, {_}: ?31105 =<= inverse (add (inverse ?31105) (inverse (add ?31105 ?31106))) [31106, 31105] by Demod 17624 with 16831 at 3
Id : 18257, {_}: add ?31431 ?31432 =<= add (add ?31431 ?31432) ?31431 [31432, 31431] by Super 11260 with 17680 at 2,3
Id : 18514, {_}: add (add ?31834 ?31835) ?31834 =<= add (inverse (add ?31834 (inverse (add ?31834 ?31835)))) ?31834 [31835, 31834] by Super 12315 with 18257 at 1,2,1,1,3
Id : 19938, {_}: add ?34185 ?34186 =<= add (inverse (add ?34185 (inverse (add ?34185 ?34186)))) ?34185 [34186, 34185] by Demod 18514 with 18257 at 2
Id : 8365, {_}: inverse (add ?15759 (add ?15760 ?15759)) =>= inverse (add ?15760 ?15759) [15760, 15759] by Demod 8144 with 1733 at 2,1,2
Id : 8391, {_}: inverse (inverse (add ?15887 ?15888)) =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Super 1733 with 8365 at 1,2
Id : 8543, {_}: add ?15887 ?15888 =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Demod 8391 with 1733 at 2
Id : 15853, {_}: add ?28715 (add ?28715 (inverse (add (inverse ?28715) ?28716))) =?= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Super 8543 with 15735 at 2,3
Id : 16108, {_}: ?28715 =<= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Demod 15853 with 15735 at 2
Id : 18478, {_}: ?28715 =<= add ?28715 (inverse (add (inverse ?28715) ?28716)) [28716, 28715] by Demod 16108 with 18257 at 3
Id : 18480, {_}: add (inverse ?5317) ?5318 =?= add ?5318 (inverse ?5317) [5318, 5317] by Demod 1785 with 18478 at 1,2,3
Id : 20385, {_}: add ?34911 ?34912 =<= add (inverse (add (inverse (add ?34911 ?34912)) ?34911)) ?34911 [34912, 34911] by Super 19938 with 18480 at 1,1,3
Id : 20390, {_}: add ?34925 (add ?34926 ?34925) =<= add (inverse (add (inverse (add ?34926 ?34925)) ?34925)) ?34925 [34926, 34925] by Super 20385 with 8543 at 1,1,1,1,3
Id : 20500, {_}: add ?34926 ?34925 =<= add (inverse (add (inverse (add ?34926 ?34925)) ?34925)) ?34925 [34925, 34926] by Demod 20390 with 8543 at 2
Id : 5906, {_}: inverse (add (inverse (inverse ?12265)) (inverse (add (inverse ?12266) (inverse (add ?12266 ?12265))))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Super 136 with 5602 at 1,1,1,2
Id : 6067, {_}: inverse (add ?12265 (inverse (add (inverse ?12266) (inverse (add ?12266 ?12265))))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Demod 5906 with 1733 at 1,1,2
Id : 15857, {_}: add (inverse ?28730) (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) =<= add (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Super 1785 with 15735 at 1,2,1,2,3
Id : 16100, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Demod 15857 with 15735 at 2
Id : 16101, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Demod 16100 with 1733 at 1,1,2,1,3
Id : 16102, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse (add ?28730 ?28730)) [28731, 28730] by Demod 16101 with 1733 at 2,1,2,3
Id : 16103, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse ?28730) [28731, 28730] by Demod 16102 with 1724 at 1,2,3
Id : 18477, {_}: inverse ?28730 =<= add (inverse ?28730) (inverse (add ?28730 ?28731)) [28731, 28730] by Demod 16103 with 18257 at 3
Id : 21222, {_}: inverse (add ?12265 (inverse (inverse ?12266))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Demod 6067 with 18477 at 1,2,1,2
Id : 21223, {_}: inverse (add ?12265 ?12266) =?= inverse (add ?12266 ?12265) [12266, 12265] by Demod 21222 with 1733 at 2,1,2
Id : 21386, {_}: add ?36951 ?36952 =<= add (inverse (add (inverse (add ?36952 ?36951)) ?36952)) ?36952 [36952, 36951] by Super 20500 with 21223 at 1,1,1,3
Id : 19969, {_}: add ?34289 ?34290 =<= add (inverse (add (inverse (add ?34289 ?34290)) ?34289)) ?34289 [34290, 34289] by Super 19938 with 18480 at 1,1,3
Id : 21454, {_}: add ?36951 ?36952 =?= add ?36952 ?36951 [36952, 36951] by Demod 21386 with 19969 at 3
Id : 21981, {_}: add a b === add a b [] by Demod 1 with 21454 at 2
Id :   1, {_}: add b a =>= add a b [] by huntinton_1
% SZS output end CNFRefutation for BOO072-1.p
4619: solved BOO072-1.p in 9.46059 using nrkbo
4619: status Unsatisfiable for BOO072-1.p
NO CLASH, using fixed ground order
4637: Facts:
4637:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4637: Goal:
4637:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
4637: Order:
4637:   nrkbo
4637: Leaf order:
4637:  inverse 7 1 0 
4637:  c 2 0 2 2,2
4637:  add 10 2 4 0,2
4637:  b 2 0 2 2,1,2
4637:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
4638: Facts:
4638:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4638: Goal:
4638:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
4638: Order:
4638:   kbo
4638: Leaf order:
4638:  inverse 7 1 0 
4638:  c 2 0 2 2,2
4638:  add 10 2 4 0,2
4638:  b 2 0 2 2,1,2
4638:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
4639: Facts:
4639:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4639: Goal:
4639:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
4639: Order:
4639:   lpo
4639: Leaf order:
4639:  inverse 7 1 0 
4639:  c 2 0 2 2,2
4639:  add 10 2 4 0,2
4639:  b 2 0 2 2,1,2
4639:  a 2 0 2 1,1,2
% SZS status Timeout for BOO073-1.p
NO CLASH, using fixed ground order
4666: Facts:
4666:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4666: Goal:
4666:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
4666: Order:
4666:   nrkbo
4666: Leaf order:
4666:  add 9 2 3 0,2
4666:  b 2 0 2 2,1,1,2
4666:  inverse 12 1 5 0,1,2
4666:  a 3 0 3 1,1,1,1,2
NO CLASH, using fixed ground order
4667: Facts:
4667:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4667: Goal:
4667:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
4667: Order:
4667:   kbo
4667: Leaf order:
4667:  add 9 2 3 0,2
4667:  b 2 0 2 2,1,1,2
4667:  inverse 12 1 5 0,1,2
4667:  a 3 0 3 1,1,1,1,2
NO CLASH, using fixed ground order
4668: Facts:
4668:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
4668: Goal:
4668:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
4668: Order:
4668:   lpo
4668: Leaf order:
4668:  add 9 2 3 0,2
4668:  b 2 0 2 2,1,1,2
4668:  inverse 12 1 5 0,1,2
4668:  a 3 0 3 1,1,1,1,2
Statistics :
Max weight : 70
Found proof, 17.395929s
% SZS status Unsatisfiable for BOO074-1.p
% SZS output start CNFRefutation for BOO074-1.p
Id :   3, {_}: inverse (add (inverse (add (inverse (add ?7 ?8)) ?9)) (inverse (add ?7 (inverse (add (inverse ?9) (inverse (add ?9 ?10))))))) =>= ?9 [10, 9, 8, 7] by dn1 ?7 ?8 ?9 ?10
Id :   2, {_}: inverse (add (inverse (add (inverse (add ?2 ?3)) ?4)) (inverse (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5))))))) =>= ?4 [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
Id :  15, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?74)) ?75)) ?74)) ?76)) (inverse ?74))) ?74) =>= inverse ?74 [76, 75, 74] by Super 3 with 2 at 2,1,2
Id :  20, {_}: inverse (add (inverse (add ?104 (inverse ?104))) ?104) =>= inverse ?104 [104] by Super 15 with 2 at 1,1,1,1,2
Id :  99, {_}: inverse (add (inverse ?355) (inverse (add ?355 (inverse (add (inverse ?355) (inverse (add ?355 ?356))))))) =>= ?355 [356, 355] by Super 2 with 20 at 1,1,2
Id : 136, {_}: inverse (add (inverse (add (inverse (add ?450 ?451)) ?452)) (inverse (add ?450 ?452))) =>= ?452 [452, 451, 450] by Super 2 with 99 at 2,1,2,1,2
Id : 536, {_}: inverse (add (inverse (add (inverse (add ?1808 ?1809)) ?1810)) (inverse (add ?1808 ?1810))) =>= ?1810 [1810, 1809, 1808] by Super 2 with 99 at 2,1,2,1,2
Id : 550, {_}: inverse (add (inverse (add ?1882 ?1883)) (inverse (add (inverse ?1882) ?1883))) =>= ?1883 [1883, 1882] by Super 536 with 99 at 1,1,1,1,2
Id : 724, {_}: inverse (add ?2517 (inverse (add ?2518 (inverse (add (inverse ?2518) ?2517))))) =>= inverse (add (inverse ?2518) ?2517) [2518, 2517] by Super 136 with 550 at 1,1,2
Id : 1584, {_}: inverse (add (inverse ?4978) (inverse (add ?4978 (inverse (add (inverse ?4978) (inverse ?4978)))))) =>= ?4978 [4978] by Super 99 with 724 at 2,1,2,1,2
Id : 1652, {_}: inverse (add (inverse ?4978) (inverse ?4978)) =>= ?4978 [4978] by Demod 1584 with 724 at 2
Id : 763, {_}: inverse (add (inverse (add ?2736 ?2737)) (inverse (add (inverse ?2736) ?2737))) =>= ?2737 [2737, 2736] by Super 536 with 99 at 1,1,1,1,2
Id : 144, {_}: inverse (add (inverse ?482) (inverse (add ?482 (inverse (add (inverse ?482) (inverse (add ?482 ?483))))))) =>= ?482 [483, 482] by Super 2 with 20 at 1,1,2
Id : 155, {_}: inverse (add (inverse ?528) (inverse (add ?528 ?528))) =>= ?528 [528] by Super 144 with 99 at 2,1,2,1,2
Id : 782, {_}: inverse (add (inverse (add ?2830 (inverse (add ?2830 ?2830)))) ?2830) =>= inverse (add ?2830 ?2830) [2830] by Super 763 with 155 at 2,1,2
Id : 871, {_}: inverse (add (inverse (add ?3076 ?3076)) (inverse (add ?3076 ?3076))) =>= ?3076 [3076] by Super 136 with 782 at 1,1,2
Id : 1724, {_}: add ?3076 ?3076 =>= ?3076 [3076] by Demod 871 with 1652 at 2
Id : 1754, {_}: inverse (inverse ?5284) =>= ?5284 [5284] by Demod 1652 with 1724 at 1,2
Id : 1762, {_}: inverse (inverse (add (inverse ?5317) ?5318)) =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Super 1754 with 724 at 1,2
Id : 1733, {_}: inverse (inverse ?4978) =>= ?4978 [4978] by Demod 1652 with 1724 at 1,2
Id : 1785, {_}: add (inverse ?5317) ?5318 =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Demod 1762 with 1733 at 2
Id :   6, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?26)) ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Super 3 with 2 at 2,1,2
Id : 1734, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add ?26 ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Demod 6 with 1733 at 1,1,1,1,1,1,1,1,1,1,2
Id : 921, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse (add ?3102 ?3102))))) =>= inverse (add ?3102 ?3102) [3102] by Super 136 with 871 at 1,1,2
Id : 1725, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse (add ?3102 ?3102) [3102] by Demod 921 with 1724 at 1,2,1,2,1,2
Id : 1726, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse ?3102 [3102] by Demod 1725 with 1724 at 1,3
Id : 1763, {_}: inverse (inverse ?5320) =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Super 1754 with 1726 at 1,2
Id : 1786, {_}: ?5320 =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Demod 1763 with 1733 at 2
Id : 2715, {_}: inverse (add (inverse (add (inverse ?7389) (inverse (inverse ?7389)))) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Super 724 with 1786 at 1,2,1,2,1,2
Id : 2755, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2715 with 1733 at 2,1,1,1,2
Id : 2756, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =?= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2755 with 1733 at 2,1,2,1,2
Id : 2757, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =>= inverse (inverse ?7389) [7389] by Demod 2756 with 1786 at 1,3
Id : 2758, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= inverse (inverse ?7389) [7389] by Demod 2757 with 1724 at 1,2,1,2
Id : 2759, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= ?7389 [7389] by Demod 2758 with 1733 at 3
Id : 2920, {_}: inverse ?7714 =<= add (inverse (add (inverse ?7714) ?7714)) (inverse ?7714) [7714] by Super 1733 with 2759 at 1,2
Id : 3142, {_}: inverse (add (inverse (add (inverse (add (inverse (inverse ?8118)) ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Super 1734 with 2920 at 1,1,1,1,1,1,1,2
Id : 3172, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3142 with 1733 at 1,1,1,1,1,1,2
Id : 3173, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) ?8118)) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3172 with 1733 at 2,1,1,1,2
Id : 8100, {_}: inverse (add (inverse (add (inverse (add ?15581 ?15582)) ?15581)) (inverse ?15581)) =>= ?15581 [15582, 15581] by Demod 3173 with 1733 at 3
Id : 8144, {_}: inverse (add ?15759 (inverse (inverse (add ?15760 ?15759)))) =>= inverse (add ?15760 ?15759) [15760, 15759] by Super 8100 with 136 at 1,1,2
Id : 8365, {_}: inverse (add ?15759 (add ?15760 ?15759)) =>= inverse (add ?15760 ?15759) [15760, 15759] by Demod 8144 with 1733 at 2,1,2
Id : 8391, {_}: inverse (inverse (add ?15887 ?15888)) =?= add ?15888 (add ?15887 ?15888) [15888, 15887] by Super 1733 with 8365 at 1,2
Id : 8543, {_}: add ?15887 ?15888 =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Demod 8391 with 1733 at 2
Id :  12, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Super 2 with 6 at 2,1,2
Id : 3710, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 12 with 1733 at 1,1,1,1,1,1,1,1,1,1,1,1,1,1,2
Id : 3711, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3710 with 1733 at 2,1,1,1,1,1,1,1,2
Id : 3712, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (add (inverse ?57) (inverse (add ?57 ?58)))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3711 with 1733 at 2,1,2
Id : 8459, {_}: inverse (add ?16264 (add ?16265 ?16264)) =>= inverse (add ?16265 ?16264) [16265, 16264] by Demod 8144 with 1733 at 2,1,2
Id : 1749, {_}: inverse (add (inverse (add (inverse ?5262) ?5263)) (inverse (add ?5262 ?5263))) =>= ?5263 [5263, 5262] by Super 550 with 1733 at 1,1,2,1,2
Id : 5602, {_}: inverse ?11750 =<= add (inverse (add (inverse ?11751) ?11750)) (inverse (add ?11751 ?11750)) [11751, 11750] by Super 1733 with 1749 at 1,2
Id : 8468, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =<= inverse (add (inverse (add (inverse ?16285) ?16286)) (inverse (add ?16285 ?16286))) [16286, 16285] by Super 8459 with 5602 at 2,1,2
Id : 8598, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= inverse (inverse ?16286) [16286, 16285] by Demod 8468 with 5602 at 1,3
Id : 8599, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= ?16286 [16286, 16285] by Demod 8598 with 1733 at 3
Id : 8791, {_}: inverse ?16774 =<= add (inverse (add ?16775 ?16774)) (inverse ?16774) [16775, 16774] by Super 1733 with 8599 at 1,2
Id : 10590, {_}: inverse (add (inverse (inverse ?20667)) (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Super 3712 with 8791 at 1,1,1,2
Id : 10753, {_}: inverse (add ?20667 (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10590 with 1733 at 1,1,2
Id : 10754, {_}: inverse (add ?20667 (add ?20667 (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10753 with 1733 at 1,2,1,2
Id : 15430, {_}: inverse (inverse ?28103) =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Super 1733 with 10754 at 1,2
Id : 15735, {_}: ?28103 =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Demod 15430 with 1733 at 2
Id : 15853, {_}: add ?28715 (add ?28715 (inverse (add (inverse ?28715) ?28716))) =?= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Super 8543 with 15735 at 2,3
Id : 16108, {_}: ?28715 =<= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Demod 15853 with 15735 at 2
Id : 10568, {_}: inverse (add (inverse (inverse ?20566)) (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Super 136 with 8791 at 1,1,1,2
Id : 10805, {_}: inverse (add ?20566 (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Demod 10568 with 1733 at 1,1,2
Id : 11153, {_}: inverse (inverse ?21486) =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Super 1733 with 10805 at 1,2
Id : 11260, {_}: ?21486 =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Demod 11153 with 1733 at 2
Id : 11176, {_}: inverse (add ?21600 (inverse (add ?21601 (inverse ?21600)))) =>= inverse ?21600 [21601, 21600] by Demod 10568 with 1733 at 1,1,2
Id : 11183, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= inverse (inverse ?21642) [21643, 21642] by Super 11176 with 1733 at 2,1,2,1,2
Id : 11564, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= ?21642 [21643, 21642] by Demod 11183 with 1733 at 3
Id : 13294, {_}: inverse ?24726 =<= add (inverse ?24726) (inverse (add ?24727 ?24726)) [24727, 24726] by Super 1733 with 11564 at 1,2
Id : 13313, {_}: inverse (add (inverse ?24792) (inverse (add ?24792 ?24793))) =<= add (inverse (add (inverse ?24792) (inverse (add ?24792 ?24793)))) ?24792 [24793, 24792] by Super 13294 with 3712 at 2,3
Id : 16466, {_}: add (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) ?29660 =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Super 1785 with 13313 at 1,2,1,2,3
Id : 16829, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Demod 16466 with 13313 at 2
Id : 16830, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (add (inverse ?29660) (inverse (add ?29660 ?29661))))) [29661, 29660] by Demod 16829 with 1733 at 2,1,2,3
Id : 16831, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) [29661, 29660] by Demod 16830 with 1724 at 1,2,3
Id : 17624, {_}: ?31105 =<= add ?31105 (inverse (add (inverse ?31105) (inverse (add ?31105 ?31106)))) [31106, 31105] by Super 15735 with 16831 at 2,3
Id : 17680, {_}: ?31105 =<= inverse (add (inverse ?31105) (inverse (add ?31105 ?31106))) [31106, 31105] by Demod 17624 with 16831 at 3
Id : 18257, {_}: add ?31431 ?31432 =<= add (add ?31431 ?31432) ?31431 [31432, 31431] by Super 11260 with 17680 at 2,3
Id : 18478, {_}: ?28715 =<= add ?28715 (inverse (add (inverse ?28715) ?28716)) [28716, 28715] by Demod 16108 with 18257 at 3
Id : 18480, {_}: add (inverse ?5317) ?5318 =?= add ?5318 (inverse ?5317) [5318, 5317] by Demod 1785 with 18478 at 1,2,3
Id : 1761, {_}: inverse ?5314 =<= add (inverse (add ?5315 ?5314)) (inverse (add (inverse ?5315) ?5314)) [5315, 5314] by Super 1754 with 550 at 1,2
Id : 18644, {_}: a === a [] by Demod 18643 with 1733 at 2
Id : 18643, {_}: inverse (inverse a) =>= a [] by Demod 18642 with 1761 at 2
Id : 18642, {_}: add (inverse (add b (inverse a))) (inverse (add (inverse b) (inverse a))) =>= a [] by Demod 18641 with 18480 at 1,2,2
Id : 18641, {_}: add (inverse (add b (inverse a))) (inverse (add (inverse a) (inverse b))) =>= a [] by Demod 1 with 18480 at 1,1,2
Id :   1, {_}: add (inverse (add (inverse a) b)) (inverse (add (inverse a) (inverse b))) =>= a [] by huntinton_3
% SZS output end CNFRefutation for BOO074-1.p
4666: solved BOO074-1.p in 8.672542 using nrkbo
4666: status Unsatisfiable for BOO074-1.p
NO CLASH, using fixed ground order
4673: Facts:
4673:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4673:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4673:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
4673: Goal:
4673:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4673: Order:
4673:   nrkbo
4673: Leaf order:
4673:  w 4 0 0 
4673:  b 6 0 0 
4673:  apply 19 2 3 0,2
4673:  fixed_pt 3 0 3 2,2
4673:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4674: Facts:
4674:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4674:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4674:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
4674: Goal:
4674:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4674: Order:
4674:   kbo
4674: Leaf order:
4674:  w 4 0 0 
4674:  b 6 0 0 
4674:  apply 19 2 3 0,2
4674:  fixed_pt 3 0 3 2,2
4674:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4675: Facts:
4675:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4675:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4675:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
4675: Goal:
4675:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4675: Order:
4675:   lpo
4675: Leaf order:
4675:  w 4 0 0 
4675:  b 6 0 0 
4675:  apply 19 2 3 0,2
4675:  fixed_pt 3 0 3 2,2
4675:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL003-12.p
NO CLASH, using fixed ground order
4697: Facts:
4697:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4697:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4697:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
4697: Goal:
4697:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4697: Order:
4697:   nrkbo
4697: Leaf order:
4697:  w 4 0 0 
4697:  b 7 0 0 
4697:  apply 20 2 3 0,2
4697:  fixed_pt 3 0 3 2,2
4697:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4698: Facts:
4698:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4698:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4698:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
4698: Goal:
4698:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4698: Order:
4698:   kbo
4698: Leaf order:
4698:  w 4 0 0 
4698:  b 7 0 0 
4698:  apply 20 2 3 0,2
4698:  fixed_pt 3 0 3 2,2
4698:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4699: Facts:
4699:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4699:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4699:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
4699: Goal:
4699:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4699: Order:
4699:   lpo
4699: Leaf order:
4699:  w 4 0 0 
4699:  b 7 0 0 
4699:  apply 20 2 3 0,2
4699:  fixed_pt 3 0 3 2,2
4699:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL003-17.p
NO CLASH, using fixed ground order
4971: Facts:
4971:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4971:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4971:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
4971: Goal:
4971:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4971: Order:
4971:   nrkbo
4971: Leaf order:
4971:  w 4 0 0 
4971:  b 7 0 0 
4971:  apply 20 2 3 0,2
4971:  fixed_pt 3 0 3 2,2
4971:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4972: Facts:
4972:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4972:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4972:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
4972: Goal:
4972:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4972: Order:
4972:   kbo
4972: Leaf order:
4972:  w 4 0 0 
4972:  b 7 0 0 
4972:  apply 20 2 3 0,2
4972:  fixed_pt 3 0 3 2,2
4972:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
4973: Facts:
4973:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
4973:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
4973:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
4973: Goal:
4973:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
4973: Order:
4973:   lpo
4973: Leaf order:
4973:  w 4 0 0 
4973:  b 7 0 0 
4973:  apply 20 2 3 0,2
4973:  fixed_pt 3 0 3 2,2
4973:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL003-18.p
NO CLASH, using fixed ground order
7458: Facts:
7458:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
7458:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
7458:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
7458: Goal:
7458:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
7458: Order:
7458:   nrkbo
7458: Leaf order:
7458:  w 4 0 0 
7458:  b 7 0 0 
7458:  apply 20 2 3 0,2
7458:  fixed_pt 3 0 3 2,2
7458:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
7459: Facts:
7459:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
7459:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
7459:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
7459: Goal:
7459:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
7459: Order:
7459:   kbo
7459: Leaf order:
7459:  w 4 0 0 
7459:  b 7 0 0 
7459:  apply 20 2 3 0,2
7459:  fixed_pt 3 0 3 2,2
7459:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
7460: Facts:
7460:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
7460:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
7460:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
7460: Goal:
7460:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
7460: Order:
7460:   lpo
7460: Leaf order:
7460:  w 4 0 0 
7460:  b 7 0 0 
7460:  apply 20 2 3 0,2
7460:  fixed_pt 3 0 3 2,2
7460:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL003-19.p
CLASH, statistics insufficient
9903: Facts:
9903:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
9903:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =>= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
9903: Goal:
9903:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
9903: Order:
9903:   nrkbo
9903: Leaf order:
9903:  q1 1 0 0 
9903:  o 1 0 0 
9903:  apply 10 2 1 0,3
9903:  combinator 1 0 1 1,3
CLASH, statistics insufficient
9904: Facts:
9904:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
9904:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =>= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
9904: Goal:
9904:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
9904: Order:
9904:   kbo
9904: Leaf order:
9904:  q1 1 0 0 
9904:  o 1 0 0 
9904:  apply 10 2 1 0,3
9904:  combinator 1 0 1 1,3
CLASH, statistics insufficient
9905: Facts:
9905:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
9905:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =?= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
9905: Goal:
9905:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
9905: Order:
9905:   lpo
9905: Leaf order:
9905:  q1 1 0 0 
9905:  o 1 0 0 
9905:  apply 10 2 1 0,3
9905:  combinator 1 0 1 1,3
% SZS status Timeout for COL011-1.p
CLASH, statistics insufficient
9926: Facts:
9926:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9926:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9926:  Id :   4, {_}:
          apply (apply t ?9) ?10 =>= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
9926: Goal:
9926:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9926: Order:
9926:   nrkbo
9926: Leaf order:
9926:  t 1 0 0 
9926:  m 1 0 0 
9926:  b 1 0 0 
9926:  apply 13 2 3 0,2
9926:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9927: Facts:
9927:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9927:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9927:  Id :   4, {_}:
          apply (apply t ?9) ?10 =>= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
9927: Goal:
9927:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9927: Order:
9927:   kbo
9927: Leaf order:
9927:  t 1 0 0 
9927:  m 1 0 0 
9927:  b 1 0 0 
9927:  apply 13 2 3 0,2
9927:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9928: Facts:
9928:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9928:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9928:  Id :   4, {_}:
          apply (apply t ?9) ?10 =?= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
9928: Goal:
9928:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9928: Order:
9928:   lpo
9928: Leaf order:
9928:  t 1 0 0 
9928:  m 1 0 0 
9928:  b 1 0 0 
9928:  apply 13 2 3 0,2
9928:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 62
Found proof, 1.513358s
% SZS status Unsatisfiable for COL034-1.p
% SZS output start CNFRefutation for COL034-1.p
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :   4, {_}: apply (apply t ?9) ?10 =>= apply ?10 ?9 [10, 9] by t_definition ?9 ?10
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :  11, {_}: apply m (apply (apply b ?29) ?30) =<= apply ?29 (apply ?30 (apply (apply b ?29) ?30)) [30, 29] by Super 2 with 3 at 2
Id : 2545, {_}: apply (f (apply (apply b m) (apply (apply b (apply t m)) b))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply b (apply t m)) b)))) m)) === apply (f (apply (apply b m) (apply (apply b (apply t m)) b))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply b (apply t m)) b)))) m)) [] by Super 2544 with 11 at 2
Id : 2544, {_}: apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975) =<= apply (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))) (apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975)) [1975, 1976, 1974] by Demod 2294 with 4 at 2,2
Id : 2294, {_}: apply ?1974 (apply (apply t ?1975) (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))))) =<= apply (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))) (apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975)) [1976, 1975, 1974] by Super 53 with 4 at 2,2,3
Id :  53, {_}: apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80))))) =<= apply (f (apply (apply b ?78) (apply (apply b ?79) ?80))) (apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80)))))) [80, 79, 78] by Demod 39 with 2 at 2,2
Id :  39, {_}: apply ?78 (apply (apply (apply b ?79) ?80) (f (apply (apply b ?78) (apply (apply b ?79) ?80)))) =<= apply (f (apply (apply b ?78) (apply (apply b ?79) ?80))) (apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80)))))) [80, 79, 78] by Super 8 with 2 at 2,2,3
Id :   8, {_}: apply ?20 (apply ?21 (f (apply (apply b ?20) ?21))) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?20) ?21) (f (apply (apply b ?20) ?21)) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL034-1.p
9926: solved COL034-1.p in 0.528032 using nrkbo
9926: status Unsatisfiable for COL034-1.p
CLASH, statistics insufficient
9933: Facts:
9933:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
9933:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
9933:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
9933: Goal:
9933:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9933: Order:
9933:   nrkbo
9933: Leaf order:
9933:  c 1 0 0 
9933:  b 1 0 0 
9933:  s 1 0 0 
9933:  apply 19 2 3 0,2
9933:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9934: Facts:
9934:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
9934:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
9934:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
9934: Goal:
9934:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9934: Order:
9934:   kbo
9934: Leaf order:
9934:  c 1 0 0 
9934:  b 1 0 0 
9934:  s 1 0 0 
9934:  apply 19 2 3 0,2
9934:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9935: Facts:
9935:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
9935:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
9935:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =?= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
9935: Goal:
9935:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9935: Order:
9935:   lpo
9935: Leaf order:
9935:  c 1 0 0 
9935:  b 1 0 0 
9935:  s 1 0 0 
9935:  apply 19 2 3 0,2
9935:  f 3 1 3 0,2,2
% SZS status Timeout for COL037-1.p
CLASH, statistics insufficient
9973: Facts:
9973:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9973:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9973:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
9973: Goal:
9973:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9973: Order:
9973:   nrkbo
9973: Leaf order:
9973:  c 1 0 0 
9973:  m 1 0 0 
9973:  b 1 0 0 
9973:  apply 15 2 3 0,2
9973:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9974: Facts:
9974:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9974:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9974:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
9974: Goal:
9974:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9974: Order:
9974:   kbo
9974: Leaf order:
9974:  c 1 0 0 
9974:  m 1 0 0 
9974:  b 1 0 0 
9974:  apply 15 2 3 0,2
9974:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9975: Facts:
9975:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9975:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
9975:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =?= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
9975: Goal:
9975:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9975: Order:
9975:   lpo
9975: Leaf order:
9975:  c 1 0 0 
9975:  m 1 0 0 
9975:  b 1 0 0 
9975:  apply 15 2 3 0,2
9975:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 54
Found proof, 2.234152s
% SZS status Unsatisfiable for COL041-1.p
% SZS output start CNFRefutation for COL041-1.p
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :   4, {_}: apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10 [11, 10, 9] by c_definition ?9 ?10 ?11
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :  11, {_}: apply m (apply (apply b ?30) ?31) =<= apply ?30 (apply ?31 (apply (apply b ?30) ?31)) [31, 30] by Super 2 with 3 at 2
Id : 4380, {_}: apply (f (apply (apply b m) (apply (apply c b) m))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply c b) m)))) m)) === apply (f (apply (apply b m) (apply (apply c b) m))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply c b) m)))) m)) [] by Super 53 with 11 at 2
Id :  53, {_}: apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93) =<= apply (f (apply (apply b ?91) (apply (apply c ?92) ?93))) (apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93)) [93, 92, 91] by Demod 39 with 4 at 2,2
Id :  39, {_}: apply ?91 (apply (apply (apply c ?92) ?93) (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) =<= apply (f (apply (apply b ?91) (apply (apply c ?92) ?93))) (apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93)) [93, 92, 91] by Super 8 with 4 at 2,2,3
Id :   8, {_}: apply ?21 (apply ?22 (f (apply (apply b ?21) ?22))) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?21) ?22) (f (apply (apply b ?21) ?22)) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL041-1.p
9973: solved COL041-1.p in 1.13607 using nrkbo
9973: status Unsatisfiable for COL041-1.p
CLASH, statistics insufficient
9980: Facts:
9980:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9980:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
9980: Goal:
9980:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9980: Order:
9980:   nrkbo
9980: Leaf order:
9980:  n 1 0 0 
9980:  b 1 0 0 
9980:  apply 14 2 3 0,2
9980:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9981: Facts:
9981:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9981:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
9981: Goal:
9981:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9981: Order:
9981:   kbo
9981: Leaf order:
9981:  n 1 0 0 
9981:  b 1 0 0 
9981:  apply 14 2 3 0,2
9981:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9982: Facts:
9982:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9982:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
9982: Goal:
9982:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
9982: Order:
9982:   lpo
9982: Leaf order:
9982:  n 1 0 0 
9982:  b 1 0 0 
9982:  apply 14 2 3 0,2
9982:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 88
Found proof, 76.191737s
% SZS status Unsatisfiable for COL044-1.p
% SZS output start CNFRefutation for COL044-1.p
Id :   4, {_}: apply (apply (apply b ?11) ?12) ?13 =>= apply ?11 (apply ?12 ?13) [13, 12, 11] by b_definition ?11 ?12 ?13
Id :   3, {_}: apply (apply (apply n ?7) ?8) ?9 =?= apply (apply (apply ?7 ?9) ?8) ?9 [9, 8, 7] by n_definition ?7 ?8 ?9
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :   8, {_}: apply (apply (apply n b) ?22) ?23 =?= apply ?23 (apply ?22 ?23) [23, 22] by Super 2 with 3 at 2
Id :   5, {_}: apply ?15 (apply ?16 ?17) =?= apply ?15 (apply ?16 ?17) [17, 16, 15] by Super 4 with 2 at 2
Id :  83, {_}: apply (apply (apply (apply n b) ?260) (apply b ?261)) ?262 =?= apply ?261 (apply (apply ?260 (apply b ?261)) ?262) [262, 261, 260] by Super 2 with 8 at 1,2
Id : 24939, {_}: apply (apply (apply n b) (apply (apply (apply n (apply n b)) (apply b (apply n b))) (apply n (apply n b)))) (f (apply (apply (apply (apply n b) (apply n (apply n b))) (apply b (apply n b))) (apply n (apply n b)))) =?= apply (apply (apply n b) (apply (apply (apply n (apply n b)) (apply b (apply n b))) (apply n (apply n b)))) (f (apply (apply (apply (apply n b) (apply n (apply n b))) (apply b (apply n b))) (apply n (apply n b)))) [] by Super 24245 with 83 at 1,2
Id : 24245, {_}: apply (apply (apply (apply ?35313 ?35314) ?35315) ?35314) (f (apply (apply (apply ?35313 ?35314) ?35315) ?35314)) =?= apply (apply (apply n b) (apply (apply (apply n ?35313) ?35315) ?35314)) (f (apply (apply (apply ?35313 ?35314) ?35315) ?35314)) [35315, 35314, 35313] by Super 153 with 3 at 2,1,3
Id : 153, {_}: apply (apply ?460 ?461) (f (apply ?460 ?461)) =<= apply (apply (apply n b) (apply ?460 ?461)) (f (apply ?460 ?461)) [461, 460] by Super 115 with 5 at 1,3
Id : 115, {_}: apply ?375 (f ?375) =<= apply (apply (apply n b) ?375) (f ?375) [375] by Super 1 with 8 at 3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL044-1.p
9981: solved COL044-1.p in 12.724795 using kbo
9981: status Unsatisfiable for COL044-1.p
CLASH, statistics insufficient
9998: Facts:
9998:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9998:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
9998:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
9998: Goal:
9998:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
9998: Order:
9998:   nrkbo
9998: Leaf order:
9998:  m 1 0 0 
9998:  w 1 0 0 
9998:  b 1 0 0 
9998:  apply 14 2 3 0,2
9998:  f 3 1 3 0,2,2
CLASH, statistics insufficient
9999: Facts:
9999:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
9999:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
9999:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
9999: Goal:
9999:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
9999: Order:
9999:   kbo
9999: Leaf order:
9999:  m 1 0 0 
9999:  w 1 0 0 
9999:  b 1 0 0 
9999:  apply 14 2 3 0,2
9999:  f 3 1 3 0,2,2
CLASH, statistics insufficient
10000: Facts:
10000:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
10000:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
10000:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
10000: Goal:
10000:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
10000: Order:
10000:   lpo
10000: Leaf order:
10000:  m 1 0 0 
10000:  w 1 0 0 
10000:  b 1 0 0 
10000:  apply 14 2 3 0,2
10000:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 54
Found proof, 12.856628s
% SZS status Unsatisfiable for COL049-1.p
% SZS output start CNFRefutation for COL049-1.p
Id :   3, {_}: apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8 [8, 7] by w_definition ?7 ?8
Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 226, {_}: apply (apply w (apply b ?378)) ?379 =?= apply ?378 (apply ?379 ?379) [379, 378] by Super 2 with 3 at 2
Id : 231, {_}: apply (apply w (apply b ?393)) ?394 =>= apply ?393 (apply m ?394) [394, 393] by Super 226 with 4 at 2,3
Id : 289, {_}: apply m (apply w (apply b ?503)) =<= apply ?503 (apply m (apply w (apply b ?503))) [503] by Super 4 with 231 at 3
Id : 15983, {_}: apply (f (apply (apply b m) (apply (apply b w) b))) (apply m (apply w (apply b (f (apply (apply b m) (apply (apply b w) b)))))) === apply (f (apply (apply b m) (apply (apply b w) b))) (apply m (apply w (apply b (f (apply (apply b m) (apply (apply b w) b)))))) [] by Super 72 with 289 at 2
Id :  72, {_}: apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125))))) =<= apply (f (apply (apply b ?123) (apply (apply b ?124) ?125))) (apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125)))))) [125, 124, 123] by Demod 59 with 2 at 2,2
Id :  59, {_}: apply ?123 (apply (apply (apply b ?124) ?125) (f (apply (apply b ?123) (apply (apply b ?124) ?125)))) =<= apply (f (apply (apply b ?123) (apply (apply b ?124) ?125))) (apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125)))))) [125, 124, 123] by Super 8 with 2 at 2,2,3
Id :   8, {_}: apply ?20 (apply ?21 (f (apply (apply b ?20) ?21))) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?20) ?21) (f (apply (apply b ?20) ?21)) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_strong_fixed_point ?1
% SZS output end CNFRefutation for COL049-1.p
9998: solved COL049-1.p in 6.372397 using nrkbo
9998: status Unsatisfiable for COL049-1.p
CLASH, statistics insufficient
10010: Facts:
10010:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
10010:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
10010:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
10010:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
10010: Goal:
10010:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
10010: Order:
10010:   nrkbo
10010: Leaf order:
10010:  i 1 0 0 
10010:  c 1 0 0 
10010:  b 1 0 0 
10010:  s 1 0 0 
10010:  apply 20 2 3 0,2
10010:  f 3 1 3 0,2,2
CLASH, statistics insufficient
10011: Facts:
10011:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
10011:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
10011:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
10011:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
10011: Goal:
10011:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
10011: Order:
10011:   kbo
10011: Leaf order:
10011:  i 1 0 0 
10011:  c 1 0 0 
10011:  b 1 0 0 
10011:  s 1 0 0 
10011:  apply 20 2 3 0,2
10011:  f 3 1 3 0,2,2
CLASH, statistics insufficient
10012: Facts:
10012:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
10012:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
10012:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =?= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
10012:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
10012: Goal:
10012:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
10012: Order:
10012:   lpo
10012: Leaf order:
10012:  i 1 0 0 
10012:  c 1 0 0 
10012:  b 1 0 0 
10012:  s 1 0 0 
10012:  apply 20 2 3 0,2
10012:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 84
Found proof, 12.629405s
% SZS status Unsatisfiable for COL057-1.p
% SZS output start CNFRefutation for COL057-1.p
Id :   3, {_}: apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9) [9, 8, 7] by b_definition ?7 ?8 ?9
Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
Id :   2, {_}: apply (apply (apply s ?3) ?4) ?5 =?= apply (apply ?3 ?5) (apply ?4 ?5) [5, 4, 3] by s_definition ?3 ?4 ?5
Id :  37, {_}: apply (apply (apply s i) ?141) ?142 =?= apply ?142 (apply ?141 ?142) [142, 141] by Super 2 with 5 at 1,3
Id :  16, {_}: apply (apply (apply s (apply b ?64)) ?65) ?66 =?= apply ?64 (apply ?66 (apply ?65 ?66)) [66, 65, 64] by Super 2 with 3 at 3
Id : 9068, {_}: apply (apply (apply (apply s (apply b (apply s i))) i) (apply (apply s (apply b (apply s i))) i)) (f (apply (apply (apply s (apply b (apply s i))) i) (apply i (apply (apply s (apply b (apply s i))) i)))) === apply (apply (apply (apply s (apply b (apply s i))) i) (apply (apply s (apply b (apply s i))) i)) (f (apply (apply (apply s (apply b (apply s i))) i) (apply i (apply (apply s (apply b (apply s i))) i)))) [] by Super 9059 with 5 at 2,1,2
Id : 9059, {_}: apply (apply ?16932 (apply ?16933 ?16932)) (f (apply ?16932 (apply ?16933 ?16932))) =?= apply (apply (apply (apply s (apply b (apply s i))) ?16933) ?16932) (f (apply ?16932 (apply ?16933 ?16932))) [16933, 16932] by Super 9058 with 16 at 1,3
Id : 9058, {_}: apply ?16930 (f ?16930) =<= apply (apply (apply s i) ?16930) (f ?16930) [16930] by Super 1 with 37 at 3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_strong_fixed_point ?1
% SZS output end CNFRefutation for COL057-1.p
10010: solved COL057-1.p in 2.124132 using nrkbo
10010: status Unsatisfiable for COL057-1.p
NO CLASH, using fixed ground order
10025: Facts:
10025:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
10025: Goal:
10025:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
10025: Order:
10025:   nrkbo
10025: Leaf order:
10025:  inverse 5 1 0 
10025:  multiply 10 2 4 0,2
10025:  c 2 0 2 2,2,2
10025:  b 2 0 2 1,2,2
10025:  a 2 0 2 1,2
NO CLASH, using fixed ground order
10026: Facts:
10026:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
10026: Goal:
10026:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
10026: Order:
10026:   kbo
10026: Leaf order:
10026:  inverse 5 1 0 
10026:  multiply 10 2 4 0,2
10026:  c 2 0 2 2,2,2
10026:  b 2 0 2 1,2,2
10026:  a 2 0 2 1,2
NO CLASH, using fixed ground order
10027: Facts:
10027:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
10027: Goal:
10027:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
10027: Order:
10027:   lpo
10027: Leaf order:
10027:  inverse 5 1 0 
10027:  multiply 10 2 4 0,2
10027:  c 2 0 2 2,2,2
10027:  b 2 0 2 1,2,2
10027:  a 2 0 2 1,2
Statistics :
Max weight : 62
Found proof, 20.319552s
% SZS status Unsatisfiable for GRP014-1.p
% SZS output start CNFRefutation for GRP014-1.p
Id :   2, {_}: multiply ?2 (inverse (multiply (multiply (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4))) ?5) (inverse (multiply ?3 ?5)))) =>= ?4 [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
Id :   3, {_}: multiply ?7 (inverse (multiply (multiply (inverse (multiply (inverse ?8) (multiply (inverse ?7) ?9))) ?10) (inverse (multiply ?8 ?10)))) =>= ?9 [10, 9, 8, 7] by group_axiom ?7 ?8 ?9 ?10
Id :   6, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (inverse (multiply (inverse ?29) (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27))) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 30, 29, 28, 27, 26] by Super 3 with 2 at 1,1,2,2
Id :   5, {_}: multiply ?19 (inverse (multiply (multiply (inverse (multiply (inverse ?20) ?21)) ?22) (inverse (multiply ?20 ?22)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24) (inverse (multiply ?23 ?24))) [24, 23, 22, 21, 20, 19] by Super 3 with 2 at 2,1,1,1,1,2,2
Id :  28, {_}: multiply (inverse ?215) (multiply ?215 (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216, 215] by Super 2 with 5 at 2,2
Id :  29, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?220) (multiply (inverse (inverse ?221)) (multiply (inverse ?221) ?222)))) ?223) (inverse (multiply ?220 ?223))) =>= ?222 [223, 222, 221, 220] by Super 2 with 5 at 2
Id : 287, {_}: multiply (inverse ?2293) (multiply ?2293 ?2294) =?= multiply (inverse (inverse ?2295)) (multiply (inverse ?2295) ?2294) [2295, 2294, 2293] by Super 28 with 29 at 2,2,2
Id : 136, {_}: multiply (inverse ?1148) (multiply ?1148 ?1149) =?= multiply (inverse (inverse ?1150)) (multiply (inverse ?1150) ?1149) [1150, 1149, 1148] by Super 28 with 29 at 2,2,2
Id : 301, {_}: multiply (inverse ?2384) (multiply ?2384 ?2385) =?= multiply (inverse ?2386) (multiply ?2386 ?2385) [2386, 2385, 2384] by Super 287 with 136 at 3
Id : 356, {_}: multiply (inverse ?2583) (multiply ?2583 (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584, 2583] by Super 28 with 301 at 1,1,1,1,2,2,2
Id : 679, {_}: multiply ?5168 (inverse (multiply (multiply (inverse (multiply (inverse ?5169) (multiply ?5169 ?5170))) ?5171) (inverse (multiply (inverse ?5168) ?5171)))) =>= ?5170 [5171, 5170, 5169, 5168] by Super 2 with 301 at 1,1,1,1,2,2
Id : 2910, {_}: multiply ?23936 (inverse (multiply (multiply (inverse (multiply (inverse ?23937) (multiply ?23937 ?23938))) (multiply ?23936 ?23939)) (inverse (multiply (inverse ?23940) (multiply ?23940 ?23939))))) =>= ?23938 [23940, 23939, 23938, 23937, 23936] by Super 679 with 301 at 1,2,1,2,2
Id : 2996, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse (multiply (inverse ?24705) (multiply ?24705 (inverse (multiply (multiply (inverse (multiply (inverse ?24706) ?24704)) ?24707) (inverse (multiply ?24706 ?24707))))))))) =>= ?24703 [24707, 24706, 24705, 24704, 24703, 24702] by Super 2910 with 28 at 1,1,2,2
Id : 3034, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse ?24704))) =>= ?24703 [24704, 24703, 24702] by Demod 2996 with 28 at 1,2,1,2,2
Id : 3426, {_}: multiply (inverse (multiply (inverse ?29536) (multiply ?29536 ?29537))) ?29537 =?= multiply (inverse (multiply (inverse ?29538) (multiply ?29538 ?29539))) ?29539 [29539, 29538, 29537, 29536] by Super 356 with 3034 at 2,2
Id : 3726, {_}: multiply (inverse (inverse (multiply (inverse ?31745) (multiply ?31745 (inverse (multiply (multiply (inverse (multiply (inverse ?31746) ?31747)) ?31748) (inverse (multiply ?31746 ?31748)))))))) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31748, 31747, 31746, 31745] by Super 28 with 3426 at 2,2
Id : 3919, {_}: multiply (inverse (inverse ?31747)) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31747] by Demod 3726 with 28 at 1,1,1,2
Id :  91, {_}: multiply (inverse ?821) (multiply ?821 (inverse (multiply (multiply (inverse (multiply (inverse ?822) ?823)) ?824) (inverse (multiply ?822 ?824))))) =>= ?823 [824, 823, 822, 821] by Super 2 with 5 at 2,2
Id : 107, {_}: multiply (inverse ?949) (multiply ?949 (multiply ?950 (inverse (multiply (multiply (inverse (multiply (inverse ?951) ?952)) ?953) (inverse (multiply ?951 ?953)))))) =>= multiply (inverse (inverse ?950)) ?952 [953, 952, 951, 950, 949] by Super 91 with 5 at 2,2,2
Id : 3966, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse (multiply (inverse ?33636) (multiply ?33636 (inverse (multiply (multiply (inverse (multiply (inverse ?33637) ?33638)) ?33639) (inverse (multiply ?33637 ?33639))))))))) ?33638 [33639, 33638, 33637, 33636, 33635] by Super 107 with 3919 at 2,2
Id : 4117, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 3966 with 28 at 1,1,1,1,3
Id : 4346, {_}: multiply (inverse (inverse ?35898)) (multiply (inverse (multiply (inverse (inverse (inverse (inverse ?35899)))) (multiply (inverse (inverse (inverse ?35900))) ?35900))) ?35899) =>= ?35898 [35900, 35899, 35898] by Super 3919 with 4117 at 2,1,1,2,2
Id : 3965, {_}: multiply (inverse ?33628) (multiply ?33628 (multiply ?33629 (inverse (multiply (multiply (inverse ?33630) ?33631) (inverse (multiply (inverse ?33630) ?33631)))))) =?= multiply (inverse (inverse ?33629)) (multiply (inverse (multiply (inverse ?33632) (multiply ?33632 ?33633))) ?33633) [33633, 33632, 33631, 33630, 33629, 33628] by Super 107 with 3919 at 1,1,1,1,2,2,2,2
Id : 6632, {_}: multiply (inverse ?52916) (multiply ?52916 (multiply ?52917 (inverse (multiply (multiply (inverse ?52918) ?52919) (inverse (multiply (inverse ?52918) ?52919)))))) =>= ?52917 [52919, 52918, 52917, 52916] by Demod 3965 with 3919 at 3
Id : 6641, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply (multiply (inverse ?52994) (inverse (multiply (multiply (inverse (multiply (inverse ?52995) (multiply (inverse (inverse ?52994)) ?52996))) ?52997) (inverse (multiply ?52995 ?52997))))) (inverse ?52996))))) =>= ?52993 [52997, 52996, 52995, 52994, 52993, 52992] by Super 6632 with 2 at 1,2,1,2,2,2,2
Id : 6773, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply ?52996 (inverse ?52996))))) =>= ?52993 [52996, 52993, 52992] by Demod 6641 with 2 at 1,1,2,2,2,2
Id : 6832, {_}: multiply (inverse (inverse ?53817)) (multiply (inverse ?53818) (multiply ?53818 (inverse (multiply ?53819 (inverse ?53819))))) =>= ?53817 [53819, 53818, 53817] by Super 4346 with 6773 at 1,1,2,2
Id :   4, {_}: multiply ?12 (inverse (multiply (multiply (inverse (multiply (inverse ?13) (multiply (inverse ?12) ?14))) (inverse (multiply (multiply (inverse (multiply (inverse ?15) (multiply (inverse ?13) ?16))) ?17) (inverse (multiply ?15 ?17))))) (inverse ?16))) =>= ?14 [17, 16, 15, 14, 13, 12] by Super 3 with 2 at 1,2,1,2,2
Id :   9, {_}: multiply ?44 (inverse (multiply (multiply (inverse (multiply (inverse ?45) ?46)) ?47) (inverse (multiply ?45 ?47)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?48) (multiply (inverse (inverse ?44)) ?46))) (inverse (multiply (multiply (inverse (multiply (inverse ?49) (multiply (inverse ?48) ?50))) ?51) (inverse (multiply ?49 ?51))))) (inverse ?50)) [51, 50, 49, 48, 47, 46, 45, 44] by Super 2 with 4 at 2,1,1,1,1,2,2
Id : 7754, {_}: multiply ?63171 (inverse (multiply (multiply (inverse (multiply (inverse ?63172) (multiply (inverse ?63171) (inverse (multiply ?63173 (inverse ?63173)))))) ?63174) (inverse (multiply ?63172 ?63174)))) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63174, 63173, 63172, 63171] by Super 9 with 6832 at 1,1,1,1,3
Id : 7872, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63173] by Demod 7754 with 2 at 2
Id : 7873, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply ?63177 (inverse ?63177)) [63177, 63173] by Demod 7872 with 2 at 1,1,3
Id : 8249, {_}: multiply (inverse (inverse (multiply ?66459 (inverse ?66459)))) (multiply (inverse ?66460) (multiply ?66460 (inverse (multiply ?66461 (inverse ?66461))))) =?= multiply ?66462 (inverse ?66462) [66462, 66461, 66460, 66459] by Super 6832 with 7873 at 1,1,2
Id : 8282, {_}: multiply ?66459 (inverse ?66459) =?= multiply ?66462 (inverse ?66462) [66462, 66459] by Demod 8249 with 6832 at 2
Id : 8520, {_}: multiply (multiply (inverse ?67970) (multiply ?67971 (inverse ?67971))) (inverse (multiply ?67972 (inverse ?67972))) =>= inverse ?67970 [67972, 67971, 67970] by Super 3034 with 8282 at 2,1,2
Id : 380, {_}: multiply ?2743 (inverse (multiply (multiply (inverse ?2744) (multiply ?2744 ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2744, 2743] by Super 2 with 301 at 1,1,2,2
Id : 8912, {_}: multiply ?70596 (inverse (multiply (multiply (inverse ?70597) (multiply ?70597 (inverse (multiply ?70598 (inverse ?70598))))) (inverse (multiply ?70599 (inverse ?70599))))) =>= inverse (inverse ?70596) [70599, 70598, 70597, 70596] by Super 380 with 8520 at 2,1,2,1,2,2
Id : 9021, {_}: multiply ?70596 (inverse (inverse (multiply ?70598 (inverse ?70598)))) =>= inverse (inverse ?70596) [70598, 70596] by Demod 8912 with 3034 at 1,2,2
Id : 9165, {_}: multiply (inverse (inverse ?72171)) (multiply (inverse (multiply (inverse ?72172) (inverse (inverse ?72172)))) (inverse (inverse (multiply ?72173 (inverse ?72173))))) =>= ?72171 [72173, 72172, 72171] by Super 3919 with 9021 at 2,1,1,2,2
Id : 10068, {_}: multiply (inverse (inverse ?76580)) (inverse (inverse (inverse (multiply (inverse ?76581) (inverse (inverse ?76581)))))) =>= ?76580 [76581, 76580] by Demod 9165 with 9021 at 2,2
Id : 9180, {_}: multiply ?72234 (inverse ?72234) =?= inverse (inverse (inverse (multiply ?72235 (inverse ?72235)))) [72235, 72234] by Super 8282 with 9021 at 3
Id : 10100, {_}: multiply (inverse (inverse ?76745)) (multiply ?76746 (inverse ?76746)) =>= ?76745 [76746, 76745] by Super 10068 with 9180 at 2,2
Id : 10663, {_}: multiply ?82289 (inverse (multiply ?82290 (inverse ?82290))) =>= inverse (inverse ?82289) [82290, 82289] by Super 8520 with 10100 at 1,2
Id : 10913, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (inverse (multiply (inverse ?83564) (multiply ?83564 (inverse (multiply ?83565 (inverse ?83565)))))))) =>= ?83563 [83565, 83564, 83563] by Super 3919 with 10663 at 2,2
Id : 10892, {_}: inverse (inverse (multiply (inverse ?24702) (multiply ?24702 ?24703))) =>= ?24703 [24703, 24702] by Demod 3034 with 10663 at 2
Id : 11238, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (multiply ?83565 (inverse ?83565)))) =>= ?83563 [83565, 83563] by Demod 10913 with 10892 at 1,2,2
Id : 11239, {_}: inverse (inverse (inverse (inverse ?83563))) =>= ?83563 [83563] by Demod 11238 with 9021 at 2
Id : 138, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1160) (multiply (inverse (inverse ?1161)) (multiply (inverse ?1161) ?1162)))) ?1163) (inverse (multiply ?1160 ?1163))) =>= ?1162 [1163, 1162, 1161, 1160] by Super 2 with 5 at 2
Id : 145, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?1214) (multiply (inverse (inverse ?1215)) (multiply (inverse ?1215) ?1216)))) ?1217) (inverse (multiply ?1214 ?1217))))) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1217, 1216, 1215, 1214, 1213] by Super 138 with 29 at 1,2,2,1,1,1,1,2
Id : 168, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse ?1216) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1216, 1213] by Demod 145 with 29 at 1,1,2,1,1,1,1,2
Id : 777, {_}: multiply (inverse ?5891) (multiply ?5891 (multiply ?5892 (inverse (multiply (multiply (inverse (multiply (inverse ?5893) ?5894)) ?5895) (inverse (multiply ?5893 ?5895)))))) =>= multiply (inverse (inverse ?5892)) ?5894 [5895, 5894, 5893, 5892, 5891] by Super 91 with 5 at 2,2,2
Id : 813, {_}: multiply (inverse ?6211) (multiply ?6211 (multiply ?6212 ?6213)) =?= multiply (inverse (inverse ?6212)) (multiply (inverse ?6214) (multiply ?6214 ?6213)) [6214, 6213, 6212, 6211] by Super 777 with 168 at 2,2,2,2
Id : 1401, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11491) (multiply ?11491 (multiply ?11492 ?11493)))) ?11494) (inverse (multiply (inverse ?11492) ?11494))) =>= ?11493 [11494, 11493, 11492, 11491] by Super 168 with 813 at 1,1,1,1,2
Id : 1427, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11709) (multiply ?11709 (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710, 11709] by Super 1401 with 301 at 2,2,1,1,1,1,2
Id : 10889, {_}: multiply (inverse ?52992) (multiply ?52992 (inverse (inverse ?52993))) =>= ?52993 [52993, 52992] by Demod 6773 with 10663 at 2,2,2
Id : 11440, {_}: multiply (inverse ?85947) (multiply ?85947 ?85948) =>= inverse (inverse ?85948) [85948, 85947] by Super 10889 with 11239 at 2,2,2
Id : 12070, {_}: inverse (multiply (multiply (inverse (inverse (inverse (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710] by Demod 1427 with 11440 at 1,1,1,1,2
Id : 12071, {_}: inverse (multiply (multiply (inverse (inverse (inverse (inverse (inverse ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12070 with 11440 at 1,1,1,1,1,1,2
Id : 12086, {_}: inverse (multiply (multiply (inverse ?11711) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12071 with 11239 at 1,1,1,2
Id : 11284, {_}: multiply ?84907 (inverse (multiply (inverse (inverse (inverse ?84908))) ?84908)) =>= inverse (inverse ?84907) [84908, 84907] by Super 10663 with 11239 at 2,1,2,2
Id : 12456, {_}: inverse (inverse (inverse (multiply (inverse ?89511) ?89512))) =>= multiply (inverse ?89512) ?89511 [89512, 89511] by Super 12086 with 11284 at 1,2
Id : 12807, {_}: inverse (multiply (inverse ?89891) ?89892) =>= multiply (inverse ?89892) ?89891 [89892, 89891] by Super 11239 with 12456 at 1,2
Id : 13084, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 6 with 12807 at 1,1,1,2,1,2,1,2,2
Id : 13085, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13084 with 12807 at 1,1,1,1,2,1,2,1,2,2
Id : 13086, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (inverse (multiply (inverse ?26) ?30)) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13085 with 12807 at 2,1,1,1,1,2,1,2,1,2,2
Id : 13087, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13086 with 12807 at 1,2,1,1,1,1,2,1,2,1,2,2
Id : 12072, {_}: multiply ?2743 (inverse (multiply (inverse (inverse ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2743] by Demod 380 with 11440 at 1,1,2,2
Id : 13068, {_}: multiply ?2743 (multiply (inverse (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745)))) (inverse ?2745)) =>= ?2747 [2745, 2747, 2746, 2743] by Demod 12072 with 12807 at 2,2
Id : 358, {_}: multiply (inverse ?2595) (multiply ?2595 (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596, 2595] by Super 28 with 301 at 1,1,2,2,2
Id : 12055, {_}: inverse (inverse (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596] by Demod 358 with 11440 at 2
Id : 12056, {_}: inverse (inverse (inverse (multiply (inverse (inverse ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597] by Demod 12055 with 11440 at 1,1,1,1,2
Id : 12778, {_}: multiply (inverse (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))) (inverse ?2597) =>= ?2599 [2597, 2599, 2598] by Demod 12056 with 12456 at 2
Id : 13130, {_}: multiply ?2743 (multiply (inverse ?2743) ?2747) =>= ?2747 [2747, 2743] by Demod 13068 with 12778 at 2,2
Id : 12068, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584] by Demod 356 with 11440 at 2
Id : 12069, {_}: inverse (inverse (inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12068 with 11440 at 1,1,1,1,1,1,2
Id : 12343, {_}: inverse (inverse (inverse (inverse (inverse (multiply (inverse (inverse (inverse ?88665))) ?88666))))) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Super 12069 with 11284 at 1,1,1,2
Id : 12705, {_}: inverse (multiply (inverse (inverse (inverse ?88665))) ?88666) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Demod 12343 with 11239 at 2
Id : 13398, {_}: multiply (inverse ?88666) (inverse (inverse ?88665)) =?= multiply (inverse (inverse (inverse ?88666))) ?88665 [88665, 88666] by Demod 12705 with 12807 at 2
Id : 13591, {_}: multiply (inverse ?93455) (inverse (inverse (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456))) =>= ?93456 [93456, 93455] by Super 13130 with 13398 at 2
Id : 13688, {_}: multiply (inverse ?93455) (inverse (multiply (inverse ?93456) (inverse (inverse (inverse ?93455))))) =>= ?93456 [93456, 93455] by Demod 13591 with 12807 at 1,2,2
Id : 13689, {_}: multiply (inverse ?93455) (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456) =>= ?93456 [93456, 93455] by Demod 13688 with 12807 at 2,2
Id : 13690, {_}: multiply (inverse ?93455) (multiply ?93455 ?93456) =>= ?93456 [93456, 93455] by Demod 13689 with 11239 at 1,2,2
Id : 13691, {_}: inverse (inverse ?93456) =>= ?93456 [93456] by Demod 13690 with 11440 at 2
Id : 14259, {_}: inverse (multiply ?94937 ?94938) =<= multiply (inverse ?94938) (inverse ?94937) [94938, 94937] by Super 12807 with 13691 at 1,1,2
Id : 14272, {_}: inverse (multiply ?94994 (inverse ?94995)) =>= multiply ?94995 (inverse ?94994) [94995, 94994] by Super 14259 with 13691 at 1,3
Id : 15113, {_}: multiply ?26 (multiply (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31))))) (inverse ?27)) =>= ?30 [31, 29, 30, 27, 28, 26] by Demod 13087 with 14272 at 2,2
Id : 15114, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15113 with 14272 at 2,1,2,2
Id : 14099, {_}: inverse (multiply ?94283 ?94284) =<= multiply (inverse ?94284) (inverse ?94283) [94284, 94283] by Super 12807 with 13691 at 1,1,2
Id : 15376, {_}: multiply ?101449 (inverse (multiply ?101450 ?101449)) =>= inverse ?101450 [101450, 101449] by Super 13130 with 14099 at 2,2
Id : 14196, {_}: multiply ?94524 (inverse (multiply ?94525 ?94524)) =>= inverse ?94525 [94525, 94524] by Super 13130 with 14099 at 2,2
Id : 15386, {_}: multiply (inverse (multiply ?101486 ?101487)) (inverse (inverse ?101486)) =>= inverse ?101487 [101487, 101486] by Super 15376 with 14196 at 1,2,2
Id : 15574, {_}: inverse (multiply (inverse ?101486) (multiply ?101486 ?101487)) =>= inverse ?101487 [101487, 101486] by Demod 15386 with 14099 at 2
Id : 16040, {_}: multiply (inverse (multiply ?103094 ?103095)) ?103094 =>= inverse ?103095 [103095, 103094] by Demod 15574 with 12807 at 2
Id : 12061, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216] by Demod 28 with 11440 at 2
Id : 13066, {_}: inverse (inverse (inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 216, 217] by Demod 12061 with 12807 at 1,1,1,1,1,2
Id : 14035, {_}: inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))) =>= ?217 [218, 216, 217] by Demod 13066 with 13691 at 2
Id : 15129, {_}: multiply (multiply ?216 ?218) (inverse (multiply (multiply (inverse ?217) ?216) ?218)) =>= ?217 [217, 218, 216] by Demod 14035 with 14272 at 2
Id : 16059, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= inverse (inverse (multiply (multiply (inverse ?103200) ?103201) ?103202)) [103202, 103201, 103200] by Super 16040 with 15129 at 1,1,2
Id : 16156, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= multiply (multiply (inverse ?103200) ?103201) ?103202 [103202, 103201, 103200] by Demod 16059 with 13691 at 3
Id : 17066, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29)) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15114 with 16156 at 1,1,2,2,1,2,2
Id : 17067, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17066 with 16156 at 1,2,2,1,2,2
Id : 17068, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) (multiply ?26 ?28)) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17067 with 16156 at 1,1,2,1,2,2,1,2,2
Id : 17069, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (inverse ?30) (multiply (multiply ?26 ?28) ?29)) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17068 with 16156 at 1,2,1,2,2,1,2,2
Id : 17070, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31)))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17069 with 16156 at 2,1,2,2,1,2,2
Id : 17075, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31))) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17070 with 12807 at 2,2,1,2,2
Id : 17076, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) ?30) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17075 with 12807 at 1,2,2,1,2,2
Id : 17077, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) (multiply ?30 ?27)))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17076 with 16156 at 2,2,1,2,2
Id : 14023, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 4117 with 13691 at 1,2
Id : 14024, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse ?33638) ?33638 [33638, 33635] by Demod 14023 with 13691 at 1,3
Id : 14053, {_}: multiply (inverse ?93965) ?93965 =?= multiply ?93966 (inverse ?93966) [93966, 93965] by Super 14024 with 13691 at 1,3
Id : 19206, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply (multiply ?108861 ?108862) (multiply ?108863 (inverse ?108863)))) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108863, 108862, 108861, 108860, 108859] by Super 17077 with 14053 at 2,2,1,2,2
Id : 14021, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= inverse (inverse ?70596) [70598, 70596] by Demod 9021 with 13691 at 2,2
Id : 14022, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= ?70596 [70598, 70596] by Demod 14021 with 13691 at 3
Id : 19669, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply ?108861 ?108862)) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108862, 108861, 108860, 108859] by Demod 19206 with 14022 at 2,1,2,2
Id : 14028, {_}: inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12069 with 13691 at 2
Id : 14029, {_}: inverse (multiply (multiply (inverse ?2585) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 14028 with 13691 at 1,1,1,2
Id : 15108, {_}: multiply (multiply ?2587 ?2586) (inverse (multiply (inverse ?2585) ?2586)) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 14029 with 14272 at 2
Id : 15134, {_}: multiply (multiply ?2587 ?2586) (multiply (inverse ?2586) ?2585) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 15108 with 12807 at 2,2
Id : 15575, {_}: multiply (inverse (multiply ?101486 ?101487)) ?101486 =>= inverse ?101487 [101487, 101486] by Demod 15574 with 12807 at 2
Id : 16032, {_}: multiply (multiply ?103052 (multiply ?103053 ?103054)) (inverse ?103054) =>= multiply ?103052 ?103053 [103054, 103053, 103052] by Super 15134 with 15575 at 2,2
Id : 32860, {_}: multiply ?108859 (multiply ?108860 ?108861) =?= multiply (multiply ?108859 ?108860) ?108861 [108861, 108860, 108859] by Demod 19669 with 16032 at 2,2
Id : 33337, {_}: multiply a (multiply b c) === multiply a (multiply b c) [] by Demod 1 with 32860 at 3
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for GRP014-1.p
10025: solved GRP014-1.p in 10.216638 using nrkbo
10025: status Unsatisfiable for GRP014-1.p
CLASH, statistics insufficient
10036: Facts:
10036:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10036:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10036:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10036:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10036:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10036:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10036:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10036:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10036:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10036:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10036:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10036:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10036:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10036:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10036:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10036:  Id :  17, {_}:
          positive_part ?50 =<= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
10036:  Id :  18, {_}:
          negative_part ?52 =<= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
10036:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
10036:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =<=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
10036: Goal:
10036:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10036: Order:
10036:   nrkbo
10036: Leaf order:
10036:  least_upper_bound 19 2 0 
10036:  greatest_lower_bound 19 2 0 
10036:  inverse 1 1 0 
10036:  identity 4 0 0 
10036:  multiply 19 2 1 0,3
10036:  negative_part 2 1 1 0,2,3
10036:  positive_part 2 1 1 0,1,3
10036:  a 3 0 3 2
CLASH, statistics insufficient
10037: Facts:
10037:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10037:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10037:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10037:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10037:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10037:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10037:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10037:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10037:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10037:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10037:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10037:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10037:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10037:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10037:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10037:  Id :  17, {_}:
          positive_part ?50 =<= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
10037:  Id :  18, {_}:
          negative_part ?52 =<= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
10037:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
10037:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =<=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
10037: Goal:
10037:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10037: Order:
10037:   kbo
10037: Leaf order:
10037:  least_upper_bound 19 2 0 
10037:  greatest_lower_bound 19 2 0 
10037:  inverse 1 1 0 
10037:  identity 4 0 0 
10037:  multiply 19 2 1 0,3
10037:  negative_part 2 1 1 0,2,3
10037:  positive_part 2 1 1 0,1,3
10037:  a 3 0 3 2
CLASH, statistics insufficient
10038: Facts:
10038:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10038:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10038:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10038:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10038:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10038:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10038:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10038:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10038:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10038:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10038:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10038:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10038:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10038:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10038:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10038:  Id :  17, {_}:
          positive_part ?50 =>= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
10038:  Id :  18, {_}:
          negative_part ?52 =>= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
10038:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
10038:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =>=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
10038: Goal:
10038:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10038: Order:
10038:   lpo
10038: Leaf order:
10038:  least_upper_bound 19 2 0 
10038:  greatest_lower_bound 19 2 0 
10038:  inverse 1 1 0 
10038:  identity 4 0 0 
10038:  multiply 19 2 1 0,3
10038:  negative_part 2 1 1 0,2,3
10038:  positive_part 2 1 1 0,1,3
10038:  a 3 0 3 2
Statistics :
Max weight : 19
Found proof, 19.804581s
% SZS status Unsatisfiable for GRP167-1.p
% SZS output start CNFRefutation for GRP167-1.p
Id :  11, {_}: least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28 [29, 28] by lub_absorbtion ?28 ?29
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id : 134, {_}: multiply ?322 (least_upper_bound ?323 ?324) =<= least_upper_bound (multiply ?322 ?323) (multiply ?322 ?324) [324, 323, 322] by monotony_lub1 ?322 ?323 ?324
Id :  12, {_}: greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31 [32, 31] by glb_absorbtion ?31 ?32
Id :   7, {_}: greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18) =<= greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18 [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
Id :  16, {_}: multiply (greatest_lower_bound ?46 ?47) ?48 =<= greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48) [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
Id :  20, {_}: greatest_lower_bound ?58 (least_upper_bound ?59 ?60) =<= least_upper_bound (greatest_lower_bound ?58 ?59) (greatest_lower_bound ?58 ?60) [60, 59, 58] by lat4_4 ?58 ?59 ?60
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  17, {_}: positive_part ?50 =<= least_upper_bound ?50 identity [50] by lat4_1 ?50
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =<= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :  18, {_}: negative_part ?52 =<= greatest_lower_bound ?52 identity [52] by lat4_2 ?52
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id : 237, {_}: multiply (greatest_lower_bound ?514 ?515) ?516 =<= greatest_lower_bound (multiply ?514 ?516) (multiply ?515 ?516) [516, 515, 514] by monotony_glb2 ?514 ?515 ?516
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  25, {_}: multiply (multiply ?69 ?70) ?71 =>= multiply ?69 (multiply ?70 ?71) [71, 70, 69] by associativity ?69 ?70 ?71
Id :  27, {_}: multiply identity ?76 =<= multiply (inverse ?77) (multiply ?77 ?76) [77, 76] by Super 25 with 3 at 1,2
Id :  31, {_}: ?76 =<= multiply (inverse ?77) (multiply ?77 ?76) [77, 76] by Demod 27 with 2 at 2
Id : 242, {_}: multiply (greatest_lower_bound (inverse ?532) ?533) ?532 =>= greatest_lower_bound identity (multiply ?533 ?532) [533, 532] by Super 237 with 3 at 1,3
Id : 278, {_}: greatest_lower_bound identity ?584 =>= negative_part ?584 [584] by Super 5 with 18 at 3
Id : 15662, {_}: multiply (greatest_lower_bound (inverse ?19569) ?19570) ?19569 =>= negative_part (multiply ?19570 ?19569) [19570, 19569] by Demod 242 with 278 at 3
Id : 15688, {_}: multiply (negative_part (inverse ?19646)) ?19646 =>= negative_part (multiply identity ?19646) [19646] by Super 15662 with 18 at 1,2
Id : 15740, {_}: multiply (negative_part (inverse ?19646)) ?19646 =>= negative_part ?19646 [19646] by Demod 15688 with 2 at 1,3
Id : 15765, {_}: ?19710 =<= multiply (inverse (negative_part (inverse ?19710))) (negative_part ?19710) [19710] by Super 31 with 15740 at 2,3
Id : 778, {_}: ?1461 =<= multiply (inverse ?1462) (multiply ?1462 ?1461) [1462, 1461] by Demod 27 with 2 at 2
Id : 782, {_}: ?1472 =<= multiply (inverse (inverse ?1472)) identity [1472] by Super 778 with 3 at 2,3
Id : 1371, {_}: multiply (inverse (inverse ?2316)) (least_upper_bound ?2317 identity) =?= least_upper_bound (multiply (inverse (inverse ?2316)) ?2317) ?2316 [2317, 2316] by Super 13 with 782 at 2,3
Id : 1392, {_}: multiply (inverse (inverse ?2316)) (positive_part ?2317) =<= least_upper_bound (multiply (inverse (inverse ?2316)) ?2317) ?2316 [2317, 2316] by Demod 1371 with 17 at 2,2
Id : 1393, {_}: multiply (inverse (inverse ?2316)) (positive_part ?2317) =<= least_upper_bound ?2316 (multiply (inverse (inverse ?2316)) ?2317) [2317, 2316] by Demod 1392 with 6 at 3
Id : 786, {_}: multiply ?1484 ?1485 =<= multiply (inverse (inverse ?1484)) ?1485 [1485, 1484] by Super 778 with 31 at 2,3
Id : 2137, {_}: ?1472 =<= multiply ?1472 identity [1472] by Demod 782 with 786 at 3
Id : 2138, {_}: inverse (inverse ?3405) =<= multiply ?3405 identity [3405] by Super 2137 with 786 at 3
Id : 2189, {_}: inverse (inverse ?3405) =>= ?3405 [3405] by Demod 2138 with 2137 at 3
Id : 49575, {_}: multiply ?2316 (positive_part ?2317) =<= least_upper_bound ?2316 (multiply (inverse (inverse ?2316)) ?2317) [2317, 2316] by Demod 1393 with 2189 at 1,2
Id : 49621, {_}: multiply ?54979 (positive_part ?54980) =<= least_upper_bound ?54979 (multiply ?54979 ?54980) [54980, 54979] by Demod 49575 with 2189 at 1,2,3
Id : 15768, {_}: multiply (negative_part (inverse ?19715)) ?19715 =>= negative_part ?19715 [19715] by Demod 15688 with 2 at 1,3
Id : 15773, {_}: multiply (negative_part ?19724) (inverse ?19724) =>= negative_part (inverse ?19724) [19724] by Super 15768 with 2189 at 1,1,2
Id : 49652, {_}: multiply (negative_part ?55064) (positive_part (inverse ?55064)) =>= least_upper_bound (negative_part ?55064) (negative_part (inverse ?55064)) [55064] by Super 49621 with 15773 at 2,3
Id : 865, {_}: greatest_lower_bound identity (least_upper_bound ?1569 ?1570) =<= least_upper_bound (greatest_lower_bound identity ?1569) (negative_part ?1570) [1570, 1569] by Super 20 with 278 at 2,3
Id : 880, {_}: negative_part (least_upper_bound ?1569 ?1570) =<= least_upper_bound (greatest_lower_bound identity ?1569) (negative_part ?1570) [1570, 1569] by Demod 865 with 278 at 2
Id : 881, {_}: negative_part (least_upper_bound ?1569 ?1570) =<= least_upper_bound (negative_part ?1569) (negative_part ?1570) [1570, 1569] by Demod 880 with 278 at 1,3
Id : 49776, {_}: multiply (negative_part ?55064) (positive_part (inverse ?55064)) =>= negative_part (least_upper_bound ?55064 (inverse ?55064)) [55064] by Demod 49652 with 881 at 3
Id : 15757, {_}: multiply (greatest_lower_bound (negative_part (inverse ?19686)) ?19687) ?19686 =>= greatest_lower_bound (negative_part ?19686) (multiply ?19687 ?19686) [19687, 19686] by Super 16 with 15740 at 1,3
Id : 859, {_}: greatest_lower_bound identity (greatest_lower_bound ?1558 ?1559) =>= greatest_lower_bound (negative_part ?1558) ?1559 [1559, 1558] by Super 7 with 278 at 1,3
Id : 890, {_}: negative_part (greatest_lower_bound ?1558 ?1559) =>= greatest_lower_bound (negative_part ?1558) ?1559 [1559, 1558] by Demod 859 with 278 at 2
Id : 281, {_}: greatest_lower_bound ?591 (greatest_lower_bound ?592 identity) =>= negative_part (greatest_lower_bound ?591 ?592) [592, 591] by Super 7 with 18 at 3
Id : 289, {_}: greatest_lower_bound ?591 (negative_part ?592) =<= negative_part (greatest_lower_bound ?591 ?592) [592, 591] by Demod 281 with 18 at 2,2
Id : 1628, {_}: greatest_lower_bound ?1558 (negative_part ?1559) =<= greatest_lower_bound (negative_part ?1558) ?1559 [1559, 1558] by Demod 890 with 289 at 2
Id : 15802, {_}: multiply (greatest_lower_bound (inverse ?19686) (negative_part ?19687)) ?19686 =>= greatest_lower_bound (negative_part ?19686) (multiply ?19687 ?19686) [19687, 19686] by Demod 15757 with 1628 at 1,2
Id : 15803, {_}: multiply (greatest_lower_bound (inverse ?19686) (negative_part ?19687)) ?19686 =>= greatest_lower_bound ?19686 (negative_part (multiply ?19687 ?19686)) [19687, 19686] by Demod 15802 with 1628 at 3
Id : 15650, {_}: multiply (greatest_lower_bound (inverse ?532) ?533) ?532 =>= negative_part (multiply ?533 ?532) [533, 532] by Demod 242 with 278 at 3
Id : 15804, {_}: negative_part (multiply (negative_part ?19687) ?19686) =<= greatest_lower_bound ?19686 (negative_part (multiply ?19687 ?19686)) [19686, 19687] by Demod 15803 with 15650 at 2
Id : 49651, {_}: multiply (negative_part (inverse ?55062)) (positive_part ?55062) =>= least_upper_bound (negative_part (inverse ?55062)) (negative_part ?55062) [55062] by Super 49621 with 15740 at 2,3
Id : 49774, {_}: multiply (negative_part (inverse ?55062)) (positive_part ?55062) =>= least_upper_bound (negative_part ?55062) (negative_part (inverse ?55062)) [55062] by Demod 49651 with 6 at 3
Id : 49775, {_}: multiply (negative_part (inverse ?55062)) (positive_part ?55062) =>= negative_part (least_upper_bound ?55062 (inverse ?55062)) [55062] by Demod 49774 with 881 at 3
Id : 49840, {_}: negative_part (multiply (negative_part (negative_part (inverse ?55170))) (positive_part ?55170)) =<= greatest_lower_bound (positive_part ?55170) (negative_part (negative_part (least_upper_bound ?55170 (inverse ?55170)))) [55170] by Super 15804 with 49775 at 1,2,3
Id : 268, {_}: greatest_lower_bound ?569 (positive_part ?569) =>= ?569 [569] by Super 12 with 17 at 2,2
Id : 139, {_}: multiply (inverse ?340) (least_upper_bound ?340 ?341) =>= least_upper_bound identity (multiply (inverse ?340) ?341) [341, 340] by Super 134 with 3 at 1,3
Id : 264, {_}: least_upper_bound identity ?559 =>= positive_part ?559 [559] by Super 6 with 17 at 3
Id : 4901, {_}: multiply (inverse ?7380) (least_upper_bound ?7380 ?7381) =>= positive_part (multiply (inverse ?7380) ?7381) [7381, 7380] by Demod 139 with 264 at 3
Id : 4921, {_}: multiply (inverse ?7441) (positive_part ?7441) =?= positive_part (multiply (inverse ?7441) identity) [7441] by Super 4901 with 17 at 2,2
Id : 4985, {_}: multiply (inverse ?7525) (positive_part ?7525) =>= positive_part (inverse ?7525) [7525] by Demod 4921 with 2137 at 1,3
Id : 267, {_}: least_upper_bound ?566 (least_upper_bound ?567 identity) =>= positive_part (least_upper_bound ?566 ?567) [567, 566] by Super 8 with 17 at 3
Id : 1187, {_}: least_upper_bound ?2080 (positive_part ?2081) =<= positive_part (least_upper_bound ?2080 ?2081) [2081, 2080] by Demod 267 with 17 at 2,2
Id : 1199, {_}: least_upper_bound ?2117 (positive_part identity) =>= positive_part (positive_part ?2117) [2117] by Super 1187 with 17 at 1,3
Id : 263, {_}: positive_part identity =>= identity [] by Super 9 with 17 at 2
Id : 1218, {_}: least_upper_bound ?2117 identity =<= positive_part (positive_part ?2117) [2117] by Demod 1199 with 263 at 2,2
Id : 1219, {_}: positive_part ?2117 =<= positive_part (positive_part ?2117) [2117] by Demod 1218 with 17 at 2
Id : 4997, {_}: multiply (inverse (positive_part ?7553)) (positive_part ?7553) =>= positive_part (inverse (positive_part ?7553)) [7553] by Super 4985 with 1219 at 2,2
Id : 5031, {_}: identity =<= positive_part (inverse (positive_part ?7553)) [7553] by Demod 4997 with 3 at 2
Id : 5129, {_}: greatest_lower_bound (inverse (positive_part ?7677)) identity =>= inverse (positive_part ?7677) [7677] by Super 268 with 5031 at 2,2
Id : 5176, {_}: greatest_lower_bound identity (inverse (positive_part ?7677)) =>= inverse (positive_part ?7677) [7677] by Demod 5129 with 5 at 2
Id : 5177, {_}: negative_part (inverse (positive_part ?7677)) =>= inverse (positive_part ?7677) [7677] by Demod 5176 with 278 at 2
Id : 5325, {_}: greatest_lower_bound (inverse (positive_part ?7851)) (negative_part ?7852) =>= greatest_lower_bound (inverse (positive_part ?7851)) ?7852 [7852, 7851] by Super 1628 with 5177 at 1,3
Id : 15685, {_}: multiply (greatest_lower_bound (inverse (positive_part ?19637)) ?19638) (positive_part ?19637) =>= negative_part (multiply (negative_part ?19638) (positive_part ?19637)) [19638, 19637] by Super 15662 with 5325 at 1,2
Id : 15737, {_}: negative_part (multiply ?19638 (positive_part ?19637)) =<= negative_part (multiply (negative_part ?19638) (positive_part ?19637)) [19637, 19638] by Demod 15685 with 15650 at 2
Id : 49928, {_}: negative_part (multiply (negative_part (inverse ?55170)) (positive_part ?55170)) =<= greatest_lower_bound (positive_part ?55170) (negative_part (negative_part (least_upper_bound ?55170 (inverse ?55170)))) [55170] by Demod 49840 with 15737 at 2
Id : 1648, {_}: greatest_lower_bound ?2900 (negative_part ?2901) =<= greatest_lower_bound (negative_part ?2900) ?2901 [2901, 2900] by Demod 890 with 289 at 2
Id : 863, {_}: negative_part (least_upper_bound identity ?1566) =>= identity [1566] by Super 12 with 278 at 2
Id : 886, {_}: negative_part (positive_part ?1566) =>= identity [1566] by Demod 863 with 264 at 1,2
Id : 1653, {_}: greatest_lower_bound (positive_part ?2914) (negative_part ?2915) =>= greatest_lower_bound identity ?2915 [2915, 2914] by Super 1648 with 886 at 1,3
Id : 1710, {_}: greatest_lower_bound (positive_part ?2914) (negative_part ?2915) =>= negative_part ?2915 [2915, 2914] by Demod 1653 with 278 at 3
Id : 49929, {_}: negative_part (multiply (negative_part (inverse ?55170)) (positive_part ?55170)) =>= negative_part (negative_part (least_upper_bound ?55170 (inverse ?55170))) [55170] by Demod 49928 with 1710 at 3
Id : 49930, {_}: negative_part (multiply (inverse ?55170) (positive_part ?55170)) =<= negative_part (negative_part (least_upper_bound ?55170 (inverse ?55170))) [55170] by Demod 49929 with 15737 at 2
Id : 1014, {_}: greatest_lower_bound ?1717 (positive_part ?1717) =>= ?1717 [1717] by Super 12 with 17 at 2,2
Id : 858, {_}: least_upper_bound identity (negative_part ?1556) =>= identity [1556] by Super 11 with 278 at 2,2
Id : 891, {_}: positive_part (negative_part ?1556) =>= identity [1556] by Demod 858 with 264 at 2
Id : 1019, {_}: greatest_lower_bound (negative_part ?1726) identity =>= negative_part ?1726 [1726] by Super 1014 with 891 at 2,2
Id : 1039, {_}: greatest_lower_bound identity (negative_part ?1726) =>= negative_part ?1726 [1726] by Demod 1019 with 5 at 2
Id : 1040, {_}: negative_part (negative_part ?1726) =>= negative_part ?1726 [1726] by Demod 1039 with 278 at 2
Id : 49931, {_}: negative_part (multiply (inverse ?55170) (positive_part ?55170)) =>= negative_part (least_upper_bound ?55170 (inverse ?55170)) [55170] by Demod 49930 with 1040 at 3
Id : 4960, {_}: multiply (inverse ?7441) (positive_part ?7441) =>= positive_part (inverse ?7441) [7441] by Demod 4921 with 2137 at 1,3
Id : 49932, {_}: negative_part (positive_part (inverse ?55170)) =<= negative_part (least_upper_bound ?55170 (inverse ?55170)) [55170] by Demod 49931 with 4960 at 1,2
Id : 49933, {_}: identity =<= negative_part (least_upper_bound ?55170 (inverse ?55170)) [55170] by Demod 49932 with 886 at 2
Id : 53516, {_}: multiply (negative_part ?55064) (positive_part (inverse ?55064)) =>= identity [55064] by Demod 49776 with 49933 at 3
Id : 53529, {_}: positive_part (inverse ?58317) =<= multiply (inverse (negative_part ?58317)) identity [58317] by Super 31 with 53516 at 2,3
Id : 53947, {_}: positive_part (inverse ?58761) =>= inverse (negative_part ?58761) [58761] by Demod 53529 with 2137 at 3
Id : 53952, {_}: positive_part ?58770 =<= inverse (negative_part (inverse ?58770)) [58770] by Super 53947 with 2189 at 1,2
Id : 54151, {_}: ?19710 =<= multiply (positive_part ?19710) (negative_part ?19710) [19710] by Demod 15765 with 53952 at 1,3
Id : 54473, {_}: a =?= a [] by Demod 1 with 54151 at 3
Id :   1, {_}: a =<= multiply (positive_part a) (negative_part a) [] by prove_lat4
% SZS output end CNFRefutation for GRP167-1.p
10037: solved GRP167-1.p in 9.872616 using kbo
10037: status Unsatisfiable for GRP167-1.p
CLASH, statistics insufficient
10051: Facts:
10051:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10051:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10051:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10051:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10051:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10051:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10051:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10051:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10051:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10051:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10051:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10051:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10051:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10051:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10051:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10051:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
10051:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
10051:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
10051:  Id :  20, {_}:
          positive_part ?56 =<= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
10051:  Id :  21, {_}:
          negative_part ?58 =<= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
10051:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
10051:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =<=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
10051: Goal:
10051:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10051: Order:
10051:   nrkbo
10051: Leaf order:
10051:  least_upper_bound 19 2 0 
10051:  greatest_lower_bound 19 2 0 
10051:  inverse 7 1 0 
10051:  identity 6 0 0 
10051:  multiply 21 2 1 0,3
10051:  negative_part 2 1 1 0,2,3
10051:  positive_part 2 1 1 0,1,3
10051:  a 3 0 3 2
CLASH, statistics insufficient
10052: Facts:
10052:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10052:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10052:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10052:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10052:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10052:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10052:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10052:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10052:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10052:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10052:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10052:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10052:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10052:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10052:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10052:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
10052:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
10052:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
10052:  Id :  20, {_}:
          positive_part ?56 =<= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
10052:  Id :  21, {_}:
          negative_part ?58 =<= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
10052:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
10052:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =<=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
10052: Goal:
10052:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10052: Order:
10052:   kbo
10052: Leaf order:
10052:  least_upper_bound 19 2 0 
10052:  greatest_lower_bound 19 2 0 
10052:  inverse 7 1 0 
10052:  identity 6 0 0 
10052:  multiply 21 2 1 0,3
10052:  negative_part 2 1 1 0,2,3
10052:  positive_part 2 1 1 0,1,3
10052:  a 3 0 3 2
CLASH, statistics insufficient
10053: Facts:
10053:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10053:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10053:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10053:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10053:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10053:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10053:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10053:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10053:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10053:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10053:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10053:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10053:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10053:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10053:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10053:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
10053:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
10053:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
10053:  Id :  20, {_}:
          positive_part ?56 =>= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
10053:  Id :  21, {_}:
          negative_part ?58 =>= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
10053:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
10053:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =>=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
10053: Goal:
10053:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
10053: Order:
10053:   lpo
10053: Leaf order:
10053:  least_upper_bound 19 2 0 
10053:  greatest_lower_bound 19 2 0 
10053:  inverse 7 1 0 
10053:  identity 6 0 0 
10053:  multiply 21 2 1 0,3
10053:  negative_part 2 1 1 0,2,3
10053:  positive_part 2 1 1 0,1,3
10053:  a 3 0 3 2
Statistics :
Max weight : 15
Found proof, 6.844655s
% SZS status Unsatisfiable for GRP167-2.p
% SZS output start CNFRefutation for GRP167-2.p
Id :  19, {_}: inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53) [54, 53] by lat4_3 ?53 ?54
Id :   7, {_}: greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18) =<= greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18 [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :  12, {_}: greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31 [32, 31] by glb_absorbtion ?31 ?32
Id :  11, {_}: least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28 [29, 28] by lub_absorbtion ?28 ?29
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  22, {_}: least_upper_bound ?60 (greatest_lower_bound ?61 ?62) =<= greatest_lower_bound (least_upper_bound ?60 ?61) (least_upper_bound ?60 ?62) [62, 61, 60] by lat4_6 ?60 ?61 ?62
Id : 210, {_}: multiply (least_upper_bound ?453 ?454) ?455 =<= least_upper_bound (multiply ?453 ?455) (multiply ?454 ?455) [455, 454, 453] by monotony_lub2 ?453 ?454 ?455
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id :  21, {_}: negative_part ?58 =<= greatest_lower_bound ?58 identity [58] by lat4_5 ?58
Id :  14, {_}: multiply ?38 (greatest_lower_bound ?39 ?40) =<= greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40) [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  20, {_}: positive_part ?56 =<= least_upper_bound ?56 identity [56] by lat4_4 ?56
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =<= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id : 286, {_}: inverse (multiply ?614 ?615) =<= multiply (inverse ?615) (inverse ?614) [615, 614] by lat4_3 ?614 ?615
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  28, {_}: multiply (multiply ?75 ?76) ?77 =>= multiply ?75 (multiply ?76 ?77) [77, 76, 75] by associativity ?75 ?76 ?77
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
Id :  30, {_}: multiply identity ?82 =<= multiply (inverse ?83) (multiply ?83 ?82) [83, 82] by Super 28 with 3 at 1,2
Id :  34, {_}: ?82 =<= multiply (inverse ?83) (multiply ?83 ?82) [83, 82] by Demod 30 with 2 at 2
Id : 288, {_}: inverse (multiply (inverse ?619) ?620) =>= multiply (inverse ?620) ?619 [620, 619] by Super 286 with 18 at 2,3
Id : 997, {_}: ?1719 =<= multiply (inverse ?1720) (multiply ?1720 ?1719) [1720, 1719] by Demod 30 with 2 at 2
Id : 1001, {_}: ?1730 =<= multiply (inverse (inverse ?1730)) identity [1730] by Super 997 with 3 at 2,3
Id : 1026, {_}: ?1730 =<= multiply ?1730 identity [1730] by Demod 1001 with 18 at 1,3
Id : 1045, {_}: multiply ?1785 (least_upper_bound ?1786 identity) =?= least_upper_bound (multiply ?1785 ?1786) ?1785 [1786, 1785] by Super 13 with 1026 at 2,3
Id : 1078, {_}: multiply ?1785 (positive_part ?1786) =<= least_upper_bound (multiply ?1785 ?1786) ?1785 [1786, 1785] by Demod 1045 with 20 at 2,2
Id : 5086, {_}: multiply ?7297 (positive_part ?7298) =<= least_upper_bound ?7297 (multiply ?7297 ?7298) [7298, 7297] by Demod 1078 with 6 at 3
Id : 5090, {_}: multiply (inverse ?7308) (positive_part ?7308) =>= least_upper_bound (inverse ?7308) identity [7308] by Super 5086 with 3 at 2,3
Id : 5133, {_}: multiply (inverse ?7308) (positive_part ?7308) =>= least_upper_bound identity (inverse ?7308) [7308] by Demod 5090 with 6 at 3
Id : 298, {_}: least_upper_bound identity ?640 =>= positive_part ?640 [640] by Super 6 with 20 at 3
Id : 5134, {_}: multiply (inverse ?7308) (positive_part ?7308) =>= positive_part (inverse ?7308) [7308] by Demod 5133 with 298 at 3
Id : 5356, {_}: inverse (positive_part (inverse ?7872)) =<= multiply (inverse (positive_part ?7872)) ?7872 [7872] by Super 288 with 5134 at 1,2
Id : 1051, {_}: multiply ?1799 (greatest_lower_bound ?1800 identity) =?= greatest_lower_bound (multiply ?1799 ?1800) ?1799 [1800, 1799] by Super 14 with 1026 at 2,3
Id : 1072, {_}: multiply ?1799 (negative_part ?1800) =<= greatest_lower_bound (multiply ?1799 ?1800) ?1799 [1800, 1799] by Demod 1051 with 21 at 2,2
Id : 4381, {_}: multiply ?6565 (negative_part ?6566) =<= greatest_lower_bound ?6565 (multiply ?6565 ?6566) [6566, 6565] by Demod 1072 with 5 at 3
Id : 270, {_}: multiply ?567 (inverse ?567) =>= identity [567] by Super 3 with 18 at 1,2
Id : 4388, {_}: multiply ?6585 (negative_part (inverse ?6585)) =>= greatest_lower_bound ?6585 identity [6585] by Super 4381 with 270 at 2,3
Id : 4428, {_}: multiply ?6585 (negative_part (inverse ?6585)) =>= negative_part ?6585 [6585] by Demod 4388 with 21 at 3
Id : 1073, {_}: multiply ?1799 (negative_part ?1800) =<= greatest_lower_bound ?1799 (multiply ?1799 ?1800) [1800, 1799] by Demod 1072 with 5 at 3
Id : 215, {_}: multiply (least_upper_bound (inverse ?471) ?472) ?471 =>= least_upper_bound identity (multiply ?472 ?471) [472, 471] by Super 210 with 3 at 1,3
Id : 11818, {_}: multiply (least_upper_bound (inverse ?15728) ?15729) ?15728 =>= positive_part (multiply ?15729 ?15728) [15729, 15728] by Demod 215 with 298 at 3
Id : 11845, {_}: multiply (positive_part (inverse ?15810)) ?15810 =>= positive_part (multiply identity ?15810) [15810] by Super 11818 with 20 at 1,2
Id : 12179, {_}: multiply (positive_part (inverse ?16312)) ?16312 =>= positive_part ?16312 [16312] by Demod 11845 with 2 at 1,3
Id : 12183, {_}: multiply (positive_part ?16319) (inverse ?16319) =>= positive_part (inverse ?16319) [16319] by Super 12179 with 18 at 1,1,2
Id : 12264, {_}: multiply (positive_part ?16391) (negative_part (inverse ?16391)) =>= greatest_lower_bound (positive_part ?16391) (positive_part (inverse ?16391)) [16391] by Super 1073 with 12183 at 2,3
Id : 849, {_}: least_upper_bound identity (greatest_lower_bound ?1555 ?1556) =<= greatest_lower_bound (least_upper_bound identity ?1555) (positive_part ?1556) [1556, 1555] by Super 22 with 298 at 2,3
Id : 877, {_}: positive_part (greatest_lower_bound ?1555 ?1556) =<= greatest_lower_bound (least_upper_bound identity ?1555) (positive_part ?1556) [1556, 1555] by Demod 849 with 298 at 2
Id : 878, {_}: positive_part (greatest_lower_bound ?1555 ?1556) =<= greatest_lower_bound (positive_part ?1555) (positive_part ?1556) [1556, 1555] by Demod 877 with 298 at 1,3
Id : 12306, {_}: multiply (positive_part ?16391) (negative_part (inverse ?16391)) =>= positive_part (greatest_lower_bound ?16391 (inverse ?16391)) [16391] by Demod 12264 with 878 at 3
Id : 853, {_}: least_upper_bound identity (least_upper_bound ?1564 ?1565) =>= least_upper_bound (positive_part ?1564) ?1565 [1565, 1564] by Super 8 with 298 at 1,3
Id : 874, {_}: positive_part (least_upper_bound ?1564 ?1565) =>= least_upper_bound (positive_part ?1564) ?1565 [1565, 1564] by Demod 853 with 298 at 2
Id : 297, {_}: least_upper_bound ?637 (least_upper_bound ?638 identity) =>= positive_part (least_upper_bound ?637 ?638) [638, 637] by Super 8 with 20 at 3
Id : 307, {_}: least_upper_bound ?637 (positive_part ?638) =<= positive_part (least_upper_bound ?637 ?638) [638, 637] by Demod 297 with 20 at 2,2
Id : 1518, {_}: least_upper_bound ?1564 (positive_part ?1565) =<= least_upper_bound (positive_part ?1564) ?1565 [1565, 1564] by Demod 874 with 307 at 2
Id : 309, {_}: least_upper_bound ?657 (negative_part ?657) =>= ?657 [657] by Super 11 with 21 at 2,2
Id : 4385, {_}: multiply (inverse ?6576) (negative_part ?6576) =>= greatest_lower_bound (inverse ?6576) identity [6576] by Super 4381 with 3 at 2,3
Id : 4422, {_}: multiply (inverse ?6576) (negative_part ?6576) =>= greatest_lower_bound identity (inverse ?6576) [6576] by Demod 4385 with 5 at 3
Id : 312, {_}: greatest_lower_bound identity ?665 =>= negative_part ?665 [665] by Super 5 with 21 at 3
Id : 4454, {_}: multiply (inverse ?6658) (negative_part ?6658) =>= negative_part (inverse ?6658) [6658] by Demod 4422 with 312 at 3
Id : 1166, {_}: greatest_lower_bound ?1914 (positive_part ?1914) =>= ?1914 [1914] by Super 12 with 20 at 2,2
Id : 898, {_}: least_upper_bound identity (negative_part ?1605) =>= identity [1605] by Super 11 with 312 at 2,2
Id : 922, {_}: positive_part (negative_part ?1605) =>= identity [1605] by Demod 898 with 298 at 2
Id : 1171, {_}: greatest_lower_bound (negative_part ?1923) identity =>= negative_part ?1923 [1923] by Super 1166 with 922 at 2,2
Id : 1191, {_}: greatest_lower_bound identity (negative_part ?1923) =>= negative_part ?1923 [1923] by Demod 1171 with 5 at 2
Id : 1192, {_}: negative_part (negative_part ?1923) =>= negative_part ?1923 [1923] by Demod 1191 with 312 at 2
Id : 4460, {_}: multiply (inverse (negative_part ?6669)) (negative_part ?6669) =>= negative_part (inverse (negative_part ?6669)) [6669] by Super 4454 with 1192 at 2,2
Id : 4502, {_}: identity =<= negative_part (inverse (negative_part ?6669)) [6669] by Demod 4460 with 3 at 2
Id : 4607, {_}: least_upper_bound (inverse (negative_part ?6821)) identity =>= inverse (negative_part ?6821) [6821] by Super 309 with 4502 at 2,2
Id : 4660, {_}: least_upper_bound identity (inverse (negative_part ?6821)) =>= inverse (negative_part ?6821) [6821] by Demod 4607 with 6 at 2
Id : 4661, {_}: positive_part (inverse (negative_part ?6821)) =>= inverse (negative_part ?6821) [6821] by Demod 4660 with 298 at 2
Id : 4799, {_}: least_upper_bound (inverse (negative_part ?6984)) (positive_part ?6985) =>= least_upper_bound (inverse (negative_part ?6984)) ?6985 [6985, 6984] by Super 1518 with 4661 at 1,3
Id : 11842, {_}: multiply (least_upper_bound (inverse (negative_part ?15801)) ?15802) (negative_part ?15801) =>= positive_part (multiply (positive_part ?15802) (negative_part ?15801)) [15802, 15801] by Super 11818 with 4799 at 1,2
Id : 11803, {_}: multiply (least_upper_bound (inverse ?471) ?472) ?471 =>= positive_part (multiply ?472 ?471) [472, 471] by Demod 215 with 298 at 3
Id : 11889, {_}: positive_part (multiply ?15802 (negative_part ?15801)) =<= positive_part (multiply (positive_part ?15802) (negative_part ?15801)) [15801, 15802] by Demod 11842 with 11803 at 2
Id : 11892, {_}: multiply (positive_part (inverse ?15810)) ?15810 =>= positive_part ?15810 [15810] by Demod 11845 with 2 at 1,3
Id : 12165, {_}: multiply (positive_part (inverse ?16276)) (negative_part ?16276) =>= greatest_lower_bound (positive_part (inverse ?16276)) (positive_part ?16276) [16276] by Super 1073 with 11892 at 2,3
Id : 12217, {_}: multiply (positive_part (inverse ?16276)) (negative_part ?16276) =>= greatest_lower_bound (positive_part ?16276) (positive_part (inverse ?16276)) [16276] by Demod 12165 with 5 at 3
Id : 12218, {_}: multiply (positive_part (inverse ?16276)) (negative_part ?16276) =>= positive_part (greatest_lower_bound ?16276 (inverse ?16276)) [16276] by Demod 12217 with 878 at 3
Id : 12981, {_}: positive_part (multiply (inverse ?17147) (negative_part ?17147)) =<= positive_part (positive_part (greatest_lower_bound ?17147 (inverse ?17147))) [17147] by Super 11889 with 12218 at 1,3
Id : 4423, {_}: multiply (inverse ?6576) (negative_part ?6576) =>= negative_part (inverse ?6576) [6576] by Demod 4422 with 312 at 3
Id : 13027, {_}: positive_part (negative_part (inverse ?17147)) =<= positive_part (positive_part (greatest_lower_bound ?17147 (inverse ?17147))) [17147] by Demod 12981 with 4423 at 1,2
Id : 1230, {_}: least_upper_bound ?1974 (positive_part ?1975) =<= positive_part (least_upper_bound ?1974 ?1975) [1975, 1974] by Demod 297 with 20 at 2,2
Id : 1242, {_}: least_upper_bound ?2011 (positive_part identity) =>= positive_part (positive_part ?2011) [2011] by Super 1230 with 20 at 1,3
Id : 300, {_}: positive_part identity =>= identity [] by Super 9 with 20 at 2
Id : 1261, {_}: least_upper_bound ?2011 identity =<= positive_part (positive_part ?2011) [2011] by Demod 1242 with 300 at 2,2
Id : 1262, {_}: positive_part ?2011 =<= positive_part (positive_part ?2011) [2011] by Demod 1261 with 20 at 2
Id : 13028, {_}: positive_part (negative_part (inverse ?17147)) =<= positive_part (greatest_lower_bound ?17147 (inverse ?17147)) [17147] by Demod 13027 with 1262 at 3
Id : 13029, {_}: identity =<= positive_part (greatest_lower_bound ?17147 (inverse ?17147)) [17147] by Demod 13028 with 922 at 2
Id : 14199, {_}: multiply (positive_part ?16391) (negative_part (inverse ?16391)) =>= identity [16391] by Demod 12306 with 13029 at 3
Id : 14209, {_}: negative_part (inverse ?18032) =<= multiply (inverse (positive_part ?18032)) identity [18032] by Super 34 with 14199 at 2,3
Id : 14275, {_}: negative_part (inverse ?18032) =>= inverse (positive_part ?18032) [18032] by Demod 14209 with 1026 at 3
Id : 14351, {_}: multiply ?6585 (inverse (positive_part ?6585)) =>= negative_part ?6585 [6585] by Demod 4428 with 14275 at 2,2
Id : 290, {_}: inverse (multiply ?624 (inverse ?625)) =>= multiply ?625 (inverse ?624) [625, 624] by Super 286 with 18 at 1,3
Id : 12177, {_}: inverse (positive_part (inverse ?16308)) =<= multiply ?16308 (inverse (positive_part (inverse (inverse ?16308)))) [16308] by Super 290 with 11892 at 1,2
Id : 12203, {_}: inverse (positive_part (inverse ?16308)) =<= multiply ?16308 (inverse (positive_part ?16308)) [16308] by Demod 12177 with 18 at 1,1,2,3
Id : 14356, {_}: inverse (positive_part (inverse ?6585)) =>= negative_part ?6585 [6585] by Demod 14351 with 12203 at 2
Id : 14357, {_}: negative_part ?7872 =<= multiply (inverse (positive_part ?7872)) ?7872 [7872] by Demod 5356 with 14356 at 2
Id : 13168, {_}: multiply (inverse (greatest_lower_bound ?17321 (inverse ?17321))) identity =>= positive_part (inverse (greatest_lower_bound ?17321 (inverse ?17321))) [17321] by Super 5134 with 13029 at 2,2
Id : 15132, {_}: inverse (greatest_lower_bound ?18904 (inverse ?18904)) =<= positive_part (inverse (greatest_lower_bound ?18904 (inverse ?18904))) [18904] by Demod 13168 with 1026 at 2
Id : 15140, {_}: inverse (greatest_lower_bound (positive_part (inverse ?18921)) (inverse (positive_part (inverse ?18921)))) =>= positive_part (inverse (greatest_lower_bound (positive_part (inverse ?18921)) (negative_part ?18921))) [18921] by Super 15132 with 14356 at 2,1,1,3
Id : 899, {_}: greatest_lower_bound identity (greatest_lower_bound ?1607 ?1608) =>= greatest_lower_bound (negative_part ?1607) ?1608 [1608, 1607] by Super 7 with 312 at 1,3
Id : 921, {_}: negative_part (greatest_lower_bound ?1607 ?1608) =>= greatest_lower_bound (negative_part ?1607) ?1608 [1608, 1607] by Demod 899 with 312 at 2
Id : 311, {_}: greatest_lower_bound ?662 (greatest_lower_bound ?663 identity) =>= negative_part (greatest_lower_bound ?662 ?663) [663, 662] by Super 7 with 21 at 3
Id : 321, {_}: greatest_lower_bound ?662 (negative_part ?663) =<= negative_part (greatest_lower_bound ?662 ?663) [663, 662] by Demod 311 with 21 at 2,2
Id : 1610, {_}: greatest_lower_bound ?2637 (negative_part ?2638) =<= greatest_lower_bound (negative_part ?2637) ?2638 [2638, 2637] by Demod 921 with 321 at 2
Id : 903, {_}: negative_part (least_upper_bound identity ?1615) =>= identity [1615] by Super 12 with 312 at 2
Id : 917, {_}: negative_part (positive_part ?1615) =>= identity [1615] by Demod 903 with 298 at 1,2
Id : 1615, {_}: greatest_lower_bound (positive_part ?2651) (negative_part ?2652) =>= greatest_lower_bound identity ?2652 [2652, 2651] by Super 1610 with 917 at 1,3
Id : 1662, {_}: greatest_lower_bound (positive_part ?2651) (negative_part ?2652) =>= negative_part ?2652 [2652, 2651] by Demod 1615 with 312 at 3
Id : 4459, {_}: multiply (inverse (positive_part ?6667)) identity =>= negative_part (inverse (positive_part ?6667)) [6667] by Super 4454 with 917 at 2,2
Id : 4501, {_}: inverse (positive_part ?6667) =<= negative_part (inverse (positive_part ?6667)) [6667] by Demod 4459 with 1026 at 2
Id : 4523, {_}: greatest_lower_bound (positive_part ?6721) (inverse (positive_part ?6722)) =>= negative_part (inverse (positive_part ?6722)) [6722, 6721] by Super 1662 with 4501 at 2,2
Id : 4568, {_}: greatest_lower_bound (positive_part ?6721) (inverse (positive_part ?6722)) =>= inverse (positive_part ?6722) [6722, 6721] by Demod 4523 with 4501 at 3
Id : 15267, {_}: inverse (inverse (positive_part (inverse ?18921))) =<= positive_part (inverse (greatest_lower_bound (positive_part (inverse ?18921)) (negative_part ?18921))) [18921] by Demod 15140 with 4568 at 1,2
Id : 4810, {_}: positive_part (inverse (negative_part ?7011)) =>= inverse (negative_part ?7011) [7011] by Demod 4660 with 298 at 2
Id : 4822, {_}: positive_part (inverse (greatest_lower_bound ?7038 (negative_part ?7039))) =>= inverse (negative_part (greatest_lower_bound ?7038 ?7039)) [7039, 7038] by Super 4810 with 321 at 1,1,2
Id : 4871, {_}: positive_part (inverse (greatest_lower_bound ?7038 (negative_part ?7039))) =>= inverse (greatest_lower_bound ?7038 (negative_part ?7039)) [7039, 7038] by Demod 4822 with 321 at 1,3
Id : 15268, {_}: inverse (inverse (positive_part (inverse ?18921))) =<= inverse (greatest_lower_bound (positive_part (inverse ?18921)) (negative_part ?18921)) [18921] by Demod 15267 with 4871 at 3
Id : 15269, {_}: positive_part (inverse ?18921) =<= inverse (greatest_lower_bound (positive_part (inverse ?18921)) (negative_part ?18921)) [18921] by Demod 15268 with 18 at 2
Id : 15270, {_}: positive_part (inverse ?18921) =<= inverse (greatest_lower_bound (negative_part ?18921) (positive_part (inverse ?18921))) [18921] by Demod 15269 with 5 at 1,3
Id : 1594, {_}: greatest_lower_bound ?1607 (negative_part ?1608) =<= greatest_lower_bound (negative_part ?1607) ?1608 [1608, 1607] by Demod 921 with 321 at 2
Id : 15271, {_}: positive_part (inverse ?18921) =<= inverse (greatest_lower_bound ?18921 (negative_part (positive_part (inverse ?18921)))) [18921] by Demod 15270 with 1594 at 1,3
Id : 15272, {_}: positive_part (inverse ?18921) =<= inverse (greatest_lower_bound ?18921 identity) [18921] by Demod 15271 with 917 at 2,1,3
Id : 15273, {_}: positive_part (inverse ?18921) =>= inverse (negative_part ?18921) [18921] by Demod 15272 with 21 at 1,3
Id : 15393, {_}: negative_part (inverse ?19045) =<= multiply (inverse (inverse (negative_part ?19045))) (inverse ?19045) [19045] by Super 14357 with 15273 at 1,1,3
Id : 15435, {_}: inverse (positive_part ?19045) =<= multiply (inverse (inverse (negative_part ?19045))) (inverse ?19045) [19045] by Demod 15393 with 14275 at 2
Id : 15436, {_}: inverse (positive_part ?19045) =<= inverse (multiply ?19045 (inverse (negative_part ?19045))) [19045] by Demod 15435 with 19 at 3
Id : 15437, {_}: inverse (positive_part ?19045) =<= multiply (negative_part ?19045) (inverse ?19045) [19045] by Demod 15436 with 290 at 3
Id : 15800, {_}: inverse ?19405 =<= multiply (inverse (negative_part ?19405)) (inverse (positive_part ?19405)) [19405] by Super 34 with 15437 at 2,3
Id : 15843, {_}: inverse ?19405 =<= inverse (multiply (positive_part ?19405) (negative_part ?19405)) [19405] by Demod 15800 with 19 at 3
Id : 20580, {_}: inverse (inverse ?23723) =<= multiply (positive_part ?23723) (negative_part ?23723) [23723] by Super 18 with 15843 at 1,2
Id : 20668, {_}: ?23723 =<= multiply (positive_part ?23723) (negative_part ?23723) [23723] by Demod 20580 with 18 at 2
Id : 20964, {_}: a =?= a [] by Demod 1 with 20668 at 3
Id :   1, {_}: a =<= multiply (positive_part a) (negative_part a) [] by prove_lat4
% SZS output end CNFRefutation for GRP167-2.p
10052: solved GRP167-2.p in 3.352209 using kbo
10052: status Unsatisfiable for GRP167-2.p
NO CLASH, using fixed ground order
10058: Facts:
10058:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10058:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10058:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10058:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10058:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10058:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10058:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10058:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10058:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10058:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10058:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10058:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10058:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10058:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10058:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10058:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
10058:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
10058:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
10058:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
10058: Goal:
10058:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
10058: Order:
10058:   nrkbo
10058: Leaf order:
10058:  least_upper_bound 16 2 0 
10058:  inverse 1 1 0 
10058:  identity 6 0 0 
10058:  greatest_lower_bound 16 2 2 0,2
10058:  multiply 19 2 1 0,2,2
10058:  c 4 0 2 2,2,2
10058:  b 4 0 1 1,2,2
10058:  a 5 0 2 1,2
NO CLASH, using fixed ground order
10059: Facts:
10059:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10059:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10059:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10059:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10059:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10059:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10059:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
NO CLASH, using fixed ground order
10060: Facts:
10060:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10060:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10060:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10060:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10060:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10060:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10059:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10059:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10059:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10059:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10059:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10059:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10059:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10059:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10059:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
10059:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
10059:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
10059:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
10059: Goal:
10059:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
10059: Order:
10059:   kbo
10059: Leaf order:
10059:  least_upper_bound 16 2 0 
10059:  inverse 1 1 0 
10059:  identity 6 0 0 
10059:  greatest_lower_bound 16 2 2 0,2
10059:  multiply 19 2 1 0,2,2
10059:  c 4 0 2 2,2,2
10059:  b 4 0 1 1,2,2
10059:  a 5 0 2 1,2
10060:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10060:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10060:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10060:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10060:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10060:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10060:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10060:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10060:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10060:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
10060:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
10060:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
10060:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
10060: Goal:
10060:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
10060: Order:
10060:   lpo
10060: Leaf order:
10060:  least_upper_bound 16 2 0 
10060:  inverse 1 1 0 
10060:  identity 6 0 0 
10060:  greatest_lower_bound 16 2 2 0,2
10060:  multiply 19 2 1 0,2,2
10060:  c 4 0 2 2,2,2
10060:  b 4 0 1 1,2,2
10060:  a 5 0 2 1,2
% SZS status Timeout for GRP178-1.p
NO CLASH, using fixed ground order
10102: Facts:
10102:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10102:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10102:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10102:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10102:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10102:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10102:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10102:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10102:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10102:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10102:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10102:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10102:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10102:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10102:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10102:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
10102:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
10102:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
10102:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
10102: Goal:
10102:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
10102: Order:
10102:   nrkbo
10102: Leaf order:
10102:  least_upper_bound 13 2 0 
10102:  inverse 1 1 0 
10102:  identity 9 0 0 
10102:  greatest_lower_bound 19 2 2 0,2
10102:  multiply 19 2 1 0,2,2
10102:  c 3 0 2 2,2,2
10102:  b 3 0 1 1,2,2
10102:  a 4 0 2 1,2
NO CLASH, using fixed ground order
10103: Facts:
10103:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10103:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10103:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10103:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10103:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10103:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10103:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10103:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10103:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10103:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10103:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10103:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10103:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10103:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10103:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10103:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
10103:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
10103:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
10103:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
10103: Goal:
10103:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
10103: Order:
10103:   kbo
10103: Leaf order:
10103:  least_upper_bound 13 2 0 
10103:  inverse 1 1 0 
10103:  identity 9 0 0 
10103:  greatest_lower_bound 19 2 2 0,2
10103:  multiply 19 2 1 0,2,2
10103:  c 3 0 2 2,2,2
10103:  b 3 0 1 1,2,2
10103:  a 4 0 2 1,2
NO CLASH, using fixed ground order
10104: Facts:
10104:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10104:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10104:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10104:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10104:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10104:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10104:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10104:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10104:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10104:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10104:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10104:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10104:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10104:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10104:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10104:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
10104:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
10104:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
10104:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
10104: Goal:
10104:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
10104: Order:
10104:   lpo
10104: Leaf order:
10104:  least_upper_bound 13 2 0 
10104:  inverse 1 1 0 
10104:  identity 9 0 0 
10104:  greatest_lower_bound 19 2 2 0,2
10104:  multiply 19 2 1 0,2,2
10104:  c 3 0 2 2,2,2
10104:  b 3 0 1 1,2,2
10104:  a 4 0 2 1,2
% SZS status Timeout for GRP178-2.p
CLASH, statistics insufficient
10125: Facts:
10125:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10125:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10125:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10125:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10125:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10125:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10125:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10125:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10125:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10125:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10125:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10125:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10125:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10125:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10125:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10125:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
10125:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
10125:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =<=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
10125:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =<=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
10125: Goal:
10125:  Id :   1, {_}: a =>= b [] by prove_p12x
10125: Order:
10125:   nrkbo
10125: Leaf order:
10125:  c 4 0 0 
10125:  least_upper_bound 17 2 0 
10125:  greatest_lower_bound 17 2 0 
10125:  inverse 7 1 0 
10125:  multiply 18 2 0 
10125:  identity 2 0 0 
10125:  b 3 0 1 3
10125:  a 3 0 1 2
CLASH, statistics insufficient
10126: Facts:
10126:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10126:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10126:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10126:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10126:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10126:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10126:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10126:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10126:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10126:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10126:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10126:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10126:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10126:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10126:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10126:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
10126:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
10126:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =<=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
10126:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =<=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
10126: Goal:
10126:  Id :   1, {_}: a =>= b [] by prove_p12x
10126: Order:
10126:   kbo
10126: Leaf order:
10126:  c 4 0 0 
10126:  least_upper_bound 17 2 0 
10126:  greatest_lower_bound 17 2 0 
10126:  inverse 7 1 0 
10126:  multiply 18 2 0 
10126:  identity 2 0 0 
10126:  b 3 0 1 3
10126:  a 3 0 1 2
CLASH, statistics insufficient
10127: Facts:
10127:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10127:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10127:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10127:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10127:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10127:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10127:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10127:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10127:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10127:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10127:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10127:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10127:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10127:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10127:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10127:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
10127:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
10127:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =>=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
10127:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =>=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
10127: Goal:
10127:  Id :   1, {_}: a =>= b [] by prove_p12x
10127: Order:
10127:   lpo
10127: Leaf order:
10127:  c 4 0 0 
10127:  least_upper_bound 17 2 0 
10127:  greatest_lower_bound 17 2 0 
10127:  inverse 7 1 0 
10127:  multiply 18 2 0 
10127:  identity 2 0 0 
10127:  b 3 0 1 3
10127:  a 3 0 1 2
% SZS status Timeout for GRP181-3.p
NO CLASH, using fixed ground order
10150: Facts:
10150:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10150:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10150:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10150:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10150:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10150:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10150:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10150:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10150:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10150:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10150:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10150:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10150:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10150:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10150:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10150:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
10150:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
10150:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
10150: Goal:
10150:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
10150: Order:
10150:   nrkbo
10150: Leaf order:
10150:  multiply 22 2 2 0,2
10150:  inverse 9 1 2 0,2,2
10150:  greatest_lower_bound 15 2 2 0,1,2,2
10150:  least_upper_bound 15 2 2 0,1,2
10150:  identity 8 0 4 2,1,2
10150:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
10151: Facts:
10151:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10151:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10151:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10151:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10151:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10151:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10151:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10151:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10151:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10151:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10151:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10151:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10151:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10151:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10151:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10151:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
10151:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
10151:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
10151: Goal:
10151:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
10151: Order:
10151:   kbo
10151: Leaf order:
10151:  multiply 22 2 2 0,2
10151:  inverse 9 1 2 0,2,2
10151:  greatest_lower_bound 15 2 2 0,1,2,2
10151:  least_upper_bound 15 2 2 0,1,2
10151:  identity 8 0 4 2,1,2
10151:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
10152: Facts:
10152:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10152:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10152:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10152:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10152:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10152:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10152:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10152:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10152:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10152:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10152:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10152:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10152:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10152:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10152:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10152:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
10152:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
10152:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =>= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
10152: Goal:
10152:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
10152: Order:
10152:   lpo
10152: Leaf order:
10152:  multiply 22 2 2 0,2
10152:  inverse 9 1 2 0,2,2
10152:  greatest_lower_bound 15 2 2 0,1,2,2
10152:  least_upper_bound 15 2 2 0,1,2
10152:  identity 8 0 4 2,1,2
10152:  a 4 0 4 1,1,2
% SZS status Timeout for GRP184-2.p
NO CLASH, using fixed ground order
10174: Facts:
10174:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10174:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10174:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10174:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10174:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10174:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10174:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10174:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10174:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10174:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10174:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10174:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10174:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10174:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10174:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10174: Goal:
10174:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10174: Order:
10174:   nrkbo
10174: Leaf order:
10174:  greatest_lower_bound 13 2 0 
10174:  inverse 1 1 0 
10174:  least_upper_bound 19 2 6 0,2
10174:  identity 7 0 5 2,1,2
10174:  multiply 21 2 3 0,1,1,2
10174:  b 3 0 3 2,1,1,2
10174:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
10175: Facts:
10175:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10175:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10175:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10175:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10175:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10175:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10175:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10175:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10175:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10175:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10175:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10175:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10175:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10175:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10175:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10175: Goal:
10175:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10175: Order:
10175:   kbo
10175: Leaf order:
10175:  greatest_lower_bound 13 2 0 
10175:  inverse 1 1 0 
10175:  least_upper_bound 19 2 6 0,2
10175:  identity 7 0 5 2,1,2
10175:  multiply 21 2 3 0,1,1,2
10175:  b 3 0 3 2,1,1,2
10175:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
10176: Facts:
10176:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10176:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10176:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10176:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10176:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10176:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10176:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10176:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10176:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10176:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10176:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10176:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10176:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10176:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10176:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10176: Goal:
10176:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10176: Order:
10176:   lpo
10176: Leaf order:
10176:  greatest_lower_bound 13 2 0 
10176:  inverse 1 1 0 
10176:  least_upper_bound 19 2 6 0,2
10176:  identity 7 0 5 2,1,2
10176:  multiply 21 2 3 0,1,1,2
10176:  b 3 0 3 2,1,1,2
10176:  a 3 0 3 1,1,1,2
Statistics :
Max weight : 21
Found proof, 4.014671s
% SZS status Unsatisfiable for GRP185-1.p
% SZS output start CNFRefutation for GRP185-1.p
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  21, {_}: multiply (multiply ?57 ?58) ?59 =>= multiply ?57 (multiply ?58 ?59) [59, 58, 57] by associativity ?57 ?58 ?59
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  67, {_}: least_upper_bound ?151 (least_upper_bound ?152 ?153) =<= least_upper_bound (least_upper_bound ?151 ?152) ?153 [153, 152, 151] by associativity_of_lub ?151 ?152 ?153
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  68, {_}: least_upper_bound ?155 (least_upper_bound ?156 ?157) =<= least_upper_bound (least_upper_bound ?156 ?155) ?157 [157, 156, 155] by Super 67 with 6 at 1,3
Id :  74, {_}: least_upper_bound ?155 (least_upper_bound ?156 ?157) =?= least_upper_bound ?156 (least_upper_bound ?155 ?157) [157, 156, 155] by Demod 68 with 8 at 3
Id :  23, {_}: multiply identity ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Super 21 with 3 at 1,2
Id : 562, {_}: ?594 =<= multiply (inverse ?595) (multiply ?595 ?594) [595, 594] by Demod 23 with 2 at 2
Id : 564, {_}: ?599 =<= multiply (inverse (inverse ?599)) identity [599] by Super 562 with 3 at 2,3
Id :  27, {_}: ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Demod 23 with 2 at 2
Id : 570, {_}: multiply ?621 ?622 =<= multiply (inverse (inverse ?621)) ?622 [622, 621] by Super 562 with 27 at 2,3
Id : 855, {_}: ?599 =<= multiply ?599 identity [599] by Demod 564 with 570 at 3
Id :  65, {_}: least_upper_bound ?143 (least_upper_bound ?144 ?145) =?= least_upper_bound ?144 (least_upper_bound ?145 ?143) [145, 144, 143] by Super 6 with 8 at 3
Id :  85, {_}: least_upper_bound ?180 (least_upper_bound ?180 ?181) =>= least_upper_bound ?180 ?181 [181, 180] by Super 8 with 9 at 1,3
Id : 5149, {_}: least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) === least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) [] by Demod 5148 with 74 at 2,2
Id : 5148, {_}: least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) =>= least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) [] by Demod 5147 with 9 at 2,2,2,2
Id : 5147, {_}: least_upper_bound identity (least_upper_bound a (least_upper_bound b (least_upper_bound (multiply a b) (multiply a b)))) =>= least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) [] by Demod 5146 with 2 at 1,2,2,2
Id : 5146, {_}: least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply identity b) (least_upper_bound (multiply a b) (multiply a b)))) =>= least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) [] by Demod 5145 with 85 at 2
Id : 5145, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply identity b) (least_upper_bound (multiply a b) (multiply a b))))) =>= least_upper_bound identity (least_upper_bound b (least_upper_bound a (multiply a b))) [] by Demod 5144 with 74 at 3
Id : 5144, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply identity b) (least_upper_bound (multiply a b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound a (multiply a b))) [] by Demod 5143 with 65 at 2,2,2,2
Id : 5143, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound a (multiply a b))) [] by Demod 5142 with 855 at 1,2,2,2
Id : 5142, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound (multiply a identity) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound a (multiply a b))) [] by Demod 5141 with 2 at 1,2,2
Id : 5141, {_}: least_upper_bound identity (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound a (multiply a b))) [] by Demod 5140 with 855 at 1,2,2,3
Id : 5140, {_}: least_upper_bound identity (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a identity) (multiply a b))) [] by Demod 5139 with 2 at 1,2,3
Id : 5139, {_}: least_upper_bound identity (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b))))) =>= least_upper_bound b (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (multiply a b))) [] by Demod 5138 with 8 at 2,2
Id : 5138, {_}: least_upper_bound identity (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound b (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (multiply a b))) [] by Demod 5137 with 8 at 2,3
Id : 5137, {_}: least_upper_bound identity (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound b (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply a b)) [] by Demod 5136 with 2 at 1,3
Id : 5136, {_}: least_upper_bound identity (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound (multiply identity b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply a b)) [] by Demod 5135 with 74 at 2,2
Id : 5135, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound (multiply identity b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply a b)) [] by Demod 5134 with 74 at 3
Id : 5134, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 5133 with 15 at 2,2,2,2
Id : 5133, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 5132 with 15 at 1,2,2,2
Id : 5132, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 5131 with 15 at 2,3
Id : 5131, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply (least_upper_bound identity a) b) [] by Demod 5130 with 15 at 1,3
Id : 5130, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 237 with 74 at 2
Id : 237, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 236 with 6 at 1,2,2,2,2
Id : 236, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound a identity) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 235 with 6 at 1,1,2,2,2
Id : 235, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 234 with 6 at 1,2,3
Id : 234, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound a identity) b) [] by Demod 233 with 6 at 1,1,3
Id : 233, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b))) =>= least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b) [] by Demod 232 with 6 at 2,2,2
Id : 232, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b) [] by Demod 231 with 6 at 3
Id : 231, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 230 with 13 at 2,2,2
Id : 230, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 229 with 13 at 3
Id : 229, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 1 with 8 at 2
Id :   1, {_}: least_upper_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by prove_p22a
% SZS output end CNFRefutation for GRP185-1.p
10176: solved GRP185-1.p in 1.916119 using lpo
10176: status Unsatisfiable for GRP185-1.p
NO CLASH, using fixed ground order
10187: Facts:
10187:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10187:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10187:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10187:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10187:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10187:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10187:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10187:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10187:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10187:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10187:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10187:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10187:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10187:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10187:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10187:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
10187:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
10187:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
10187: Goal:
10187:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10187: Order:
10187:   nrkbo
10187: Leaf order:
10187:  greatest_lower_bound 13 2 0 
10187:  inverse 7 1 0 
10187:  least_upper_bound 19 2 6 0,2
10187:  identity 9 0 5 2,1,2
10187:  multiply 23 2 3 0,1,1,2
10187:  b 3 0 3 2,1,1,2
10187:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
10188: Facts:
10188:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10188:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10188:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10188:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10188:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10188:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10188:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10188:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10188:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10188:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10188:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10188:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10188:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10188:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10188:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10188:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
10188:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
10188:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
10188: Goal:
10188:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10188: Order:
10188:   kbo
10188: Leaf order:
10188:  greatest_lower_bound 13 2 0 
10188:  inverse 7 1 0 
10188:  least_upper_bound 19 2 6 0,2
10188:  identity 9 0 5 2,1,2
10188:  multiply 23 2 3 0,1,1,2
10188:  b 3 0 3 2,1,1,2
10188:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
10189: Facts:
10189:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10189:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
10189:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
10189:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
10189:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
10189:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
10189:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
10189:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
10189:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
10189:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
10189:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
10189:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
10189:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
10189:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
10189:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
10189:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
10189:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
10189:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
10189: Goal:
10189:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
10189: Order:
10189:   lpo
10189: Leaf order:
10189:  greatest_lower_bound 13 2 0 
10189:  inverse 7 1 0 
10189:  least_upper_bound 19 2 6 0,2
10189:  identity 9 0 5 2,1,2
10189:  multiply 23 2 3 0,1,1,2
10189:  b 3 0 3 2,1,1,2
10189:  a 3 0 3 1,1,1,2
Statistics :
Max weight : 21
Found proof, 5.587205s
% SZS status Unsatisfiable for GRP185-2.p
% SZS output start CNFRefutation for GRP185-2.p
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
Id :  17, {_}: inverse identity =>= identity [] by p22a_1
Id : 506, {_}: inverse (multiply ?520 ?521) =?= multiply (inverse ?521) (inverse ?520) [521, 520] by p22a_3 ?520 ?521
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 782, {_}: least_upper_bound ?667 (least_upper_bound ?667 ?668) =>= least_upper_bound ?667 ?668 [668, 667] by Super 8 with 9 at 1,3
Id : 1203, {_}: least_upper_bound ?943 (least_upper_bound ?944 ?943) =>= least_upper_bound ?943 ?944 [944, 943] by Super 782 with 6 at 2,2
Id : 1211, {_}: least_upper_bound ?966 (least_upper_bound ?967 (least_upper_bound ?968 ?966)) =>= least_upper_bound ?966 (least_upper_bound ?967 ?968) [968, 967, 966] by Super 1203 with 8 at 2,2
Id : 507, {_}: inverse (multiply identity ?523) =<= multiply (inverse ?523) identity [523] by Super 506 with 17 at 2,3
Id : 571, {_}: inverse ?569 =<= multiply (inverse ?569) identity [569] by Demod 507 with 2 at 1,2
Id : 573, {_}: inverse (inverse ?572) =<= multiply ?572 identity [572] by Super 571 with 18 at 1,3
Id : 581, {_}: ?572 =<= multiply ?572 identity [572] by Demod 573 with 18 at 2
Id :  88, {_}: least_upper_bound ?186 (least_upper_bound ?186 ?187) =>= least_upper_bound ?186 ?187 [187, 186] by Super 8 with 9 at 1,3
Id : 3310, {_}: least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) === least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3309 with 88 at 2
Id : 3309, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b)))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3308 with 2 at 1,2,2,2,2
Id : 3308, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3307 with 581 at 1,2,2,2
Id : 3307, {_}: least_upper_bound identity (least_upper_bound identity (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3306 with 2 at 1,2,2
Id : 3306, {_}: least_upper_bound identity (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3305 with 8 at 2,2
Id : 3305, {_}: least_upper_bound identity (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3304 with 8 at 2,2
Id : 3304, {_}: least_upper_bound identity (least_upper_bound (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply identity b)) (multiply a b)) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3303 with 6 at 2,2
Id : 3303, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply identity b))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound b (multiply a b))) [] by Demod 3302 with 2 at 1,2,2,3
Id : 3302, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply identity b))) =>= least_upper_bound identity (least_upper_bound a (least_upper_bound (multiply identity b) (multiply a b))) [] by Demod 3301 with 581 at 1,2,3
Id : 3301, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply identity b))) =>= least_upper_bound identity (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity b) (multiply a b))) [] by Demod 3300 with 2 at 1,3
Id : 3300, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply identity b))) =>= least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity b) (multiply a b))) [] by Demod 3299 with 1211 at 2,2
Id : 3299, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound (multiply identity identity) (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity b) (multiply a b))) [] by Demod 3298 with 8 at 3
Id : 3298, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 3297 with 15 at 2,2,2,2
Id : 3297, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 3296 with 15 at 1,2,2,2
Id : 3296, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (least_upper_bound (multiply identity b) (multiply a b)) [] by Demod 3295 with 15 at 2,3
Id : 3295, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (least_upper_bound (multiply identity identity) (multiply a identity)) (multiply (least_upper_bound identity a) b) [] by Demod 3294 with 15 at 1,3
Id : 3294, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 3293 with 13 at 2,2,2
Id : 3293, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (multiply (least_upper_bound identity a) (least_upper_bound identity b))) =>= least_upper_bound (multiply (least_upper_bound identity a) identity) (multiply (least_upper_bound identity a) b) [] by Demod 3292 with 13 at 3
Id : 3292, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (multiply (least_upper_bound identity a) (least_upper_bound identity b))) =>= multiply (least_upper_bound identity a) (least_upper_bound identity b) [] by Demod 67 with 8 at 2
Id :  67, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound identity a) (least_upper_bound identity b)) =>= multiply (least_upper_bound identity a) (least_upper_bound identity b) [] by Demod 66 with 6 at 2,3
Id :  66, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound identity a) (least_upper_bound identity b)) =<= multiply (least_upper_bound identity a) (least_upper_bound b identity) [] by Demod 65 with 6 at 1,3
Id :  65, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound identity a) (least_upper_bound identity b)) =<= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 64 with 6 at 2,2,2
Id :  64, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound identity a) (least_upper_bound b identity)) =<= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 63 with 6 at 1,2,2
Id :  63, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 1 with 6 at 1,2
Id :   1, {_}: least_upper_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by prove_p22a
% SZS output end CNFRefutation for GRP185-2.p
10189: solved GRP185-2.p in 0.988061 using lpo
10189: status Unsatisfiable for GRP185-2.p
CLASH, statistics insufficient
10194: Facts:
10194:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10194:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10194:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10194:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10194:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10194:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10194:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10194:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10194:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =?=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
10194: Goal:
10194:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
10194: Order:
10194:   nrkbo
10194: Leaf order:
10194:  left_inverse 1 1 0 
10194:  right_inverse 1 1 0 
10194:  right_division 2 2 0 
10194:  left_division 2 2 0 
10194:  identity 4 0 0 
10194:  c 2 0 2 2,1,2
10194:  multiply 20 2 6 0,2
10194:  b 4 0 4 2,1,1,2
10194:  a 2 0 2 1,1,1,2
CLASH, statistics insufficient
10195: Facts:
10195:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10195:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10195:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10195:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10195:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10195:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10195:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10195:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10195:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =>=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
10195: Goal:
10195:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
10195: Order:
10195:   kbo
10195: Leaf order:
10195:  left_inverse 1 1 0 
10195:  right_inverse 1 1 0 
10195:  right_division 2 2 0 
10195:  left_division 2 2 0 
10195:  identity 4 0 0 
10195:  c 2 0 2 2,1,2
10195:  multiply 20 2 6 0,2
10195:  b 4 0 4 2,1,1,2
10195:  a 2 0 2 1,1,1,2
CLASH, statistics insufficient
10196: Facts:
10196:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10196:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10196:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10196:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10196:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10196:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10196:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10196:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10196:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =>=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
10196: Goal:
10196:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
10196: Order:
10196:   lpo
10196: Leaf order:
10196:  left_inverse 1 1 0 
10196:  right_inverse 1 1 0 
10196:  right_division 2 2 0 
10196:  left_division 2 2 0 
10196:  identity 4 0 0 
10196:  c 2 0 2 2,1,2
10196:  multiply 20 2 6 0,2
10196:  b 4 0 4 2,1,1,2
10196:  a 2 0 2 1,1,1,2
% SZS status Timeout for GRP200-1.p
CLASH, statistics insufficient
10959: Facts:
10959:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10959:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10959:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10959:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10959:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10959:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10959:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10959:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10959:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =?=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
10959: Goal:
10959:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
10959: Order:
10959:   nrkbo
10959: Leaf order:
10959:  left_inverse 1 1 0 
10959:  right_inverse 1 1 0 
10959:  right_division 2 2 0 
10959:  left_division 2 2 0 
10959:  identity 4 0 0 
10959:  c 2 0 2 2,2
10959:  multiply 20 2 6 0,2
10959:  b 2 0 2 2,1,1,2
10959:  a 4 0 4 1,1,1,2
CLASH, statistics insufficient
10960: Facts:
10960:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10960:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10960:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10960:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10960:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10960:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10960:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10960:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10960:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =>=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
10960: Goal:
10960:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
10960: Order:
10960:   kbo
10960: Leaf order:
10960:  left_inverse 1 1 0 
10960:  right_inverse 1 1 0 
10960:  right_division 2 2 0 
10960:  left_division 2 2 0 
10960:  identity 4 0 0 
10960:  c 2 0 2 2,2
10960:  multiply 20 2 6 0,2
10960:  b 2 0 2 2,1,1,2
10960:  a 4 0 4 1,1,1,2
CLASH, statistics insufficient
10961: Facts:
10961:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10961:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10961:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10961:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10961:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10961:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10961:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10961:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10961:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =>=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
10961: Goal:
10961:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
10961: Order:
10961:   lpo
10961: Leaf order:
10961:  left_inverse 1 1 0 
10961:  right_inverse 1 1 0 
10961:  right_division 2 2 0 
10961:  left_division 2 2 0 
10961:  identity 4 0 0 
10961:  c 2 0 2 2,2
10961:  multiply 20 2 6 0,2
10961:  b 2 0 2 2,1,1,2
10961:  a 4 0 4 1,1,1,2
Statistics :
Max weight : 15
Found proof, 24.390962s
% SZS status Unsatisfiable for GRP201-1.p
% SZS output start CNFRefutation for GRP201-1.p
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?24) ?23 =>= multiply ?22 (multiply ?23 (multiply ?24 ?23)) [24, 23, 22] by moufang2 ?22 ?23 ?24
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  54, {_}: multiply (multiply (multiply ?119 ?120) ?121) ?120 =>= multiply ?119 (multiply ?120 (multiply ?121 ?120)) [121, 120, 119] by moufang2 ?119 ?120 ?121
Id :  55, {_}: multiply (multiply ?123 ?124) ?123 =<= multiply identity (multiply ?123 (multiply ?124 ?123)) [124, 123] by Super 54 with 2 at 1,1,2
Id :  71, {_}: multiply (multiply ?123 ?124) ?123 =>= multiply ?123 (multiply ?124 ?123) [124, 123] by Demod 55 with 2 at 3
Id : 897, {_}: right_division (multiply ?1221 (multiply ?1222 (multiply ?1223 ?1222))) ?1222 =>= multiply (multiply ?1221 ?1222) ?1223 [1223, 1222, 1221] by Super 7 with 10 at 1,2
Id : 904, {_}: right_division (multiply ?1247 (multiply ?1248 identity)) ?1248 =>= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Super 897 with 9 at 2,2,1,2
Id : 944, {_}: right_division (multiply ?1247 ?1248) ?1248 =<= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Demod 904 with 3 at 2,1,2
Id : 945, {_}: ?1247 =<= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Demod 944 with 7 at 2
Id : 1320, {_}: left_division (multiply ?1774 ?1775) ?1774 =>= left_inverse ?1775 [1775, 1774] by Super 5 with 945 at 2,2
Id : 1325, {_}: left_division ?1787 ?1788 =<= left_inverse (left_division ?1788 ?1787) [1788, 1787] by Super 1320 with 4 at 1,2
Id : 1124, {_}: ?1512 =<= multiply (multiply ?1512 ?1513) (left_inverse ?1513) [1513, 1512] by Demod 944 with 7 at 2
Id : 1136, {_}: right_division ?1545 ?1546 =<= multiply ?1545 (left_inverse ?1546) [1546, 1545] by Super 1124 with 6 at 1,3
Id : 1239, {_}: right_division (multiply (left_inverse ?1664) ?1665) ?1664 =<= multiply (left_inverse ?1664) (multiply ?1665 (left_inverse ?1664)) [1665, 1664] by Super 71 with 1136 at 2
Id : 1291, {_}: right_division (multiply (left_inverse ?1664) ?1665) ?1664 =<= multiply (left_inverse ?1664) (right_division ?1665 ?1664) [1665, 1664] by Demod 1239 with 1136 at 2,3
Id : 621, {_}: right_division (multiply ?874 (multiply ?875 ?874)) ?874 =>= multiply ?874 ?875 [875, 874] by Super 7 with 71 at 1,2
Id : 2721, {_}: right_division (multiply (left_inverse ?3427) (multiply ?3427 (multiply ?3428 ?3427))) ?3427 =>= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3428, 3427] by Super 1291 with 621 at 2,3
Id :  53, {_}: right_division (multiply ?115 (multiply ?116 (multiply ?117 ?116))) ?116 =>= multiply (multiply ?115 ?116) ?117 [117, 116, 115] by Super 7 with 10 at 1,2
Id : 2757, {_}: multiply (multiply (left_inverse ?3427) ?3427) ?3428 =>= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3428, 3427] by Demod 2721 with 53 at 2
Id : 2758, {_}: multiply identity ?3428 =<= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3427, 3428] by Demod 2757 with 9 at 1,2
Id : 2759, {_}: ?3428 =<= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3427, 3428] by Demod 2758 with 2 at 2
Id : 3344, {_}: left_division (left_inverse ?4254) ?4255 =>= multiply ?4254 ?4255 [4255, 4254] by Super 5 with 2759 at 2,2
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 425, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 626, {_}: multiply (multiply ?892 ?893) ?892 =>= multiply ?892 (multiply ?893 ?892) [893, 892] by Demod 55 with 2 at 3
Id : 633, {_}: multiply identity ?911 =<= multiply ?911 (multiply (right_inverse ?911) ?911) [911] by Super 626 with 8 at 1,2
Id : 654, {_}: ?911 =<= multiply ?911 (multiply (right_inverse ?911) ?911) [911] by Demod 633 with 2 at 2
Id : 727, {_}: left_division ?1053 ?1053 =<= multiply (right_inverse ?1053) ?1053 [1053] by Super 5 with 654 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 754, {_}: identity =<= multiply (right_inverse ?1053) ?1053 [1053] by Demod 727 with 24 at 2
Id : 784, {_}: right_division identity ?1115 =>= right_inverse ?1115 [1115] by Super 7 with 754 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 808, {_}: left_inverse ?1115 =<= right_inverse ?1115 [1115] by Demod 784 with 45 at 2
Id : 829, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 425 with 808 at 2
Id : 3348, {_}: left_division ?4266 ?4267 =<= multiply (left_inverse ?4266) ?4267 [4267, 4266] by Super 3344 with 829 at 1,2
Id : 3417, {_}: multiply (multiply (left_division ?4342 ?4343) ?4344) ?4343 =<= multiply (left_inverse ?4342) (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4343, 4342] by Super 10 with 3348 at 1,1,2
Id : 3495, {_}: multiply (multiply (left_division ?4342 ?4343) ?4344) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4343, 4342] by Demod 3417 with 3348 at 3
Id : 3351, {_}: left_division (left_division ?4274 ?4275) ?4276 =<= multiply (left_division ?4275 ?4274) ?4276 [4276, 4275, 4274] by Super 3344 with 1325 at 1,2
Id : 9541, {_}: multiply (left_division (left_division ?4343 ?4342) ?4344) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4342, 4343] by Demod 3495 with 3351 at 1,2
Id : 9542, {_}: left_division (left_division ?4344 (left_division ?4343 ?4342)) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4342, 4343, 4344] by Demod 9541 with 3351 at 2
Id : 9554, {_}: left_division ?10951 (left_division ?10952 (left_division ?10951 ?10953)) =<= left_inverse (left_division ?10953 (multiply ?10951 (multiply ?10952 ?10951))) [10953, 10952, 10951] by Super 1325 with 9542 at 1,3
Id : 27037, {_}: left_division ?28025 (left_division ?28026 (left_division ?28025 ?28027)) =<= left_division (multiply ?28025 (multiply ?28026 ?28025)) ?28027 [28027, 28026, 28025] by Demod 9554 with 1325 at 3
Id : 27055, {_}: left_division (left_inverse ?28099) (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (multiply (left_inverse ?28099) (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Super 27037 with 1136 at 2,1,3
Id : 3143, {_}: left_division (left_inverse ?4011) ?4012 =>= multiply ?4011 ?4012 [4012, 4011] by Super 5 with 2759 at 2,2
Id : 27191, {_}: multiply ?28099 (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (multiply (left_inverse ?28099) (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Demod 27055 with 3143 at 2
Id : 27192, {_}: multiply ?28099 (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (left_division ?28099 (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Demod 27191 with 3348 at 1,3
Id : 1117, {_}: right_division ?1491 (left_inverse ?1492) =>= multiply ?1491 ?1492 [1492, 1491] by Super 7 with 945 at 1,2
Id : 1524, {_}: right_division ?2086 (left_division ?2087 ?2088) =<= multiply ?2086 (left_division ?2088 ?2087) [2088, 2087, 2086] by Super 1117 with 1325 at 2,2
Id : 27193, {_}: right_division ?28099 (left_division (left_division (left_inverse ?28099) ?28101) ?28100) =>= left_division (left_division ?28099 (right_division ?28100 ?28099)) ?28101 [28100, 28101, 28099] by Demod 27192 with 1524 at 2
Id : 3400, {_}: right_division (left_division ?1664 ?1665) ?1664 =<= multiply (left_inverse ?1664) (right_division ?1665 ?1664) [1665, 1664] by Demod 1291 with 3348 at 1,2
Id : 3401, {_}: right_division (left_division ?1664 ?1665) ?1664 =<= left_division ?1664 (right_division ?1665 ?1664) [1665, 1664] by Demod 3400 with 3348 at 3
Id : 27194, {_}: right_division ?28099 (left_division (left_division (left_inverse ?28099) ?28101) ?28100) =>= left_division (right_division (left_division ?28099 ?28100) ?28099) ?28101 [28100, 28101, 28099] by Demod 27193 with 3401 at 1,3
Id : 40132, {_}: right_division ?42719 (left_division (multiply ?42719 ?42720) ?42721) =<= left_division (right_division (left_division ?42719 ?42721) ?42719) ?42720 [42721, 42720, 42719] by Demod 27194 with 3143 at 1,2,2
Id : 1118, {_}: left_division (multiply ?1494 ?1495) ?1494 =>= left_inverse ?1495 [1495, 1494] by Super 5 with 945 at 2,2
Id : 3133, {_}: left_division ?3978 (left_inverse ?3979) =>= left_inverse (multiply ?3979 ?3978) [3979, 3978] by Super 1118 with 2759 at 1,2
Id : 40144, {_}: right_division ?42768 (left_division (multiply ?42768 ?42769) (left_inverse ?42770)) =<= left_division (right_division (left_inverse (multiply ?42770 ?42768)) ?42768) ?42769 [42770, 42769, 42768] by Super 40132 with 3133 at 1,1,3
Id : 40468, {_}: right_division ?42768 (left_inverse (multiply ?42770 (multiply ?42768 ?42769))) =<= left_division (right_division (left_inverse (multiply ?42770 ?42768)) ?42768) ?42769 [42769, 42770, 42768] by Demod 40144 with 3133 at 2,2
Id : 3414, {_}: right_division (left_inverse ?4334) ?4335 =<= left_division ?4334 (left_inverse ?4335) [4335, 4334] by Super 1136 with 3348 at 3
Id : 3502, {_}: right_division (left_inverse ?4334) ?4335 =>= left_inverse (multiply ?4335 ?4334) [4335, 4334] by Demod 3414 with 3133 at 3
Id : 40469, {_}: right_division ?42768 (left_inverse (multiply ?42770 (multiply ?42768 ?42769))) =<= left_division (left_inverse (multiply ?42768 (multiply ?42770 ?42768))) ?42769 [42769, 42770, 42768] by Demod 40468 with 3502 at 1,3
Id : 40470, {_}: multiply ?42768 (multiply ?42770 (multiply ?42768 ?42769)) =<= left_division (left_inverse (multiply ?42768 (multiply ?42770 ?42768))) ?42769 [42769, 42770, 42768] by Demod 40469 with 1117 at 2
Id : 40471, {_}: multiply ?42768 (multiply ?42770 (multiply ?42768 ?42769)) =<= multiply (multiply ?42768 (multiply ?42770 ?42768)) ?42769 [42769, 42770, 42768] by Demod 40470 with 3143 at 3
Id : 50862, {_}: multiply a (multiply b (multiply a c)) =?= multiply a (multiply b (multiply a c)) [] by Demod 50861 with 40471 at 2
Id : 50861, {_}: multiply (multiply a (multiply b a)) c =>= multiply a (multiply b (multiply a c)) [] by Demod 1 with 71 at 1,2
Id :   1, {_}: multiply (multiply (multiply a b) a) c =>= multiply a (multiply b (multiply a c)) [] by prove_moufang3
% SZS output end CNFRefutation for GRP201-1.p
10960: solved GRP201-1.p in 12.208762 using kbo
10960: status Unsatisfiable for GRP201-1.p
CLASH, statistics insufficient
10977: Facts:
10977:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10977:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10977:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10977:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10977:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10977:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10977:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10977:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10977:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =?=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
10977: Goal:
10977:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
10977: Order:
10977:   nrkbo
10977: Leaf order:
10977:  left_inverse 1 1 0 
10977:  right_inverse 1 1 0 
10977:  right_division 2 2 0 
10977:  left_division 2 2 0 
10977:  identity 4 0 0 
10977:  multiply 20 2 6 0,2
10977:  c 2 0 2 2,2,1,2
10977:  b 2 0 2 1,2,1,2
10977:  a 4 0 4 1,1,2
CLASH, statistics insufficient
10978: Facts:
10978:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10978:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10978:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10978:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10978:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10978:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10978:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10978:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10978:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
10978: Goal:
10978:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
10978: Order:
10978:   kbo
10978: Leaf order:
10978:  left_inverse 1 1 0 
10978:  right_inverse 1 1 0 
10978:  right_division 2 2 0 
10978:  left_division 2 2 0 
10978:  identity 4 0 0 
10978:  multiply 20 2 6 0,2
10978:  c 2 0 2 2,2,1,2
10978:  b 2 0 2 1,2,1,2
10978:  a 4 0 4 1,1,2
CLASH, statistics insufficient
10979: Facts:
10979:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
10979:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
10979:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
10979:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
10979:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
10979:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
10979:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
10979:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
10979:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
10979: Goal:
10979:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
10979: Order:
10979:   lpo
10979: Leaf order:
10979:  left_inverse 1 1 0 
10979:  right_inverse 1 1 0 
10979:  right_division 2 2 0 
10979:  left_division 2 2 0 
10979:  identity 4 0 0 
10979:  multiply 20 2 6 0,2
10979:  c 2 0 2 2,2,1,2
10979:  b 2 0 2 1,2,1,2
10979:  a 4 0 4 1,1,2
Statistics :
Max weight : 20
Found proof, 29.848585s
% SZS status Unsatisfiable for GRP202-1.p
% SZS output start CNFRefutation for GRP202-1.p
Id :  56, {_}: multiply (multiply (multiply ?126 ?127) ?126) ?128 =>= multiply ?126 (multiply ?127 (multiply ?126 ?128)) [128, 127, 126] by moufang3 ?126 ?127 ?128
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?22) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by moufang3 ?22 ?23 ?24
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :  53, {_}: multiply ?115 (multiply ?116 (multiply ?115 identity)) =>= multiply (multiply ?115 ?116) ?115 [116, 115] by Super 3 with 10 at 2
Id :  70, {_}: multiply ?115 (multiply ?116 ?115) =<= multiply (multiply ?115 ?116) ?115 [116, 115] by Demod 53 with 3 at 2,2,2
Id : 894, {_}: right_division (multiply ?1099 (multiply ?1100 ?1099)) ?1099 =>= multiply ?1099 ?1100 [1100, 1099] by Super 7 with 70 at 1,2
Id : 900, {_}: right_division (multiply ?1115 ?1116) ?1115 =<= multiply ?1115 (right_division ?1116 ?1115) [1116, 1115] by Super 894 with 6 at 2,1,2
Id :  55, {_}: right_division (multiply ?122 (multiply ?123 (multiply ?122 ?124))) ?124 =>= multiply (multiply ?122 ?123) ?122 [124, 123, 122] by Super 7 with 10 at 1,2
Id : 2577, {_}: right_division (multiply ?3478 (multiply ?3479 (multiply ?3478 ?3480))) ?3480 =>= multiply ?3478 (multiply ?3479 ?3478) [3480, 3479, 3478] by Demod 55 with 70 at 3
Id : 647, {_}: multiply ?831 (multiply ?832 ?831) =<= multiply (multiply ?831 ?832) ?831 [832, 831] by Demod 53 with 3 at 2,2,2
Id : 654, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= multiply identity ?850 [850] by Super 647 with 8 at 1,3
Id : 677, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= ?850 [850] by Demod 654 with 2 at 3
Id : 765, {_}: left_division ?991 ?991 =<= multiply (right_inverse ?991) ?991 [991] by Super 5 with 677 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 791, {_}: identity =<= multiply (right_inverse ?991) ?991 [991] by Demod 765 with 24 at 2
Id : 819, {_}: right_division identity ?1047 =>= right_inverse ?1047 [1047] by Super 7 with 791 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 846, {_}: left_inverse ?1047 =<= right_inverse ?1047 [1047] by Demod 819 with 45 at 2
Id : 861, {_}: multiply ?18 (left_inverse ?18) =>= identity [18] by Demod 8 with 846 at 2,2
Id : 2586, {_}: right_division (multiply ?3513 (multiply ?3514 identity)) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Super 2577 with 861 at 2,2,1,2
Id : 2645, {_}: right_division (multiply ?3513 ?3514) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Demod 2586 with 3 at 2,1,2
Id : 2833, {_}: right_division (multiply (left_inverse ?3781) (multiply ?3781 ?3782)) (left_inverse ?3781) =>= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Super 900 with 2645 at 2,3
Id :  52, {_}: multiply ?111 (multiply ?112 (multiply ?111 (left_division (multiply (multiply ?111 ?112) ?111) ?113))) =>= ?113 [113, 112, 111] by Super 4 with 10 at 2
Id : 969, {_}: multiply ?1216 (multiply ?1217 (multiply ?1216 (left_division (multiply ?1216 (multiply ?1217 ?1216)) ?1218))) =>= ?1218 [1218, 1217, 1216] by Demod 52 with 70 at 1,2,2,2,2
Id : 976, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division (multiply ?1242 identity) ?1243))) =>= ?1243 [1243, 1242] by Super 969 with 9 at 2,1,2,2,2,2
Id : 1036, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division ?1242 ?1243))) =>= ?1243 [1243, 1242] by Demod 976 with 3 at 1,2,2,2,2
Id : 1037, {_}: multiply ?1242 (multiply (left_inverse ?1242) ?1243) =>= ?1243 [1243, 1242] by Demod 1036 with 4 at 2,2,2
Id : 1172, {_}: left_division ?1548 ?1549 =<= multiply (left_inverse ?1548) ?1549 [1549, 1548] by Super 5 with 1037 at 2,2
Id : 2879, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =<= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2833 with 1172 at 1,2
Id : 2880, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =>= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2879 with 1172 at 3
Id : 2881, {_}: right_division ?3782 (left_inverse ?3781) =<= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3781, 3782] by Demod 2880 with 5 at 1,2
Id : 2882, {_}: right_division ?3782 (left_inverse ?3781) =>= multiply ?3782 ?3781 [3781, 3782] by Demod 2881 with 5 at 3
Id : 1389, {_}: right_division (left_division ?1827 ?1828) ?1828 =>= left_inverse ?1827 [1828, 1827] by Super 7 with 1172 at 1,2
Id :  28, {_}: left_division (right_division ?62 ?63) ?62 =>= ?63 [63, 62] by Super 5 with 6 at 2,2
Id : 1395, {_}: right_division ?1844 ?1845 =<= left_inverse (right_division ?1845 ?1844) [1845, 1844] by Super 1389 with 28 at 1,2
Id : 3679, {_}: multiply (multiply ?4879 ?4880) ?4881 =<= multiply ?4880 (multiply (left_division ?4880 ?4879) (multiply ?4880 ?4881)) [4881, 4880, 4879] by Super 56 with 4 at 1,1,2
Id : 3684, {_}: multiply (multiply ?4897 ?4898) (left_division ?4898 ?4899) =>= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Super 3679 with 4 at 2,2,3
Id : 2950, {_}: right_division (left_inverse ?3910) ?3911 =>= left_inverse (multiply ?3911 ?3910) [3911, 3910] by Super 1395 with 2882 at 1,3
Id : 3037, {_}: left_inverse (multiply (left_inverse ?4021) ?4022) =>= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Super 2882 with 2950 at 2
Id : 3056, {_}: left_inverse (left_division ?4021 ?4022) =<= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Demod 3037 with 1172 at 1,2
Id : 3057, {_}: left_inverse (left_division ?4021 ?4022) =>= left_division ?4022 ?4021 [4022, 4021] by Demod 3056 with 1172 at 3
Id : 3222, {_}: right_division ?4224 (left_division ?4225 ?4226) =<= multiply ?4224 (left_division ?4226 ?4225) [4226, 4225, 4224] by Super 2882 with 3057 at 2,2
Id : 8079, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Demod 3684 with 3222 at 2
Id : 3218, {_}: left_division (left_division ?4210 ?4211) ?4212 =<= multiply (left_division ?4211 ?4210) ?4212 [4212, 4211, 4210] by Super 1172 with 3057 at 1,3
Id : 8080, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (left_division (left_division ?4897 ?4898) ?4899) [4899, 4898, 4897] by Demod 8079 with 3218 at 2,3
Id : 8081, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =>= right_division ?4898 (left_division ?4899 (left_division ?4897 ?4898)) [4899, 4898, 4897] by Demod 8080 with 3222 at 3
Id : 8094, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= left_inverse (right_division ?9767 (left_division ?9766 (left_division ?9768 ?9767))) [9768, 9767, 9766] by Super 1395 with 8081 at 1,3
Id : 8159, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= right_division (left_division ?9766 (left_division ?9768 ?9767)) ?9767 [9768, 9767, 9766] by Demod 8094 with 1395 at 3
Id : 23778, {_}: right_division (left_division ?25246 (left_inverse ?25247)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25247, 25246] by Super 2882 with 8159 at 2
Id : 2960, {_}: right_division ?3937 (left_inverse ?3938) =>= multiply ?3937 ?3938 [3938, 3937] by Demod 2881 with 5 at 3
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 426, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 864, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 426 with 846 at 2
Id : 2964, {_}: right_division ?3949 ?3950 =<= multiply ?3949 (left_inverse ?3950) [3950, 3949] by Super 2960 with 864 at 2,2
Id : 3107, {_}: left_division ?4125 (left_inverse ?4126) =>= right_division (left_inverse ?4125) ?4126 [4126, 4125] by Super 1172 with 2964 at 3
Id : 3145, {_}: left_division ?4125 (left_inverse ?4126) =>= left_inverse (multiply ?4126 ?4125) [4126, 4125] by Demod 3107 with 2950 at 3
Id : 23925, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23778 with 3145 at 1,2
Id : 23926, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23925 with 2964 at 2,2
Id : 23927, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25248, 25246, 25247] by Demod 23926 with 3218 at 3
Id : 23928, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23927 with 2950 at 2
Id : 23929, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23928 with 3145 at 1,1,3
Id : 1175, {_}: multiply ?1556 (multiply (left_inverse ?1556) ?1557) =>= ?1557 [1557, 1556] by Demod 1036 with 4 at 2,2,2
Id : 1185, {_}: multiply ?1584 ?1585 =<= left_division (left_inverse ?1584) ?1585 [1585, 1584] by Super 1175 with 4 at 2,2
Id : 1426, {_}: multiply (right_division ?1873 ?1874) ?1875 =>= left_division (right_division ?1874 ?1873) ?1875 [1875, 1874, 1873] by Super 1185 with 1395 at 1,3
Id : 23930, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25248, 25247] by Demod 23929 with 1426 at 1,2
Id : 23931, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =>= left_division (multiply (multiply ?25247 ?25248) ?25246) ?25247 [25246, 25248, 25247] by Demod 23930 with 1185 at 1,3
Id : 37380, {_}: left_division (multiply ?37773 ?37774) (right_division ?37773 ?37775) =<= left_division (multiply (multiply ?37773 ?37775) ?37774) ?37773 [37775, 37774, 37773] by Demod 23931 with 3057 at 2
Id : 37397, {_}: left_division (multiply ?37844 ?37845) (right_division ?37844 (left_inverse ?37846)) =>= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Super 37380 with 2964 at 1,1,3
Id : 37604, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Demod 37397 with 2882 at 2,2
Id : 37605, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (left_division (right_division ?37846 ?37844) ?37845) ?37844 [37846, 37845, 37844] by Demod 37604 with 1426 at 1,3
Id : 8101, {_}: right_division (multiply ?9794 ?9795) (left_division ?9796 ?9795) =>= right_division ?9795 (left_division ?9796 (left_division ?9794 ?9795)) [9796, 9795, 9794] by Demod 8080 with 3222 at 3
Id : 8114, {_}: right_division (multiply ?9845 (left_inverse ?9846)) (left_inverse (multiply ?9846 ?9847)) =>= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Super 8101 with 3145 at 2,2
Id : 8186, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Demod 8114 with 2882 at 2
Id : 8187, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8186 with 2950 at 3
Id : 8188, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8187 with 2964 at 1,2
Id : 8189, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9846, 9845] by Demod 8188 with 3218 at 1,3
Id : 8190, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9845, 9846] by Demod 8189 with 1426 at 2
Id : 8191, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) [9847, 9845, 9846] by Demod 8190 with 3057 at 3
Id : 8192, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_inverse (multiply ?9846 ?9845)) ?9847) [9847, 9845, 9846] by Demod 8191 with 3145 at 1,2,3
Id : 24138, {_}: left_division (right_division ?25824 ?25825) (multiply ?25824 ?25826) =>= left_division ?25824 (multiply (multiply ?25824 ?25825) ?25826) [25826, 25825, 25824] by Demod 8192 with 1185 at 2,3
Id : 24175, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =<= left_division ?25977 (multiply (multiply ?25977 (left_inverse ?25978)) ?25979) [25979, 25978, 25977] by Super 24138 with 2882 at 1,2
Id : 24394, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (multiply (right_division ?25977 ?25978) ?25979) [25979, 25978, 25977] by Demod 24175 with 2964 at 1,2,3
Id : 24395, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (left_division (right_division ?25978 ?25977) ?25979) [25979, 25978, 25977] by Demod 24394 with 1426 at 2,3
Id : 47972, {_}: left_division ?49234 (left_division (right_division ?49235 ?49234) ?49236) =<= left_division (left_division (right_division ?49236 ?49234) ?49235) ?49234 [49236, 49235, 49234] by Demod 37605 with 24395 at 2
Id : 1255, {_}: multiply (left_inverse ?1641) (multiply ?1642 (left_inverse ?1641)) =>= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Super 70 with 1172 at 1,3
Id : 1319, {_}: left_division ?1641 (multiply ?1642 (left_inverse ?1641)) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1255 with 1172 at 2
Id : 3086, {_}: left_division ?1641 (right_division ?1642 ?1641) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1319 with 2964 at 2,2
Id : 3087, {_}: left_division ?1641 (right_division ?1642 ?1641) =>= right_division (left_division ?1641 ?1642) ?1641 [1642, 1641] by Demod 3086 with 2964 at 3
Id : 48040, {_}: left_division ?49524 (left_division (right_division (right_division ?49525 (right_division ?49526 ?49524)) ?49524) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Super 47972 with 3087 at 1,3
Id :  59, {_}: multiply (multiply ?136 ?137) ?138 =<= multiply ?137 (multiply (left_division ?137 ?136) (multiply ?137 ?138)) [138, 137, 136] by Super 56 with 4 at 1,1,2
Id : 3668, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= multiply (left_division ?4830 ?4831) (multiply ?4830 ?4832) [4832, 4831, 4830] by Super 5 with 59 at 2,2
Id : 7892, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= left_division (left_division ?4831 ?4830) (multiply ?4830 ?4832) [4832, 4831, 4830] by Demod 3668 with 3218 at 3
Id : 7900, {_}: left_inverse (left_division ?9488 (multiply (multiply ?9489 ?9488) ?9490)) =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9489, 9488] by Super 3057 with 7892 at 1,2
Id : 7969, {_}: left_division (multiply (multiply ?9489 ?9488) ?9490) ?9488 =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9488, 9489] by Demod 7900 with 3057 at 2
Id : 22647, {_}: left_division (multiply (left_inverse ?23598) ?23599) (left_division ?23600 (left_inverse ?23598)) =>= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Super 3145 with 7969 at 2
Id : 22730, {_}: left_division (left_division ?23598 ?23599) (left_division ?23600 (left_inverse ?23598)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22647 with 1172 at 1,2
Id : 22731, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22730 with 3145 at 2,2
Id : 22732, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23600, 23599, 23598] by Demod 22731 with 2964 at 1,2,1,3
Id : 22733, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23599, 23600, 23598] by Demod 22732 with 3145 at 2
Id : 22734, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22733 with 1426 at 2,1,3
Id : 22735, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =<= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22734 with 3222 at 1,2
Id : 22736, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =>= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23599, 23600, 23598] by Demod 22735 with 3222 at 1,3
Id : 22737, {_}: right_division (left_division ?23599 ?23598) (multiply ?23598 ?23600) =<= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23600, 23598, 23599] by Demod 22736 with 1395 at 2
Id : 33406, {_}: right_division (left_division ?33402 ?33403) (multiply ?33403 ?33404) =<= right_division (left_division ?33402 (right_division ?33403 ?33404)) ?33403 [33404, 33403, 33402] by Demod 22737 with 1395 at 3
Id : 33487, {_}: right_division (left_division (left_inverse ?33737) ?33738) (multiply ?33738 ?33739) =>= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Super 33406 with 1185 at 1,3
Id : 33773, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Demod 33487 with 1185 at 1,2
Id : 2967, {_}: right_division ?3957 (right_division ?3958 ?3959) =<= multiply ?3957 (right_division ?3959 ?3958) [3959, 3958, 3957] by Super 2960 with 1395 at 2,2
Id : 33774, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (right_division ?33737 (right_division ?33739 ?33738)) ?33738 [33739, 33738, 33737] by Demod 33773 with 2967 at 1,3
Id : 48410, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Demod 48040 with 33774 at 1,2,2
Id : 640, {_}: multiply (multiply ?22 (multiply ?23 ?22)) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by Demod 10 with 70 at 1,2
Id : 1260, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =<= multiply ?1655 (multiply (left_inverse ?1656) (multiply ?1655 ?1657)) [1657, 1656, 1655] by Super 640 with 1172 at 2,1,2
Id : 1315, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1260 with 1172 at 2,3
Id : 5054, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1315 with 3222 at 1,2
Id : 5055, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5054 with 3222 at 3
Id : 5056, {_}: left_division (right_division (left_division ?1655 ?1656) ?1655) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5055 with 1426 at 2
Id : 48411, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49526, 49525, 49524] by Demod 48410 with 5056 at 3
Id : 3100, {_}: multiply (multiply (left_inverse ?4103) (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Super 640 with 2964 at 2,1,2
Id : 3156, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3100 with 1172 at 1,2
Id : 3157, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3156 with 1172 at 3
Id : 3158, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3157 with 3087 at 1,2
Id : 3159, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3158 with 1172 at 2,2,3
Id : 3160, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3159 with 1426 at 2
Id : 7103, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (right_division ?4104 (left_division ?4105 ?4103)) [4105, 4104, 4103] by Demod 3160 with 3222 at 2,3
Id : 7119, {_}: left_division ?8435 (right_division ?8436 (left_division (left_inverse ?8437) ?8435)) =>= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Super 3145 with 7103 at 2
Id : 7221, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Demod 7119 with 1185 at 2,2,2
Id : 7222, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (right_division ?8437 (right_division (left_division ?8435 ?8436) ?8435)) [8437, 8436, 8435] by Demod 7221 with 2967 at 1,3
Id : 7223, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =>= right_division (right_division (left_division ?8435 ?8436) ?8435) ?8437 [8437, 8436, 8435] by Demod 7222 with 1395 at 3
Id : 21525, {_}: left_inverse (right_division (right_division (left_division ?22100 ?22101) ?22100) ?22102) =>= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22102, 22101, 22100] by Super 3057 with 7223 at 1,2
Id : 21646, {_}: right_division ?22102 (right_division (left_division ?22100 ?22101) ?22100) =<= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22101, 22100, 22102] by Demod 21525 with 1395 at 2
Id : 48412, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49525, 49526, 49524] by Demod 48411 with 21646 at 2,2
Id : 48413, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49525, 49526, 49524] by Demod 48412 with 1426 at 1,2,3
Id : 3103, {_}: left_division ?4114 (right_division ?4114 ?4115) =>= left_inverse ?4115 [4115, 4114] by Super 5 with 2964 at 2,2
Id : 48414, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =<= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49524, 49525, 49526] by Demod 48413 with 3103 at 2
Id : 48415, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48414 with 28 at 1,2,3
Id : 48416, {_}: right_division ?49526 (left_division ?49526 (multiply ?49525 ?49524)) =<= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48415 with 1395 at 2
Id : 52586, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= left_inverse (right_division ?54688 (left_division ?54688 (multiply ?54689 ?54690))) [54690, 54689, 54688] by Super 1395 with 48416 at 1,3
Id : 52816, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= right_division (left_division ?54688 (multiply ?54689 ?54690)) ?54688 [54690, 54689, 54688] by Demod 52586 with 1395 at 3
Id : 55129, {_}: right_division (left_division (left_inverse ?57654) ?57655) (right_division (left_inverse ?57654) ?57656) =>= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Super 2882 with 52816 at 2
Id : 55322, {_}: right_division (multiply ?57654 ?57655) (right_division (left_inverse ?57654) ?57656) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55129 with 1185 at 1,2
Id : 55323, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55322 with 2950 at 2,2
Id : 55324, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55323 with 3218 at 3
Id : 55325, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55324 with 2882 at 2
Id : 55326, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_inverse (multiply ?57654 (multiply ?57655 ?57656))) ?57654 [57656, 57655, 57654] by Demod 55325 with 3145 at 1,3
Id : 55327, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= multiply (multiply ?57654 (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55326 with 1185 at 3
Id : 55328, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =>= multiply ?57654 (multiply (multiply ?57655 ?57656) ?57654) [57656, 57655, 57654] by Demod 55327 with 70 at 3
Id : 57081, {_}: multiply a (multiply (multiply b c) a) =?= multiply a (multiply (multiply b c) a) [] by Demod 57080 with 55328 at 3
Id : 57080, {_}: multiply a (multiply (multiply b c) a) =<= multiply (multiply a b) (multiply c a) [] by Demod 1 with 70 at 2
Id :   1, {_}: multiply (multiply a (multiply b c)) a =>= multiply (multiply a b) (multiply c a) [] by prove_moufang1
% SZS output end CNFRefutation for GRP202-1.p
10978: solved GRP202-1.p in 14.864928 using kbo
10978: status Unsatisfiable for GRP202-1.p
NO CLASH, using fixed ground order
10984: Facts:
10984:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
10984: Goal:
10984:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
10984: Order:
10984:   nrkbo
10984: Leaf order:
10984:  a2 2 0 2 2,2
10984:  multiply 8 2 2 0,2
10984:  inverse 6 1 1 0,1,1,2
10984:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
10985: Facts:
10985:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
10985: Goal:
10985:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
10985: Order:
10985:   kbo
10985: Leaf order:
10985:  a2 2 0 2 2,2
10985:  multiply 8 2 2 0,2
10985:  inverse 6 1 1 0,1,1,2
10985:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
10986: Facts:
10986:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
10986: Goal:
10986:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
10986: Order:
10986:   lpo
10986: Leaf order:
10986:  a2 2 0 2 2,2
10986:  multiply 8 2 2 0,2
10986:  inverse 6 1 1 0,1,1,2
10986:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP404-1.p
NO CLASH, using fixed ground order
11033: Facts:
11033:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11033: Goal:
11033:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11033: Order:
11033:   nrkbo
11033: Leaf order:
11033:  inverse 5 1 0 
11033:  c3 2 0 2 2,2
11033:  multiply 10 2 4 0,2
11033:  b3 2 0 2 2,1,2
11033:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11034: Facts:
11034:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11034: Goal:
11034:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11034: Order:
11034:   kbo
11034: Leaf order:
11034:  inverse 5 1 0 
11034:  c3 2 0 2 2,2
11034:  multiply 10 2 4 0,2
11034:  b3 2 0 2 2,1,2
11034:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11035: Facts:
11035:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11035: Goal:
11035:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11035: Order:
11035:   lpo
11035: Leaf order:
11035:  inverse 5 1 0 
11035:  c3 2 0 2 2,2
11035:  multiply 10 2 4 0,2
11035:  b3 2 0 2 2,1,2
11035:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP405-1.p
NO CLASH, using fixed ground order
11052: Facts:
11052:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11052: Goal:
11052:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11052: Order:
11052:   nrkbo
11052: Leaf order:
11052:  a2 2 0 2 2,2
11052:  multiply 8 2 2 0,2
11052:  inverse 6 1 1 0,1,1,2
11052:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11053: Facts:
11053:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11053: Goal:
11053:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11053: Order:
11053:   kbo
11053: Leaf order:
11053:  a2 2 0 2 2,2
11053:  multiply 8 2 2 0,2
11053:  inverse 6 1 1 0,1,1,2
11053:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11054: Facts:
11054:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11054: Goal:
11054:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11054: Order:
11054:   lpo
11054: Leaf order:
11054:  a2 2 0 2 2,2
11054:  multiply 8 2 2 0,2
11054:  inverse 6 1 1 0,1,1,2
11054:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP410-1.p
NO CLASH, using fixed ground order
11087: Facts:
11087:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11087: Goal:
11087:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11087: Order:
11087:   nrkbo
11087: Leaf order:
11087:  inverse 5 1 0 
11087:  c3 2 0 2 2,2
11087:  multiply 10 2 4 0,2
11087:  b3 2 0 2 2,1,2
11087:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11088: Facts:
11088:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11088: Goal:
11088:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11088: Order:
11088:   kbo
11088: Leaf order:
11088:  inverse 5 1 0 
11088:  c3 2 0 2 2,2
11088:  multiply 10 2 4 0,2
11088:  b3 2 0 2 2,1,2
11088:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11089: Facts:
11089:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11089: Goal:
11089:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11089: Order:
11089:   lpo
11089: Leaf order:
11089:  inverse 5 1 0 
11089:  c3 2 0 2 2,2
11089:  multiply 10 2 4 0,2
11089:  b3 2 0 2 2,1,2
11089:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP411-1.p
NO CLASH, using fixed ground order
11106: Facts:
11106:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11106: Goal:
11106:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11106: Order:
11106:   nrkbo
11106: Leaf order:
11106:  a2 2 0 2 2,2
11106:  multiply 8 2 2 0,2
11106:  inverse 8 1 1 0,1,1,2
11106:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11107: Facts:
11107:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11107: Goal:
11107:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11107: Order:
11107:   kbo
11107: Leaf order:
11107:  a2 2 0 2 2,2
11107:  multiply 8 2 2 0,2
11107:  inverse 8 1 1 0,1,1,2
11107:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11108: Facts:
11108:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11108: Goal:
11108:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11108: Order:
11108:   lpo
11108: Leaf order:
11108:  a2 2 0 2 2,2
11108:  multiply 8 2 2 0,2
11108:  inverse 8 1 1 0,1,1,2
11108:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP419-1.p
NO CLASH, using fixed ground order
11140: Facts:
11140:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11140: Goal:
11140:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11140: Order:
11140:   nrkbo
11140: Leaf order:
11140:  a2 2 0 2 2,2
11140:  multiply 8 2 2 0,2
11140:  inverse 8 1 1 0,1,1,2
11140:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11141: Facts:
11141:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11141: Goal:
11141:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11141: Order:
11141:   kbo
11141: Leaf order:
11141:  a2 2 0 2 2,2
11141:  multiply 8 2 2 0,2
11141:  inverse 8 1 1 0,1,1,2
11141:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11142: Facts:
11142:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11142: Goal:
11142:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11142: Order:
11142:   lpo
11142: Leaf order:
11142:  a2 2 0 2 2,2
11142:  multiply 8 2 2 0,2
11142:  inverse 8 1 1 0,1,1,2
11142:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP422-1.p
NO CLASH, using fixed ground order
11162: Facts:
NO CLASH, using fixed ground order
11164: Facts:
11164:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11164: Goal:
11164:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11164: Order:
11164:   lpo
11164: Leaf order:
11164:  inverse 7 1 0 
11164:  c3 2 0 2 2,2
11164:  multiply 10 2 4 0,2
11164:  b3 2 0 2 2,1,2
11164:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11163: Facts:
11163:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11163: Goal:
11163:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11163: Order:
11163:   kbo
11163: Leaf order:
11163:  inverse 7 1 0 
11163:  c3 2 0 2 2,2
11163:  multiply 10 2 4 0,2
11163:  b3 2 0 2 2,1,2
11163:  a3 2 0 2 1,1,2
11162:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11162: Goal:
11162:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11162: Order:
11162:   nrkbo
11162: Leaf order:
11162:  inverse 7 1 0 
11162:  c3 2 0 2 2,2
11162:  multiply 10 2 4 0,2
11162:  b3 2 0 2 2,1,2
11162:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP423-1.p
NO CLASH, using fixed ground order
11197: Facts:
11197:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11197: Goal:
11197:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11197: Order:
11197:   kbo
11197: Leaf order:
11197:  inverse 5 1 0 
11197:  c3 2 0 2 2,2
11197:  multiply 10 2 4 0,2
11197:  b3 2 0 2 2,1,2
11197:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11198: Facts:
11198:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11198: Goal:
11198:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11198: Order:
11198:   lpo
11198: Leaf order:
11198:  inverse 5 1 0 
11198:  c3 2 0 2 2,2
11198:  multiply 10 2 4 0,2
11198:  b3 2 0 2 2,1,2
11198:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11196: Facts:
11196:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11196: Goal:
11196:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11196: Order:
11196:   nrkbo
11196: Leaf order:
11196:  inverse 5 1 0 
11196:  c3 2 0 2 2,2
11196:  multiply 10 2 4 0,2
11196:  b3 2 0 2 2,1,2
11196:  a3 2 0 2 1,1,2
Statistics :
Max weight : 62
Found proof, 60.632898s
% SZS status Unsatisfiable for GRP429-1.p
% SZS output start CNFRefutation for GRP429-1.p
Id :   3, {_}: multiply ?7 (inverse (multiply (multiply (inverse (multiply (inverse ?8) (multiply (inverse ?7) ?9))) ?10) (inverse (multiply ?8 ?10)))) =>= ?9 [10, 9, 8, 7] by single_axiom ?7 ?8 ?9 ?10
Id :   2, {_}: multiply ?2 (inverse (multiply (multiply (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4))) ?5) (inverse (multiply ?3 ?5)))) =>= ?4 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   5, {_}: multiply ?19 (inverse (multiply (multiply (inverse (multiply (inverse ?20) ?21)) ?22) (inverse (multiply ?20 ?22)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24) (inverse (multiply ?23 ?24))) [24, 23, 22, 21, 20, 19] by Super 3 with 2 at 2,1,1,1,1,2,2
Id : 1086, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?5854) (multiply (inverse (inverse ?5855)) (multiply (inverse ?5855) ?5856)))) ?5857) (inverse (multiply ?5854 ?5857))) =>= ?5856 [5857, 5856, 5855, 5854] by Super 2 with 5 at 2
Id : 473, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1916) (multiply (inverse (inverse ?1917)) (multiply (inverse ?1917) ?1918)))) ?1919) (inverse (multiply ?1916 ?1919))) =>= ?1918 [1919, 1918, 1917, 1916] by Super 2 with 5 at 2
Id : 1106, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?5982) (multiply (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?5983) (multiply (inverse (inverse ?5984)) (multiply (inverse ?5984) ?5985)))) ?5986) (inverse (multiply ?5983 ?5986))))) (multiply ?5985 ?5987)))) ?5988) (inverse (multiply ?5982 ?5988))) =>= ?5987 [5988, 5987, 5986, 5985, 5984, 5983, 5982] by Super 1086 with 473 at 1,2,2,1,1,1,1,2
Id : 2050, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?13160) (multiply (inverse ?13161) (multiply ?13161 ?13162)))) ?13163) (inverse (multiply ?13160 ?13163))) =>= ?13162 [13163, 13162, 13161, 13160] by Demod 1106 with 473 at 1,1,2,1,1,1,1,2
Id : 472, {_}: multiply (inverse ?1911) (multiply ?1911 (inverse (multiply (multiply (inverse (multiply (inverse ?1912) ?1913)) ?1914) (inverse (multiply ?1912 ?1914))))) =>= ?1913 [1914, 1913, 1912, 1911] by Super 2 with 5 at 2,2
Id : 1697, {_}: multiply (inverse ?11063) (multiply ?11063 ?11064) =?= multiply (inverse (inverse ?11065)) (multiply (inverse ?11065) ?11064) [11065, 11064, 11063] by Super 472 with 473 at 2,2,2
Id : 1084, {_}: multiply (inverse ?5842) (multiply ?5842 ?5843) =?= multiply (inverse (inverse ?5844)) (multiply (inverse ?5844) ?5843) [5844, 5843, 5842] by Super 472 with 473 at 2,2,2
Id : 1735, {_}: multiply (inverse ?11276) (multiply ?11276 ?11277) =?= multiply (inverse ?11278) (multiply ?11278 ?11277) [11278, 11277, 11276] by Super 1697 with 1084 at 3
Id : 2837, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?18056) (multiply ?18056 (multiply ?18057 ?18058)))) ?18059) (inverse (multiply (inverse ?18057) ?18059))) =>= ?18058 [18059, 18058, 18057, 18056] by Super 2050 with 1735 at 1,1,1,1,2
Id : 2876, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?18341) (multiply ?18341 (multiply (inverse ?18342) (multiply ?18342 ?18343))))) ?18344) (inverse (multiply (inverse (inverse ?18345)) ?18344))) =>= multiply ?18345 ?18343 [18345, 18344, 18343, 18342, 18341] by Super 2837 with 1735 at 2,2,1,1,1,1,2
Id : 930, {_}: multiply (inverse ?5077) (multiply ?5077 (inverse (multiply (multiply (inverse (multiply (inverse ?5078) ?5079)) ?5080) (inverse (multiply ?5078 ?5080))))) =>= ?5079 [5080, 5079, 5078, 5077] by Super 2 with 5 at 2,2
Id : 983, {_}: multiply (inverse ?5420) (multiply ?5420 (multiply ?5421 (inverse (multiply (multiply (inverse (multiply (inverse ?5422) ?5423)) ?5424) (inverse (multiply ?5422 ?5424)))))) =>= multiply (inverse (inverse ?5421)) ?5423 [5424, 5423, 5422, 5421, 5420] by Super 930 with 5 at 2,2,2
Id : 1838, {_}: multiply (inverse ?11737) (multiply ?11737 (inverse (multiply (multiply (inverse (multiply (inverse ?11738) (multiply ?11738 ?11739))) ?11740) (inverse (multiply ?11741 ?11740))))) =>= multiply ?11741 ?11739 [11741, 11740, 11739, 11738, 11737] by Super 472 with 1735 at 1,1,1,1,2,2,2
Id : 2618, {_}: multiply ?16805 (inverse (multiply (multiply (inverse (multiply (inverse ?16806) (multiply ?16806 ?16807))) ?16808) (inverse (multiply (inverse ?16805) ?16808)))) =>= ?16807 [16808, 16807, 16806, 16805] by Super 2 with 1735 at 1,1,1,1,2,2
Id : 7049, {_}: multiply ?47447 (inverse (multiply (multiply (inverse (multiply (inverse ?47448) (multiply ?47448 ?47449))) (multiply ?47447 ?47450)) (inverse (multiply (inverse ?47451) (multiply ?47451 ?47450))))) =>= ?47449 [47451, 47450, 47449, 47448, 47447] by Super 2618 with 1735 at 1,2,1,2,2
Id : 7182, {_}: multiply (multiply (inverse ?48545) (multiply ?48545 ?48546)) (inverse (multiply ?48547 (inverse (multiply (inverse ?48548) (multiply ?48548 (inverse (multiply (multiply (inverse (multiply (inverse ?48549) ?48547)) ?48550) (inverse (multiply ?48549 ?48550))))))))) =>= ?48546 [48550, 48549, 48548, 48547, 48546, 48545] by Super 7049 with 472 at 1,1,2,2
Id : 7272, {_}: multiply (multiply (inverse ?48545) (multiply ?48545 ?48546)) (inverse (multiply ?48547 (inverse ?48547))) =>= ?48546 [48547, 48546, 48545] by Demod 7182 with 472 at 1,2,1,2,2
Id : 7322, {_}: multiply (inverse (multiply (inverse ?48938) (multiply ?48938 ?48939))) ?48939 =?= multiply (inverse (multiply (inverse ?48940) (multiply ?48940 ?48941))) ?48941 [48941, 48940, 48939, 48938] by Super 1838 with 7272 at 2,2
Id : 9244, {_}: multiply (inverse (inverse (multiply (inverse ?63609) (multiply ?63609 (inverse (multiply (multiply (inverse (multiply (inverse ?63610) ?63611)) ?63612) (inverse (multiply ?63610 ?63612)))))))) (multiply (inverse (multiply (inverse ?63613) (multiply ?63613 ?63614))) ?63614) =>= ?63611 [63614, 63613, 63612, 63611, 63610, 63609] by Super 472 with 7322 at 2,2
Id : 9553, {_}: multiply (inverse (inverse ?63611)) (multiply (inverse (multiply (inverse ?63613) (multiply ?63613 ?63614))) ?63614) =>= ?63611 [63614, 63613, 63611] by Demod 9244 with 472 at 1,1,1,2
Id : 9607, {_}: multiply (inverse ?66347) (multiply ?66347 (multiply ?66348 (inverse (multiply (multiply (inverse ?66349) ?66350) (inverse (multiply (inverse ?66349) ?66350)))))) =?= multiply (inverse (inverse ?66348)) (multiply (inverse (multiply (inverse ?66351) (multiply ?66351 ?66352))) ?66352) [66352, 66351, 66350, 66349, 66348, 66347] by Super 983 with 9553 at 1,1,1,1,2,2,2,2
Id : 13028, {_}: multiply (inverse ?88877) (multiply ?88877 (multiply ?88878 (inverse (multiply (multiply (inverse ?88879) ?88880) (inverse (multiply (inverse ?88879) ?88880)))))) =>= ?88878 [88880, 88879, 88878, 88877] by Demod 9607 with 9553 at 3
Id : 2125, {_}: inverse (multiply (multiply (inverse ?13666) (multiply ?13666 ?13667)) (inverse (multiply ?13668 (multiply (multiply (inverse ?13668) (multiply (inverse ?13669) (multiply ?13669 ?13670))) ?13667)))) =>= ?13670 [13670, 13669, 13668, 13667, 13666] by Super 2050 with 1735 at 1,1,2
Id : 7292, {_}: inverse (multiply (multiply (inverse ?48720) (multiply ?48720 (inverse (multiply ?48721 (inverse ?48721))))) (inverse (multiply (inverse ?48722) (multiply ?48722 ?48723)))) =>= ?48723 [48723, 48722, 48721, 48720] by Super 2125 with 7272 at 2,1,2,1,2
Id : 13145, {_}: multiply (inverse ?89741) (multiply ?89741 (multiply ?89742 (inverse (multiply ?89743 (inverse ?89743))))) =>= ?89742 [89743, 89742, 89741] by Super 13028 with 7292 at 2,2,2,2
Id : 1878, {_}: multiply ?12021 (inverse (multiply (multiply (inverse ?12022) (multiply ?12022 ?12023)) (inverse (multiply ?12024 (multiply (multiply (inverse ?12024) (multiply (inverse ?12021) ?12025)) ?12023))))) =>= ?12025 [12025, 12024, 12023, 12022, 12021] by Super 2 with 1735 at 1,1,2,2
Id : 13510, {_}: multiply (inverse (inverse ?91449)) (multiply (inverse ?91450) (multiply ?91450 (inverse (multiply ?91451 (inverse ?91451))))) =>= ?91449 [91451, 91450, 91449] by Super 9553 with 13145 at 1,1,2,2
Id :   4, {_}: multiply ?12 (inverse (multiply (multiply (inverse (multiply (inverse ?13) (multiply (inverse ?12) ?14))) (inverse (multiply (multiply (inverse (multiply (inverse ?15) (multiply (inverse ?13) ?16))) ?17) (inverse (multiply ?15 ?17))))) (inverse ?16))) =>= ?14 [17, 16, 15, 14, 13, 12] by Super 3 with 2 at 1,2,1,2,2
Id :  98, {_}: multiply ?266 (inverse (multiply (multiply (inverse (multiply (inverse ?267) ?268)) ?269) (inverse (multiply ?267 ?269)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?270) (multiply (inverse (inverse ?266)) ?268))) (inverse (multiply (multiply (inverse (multiply (inverse ?271) (multiply (inverse ?270) ?272))) ?273) (inverse (multiply ?271 ?273))))) (inverse ?272)) [273, 272, 271, 270, 269, 268, 267, 266] by Super 2 with 4 at 2,1,1,1,1,2,2
Id : 13781, {_}: multiply ?92573 (inverse (multiply (multiply (inverse (multiply (inverse ?92574) (multiply (inverse ?92573) (inverse (multiply ?92575 (inverse ?92575)))))) ?92576) (inverse (multiply ?92574 ?92576)))) =?= inverse (multiply (multiply (inverse ?92577) (inverse (multiply (multiply (inverse (multiply (inverse ?92578) (multiply (inverse (inverse ?92577)) ?92579))) ?92580) (inverse (multiply ?92578 ?92580))))) (inverse ?92579)) [92580, 92579, 92578, 92577, 92576, 92575, 92574, 92573] by Super 98 with 13510 at 1,1,1,1,3
Id : 13970, {_}: inverse (multiply ?92575 (inverse ?92575)) =?= inverse (multiply (multiply (inverse ?92577) (inverse (multiply (multiply (inverse (multiply (inverse ?92578) (multiply (inverse (inverse ?92577)) ?92579))) ?92580) (inverse (multiply ?92578 ?92580))))) (inverse ?92579)) [92580, 92579, 92578, 92577, 92575] by Demod 13781 with 2 at 2
Id : 13971, {_}: inverse (multiply ?92575 (inverse ?92575)) =?= inverse (multiply ?92579 (inverse ?92579)) [92579, 92575] by Demod 13970 with 2 at 1,1,3
Id : 14410, {_}: multiply (inverse (inverse (multiply ?96419 (inverse ?96419)))) (multiply (inverse ?96420) (multiply ?96420 (inverse (multiply ?96421 (inverse ?96421))))) =?= multiply ?96422 (inverse ?96422) [96422, 96421, 96420, 96419] by Super 13510 with 13971 at 1,1,2
Id : 14473, {_}: multiply ?96419 (inverse ?96419) =?= multiply ?96422 (inverse ?96422) [96422, 96419] by Demod 14410 with 13510 at 2
Id : 14531, {_}: multiply (multiply (inverse ?96810) (multiply ?96811 (inverse ?96811))) (inverse (multiply ?96812 (inverse ?96812))) =>= inverse ?96810 [96812, 96811, 96810] by Super 7272 with 14473 at 2,1,2
Id : 15237, {_}: multiply ?101459 (inverse (multiply (multiply (inverse ?101460) (multiply ?101460 (inverse (multiply ?101461 (inverse ?101461))))) (inverse (multiply ?101462 (inverse ?101462))))) =>= inverse (inverse ?101459) [101462, 101461, 101460, 101459] by Super 1878 with 14531 at 2,1,2,1,2,2
Id : 15353, {_}: multiply ?101459 (inverse (inverse (multiply ?101461 (inverse ?101461)))) =>= inverse (inverse ?101459) [101461, 101459] by Demod 15237 with 7272 at 1,2,2
Id : 16356, {_}: multiply (inverse (inverse ?111717)) (multiply (inverse (multiply (inverse ?111718) (inverse (inverse ?111718)))) (inverse (inverse (multiply ?111719 (inverse ?111719))))) =>= ?111717 [111719, 111718, 111717] by Super 9553 with 15353 at 2,1,1,2,2
Id : 18221, {_}: multiply (inverse (inverse ?121427)) (inverse (inverse (inverse (multiply (inverse ?121428) (inverse (inverse ?121428)))))) =>= ?121427 [121428, 121427] by Demod 16356 with 15353 at 2,2
Id : 16345, {_}: multiply ?111675 (inverse ?111675) =?= inverse (inverse (inverse (multiply ?111676 (inverse ?111676)))) [111676, 111675] by Super 14473 with 15353 at 3
Id : 18293, {_}: multiply (inverse (inverse ?121732)) (multiply ?121733 (inverse ?121733)) =>= ?121732 [121733, 121732] by Super 18221 with 16345 at 2,2
Id : 18567, {_}: multiply ?122956 (inverse (multiply ?122957 (inverse ?122957))) =>= inverse (inverse ?122956) [122957, 122956] by Super 7272 with 18293 at 1,2
Id : 18716, {_}: multiply (inverse ?89741) (multiply ?89741 (inverse (inverse ?89742))) =>= ?89742 [89742, 89741] by Demod 13145 with 18567 at 2,2,2
Id : 18916, {_}: multiply (inverse (inverse ?124642)) (inverse (inverse (multiply ?124643 (inverse ?124643)))) =>= ?124642 [124643, 124642] by Super 18293 with 18567 at 2,2
Id : 18985, {_}: inverse (inverse (inverse (inverse ?124642))) =>= ?124642 [124642] by Demod 18916 with 15353 at 2
Id : 19175, {_}: multiply (inverse ?124947) (multiply ?124947 ?124948) =>= inverse (inverse ?124948) [124948, 124947] by Super 18716 with 18985 at 2,2,2
Id : 19474, {_}: inverse (multiply (multiply (inverse (inverse (inverse (multiply (inverse ?18342) (multiply ?18342 ?18343))))) ?18344) (inverse (multiply (inverse (inverse ?18345)) ?18344))) =>= multiply ?18345 ?18343 [18345, 18344, 18343, 18342] by Demod 2876 with 19175 at 1,1,1,1,2
Id : 19475, {_}: inverse (multiply (multiply (inverse (inverse (inverse (inverse (inverse ?18343))))) ?18344) (inverse (multiply (inverse (inverse ?18345)) ?18344))) =>= multiply ?18345 ?18343 [18345, 18344, 18343] by Demod 19474 with 19175 at 1,1,1,1,1,1,2
Id : 19512, {_}: inverse (multiply (multiply (inverse ?18343) ?18344) (inverse (multiply (inverse (inverse ?18345)) ?18344))) =>= multiply ?18345 ?18343 [18345, 18344, 18343] by Demod 19475 with 18985 at 1,1,1,2
Id : 19345, {_}: multiply ?126114 (multiply ?126115 (inverse ?126115)) =>= inverse (inverse ?126114) [126115, 126114] by Super 18293 with 18985 at 1,2
Id : 19935, {_}: inverse (multiply (multiply (inverse ?128594) (multiply ?128595 (inverse ?128595))) (inverse (inverse (inverse (inverse (inverse ?128596)))))) =>= multiply ?128596 ?128594 [128596, 128595, 128594] by Super 19512 with 19345 at 1,2,1,2
Id : 19990, {_}: inverse (multiply (inverse (inverse (inverse ?128594))) (inverse (inverse (inverse (inverse (inverse ?128596)))))) =>= multiply ?128596 ?128594 [128596, 128594] by Demod 19935 with 19345 at 1,1,2
Id : 20507, {_}: inverse (multiply (inverse (inverse (inverse ?130153))) (inverse ?130154)) =>= multiply ?130154 ?130153 [130154, 130153] by Demod 19990 with 18985 at 2,1,2
Id : 20571, {_}: inverse (multiply ?130433 (inverse ?130434)) =>= multiply ?130434 (inverse ?130433) [130434, 130433] by Super 20507 with 18985 at 1,1,2
Id : 21794, {_}: multiply (multiply (inverse (inverse ?18345)) ?18344) (inverse (multiply (inverse ?18343) ?18344)) =>= multiply ?18345 ?18343 [18343, 18344, 18345] by Demod 19512 with 20571 at 2
Id : 21760, {_}: multiply ?19 (multiply (multiply ?20 ?22) (inverse (multiply (inverse (multiply (inverse ?20) ?21)) ?22))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24) (inverse (multiply ?23 ?24))) [24, 23, 21, 22, 20, 19] by Demod 5 with 20571 at 2,2
Id : 21761, {_}: multiply ?19 (multiply (multiply ?20 ?22) (inverse (multiply (inverse (multiply (inverse ?20) ?21)) ?22))) =?= multiply (multiply ?23 ?24) (inverse (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24)) [24, 23, 21, 22, 20, 19] by Demod 21760 with 20571 at 3
Id : 19480, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?1912) ?1913)) ?1914) (inverse (multiply ?1912 ?1914))))) =>= ?1913 [1914, 1913, 1912] by Demod 472 with 19175 at 2
Id : 21790, {_}: inverse (inverse (multiply (multiply ?1912 ?1914) (inverse (multiply (inverse (multiply (inverse ?1912) ?1913)) ?1914)))) =>= ?1913 [1913, 1914, 1912] by Demod 19480 with 20571 at 1,1,2
Id : 21791, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1912) ?1913)) ?1914) (inverse (multiply ?1912 ?1914))) =>= ?1913 [1914, 1913, 1912] by Demod 21790 with 20571 at 1,2
Id : 21792, {_}: multiply (multiply ?1912 ?1914) (inverse (multiply (inverse (multiply (inverse ?1912) ?1913)) ?1914)) =>= ?1913 [1913, 1914, 1912] by Demod 21791 with 20571 at 2
Id : 21810, {_}: multiply ?19 ?21 =<= multiply (multiply ?23 ?24) (inverse (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24)) [24, 23, 21, 19] by Demod 21761 with 21792 at 2,2
Id : 21811, {_}: multiply ?19 ?21 =<= multiply (inverse (inverse ?19)) ?21 [21, 19] by Demod 21810 with 21792 at 3
Id : 21822, {_}: multiply (multiply ?18345 ?18344) (inverse (multiply (inverse ?18343) ?18344)) =>= multiply ?18345 ?18343 [18343, 18344, 18345] by Demod 21794 with 21811 at 1,2
Id : 21949, {_}: multiply (multiply ?139581 (inverse ?139582)) (multiply ?139582 (inverse (inverse ?139583))) =>= multiply ?139581 ?139583 [139583, 139582, 139581] by Super 21822 with 20571 at 2,2
Id : 19491, {_}: multiply ?12021 (inverse (multiply (inverse (inverse ?12023)) (inverse (multiply ?12024 (multiply (multiply (inverse ?12024) (multiply (inverse ?12021) ?12025)) ?12023))))) =>= ?12025 [12025, 12024, 12023, 12021] by Demod 1878 with 19175 at 1,1,2,2
Id : 21735, {_}: multiply ?12021 (multiply (multiply ?12024 (multiply (multiply (inverse ?12024) (multiply (inverse ?12021) ?12025)) ?12023)) (inverse (inverse (inverse ?12023)))) =>= ?12025 [12023, 12025, 12024, 12021] by Demod 19491 with 20571 at 2,2
Id : 3075, {_}: multiply (inverse ?19377) (multiply ?19377 (multiply ?19378 (inverse (multiply (multiply (inverse (multiply (inverse ?19379) ?19380)) ?19381) (inverse (multiply ?19379 ?19381)))))) =>= multiply (inverse (inverse ?19378)) ?19380 [19381, 19380, 19379, 19378, 19377] by Super 930 with 5 at 2,2,2
Id : 1191, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?5982) (multiply (inverse ?5985) (multiply ?5985 ?5987)))) ?5988) (inverse (multiply ?5982 ?5988))) =>= ?5987 [5988, 5987, 5985, 5982] by Demod 1106 with 473 at 1,1,2,1,1,1,1,2
Id : 3153, {_}: multiply (inverse ?20008) (multiply ?20008 (multiply ?20009 ?20010)) =?= multiply (inverse (inverse ?20009)) (multiply (inverse ?20011) (multiply ?20011 ?20010)) [20011, 20010, 20009, 20008] by Super 3075 with 1191 at 2,2,2,2
Id : 19484, {_}: inverse (inverse (multiply ?20009 ?20010)) =<= multiply (inverse (inverse ?20009)) (multiply (inverse ?20011) (multiply ?20011 ?20010)) [20011, 20010, 20009] by Demod 3153 with 19175 at 2
Id : 19485, {_}: inverse (inverse (multiply ?20009 ?20010)) =<= multiply (inverse (inverse ?20009)) (inverse (inverse ?20010)) [20010, 20009] by Demod 19484 with 19175 at 2,3
Id : 21818, {_}: inverse (inverse (multiply ?20009 ?20010)) =<= multiply ?20009 (inverse (inverse ?20010)) [20010, 20009] by Demod 19485 with 21811 at 3
Id : 21880, {_}: multiply ?12021 (inverse (inverse (multiply (multiply ?12024 (multiply (multiply (inverse ?12024) (multiply (inverse ?12021) ?12025)) ?12023)) (inverse ?12023)))) =>= ?12025 [12023, 12025, 12024, 12021] by Demod 21735 with 21818 at 2,2
Id : 21881, {_}: inverse (inverse (multiply ?12021 (multiply (multiply ?12024 (multiply (multiply (inverse ?12024) (multiply (inverse ?12021) ?12025)) ?12023)) (inverse ?12023)))) =>= ?12025 [12023, 12025, 12024, 12021] by Demod 21880 with 21818 at 2
Id : 1840, {_}: multiply (inverse ?11749) (multiply ?11749 (inverse (multiply (multiply (inverse ?11750) (multiply ?11750 ?11751)) (inverse (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)))))) =>= ?11753 [11753, 11752, 11751, 11750, 11749] by Super 472 with 1735 at 1,1,2,2,2
Id : 19489, {_}: inverse (inverse (inverse (multiply (multiply (inverse ?11750) (multiply ?11750 ?11751)) (inverse (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)))))) =>= ?11753 [11753, 11752, 11751, 11750] by Demod 1840 with 19175 at 2
Id : 19490, {_}: inverse (inverse (inverse (multiply (inverse (inverse ?11751)) (inverse (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)))))) =>= ?11753 [11753, 11752, 11751] by Demod 19489 with 19175 at 1,1,1,1,2
Id : 21784, {_}: inverse (inverse (multiply (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)) (inverse (inverse (inverse ?11751))))) =>= ?11753 [11751, 11753, 11752] by Demod 19490 with 20571 at 1,1,2
Id : 21785, {_}: inverse (multiply (inverse (inverse ?11751)) (inverse (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)))) =>= ?11753 [11753, 11752, 11751] by Demod 21784 with 20571 at 1,2
Id : 21786, {_}: multiply (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)) (inverse (inverse (inverse ?11751))) =>= ?11753 [11751, 11753, 11752] by Demod 21785 with 20571 at 2
Id : 21834, {_}: inverse (inverse (multiply (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)) (inverse ?11751))) =>= ?11753 [11751, 11753, 11752] by Demod 21786 with 21818 at 2
Id : 21842, {_}: inverse (multiply ?11751 (inverse (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)))) =>= ?11753 [11753, 11752, 11751] by Demod 21834 with 20571 at 1,2
Id : 21843, {_}: multiply (multiply ?11752 (multiply (multiply (inverse ?11752) ?11753) ?11751)) (inverse ?11751) =>= ?11753 [11751, 11753, 11752] by Demod 21842 with 20571 at 2
Id : 21882, {_}: inverse (inverse (multiply ?12021 (multiply (inverse ?12021) ?12025))) =>= ?12025 [12025, 12021] by Demod 21881 with 21843 at 2,1,1,2
Id : 1876, {_}: multiply ?12011 (inverse (multiply (multiply (inverse (multiply (inverse ?12012) (multiply ?12012 ?12013))) ?12014) (inverse (multiply (inverse ?12011) ?12014)))) =>= ?12013 [12014, 12013, 12012, 12011] by Super 2 with 1735 at 1,1,1,1,2,2
Id : 19478, {_}: multiply ?12011 (inverse (multiply (multiply (inverse (inverse (inverse ?12013))) ?12014) (inverse (multiply (inverse ?12011) ?12014)))) =>= ?12013 [12014, 12013, 12011] by Demod 1876 with 19175 at 1,1,1,1,2,2
Id : 21793, {_}: multiply ?12011 (multiply (multiply (inverse ?12011) ?12014) (inverse (multiply (inverse (inverse (inverse ?12013))) ?12014))) =>= ?12013 [12013, 12014, 12011] by Demod 19478 with 20571 at 2,2
Id : 19486, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?11738) (multiply ?11738 ?11739))) ?11740) (inverse (multiply ?11741 ?11740))))) =>= multiply ?11741 ?11739 [11741, 11740, 11739, 11738] by Demod 1838 with 19175 at 2
Id : 19487, {_}: inverse (inverse (inverse (multiply (multiply (inverse (inverse (inverse ?11739))) ?11740) (inverse (multiply ?11741 ?11740))))) =>= multiply ?11741 ?11739 [11741, 11740, 11739] by Demod 19486 with 19175 at 1,1,1,1,1,1,2
Id : 21787, {_}: inverse (inverse (multiply (multiply ?11741 ?11740) (inverse (multiply (inverse (inverse (inverse ?11739))) ?11740)))) =>= multiply ?11741 ?11739 [11739, 11740, 11741] by Demod 19487 with 20571 at 1,1,2
Id : 21788, {_}: inverse (multiply (multiply (inverse (inverse (inverse ?11739))) ?11740) (inverse (multiply ?11741 ?11740))) =>= multiply ?11741 ?11739 [11741, 11740, 11739] by Demod 21787 with 20571 at 1,2
Id : 21789, {_}: multiply (multiply ?11741 ?11740) (inverse (multiply (inverse (inverse (inverse ?11739))) ?11740)) =>= multiply ?11741 ?11739 [11739, 11740, 11741] by Demod 21788 with 20571 at 2
Id : 21802, {_}: multiply ?12011 (multiply (inverse ?12011) ?12013) =>= ?12013 [12013, 12011] by Demod 21793 with 21789 at 2,2
Id : 21883, {_}: inverse (inverse ?12025) =>= ?12025 [12025] by Demod 21882 with 21802 at 1,1,2
Id : 22088, {_}: multiply (multiply ?140028 (inverse ?140029)) (multiply ?140029 ?140030) =>= multiply ?140028 ?140030 [140030, 140029, 140028] by Demod 21949 with 21883 at 2,2,2
Id : 21892, {_}: multiply (inverse ?124947) (multiply ?124947 ?124948) =>= ?124948 [124948, 124947] by Demod 19175 with 21883 at 3
Id : 22102, {_}: multiply (multiply ?140094 (inverse (inverse ?140095))) ?140096 =>= multiply ?140094 (multiply ?140095 ?140096) [140096, 140095, 140094] by Super 22088 with 21892 at 2,2
Id : 22180, {_}: multiply (multiply ?140094 ?140095) ?140096 =>= multiply ?140094 (multiply ?140095 ?140096) [140096, 140095, 140094] by Demod 22102 with 21883 at 2,1,2
Id : 22441, {_}: multiply a3 (multiply b3 c3) =?= multiply a3 (multiply b3 c3) [] by Demod 1 with 22180 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP429-1.p
11197: solved GRP429-1.p in 30.365897 using kbo
11197: status Unsatisfiable for GRP429-1.p
NO CLASH, using fixed ground order
11215: Facts:
11215:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11215: Goal:
11215:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11215: Order:
11215:   nrkbo
11215: Leaf order:
11215:  inverse 3 1 0 
11215:  c3 2 0 2 2,2
11215:  multiply 10 2 4 0,2
11215:  b3 2 0 2 2,1,2
11215:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11216: Facts:
11216:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11216: Goal:
11216:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11216: Order:
11216:   kbo
11216: Leaf order:
11216:  inverse 3 1 0 
11216:  c3 2 0 2 2,2
11216:  multiply 10 2 4 0,2
11216:  b3 2 0 2 2,1,2
11216:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11217: Facts:
11217:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11217: Goal:
11217:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11217: Order:
11217:   lpo
11217: Leaf order:
11217:  inverse 3 1 0 
11217:  c3 2 0 2 2,2
11217:  multiply 10 2 4 0,2
11217:  b3 2 0 2 2,1,2
11217:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP444-1.p
NO CLASH, using fixed ground order
11235: Facts:
NO CLASH, using fixed ground order
11236: Facts:
11236:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11236:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
11236:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
11236: Goal:
11236:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11236: Order:
11236:   kbo
11236: Leaf order:
11236:  divide 13 2 0 
11236:  a2 2 0 2 2,2
11236:  multiply 3 2 2 0,2
11236:  inverse 2 1 1 0,1,1,2
11236:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11237: Facts:
11237:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11237:  Id :   3, {_}:
          multiply ?6 ?7 =?= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
11237:  Id :   4, {_}:
          inverse ?10 =?= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
11237: Goal:
11237:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11237: Order:
11237:   lpo
11237: Leaf order:
11237:  divide 13 2 0 
11237:  a2 2 0 2 2,2
11237:  multiply 3 2 2 0,2
11237:  inverse 2 1 1 0,1,1,2
11237:  b2 2 0 2 1,1,1,2
11235:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
11235:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
11235:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
11235: Goal:
11235:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11235: Order:
11235:   nrkbo
11235: Leaf order:
11235:  divide 13 2 0 
11235:  a2 2 0 2 2,2
11235:  multiply 3 2 2 0,2
11235:  inverse 2 1 1 0,1,1,2
11235:  b2 2 0 2 1,1,1,2
Statistics :
Max weight : 38
Found proof, 1.775197s
% SZS status Unsatisfiable for GRP452-1.p
% SZS output start CNFRefutation for GRP452-1.p
Id :   5, {_}: divide (divide (divide ?13 ?13) (divide ?13 (divide ?14 (divide (divide (divide ?13 ?13) ?13) ?15)))) ?15 =>= ?14 [15, 14, 13] by single_axiom ?13 ?14 ?15
Id :  35, {_}: inverse ?90 =<= divide (divide ?91 ?91) ?90 [91, 90] by inverse ?90 ?91
Id :   2, {_}: divide (divide (divide ?2 ?2) (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   4, {_}: inverse ?10 =<= divide (divide ?11 ?11) ?10 [11, 10] by inverse ?10 ?11
Id :   3, {_}: multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7) [8, 7, 6] by multiply ?6 ?7 ?8
Id :  29, {_}: multiply ?6 ?7 =<= divide ?6 (inverse ?7) [7, 6] by Demod 3 with 4 at 2,3
Id : 122, {_}: multiply (divide ?250 ?250) ?251 =>= inverse (inverse ?251) [251, 250] by Super 29 with 4 at 3
Id : 128, {_}: multiply (multiply (inverse ?268) ?268) ?269 =>= inverse (inverse ?269) [269, 268] by Super 122 with 29 at 1,2
Id :  13, {_}: divide (multiply (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50))) ?50 =>= ?49 [50, 49, 48] by Super 2 with 3 at 1,2
Id :  32, {_}: multiply (divide ?79 ?79) ?80 =>= inverse (inverse ?80) [80, 79] by Super 29 with 4 at 3
Id : 481, {_}: divide (inverse (inverse (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 13 with 32 at 1,2
Id : 482, {_}: divide (inverse (inverse (divide ?49 (divide (inverse (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 481 with 4 at 1,2,1,1,1,2
Id :  36, {_}: inverse ?93 =<= divide (inverse (divide ?94 ?94)) ?93 [94, 93] by Super 35 with 4 at 1,3
Id : 483, {_}: divide (inverse (inverse (divide ?49 (inverse ?50)))) ?50 =>= ?49 [50, 49] by Demod 482 with 36 at 2,1,1,1,2
Id : 484, {_}: divide (inverse (inverse (multiply ?49 ?50))) ?50 =>= ?49 [50, 49] by Demod 483 with 29 at 1,1,1,2
Id :   6, {_}: divide (divide (divide ?17 ?17) (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Super 5 with 2 at 2,2,1,2
Id : 142, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 6 with 4 at 1,2
Id : 143, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 142 with 4 at 3
Id : 144, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 143 with 4 at 1,2,2,1,3
Id : 145, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (inverse ?17) ?19)))) [20, 19, 18, 17] by Demod 144 with 4 at 1,2,2,2,1,3
Id : 226, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (divide (divide ?529 ?529) (divide ?527 (inverse (divide (inverse ?526) ?528)))) [529, 528, 527, 526] by Super 145 with 36 at 2,2,1,3
Id : 249, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (divide ?527 (inverse (divide (inverse ?526) ?528)))) [528, 527, 526] by Demod 226 with 4 at 1,3
Id : 250, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (multiply ?527 (divide (inverse ?526) ?528))) [528, 527, 526] by Demod 249 with 29 at 1,1,3
Id : 896, {_}: divide (inverse (divide ?1873 ?1874)) ?1875 =<= inverse (inverse (multiply ?1874 (divide (inverse ?1873) ?1875))) [1875, 1874, 1873] by Demod 249 with 29 at 1,1,3
Id : 911, {_}: divide (inverse (divide (divide ?1940 ?1940) ?1941)) ?1942 =>= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941, 1940] by Super 896 with 36 at 2,1,1,3
Id : 944, {_}: divide (inverse (inverse ?1941)) ?1942 =<= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941] by Demod 911 with 4 at 1,1,2
Id : 978, {_}: divide (inverse (inverse ?2088)) ?2089 =<= inverse (inverse (multiply ?2088 (inverse ?2089))) [2089, 2088] by Demod 911 with 4 at 1,1,2
Id : 989, {_}: divide (inverse (inverse (divide ?2127 ?2127))) ?2128 =?= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128, 2127] by Super 978 with 32 at 1,1,3
Id : 223, {_}: inverse ?515 =<= divide (inverse (inverse (divide ?516 ?516))) ?515 [516, 515] by Super 4 with 36 at 1,3
Id : 1018, {_}: inverse ?2128 =<= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128] by Demod 989 with 223 at 2
Id : 1036, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= divide ?2199 (inverse ?2200) [2200, 2199] by Super 29 with 1018 at 2,3
Id : 1074, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= multiply ?2199 ?2200 [2200, 2199] by Demod 1036 with 29 at 3
Id : 1107, {_}: divide (inverse (inverse ?2287)) (inverse (inverse (inverse ?2288))) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Super 944 with 1074 at 1,1,3
Id : 1180, {_}: multiply (inverse (inverse ?2287)) (inverse (inverse ?2288)) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Demod 1107 with 29 at 2
Id : 1223, {_}: divide (inverse (inverse (inverse (inverse ?2471)))) (inverse ?2472) =>= inverse (inverse (inverse (inverse (multiply ?2471 ?2472)))) [2472, 2471] by Super 944 with 1180 at 1,1,3
Id : 1540, {_}: multiply (inverse (inverse (inverse (inverse ?3274)))) ?3275 =<= inverse (inverse (inverse (inverse (multiply ?3274 ?3275)))) [3275, 3274] by Demod 1223 with 29 at 2
Id :  10, {_}: divide (divide (divide ?34 ?34) (divide ?34 (divide ?35 (multiply (divide (divide ?34 ?34) ?34) ?36)))) (divide (divide ?37 ?37) ?36) =>= ?35 [37, 36, 35, 34] by Super 2 with 3 at 2,2,2,1,2
Id :  24, {_}: multiply (divide (divide ?34 ?34) (divide ?34 (divide ?35 (multiply (divide (divide ?34 ?34) ?34) ?36)))) ?36 =>= ?35 [36, 35, 34] by Demod 10 with 3 at 2
Id : 793, {_}: multiply (inverse (divide ?34 (divide ?35 (multiply (divide (divide ?34 ?34) ?34) ?36)))) ?36 =>= ?35 [36, 35, 34] by Demod 24 with 4 at 1,2
Id : 794, {_}: multiply (inverse (divide ?34 (divide ?35 (multiply (inverse ?34) ?36)))) ?36 =>= ?35 [36, 35, 34] by Demod 793 with 4 at 1,2,2,1,1,2
Id : 1550, {_}: multiply (inverse (inverse (inverse (inverse (inverse (divide ?3307 (divide ?3308 (multiply (inverse ?3307) ?3309)))))))) ?3309 =>= inverse (inverse (inverse (inverse ?3308))) [3309, 3308, 3307] by Super 1540 with 794 at 1,1,1,1,3
Id : 1600, {_}: multiply (inverse (divide ?3307 (divide ?3308 (multiply (inverse ?3307) ?3309)))) ?3309 =>= inverse (inverse (inverse (inverse ?3308))) [3309, 3308, 3307] by Demod 1550 with 1018 at 1,2
Id : 1601, {_}: ?3308 =<= inverse (inverse (inverse (inverse ?3308))) [3308] by Demod 1600 with 794 at 2
Id : 1634, {_}: multiply ?3404 (inverse (inverse (inverse ?3405))) =>= divide ?3404 ?3405 [3405, 3404] by Super 29 with 1601 at 2,3
Id : 1707, {_}: divide (inverse (inverse ?3544)) (inverse (inverse ?3545)) =>= inverse (inverse (divide ?3544 ?3545)) [3545, 3544] by Super 944 with 1634 at 1,1,3
Id : 1741, {_}: multiply (inverse (inverse ?3544)) (inverse ?3545) =>= inverse (inverse (divide ?3544 ?3545)) [3545, 3544] by Demod 1707 with 29 at 2
Id : 1807, {_}: divide (inverse (inverse (inverse (inverse (divide ?3666 ?3667))))) (inverse ?3667) =>= inverse (inverse ?3666) [3667, 3666] by Super 484 with 1741 at 1,1,1,2
Id : 1849, {_}: multiply (inverse (inverse (inverse (inverse (divide ?3666 ?3667))))) ?3667 =>= inverse (inverse ?3666) [3667, 3666] by Demod 1807 with 29 at 2
Id : 1850, {_}: multiply (divide ?3666 ?3667) ?3667 =>= inverse (inverse ?3666) [3667, 3666] by Demod 1849 with 1601 at 1,2
Id : 1880, {_}: inverse (inverse ?3792) =<= divide (divide ?3792 (inverse (inverse (inverse ?3793)))) ?3793 [3793, 3792] by Super 1634 with 1850 at 2
Id : 2688, {_}: inverse (inverse ?5905) =<= divide (multiply ?5905 (inverse (inverse ?5906))) ?5906 [5906, 5905] by Demod 1880 with 29 at 1,3
Id : 224, {_}: multiply (inverse (inverse (divide ?518 ?518))) ?519 =>= inverse (inverse ?519) [519, 518] by Super 32 with 36 at 1,2
Id : 2714, {_}: inverse (inverse (inverse (inverse (divide ?5996 ?5996)))) =?= divide (inverse (inverse (inverse (inverse ?5997)))) ?5997 [5997, 5996] by Super 2688 with 224 at 1,3
Id : 2767, {_}: divide ?5996 ?5996 =?= divide (inverse (inverse (inverse (inverse ?5997)))) ?5997 [5997, 5996] by Demod 2714 with 1601 at 2
Id : 2768, {_}: divide ?5996 ?5996 =?= divide ?5997 ?5997 [5997, 5996] by Demod 2767 with 1601 at 1,3
Id : 2830, {_}: divide (inverse (divide ?6176 (divide (inverse ?6177) (divide (inverse ?6176) ?6178)))) ?6178 =?= inverse (divide ?6177 (divide ?6179 ?6179)) [6179, 6178, 6177, 6176] by Super 145 with 2768 at 2,1,3
Id :  30, {_}: divide (inverse (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 2 with 4 at 1,2
Id :  31, {_}: divide (inverse (divide ?2 (divide ?3 (divide (inverse ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 30 with 4 at 1,2,2,1,1,2
Id : 2905, {_}: inverse ?6177 =<= inverse (divide ?6177 (divide ?6179 ?6179)) [6179, 6177] by Demod 2830 with 31 at 2
Id : 2962, {_}: divide ?6532 (divide ?6533 ?6533) =?= inverse (inverse (inverse (inverse ?6532))) [6533, 6532] by Super 1601 with 2905 at 1,1,1,3
Id : 3014, {_}: divide ?6532 (divide ?6533 ?6533) =>= ?6532 [6533, 6532] by Demod 2962 with 1601 at 3
Id : 3088, {_}: divide (inverse (divide ?6789 ?6790)) (divide ?6791 ?6791) =>= inverse (inverse (multiply ?6790 (inverse ?6789))) [6791, 6790, 6789] by Super 250 with 3014 at 2,1,1,3
Id : 3148, {_}: inverse (divide ?6789 ?6790) =<= inverse (inverse (multiply ?6790 (inverse ?6789))) [6790, 6789] by Demod 3088 with 3014 at 2
Id : 3149, {_}: inverse (divide ?6789 ?6790) =<= divide (inverse (inverse ?6790)) ?6789 [6790, 6789] by Demod 3148 with 944 at 3
Id : 3377, {_}: inverse (divide ?50 (multiply ?49 ?50)) =>= ?49 [49, 50] by Demod 484 with 3149 at 2
Id : 3423, {_}: inverse (divide ?7500 ?7501) =<= divide (inverse (inverse ?7501)) ?7500 [7501, 7500] by Demod 3148 with 944 at 3
Id : 3441, {_}: inverse (divide ?7566 (inverse (inverse ?7567))) =>= divide ?7567 ?7566 [7567, 7566] by Super 3423 with 1601 at 1,3
Id : 3536, {_}: inverse (multiply ?7566 (inverse ?7567)) =>= divide ?7567 ?7566 [7567, 7566] by Demod 3441 with 29 at 1,2
Id : 229, {_}: inverse ?541 =<= divide (inverse (divide ?542 ?542)) ?541 [542, 541] by Super 35 with 4 at 1,3
Id : 236, {_}: inverse ?562 =<= divide (inverse (inverse (inverse (divide ?563 ?563)))) ?562 [563, 562] by Super 229 with 36 at 1,1,3
Id : 3378, {_}: inverse ?562 =<= inverse (divide ?562 (inverse (divide ?563 ?563))) [563, 562] by Demod 236 with 3149 at 3
Id : 3383, {_}: inverse ?562 =<= inverse (multiply ?562 (divide ?563 ?563)) [563, 562] by Demod 3378 with 29 at 1,3
Id : 3089, {_}: multiply ?6793 (divide ?6794 ?6794) =>= inverse (inverse ?6793) [6794, 6793] by Super 1850 with 3014 at 1,2
Id : 3760, {_}: inverse ?562 =<= inverse (inverse (inverse ?562)) [562] by Demod 3383 with 3089 at 1,3
Id : 3763, {_}: multiply ?3404 (inverse ?3405) =>= divide ?3404 ?3405 [3405, 3404] by Demod 1634 with 3760 at 2,2
Id : 3764, {_}: inverse (divide ?7566 ?7567) =>= divide ?7567 ?7566 [7567, 7566] by Demod 3536 with 3763 at 1,2
Id : 3776, {_}: divide (multiply ?49 ?50) ?50 =>= ?49 [50, 49] by Demod 3377 with 3764 at 2
Id : 1886, {_}: multiply (divide ?3813 ?3814) ?3814 =>= inverse (inverse ?3813) [3814, 3813] by Demod 1849 with 1601 at 1,2
Id : 1895, {_}: multiply (multiply ?3842 ?3843) (inverse ?3843) =>= inverse (inverse ?3842) [3843, 3842] by Super 1886 with 29 at 1,2
Id : 3766, {_}: divide (multiply ?3842 ?3843) ?3843 =>= inverse (inverse ?3842) [3843, 3842] by Demod 1895 with 3763 at 2
Id : 3800, {_}: inverse (inverse ?49) =>= ?49 [49] by Demod 3776 with 3766 at 2
Id : 3806, {_}: multiply (multiply (inverse ?268) ?268) ?269 =>= ?269 [269, 268] by Demod 128 with 3800 at 3
Id : 3889, {_}: a2 =?= a2 [] by Demod 1 with 3806 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP452-1.p
11236: solved GRP452-1.p in 0.984061 using kbo
11236: status Unsatisfiable for GRP452-1.p
NO CLASH, using fixed ground order
11242: Facts:
11242:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11242:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11242: Goal:
11242:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11242: Order:
11242:   nrkbo
11242: Leaf order:
11242:  divide 7 2 0 
11242:  b1 2 0 2 1,1,3
11242:  multiply 3 2 2 0,2
11242:  inverse 4 1 2 0,1,2
11242:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11243: Facts:
11243:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11243:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11243: Goal:
11243:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11243: Order:
11243:   kbo
11243: Leaf order:
11243:  divide 7 2 0 
11243:  b1 2 0 2 1,1,3
11243:  multiply 3 2 2 0,2
11243:  inverse 4 1 2 0,1,2
11243:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11244: Facts:
11244:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11244:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11244: Goal:
11244:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11244: Order:
11244:   lpo
11244: Leaf order:
11244:  divide 7 2 0 
11244:  b1 2 0 2 1,1,3
11244:  multiply 3 2 2 0,2
11244:  inverse 4 1 2 0,1,2
11244:  a1 2 0 2 1,1,2
% SZS status Timeout for GRP469-1.p
NO CLASH, using fixed ground order
11271: Facts:
11271:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11271:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11271: Goal:
11271:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11271: Order:
11271:   nrkbo
11271: Leaf order:
11271:  divide 7 2 0 
11271:  a2 2 0 2 2,2
11271:  multiply 3 2 2 0,2
11271:  inverse 3 1 1 0,1,1,2
11271:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11272: Facts:
11272:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11272:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11272: Goal:
11272:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11272: Order:
11272:   kbo
11272: Leaf order:
11272:  divide 7 2 0 
11272:  a2 2 0 2 2,2
11272:  multiply 3 2 2 0,2
11272:  inverse 3 1 1 0,1,1,2
11272:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11273: Facts:
11273:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11273:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11273: Goal:
11273:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11273: Order:
11273:   lpo
11273: Leaf order:
11273:  divide 7 2 0 
11273:  a2 2 0 2 2,2
11273:  multiply 3 2 2 0,2
11273:  inverse 3 1 1 0,1,1,2
11273:  b2 2 0 2 1,1,1,2
Statistics :
Max weight : 55
Found proof, 64.719986s
% SZS status Unsatisfiable for GRP470-1.p
% SZS output start CNFRefutation for GRP470-1.p
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   2, {_}: divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5)))) (divide (divide ?5 ?4) ?2) =>= ?3 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide ?10 (divide ?11 (divide ?12 ?13)))) (divide (divide ?13 ?12) ?10) =>= ?11 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   8, {_}: divide (inverse ?35) (divide (divide ?36 ?37) (inverse (divide (divide ?37 ?36) (divide ?35 (divide ?38 ?39))))) =>= divide ?39 ?38 [39, 38, 37, 36, 35] by Super 4 with 2 at 1,1,2
Id : 377, {_}: divide (inverse ?1785) (multiply (divide ?1786 ?1787) (divide (divide ?1787 ?1786) (divide ?1785 (divide ?1788 ?1789)))) =>= divide ?1789 ?1788 [1789, 1788, 1787, 1786, 1785] by Demod 8 with 3 at 2,2
Id : 362, {_}: divide (inverse ?35) (multiply (divide ?36 ?37) (divide (divide ?37 ?36) (divide ?35 (divide ?38 ?39)))) =>= divide ?39 ?38 [39, 38, 37, 36, 35] by Demod 8 with 3 at 2,2
Id : 385, {_}: divide (inverse ?1855) (multiply (divide ?1856 ?1857) (divide (divide ?1857 ?1856) (divide ?1855 (divide ?1858 ?1859)))) =?= divide (multiply (divide ?1860 ?1861) (divide (divide ?1861 ?1860) (divide ?1862 (divide ?1859 ?1858)))) (inverse ?1862) [1862, 1861, 1860, 1859, 1858, 1857, 1856, 1855] by Super 377 with 362 at 2,2,2,2,2
Id : 436, {_}: divide ?1859 ?1858 =<= divide (multiply (divide ?1860 ?1861) (divide (divide ?1861 ?1860) (divide ?1862 (divide ?1859 ?1858)))) (inverse ?1862) [1862, 1861, 1860, 1858, 1859] by Demod 385 with 362 at 2
Id : 6830, {_}: divide ?34177 ?34178 =<= multiply (multiply (divide ?34179 ?34180) (divide (divide ?34180 ?34179) (divide ?34181 (divide ?34177 ?34178)))) ?34181 [34181, 34180, 34179, 34178, 34177] by Demod 436 with 3 at 3
Id : 6831, {_}: divide (inverse (divide ?34183 (divide ?34184 (divide ?34185 ?34186)))) (divide (divide ?34186 ?34185) ?34183) =?= multiply (multiply (divide ?34187 ?34188) (divide (divide ?34188 ?34187) (divide ?34189 ?34184))) ?34189 [34189, 34188, 34187, 34186, 34185, 34184, 34183] by Super 6830 with 2 at 2,2,2,1,3
Id : 7101, {_}: ?35399 =<= multiply (multiply (divide ?35400 ?35401) (divide (divide ?35401 ?35400) (divide ?35402 ?35399))) ?35402 [35402, 35401, 35400, 35399] by Demod 6831 with 2 at 2
Id : 7613, {_}: ?38021 =<= multiply (multiply (divide (inverse ?38022) ?38023) (divide (multiply ?38023 ?38022) (divide ?38024 ?38021))) ?38024 [38024, 38023, 38022, 38021] by Super 7101 with 3 at 1,2,1,3
Id : 7678, {_}: ?38552 =<= multiply (multiply (multiply (inverse ?38553) ?38554) (divide (multiply (inverse ?38554) ?38553) (divide ?38555 ?38552))) ?38555 [38555, 38554, 38553, 38552] by Super 7613 with 3 at 1,1,3
Id :   5, {_}: divide (inverse (divide ?15 (divide ?16 (divide (divide (divide ?17 ?18) ?19) (inverse (divide ?19 (divide ?20 (divide ?18 ?17)))))))) (divide ?20 ?15) =>= ?16 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 1,2,2
Id :  15, {_}: divide (inverse (divide ?15 (divide ?16 (multiply (divide (divide ?17 ?18) ?19) (divide ?19 (divide ?20 (divide ?18 ?17))))))) (divide ?20 ?15) =>= ?16 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 2,2,1,1,2
Id :  18, {_}: divide (inverse (divide ?82 ?83)) (divide (divide ?84 ?85) ?82) =?= inverse (divide ?84 (divide ?83 (multiply (divide (divide ?86 ?87) ?88) (divide ?88 (divide ?85 (divide ?87 ?86)))))) [88, 87, 86, 85, 84, 83, 82] by Super 2 with 15 at 2,1,1,2
Id : 1723, {_}: divide (divide (inverse (divide ?8026 ?8027)) (divide (divide ?8028 ?8029) ?8026)) (divide ?8029 ?8028) =>= ?8027 [8029, 8028, 8027, 8026] by Super 15 with 18 at 1,2
Id : 1779, {_}: divide (divide (inverse (multiply ?8457 ?8458)) (divide (divide ?8459 ?8460) ?8457)) (divide ?8460 ?8459) =>= inverse ?8458 [8460, 8459, 8458, 8457] by Super 1723 with 3 at 1,1,1,2
Id : 6854, {_}: divide (divide (inverse (multiply ?34395 ?34396)) (divide (divide ?34397 ?34398) ?34395)) (divide ?34398 ?34397) =?= multiply (multiply (divide ?34399 ?34400) (divide (divide ?34400 ?34399) (divide ?34401 (inverse ?34396)))) ?34401 [34401, 34400, 34399, 34398, 34397, 34396, 34395] by Super 6830 with 1779 at 2,2,2,1,3
Id : 7005, {_}: inverse ?34396 =<= multiply (multiply (divide ?34399 ?34400) (divide (divide ?34400 ?34399) (divide ?34401 (inverse ?34396)))) ?34401 [34401, 34400, 34399, 34396] by Demod 6854 with 1779 at 2
Id : 7303, {_}: inverse ?36376 =<= multiply (multiply (divide ?36377 ?36378) (divide (divide ?36378 ?36377) (multiply ?36379 ?36376))) ?36379 [36379, 36378, 36377, 36376] by Demod 7005 with 3 at 2,2,1,3
Id : 7337, {_}: inverse ?36648 =<= multiply (multiply (divide (inverse ?36649) ?36650) (divide (multiply ?36650 ?36649) (multiply ?36651 ?36648))) ?36651 [36651, 36650, 36649, 36648] by Super 7303 with 3 at 1,2,1,3
Id : 2771, {_}: divide (divide (inverse (multiply ?13734 ?13735)) (divide (divide ?13736 ?13737) ?13734)) (divide ?13737 ?13736) =>= inverse ?13735 [13737, 13736, 13735, 13734] by Super 1723 with 3 at 1,1,1,2
Id : 2814, {_}: divide (divide (inverse (multiply (inverse ?14067) ?14068)) (multiply (divide ?14069 ?14070) ?14067)) (divide ?14070 ?14069) =>= inverse ?14068 [14070, 14069, 14068, 14067] by Super 2771 with 3 at 2,1,2
Id : 7163, {_}: ?35873 =<= multiply (multiply (divide (multiply (divide ?35873 ?35874) ?35875) (inverse (multiply (inverse ?35875) ?35876))) (inverse ?35876)) ?35874 [35876, 35875, 35874, 35873] by Super 7101 with 2814 at 2,1,3
Id : 7239, {_}: ?35873 =<= multiply (multiply (multiply (multiply (divide ?35873 ?35874) ?35875) (multiply (inverse ?35875) ?35876)) (inverse ?35876)) ?35874 [35876, 35875, 35874, 35873] by Demod 7163 with 3 at 1,1,3
Id : 1759, {_}: divide (divide (inverse (divide ?8306 ?8307)) (divide (multiply ?8308 ?8309) ?8306)) (divide (inverse ?8309) ?8308) =>= ?8307 [8309, 8308, 8307, 8306] by Super 1723 with 3 at 1,2,1,2
Id : 7159, {_}: ?35853 =<= multiply (multiply (divide (divide (multiply ?35853 ?35854) ?35855) (inverse (divide ?35855 ?35856))) ?35856) (inverse ?35854) [35856, 35855, 35854, 35853] by Super 7101 with 1759 at 2,1,3
Id : 7892, {_}: ?39681 =<= multiply (multiply (multiply (divide (multiply ?39681 ?39682) ?39683) (divide ?39683 ?39684)) ?39684) (inverse ?39682) [39684, 39683, 39682, 39681] by Demod 7159 with 3 at 1,1,3
Id : 9472, {_}: ?48735 =<= multiply (multiply (multiply (multiply (multiply ?48735 ?48736) ?48737) (divide (inverse ?48737) ?48738)) ?48738) (inverse ?48736) [48738, 48737, 48736, 48735] by Super 7892 with 3 at 1,1,1,3
Id : 1266, {_}: divide (divide (inverse (divide ?5775 ?5776)) (divide (divide ?5777 ?5778) ?5775)) (divide ?5778 ?5777) =>= ?5776 [5778, 5777, 5776, 5775] by Super 15 with 18 at 1,2
Id : 7158, {_}: ?35848 =<= multiply (multiply (divide (divide (divide ?35848 ?35849) ?35850) (inverse (divide ?35850 ?35851))) ?35851) ?35849 [35851, 35850, 35849, 35848] by Super 7101 with 1266 at 2,1,3
Id : 7234, {_}: ?35848 =<= multiply (multiply (multiply (divide (divide ?35848 ?35849) ?35850) (divide ?35850 ?35851)) ?35851) ?35849 [35851, 35850, 35849, 35848] by Demod 7158 with 3 at 1,1,3
Id : 9552, {_}: divide (divide ?49359 (divide (inverse ?49360) ?49361)) ?49362 =<= multiply (multiply ?49359 ?49361) (inverse (divide ?49362 ?49360)) [49362, 49361, 49360, 49359] by Super 9472 with 7234 at 1,1,3
Id : 9555, {_}: multiply (divide ?49374 (divide (inverse (inverse ?49375)) ?49376)) ?49377 =<= multiply (multiply ?49374 ?49376) (inverse (multiply (inverse ?49377) ?49375)) [49377, 49376, 49375, 49374] by Super 9472 with 7239 at 1,1,3
Id : 10048, {_}: divide (divide (multiply ?52036 ?52037) (divide (inverse ?52038) (inverse (multiply (inverse ?52039) ?52040)))) ?52041 =<= multiply (multiply (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) ?52039) (inverse (divide ?52041 ?52038)) [52041, 52040, 52039, 52038, 52037, 52036] by Super 9552 with 9555 at 1,3
Id : 10181, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= multiply (multiply (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) ?52039) (inverse (divide ?52041 ?52038)) [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10048 with 3 at 2,1,2
Id : 10182, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= divide (divide (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) (divide (inverse ?52038) ?52039)) ?52041 [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10181 with 9552 at 3
Id : 7161, {_}: ?35863 =<= multiply (multiply (divide (divide (divide ?35863 ?35864) ?35865) (inverse (multiply ?35865 ?35866))) (inverse ?35866)) ?35864 [35866, 35865, 35864, 35863] by Super 7101 with 1779 at 2,1,3
Id : 7237, {_}: ?35863 =<= multiply (multiply (multiply (divide (divide ?35863 ?35864) ?35865) (multiply ?35865 ?35866)) (inverse ?35866)) ?35864 [35866, 35865, 35864, 35863] by Demod 7161 with 3 at 1,1,3
Id : 9554, {_}: divide (divide ?49369 (divide (inverse (inverse ?49370)) ?49371)) ?49372 =>= multiply (multiply ?49369 ?49371) (inverse (multiply ?49372 ?49370)) [49372, 49371, 49370, 49369] by Super 9472 with 7237 at 1,1,3
Id : 10183, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= divide (multiply (multiply ?52036 ?52037) (inverse (multiply (divide (inverse ?52038) ?52039) ?52040))) ?52041 [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10182 with 9554 at 1,3
Id : 12174, {_}: multiply (multiply ?64029 ?64030) (inverse (multiply (divide (inverse ?64031) ?64032) ?64033)) =<= multiply (multiply (multiply (multiply (divide (divide (multiply ?64029 ?64030) (multiply (inverse ?64031) (multiply (inverse ?64032) ?64033))) ?64034) ?64035) (multiply (inverse ?64035) ?64036)) (inverse ?64036)) ?64034 [64036, 64035, 64034, 64033, 64032, 64031, 64030, 64029] by Super 7239 with 10183 at 1,1,1,1,3
Id : 12258, {_}: multiply (multiply ?64029 ?64030) (inverse (multiply (divide (inverse ?64031) ?64032) ?64033)) =>= divide (multiply ?64029 ?64030) (multiply (inverse ?64031) (multiply (inverse ?64032) ?64033)) [64033, 64032, 64031, 64030, 64029] by Demod 12174 with 7239 at 3
Id : 12491, {_}: inverse (inverse (multiply (divide (inverse ?65291) ?65292) ?65293)) =<= multiply (multiply (divide (inverse ?65294) ?65295) (divide (multiply ?65295 ?65294) (divide (multiply ?65296 ?65297) (multiply (inverse ?65291) (multiply (inverse ?65292) ?65293))))) (multiply ?65296 ?65297) [65297, 65296, 65295, 65294, 65293, 65292, 65291] by Super 7337 with 12258 at 2,2,1,3
Id : 7157, {_}: ?35843 =<= multiply (multiply (divide (inverse ?35844) ?35845) (divide (multiply ?35845 ?35844) (divide ?35846 ?35843))) ?35846 [35846, 35845, 35844, 35843] by Super 7101 with 3 at 1,2,1,3
Id : 12726, {_}: inverse (inverse (multiply (divide (inverse ?66353) ?66354) ?66355)) =>= multiply (inverse ?66353) (multiply (inverse ?66354) ?66355) [66355, 66354, 66353] by Demod 12491 with 7157 at 3
Id :   7, {_}: divide (inverse (divide ?29 ?30)) (divide (divide ?31 (divide ?32 ?33)) ?29) =>= inverse (divide ?31 (divide ?30 (divide ?33 ?32))) [33, 32, 31, 30, 29] by Super 4 with 2 at 2,1,1,2
Id :  53, {_}: inverse (divide ?279 (divide (divide ?280 (divide (divide ?281 ?282) ?279)) (divide ?282 ?281))) =>= ?280 [282, 281, 280, 279] by Super 2 with 7 at 2
Id : 12727, {_}: inverse (inverse (multiply (divide ?66357 ?66358) ?66359)) =<= multiply (inverse (divide ?66360 (divide (divide ?66357 (divide (divide ?66361 ?66362) ?66360)) (divide ?66362 ?66361)))) (multiply (inverse ?66358) ?66359) [66362, 66361, 66360, 66359, 66358, 66357] by Super 12726 with 53 at 1,1,1,1,2
Id : 12770, {_}: inverse (inverse (multiply (divide ?66357 ?66358) ?66359)) =>= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 12727 with 53 at 1,3
Id : 12807, {_}: multiply ?66813 (inverse (multiply (divide ?66814 ?66815) ?66816)) =>= divide ?66813 (multiply ?66814 (multiply (inverse ?66815) ?66816)) [66816, 66815, 66814, 66813] by Super 3 with 12770 at 2,3
Id : 12991, {_}: inverse (inverse (divide (divide ?67798 ?67799) (multiply ?67800 (multiply (inverse ?67801) ?67802)))) =>= multiply ?67798 (multiply (inverse ?67799) (inverse (multiply (divide ?67800 ?67801) ?67802))) [67802, 67801, 67800, 67799, 67798] by Super 12770 with 12807 at 1,1,2
Id : 15565, {_}: inverse (inverse (divide (divide ?82879 ?82880) (multiply ?82881 (multiply (inverse ?82882) ?82883)))) =>= multiply ?82879 (divide (inverse ?82880) (multiply ?82881 (multiply (inverse ?82882) ?82883))) [82883, 82882, 82881, 82880, 82879] by Demod 12991 with 12807 at 2,3
Id : 6973, {_}: ?34184 =<= multiply (multiply (divide ?34187 ?34188) (divide (divide ?34188 ?34187) (divide ?34189 ?34184))) ?34189 [34189, 34188, 34187, 34184] by Demod 6831 with 2 at 2
Id : 15584, {_}: inverse (inverse (divide (divide ?83055 ?83056) ?83057)) =<= multiply ?83055 (divide (inverse ?83056) (multiply (multiply (divide ?83058 ?83059) (divide (divide ?83059 ?83058) (divide (multiply (inverse ?83060) ?83061) ?83057))) (multiply (inverse ?83060) ?83061))) [83061, 83060, 83059, 83058, 83057, 83056, 83055] by Super 15565 with 6973 at 2,1,1,2
Id : 15659, {_}: inverse (inverse (divide (divide ?83055 ?83056) ?83057)) =>= multiply ?83055 (divide (inverse ?83056) ?83057) [83057, 83056, 83055] by Demod 15584 with 6973 at 2,2,3
Id : 12825, {_}: inverse (inverse (multiply (divide ?66943 ?66944) ?66945)) =>= multiply ?66943 (multiply (inverse ?66944) ?66945) [66945, 66944, 66943] by Demod 12727 with 53 at 1,3
Id : 12858, {_}: inverse (inverse (multiply (multiply ?67174 ?67175) ?67176)) =>= multiply ?67174 (multiply (inverse (inverse ?67175)) ?67176) [67176, 67175, 67174] by Super 12825 with 3 at 1,1,1,2
Id : 13083, {_}: inverse (inverse (divide (multiply ?68472 ?68473) (multiply ?68474 (multiply (inverse ?68475) ?68476)))) =>= multiply ?68472 (multiply (inverse (inverse ?68473)) (inverse (multiply (divide ?68474 ?68475) ?68476))) [68476, 68475, 68474, 68473, 68472] by Super 12858 with 12807 at 1,1,2
Id : 14137, {_}: inverse (inverse (divide (multiply ?73757 ?73758) (multiply ?73759 (multiply (inverse ?73760) ?73761)))) =>= multiply ?73757 (divide (inverse (inverse ?73758)) (multiply ?73759 (multiply (inverse ?73760) ?73761))) [73761, 73760, 73759, 73758, 73757] by Demod 13083 with 12807 at 2,3
Id : 14155, {_}: inverse (inverse (divide (multiply ?73925 ?73926) ?73927)) =<= multiply ?73925 (divide (inverse (inverse ?73926)) (multiply (multiply (divide ?73928 ?73929) (divide (divide ?73929 ?73928) (divide (multiply (inverse ?73930) ?73931) ?73927))) (multiply (inverse ?73930) ?73931))) [73931, 73930, 73929, 73928, 73927, 73926, 73925] by Super 14137 with 6973 at 2,1,1,2
Id : 14212, {_}: inverse (inverse (divide (multiply ?73925 ?73926) ?73927)) =>= multiply ?73925 (divide (inverse (inverse ?73926)) ?73927) [73927, 73926, 73925] by Demod 14155 with 6973 at 2,2,3
Id : 15715, {_}: multiply ?83687 (inverse (divide (divide ?83688 ?83689) ?83690)) =>= divide ?83687 (multiply ?83688 (divide (inverse ?83689) ?83690)) [83690, 83689, 83688, 83687] by Super 3 with 15659 at 2,3
Id : 15912, {_}: divide (divide ?84886 (divide (inverse ?84887) ?84888)) (divide ?84889 ?84890) =<= divide (multiply ?84886 ?84888) (multiply ?84889 (divide (inverse ?84890) ?84887)) [84890, 84889, 84888, 84887, 84886] by Super 9552 with 15715 at 3
Id : 16736, {_}: inverse (inverse (divide (divide ?88411 (divide (inverse ?88412) ?88413)) (divide ?88414 ?88415))) =>= multiply ?88411 (divide (inverse (inverse ?88413)) (multiply ?88414 (divide (inverse ?88415) ?88412))) [88415, 88414, 88413, 88412, 88411] by Super 14212 with 15912 at 1,1,2
Id : 16823, {_}: multiply ?88411 (divide (inverse (divide (inverse ?88412) ?88413)) (divide ?88414 ?88415)) =<= multiply ?88411 (divide (inverse (inverse ?88413)) (multiply ?88414 (divide (inverse ?88415) ?88412))) [88415, 88414, 88413, 88412, 88411] by Demod 16736 with 15659 at 2
Id : 19503, {_}: inverse (divide (inverse (inverse ?101466)) (multiply ?101467 (divide (inverse ?101468) ?101469))) =<= multiply (multiply (divide (inverse ?101470) ?101471) (divide (multiply ?101471 ?101470) (multiply ?101472 (divide (inverse (divide (inverse ?101469) ?101466)) (divide ?101467 ?101468))))) ?101472 [101472, 101471, 101470, 101469, 101468, 101467, 101466] by Super 7337 with 16823 at 2,2,1,3
Id : 20509, {_}: inverse (divide (inverse (inverse ?107024)) (multiply ?107025 (divide (inverse ?107026) ?107027))) =>= inverse (divide (inverse (divide (inverse ?107027) ?107024)) (divide ?107025 ?107026)) [107027, 107026, 107025, 107024] by Demod 19503 with 7337 at 3
Id : 15122, {_}: multiply ?80264 (inverse (divide (multiply ?80265 ?80266) ?80267)) =<= divide ?80264 (multiply ?80265 (divide (inverse (inverse ?80266)) ?80267)) [80267, 80266, 80265, 80264] by Super 3 with 14212 at 2,3
Id : 20594, {_}: inverse (multiply (inverse (inverse ?107698)) (inverse (divide (multiply ?107699 ?107700) ?107701))) =>= inverse (divide (inverse (divide (inverse ?107701) ?107698)) (divide ?107699 (inverse ?107700))) [107701, 107700, 107699, 107698] by Super 20509 with 15122 at 1,2
Id : 20893, {_}: inverse (multiply (inverse (inverse ?108369)) (inverse (divide (multiply ?108370 ?108371) ?108372))) =>= inverse (divide (inverse (divide (inverse ?108372) ?108369)) (multiply ?108370 ?108371)) [108372, 108371, 108370, 108369] by Demod 20594 with 3 at 2,1,3
Id : 20903, {_}: inverse (multiply (inverse (inverse ?108447)) (inverse (divide ?108448 ?108449))) =<= inverse (divide (inverse (divide (inverse ?108449) ?108447)) (multiply (multiply (divide ?108450 ?108451) (divide (divide ?108451 ?108450) (divide ?108452 ?108448))) ?108452)) [108452, 108451, 108450, 108449, 108448, 108447] by Super 20893 with 6973 at 1,1,2,1,2
Id : 21279, {_}: inverse (multiply (inverse (inverse ?109423)) (inverse (divide ?109424 ?109425))) =>= inverse (divide (inverse (divide (inverse ?109425) ?109423)) ?109424) [109425, 109424, 109423] by Demod 20903 with 6973 at 2,1,3
Id : 21354, {_}: inverse (multiply (multiply ?109942 (divide (inverse ?109943) ?109944)) (inverse (divide ?109945 ?109946))) =>= inverse (divide (inverse (divide (inverse ?109946) (divide (divide ?109942 ?109943) ?109944))) ?109945) [109946, 109945, 109944, 109943, 109942] by Super 21279 with 15659 at 1,1,2
Id : 25671, {_}: inverse (divide (divide ?128948 (divide (inverse ?128949) (divide (inverse ?128950) ?128951))) ?128952) =<= inverse (divide (inverse (divide (inverse ?128949) (divide (divide ?128948 ?128950) ?128951))) ?128952) [128952, 128951, 128950, 128949, 128948] by Demod 21354 with 9552 at 1,2
Id : 25729, {_}: inverse (divide (divide ?129446 (divide (inverse (divide ?129447 (divide (divide ?129448 (divide (divide ?129449 ?129450) ?129447)) (divide ?129450 ?129449)))) (divide (inverse ?129451) ?129452))) ?129453) =>= inverse (divide (inverse (divide ?129448 (divide (divide ?129446 ?129451) ?129452))) ?129453) [129453, 129452, 129451, 129450, 129449, 129448, 129447, 129446] by Super 25671 with 53 at 1,1,1,1,3
Id : 26075, {_}: inverse (divide (divide ?131096 (divide ?131097 (divide (inverse ?131098) ?131099))) ?131100) =<= inverse (divide (inverse (divide ?131097 (divide (divide ?131096 ?131098) ?131099))) ?131100) [131100, 131099, 131098, 131097, 131096] by Demod 25729 with 53 at 1,2,1,1,2
Id : 26111, {_}: inverse (divide (divide ?131425 (divide ?131426 (divide (inverse (inverse ?131427)) ?131428))) ?131429) =>= inverse (divide (inverse (divide ?131426 (divide (multiply ?131425 ?131427) ?131428))) ?131429) [131429, 131428, 131427, 131426, 131425] by Super 26075 with 3 at 1,2,1,1,1,3
Id : 30666, {_}: inverse (inverse (divide (inverse (divide ?153822 (divide (multiply ?153823 ?153824) ?153825))) ?153826)) =>= multiply ?153823 (divide (inverse (divide ?153822 (divide (inverse (inverse ?153824)) ?153825))) ?153826) [153826, 153825, 153824, 153823, 153822] by Super 15659 with 26111 at 1,2
Id : 30731, {_}: inverse (inverse (multiply ?154370 ?154371)) =<= multiply ?154370 (divide (inverse (divide ?154372 (divide (inverse (inverse ?154371)) (divide ?154373 ?154374)))) (divide (divide ?154374 ?154373) ?154372)) [154374, 154373, 154372, 154371, 154370] by Super 30666 with 2 at 1,1,2
Id : 31025, {_}: inverse (inverse (multiply ?155310 ?155311)) =>= multiply ?155310 (inverse (inverse ?155311)) [155311, 155310] by Demod 30731 with 2 at 2,3
Id : 7367, {_}: inverse ?36880 =<= multiply (multiply (multiply ?36881 ?36882) (divide (divide (inverse ?36882) ?36881) (multiply ?36883 ?36880))) ?36883 [36883, 36882, 36881, 36880] by Super 7303 with 3 at 1,1,3
Id : 15740, {_}: inverse (inverse (divide (divide ?83867 ?83868) ?83869)) =>= multiply ?83867 (divide (inverse ?83868) ?83869) [83869, 83868, 83867] by Demod 15584 with 6973 at 2,2,3
Id : 15787, {_}: inverse (inverse (multiply (multiply ?84179 ?84180) (inverse (multiply ?84181 ?84182)))) =>= multiply ?84179 (divide (inverse (divide (inverse (inverse ?84182)) ?84180)) ?84181) [84182, 84181, 84180, 84179] by Super 15740 with 9554 at 1,1,2
Id : 15809, {_}: multiply ?84179 (multiply (inverse (inverse ?84180)) (inverse (multiply ?84181 ?84182))) =>= multiply ?84179 (divide (inverse (divide (inverse (inverse ?84182)) ?84180)) ?84181) [84182, 84181, 84180, 84179] by Demod 15787 with 12858 at 2
Id : 16238, {_}: inverse (multiply (inverse (inverse ?86040)) (inverse (multiply ?86041 ?86042))) =<= multiply (multiply (multiply ?86043 ?86044) (divide (divide (inverse ?86044) ?86043) (multiply ?86045 (divide (inverse (divide (inverse (inverse ?86042)) ?86040)) ?86041)))) ?86045 [86045, 86044, 86043, 86042, 86041, 86040] by Super 7367 with 15809 at 2,2,1,3
Id : 16326, {_}: inverse (multiply (inverse (inverse ?86040)) (inverse (multiply ?86041 ?86042))) =>= inverse (divide (inverse (divide (inverse (inverse ?86042)) ?86040)) ?86041) [86042, 86041, 86040] by Demod 16238 with 7367 at 3
Id : 31064, {_}: inverse (inverse (divide (inverse (divide (inverse (inverse ?155519)) ?155520)) ?155521)) =>= multiply (inverse (inverse ?155520)) (inverse (inverse (inverse (multiply ?155521 ?155519)))) [155521, 155520, 155519] by Super 31025 with 16326 at 1,2
Id : 30884, {_}: inverse (inverse (multiply ?154370 ?154371)) =>= multiply ?154370 (inverse (inverse ?154371)) [154371, 154370] by Demod 30731 with 2 at 2,3
Id : 32647, {_}: inverse (inverse (divide (inverse (divide (inverse (inverse ?161221)) ?161222)) ?161223)) =>= multiply (inverse (inverse ?161222)) (inverse (multiply ?161223 (inverse (inverse ?161221)))) [161223, 161222, 161221] by Demod 31064 with 30884 at 1,2,3
Id : 32648, {_}: inverse (inverse (divide (inverse (divide (inverse ?161225) ?161226)) ?161227)) =<= multiply (inverse (inverse ?161226)) (inverse (multiply ?161227 (inverse (inverse (divide ?161228 (divide (divide ?161225 (divide (divide ?161229 ?161230) ?161228)) (divide ?161230 ?161229))))))) [161230, 161229, 161228, 161227, 161226, 161225] by Super 32647 with 53 at 1,1,1,1,1,1,2
Id : 33188, {_}: inverse (inverse (divide (inverse (divide (inverse ?162681) ?162682)) ?162683)) =>= multiply (inverse (inverse ?162682)) (inverse (multiply ?162683 (inverse ?162681))) [162683, 162682, 162681] by Demod 32648 with 53 at 1,2,1,2,3
Id : 33189, {_}: inverse (inverse (divide (inverse (divide ?162685 ?162686)) ?162687)) =<= multiply (inverse (inverse ?162686)) (inverse (multiply ?162687 (inverse (divide ?162688 (divide (divide ?162685 (divide (divide ?162689 ?162690) ?162688)) (divide ?162690 ?162689)))))) [162690, 162689, 162688, 162687, 162686, 162685] by Super 33188 with 53 at 1,1,1,1,1,2
Id : 33732, {_}: inverse (inverse (divide (inverse (divide ?164373 ?164374)) ?164375)) =>= multiply (inverse (inverse ?164374)) (inverse (multiply ?164375 ?164373)) [164375, 164374, 164373] by Demod 33189 with 53 at 2,1,2,3
Id : 33815, {_}: inverse (inverse (multiply (inverse (divide ?164946 ?164947)) ?164948)) =<= multiply (inverse (inverse ?164947)) (inverse (multiply (inverse ?164948) ?164946)) [164948, 164947, 164946] by Super 33732 with 3 at 1,1,2
Id : 34748, {_}: multiply (inverse (divide ?166758 ?166759)) (inverse (inverse ?166760)) =<= multiply (inverse (inverse ?166759)) (inverse (multiply (inverse ?166760) ?166758)) [166760, 166759, 166758] by Demod 33815 with 30884 at 2
Id : 34749, {_}: multiply (inverse (divide ?166762 ?166763)) (inverse (inverse (divide ?166764 (divide (divide ?166765 (divide (divide ?166766 ?166767) ?166764)) (divide ?166767 ?166766))))) =>= multiply (inverse (inverse ?166763)) (inverse (multiply ?166765 ?166762)) [166767, 166766, 166765, 166764, 166763, 166762] by Super 34748 with 53 at 1,1,2,3
Id : 35052, {_}: multiply (inverse (divide ?166762 ?166763)) (inverse ?166765) =<= multiply (inverse (inverse ?166763)) (inverse (multiply ?166765 ?166762)) [166765, 166763, 166762] by Demod 34749 with 53 at 1,2,2
Id : 35278, {_}: multiply (inverse (divide ?167869 ?167870)) (inverse (divide ?167871 ?167872)) =<= divide (inverse (inverse ?167870)) (multiply ?167871 (multiply (inverse ?167872) ?167869)) [167872, 167871, 167870, 167869] by Super 12807 with 35052 at 2
Id : 33419, {_}: inverse (inverse (divide (inverse (divide ?162685 ?162686)) ?162687)) =>= multiply (inverse (inverse ?162686)) (inverse (multiply ?162687 ?162685)) [162687, 162686, 162685] by Demod 33189 with 53 at 2,1,2,3
Id : 35198, {_}: inverse (inverse (divide (inverse (divide ?162685 ?162686)) ?162687)) =>= multiply (inverse (divide ?162685 ?162686)) (inverse ?162687) [162687, 162686, 162685] by Demod 33419 with 35052 at 3
Id :  16, {_}: divide (inverse (divide ?64 (divide ?65 (divide (divide ?66 ?67) (inverse (divide ?67 (divide ?68 (multiply (divide (divide ?69 ?70) ?71) (divide ?71 (divide ?66 (divide ?70 ?69))))))))))) (divide ?68 ?64) =>= ?65 [71, 70, 69, 68, 67, 66, 65, 64] by Super 2 with 15 at 1,2,2
Id :  38, {_}: divide (inverse (divide ?64 (divide ?65 (multiply (divide ?66 ?67) (divide ?67 (divide ?68 (multiply (divide (divide ?69 ?70) ?71) (divide ?71 (divide ?66 (divide ?70 ?69)))))))))) (divide ?68 ?64) =>= ?65 [71, 70, 69, 68, 67, 66, 65, 64] by Demod 16 with 3 at 2,2,1,1,2
Id : 38131, {_}: inverse (inverse (divide (inverse ?178374) ?178375)) =<= multiply (inverse (divide (inverse (divide ?178376 (divide ?178374 (multiply (divide ?178377 ?178378) (divide ?178378 (divide ?178379 (multiply (divide (divide ?178380 ?178381) ?178382) (divide ?178382 (divide ?178377 (divide ?178381 ?178380)))))))))) (divide ?178379 ?178376))) (inverse ?178375) [178382, 178381, 178380, 178379, 178378, 178377, 178376, 178375, 178374] by Super 35198 with 38 at 1,1,1,1,2
Id : 38834, {_}: inverse (inverse (divide (inverse ?178374) ?178375)) =>= multiply (inverse ?178374) (inverse ?178375) [178375, 178374] by Demod 38131 with 38 at 1,1,3
Id : 39627, {_}: multiply ?187316 (inverse (divide (inverse ?187317) ?187318)) =>= divide ?187316 (multiply (inverse ?187317) (inverse ?187318)) [187318, 187317, 187316] by Super 3 with 38834 at 2,3
Id : 39628, {_}: multiply ?187320 (inverse (divide ?187321 ?187322)) =<= divide ?187320 (multiply (inverse (divide ?187323 (divide (divide ?187321 (divide (divide ?187324 ?187325) ?187323)) (divide ?187325 ?187324)))) (inverse ?187322)) [187325, 187324, 187323, 187322, 187321, 187320] by Super 39627 with 53 at 1,1,2,2
Id : 39950, {_}: multiply ?187320 (inverse (divide ?187321 ?187322)) =>= divide ?187320 (multiply ?187321 (inverse ?187322)) [187322, 187321, 187320] by Demod 39628 with 53 at 1,2,3
Id : 45468, {_}: divide (inverse (divide ?167869 ?167870)) (multiply ?167871 (inverse ?167872)) =<= divide (inverse (inverse ?167870)) (multiply ?167871 (multiply (inverse ?167872) ?167869)) [167872, 167871, 167870, 167869] by Demod 35278 with 39950 at 2
Id : 45552, {_}: divide (inverse ?204144) (multiply (divide ?204145 ?204146) (divide (divide ?204146 ?204145) (divide ?204144 (divide (inverse (divide ?204147 ?204148)) (multiply ?204149 (inverse ?204150)))))) =>= divide (multiply ?204149 (multiply (inverse ?204150) ?204147)) (inverse (inverse ?204148)) [204150, 204149, 204148, 204147, 204146, 204145, 204144] by Super 362 with 45468 at 2,2,2,2,2
Id : 45856, {_}: divide (multiply ?204149 (inverse ?204150)) (inverse (divide ?204147 ?204148)) =<= divide (multiply ?204149 (multiply (inverse ?204150) ?204147)) (inverse (inverse ?204148)) [204148, 204147, 204150, 204149] by Demod 45552 with 362 at 2
Id : 45857, {_}: divide (multiply ?204149 (inverse ?204150)) (inverse (divide ?204147 ?204148)) =<= multiply (multiply ?204149 (multiply (inverse ?204150) ?204147)) (inverse ?204148) [204148, 204147, 204150, 204149] by Demod 45856 with 3 at 3
Id : 46240, {_}: multiply (multiply ?206273 (inverse ?206274)) (divide ?206275 ?206276) =<= multiply (multiply ?206273 (multiply (inverse ?206274) ?206275)) (inverse ?206276) [206276, 206275, 206274, 206273] by Demod 45857 with 3 at 2
Id : 30915, {_}: multiply (multiply ?67174 ?67175) (inverse (inverse ?67176)) =?= multiply ?67174 (multiply (inverse (inverse ?67175)) ?67176) [67176, 67175, 67174] by Demod 12858 with 30884 at 2
Id : 46333, {_}: multiply (multiply ?207013 (inverse (inverse ?207014))) (divide ?207015 ?207016) =<= multiply (multiply (multiply ?207013 ?207014) (inverse (inverse ?207015))) (inverse ?207016) [207016, 207015, 207014, 207013] by Super 46240 with 30915 at 1,3
Id : 1890, {_}: divide (inverse (divide (divide ?8674 ?8675) ?8676)) ?8677 =<= inverse (divide (inverse (divide ?8678 ?8677)) (divide ?8676 (divide ?8678 (divide ?8675 ?8674)))) [8678, 8677, 8676, 8675, 8674] by Super 7 with 1266 at 2,2
Id : 1908, {_}: divide (inverse (divide (divide (inverse ?8832) ?8833) ?8834)) ?8835 =<= inverse (divide (inverse (divide ?8836 ?8835)) (divide ?8834 (divide ?8836 (multiply ?8833 ?8832)))) [8836, 8835, 8834, 8833, 8832] by Super 1890 with 3 at 2,2,2,1,3
Id :  61, {_}: divide (inverse (divide ?349 ?350)) (divide (divide ?351 (divide ?352 ?353)) ?349) =>= inverse (divide ?351 (divide ?350 (divide ?353 ?352))) [353, 352, 351, 350, 349] by Super 4 with 2 at 2,1,1,2
Id :  65, {_}: divide (inverse (divide ?382 ?383)) (divide (divide ?384 (multiply ?385 ?386)) ?382) =>= inverse (divide ?384 (divide ?383 (divide (inverse ?386) ?385))) [386, 385, 384, 383, 382] by Super 61 with 3 at 2,1,2,2
Id : 16676, {_}: divide (inverse ?87869) (multiply (divide ?87870 ?87871) (divide (divide ?87871 ?87870) (divide ?87869 (divide (divide ?87872 (divide (inverse ?87873) ?87874)) (divide ?87875 ?87876))))) =>= divide (multiply ?87875 (divide (inverse ?87876) ?87873)) (multiply ?87872 ?87874) [87876, 87875, 87874, 87873, 87872, 87871, 87870, 87869] by Super 362 with 15912 at 2,2,2,2,2
Id : 16850, {_}: divide (divide ?87875 ?87876) (divide ?87872 (divide (inverse ?87873) ?87874)) =<= divide (multiply ?87875 (divide (inverse ?87876) ?87873)) (multiply ?87872 ?87874) [87874, 87873, 87872, 87876, 87875] by Demod 16676 with 362 at 2
Id : 17219, {_}: inverse (inverse (divide (divide ?91192 ?91193) (divide ?91194 (divide (inverse ?91195) ?91196)))) =>= multiply ?91192 (divide (inverse (inverse (divide (inverse ?91193) ?91195))) (multiply ?91194 ?91196)) [91196, 91195, 91194, 91193, 91192] by Super 14212 with 16850 at 1,1,2
Id : 17309, {_}: multiply ?91192 (divide (inverse ?91193) (divide ?91194 (divide (inverse ?91195) ?91196))) =<= multiply ?91192 (divide (inverse (inverse (divide (inverse ?91193) ?91195))) (multiply ?91194 ?91196)) [91196, 91195, 91194, 91193, 91192] by Demod 17219 with 15659 at 2
Id : 22082, {_}: inverse (divide (inverse (inverse (divide (inverse ?112093) ?112094))) (multiply ?112095 ?112096)) =<= multiply (multiply (divide (inverse ?112097) ?112098) (divide (multiply ?112098 ?112097) (multiply ?112099 (divide (inverse ?112093) (divide ?112095 (divide (inverse ?112094) ?112096)))))) ?112099 [112099, 112098, 112097, 112096, 112095, 112094, 112093] by Super 7337 with 17309 at 2,2,1,3
Id : 22476, {_}: inverse (divide (inverse (inverse (divide (inverse ?113967) ?113968))) (multiply ?113969 ?113970)) =>= inverse (divide (inverse ?113967) (divide ?113969 (divide (inverse ?113968) ?113970))) [113970, 113969, 113968, 113967] by Demod 22082 with 7337 at 3
Id : 22508, {_}: inverse (divide (inverse (inverse (divide ?114204 ?114205))) (multiply ?114206 ?114207)) =<= inverse (divide (inverse (divide ?114208 (divide (divide ?114204 (divide (divide ?114209 ?114210) ?114208)) (divide ?114210 ?114209)))) (divide ?114206 (divide (inverse ?114205) ?114207))) [114210, 114209, 114208, 114207, 114206, 114205, 114204] by Super 22476 with 53 at 1,1,1,1,1,2
Id : 22780, {_}: inverse (divide (inverse (inverse (divide ?114204 ?114205))) (multiply ?114206 ?114207)) =>= inverse (divide ?114204 (divide ?114206 (divide (inverse ?114205) ?114207))) [114207, 114206, 114205, 114204] by Demod 22508 with 53 at 1,1,3
Id : 40158, {_}: inverse (inverse (divide ?188657 ?188658)) =<= multiply (multiply (multiply ?188659 ?188660) (divide (divide (inverse ?188660) ?188659) (divide ?188661 (multiply ?188657 (inverse ?188658))))) ?188661 [188661, 188660, 188659, 188658, 188657] by Super 7367 with 39950 at 2,2,1,3
Id : 7191, {_}: ?36095 =<= multiply (multiply (multiply ?36096 ?36097) (divide (divide (inverse ?36097) ?36096) (divide ?36098 ?36095))) ?36098 [36098, 36097, 36096, 36095] by Super 7101 with 3 at 1,1,3
Id : 40350, {_}: inverse (inverse (divide ?188657 ?188658)) =>= multiply ?188657 (inverse ?188658) [188658, 188657] by Demod 40158 with 7191 at 3
Id : 40577, {_}: inverse (divide (multiply ?114204 (inverse ?114205)) (multiply ?114206 ?114207)) =?= inverse (divide ?114204 (divide ?114206 (divide (inverse ?114205) ?114207))) [114207, 114206, 114205, 114204] by Demod 22780 with 40350 at 1,1,2
Id : 40645, {_}: divide (divide ?189801 (divide (multiply ?189802 (inverse ?189803)) ?189804)) ?189805 =<= multiply (multiply ?189801 ?189804) (inverse (multiply ?189805 (divide ?189802 ?189803))) [189805, 189804, 189803, 189802, 189801] by Super 9554 with 40350 at 1,2,1,2
Id : 30968, {_}: multiply ?154958 (inverse (multiply ?154959 ?154960)) =<= divide ?154958 (multiply ?154959 (inverse (inverse ?154960))) [154960, 154959, 154958] by Super 3 with 30884 at 2,3
Id : 40629, {_}: multiply ?189704 (inverse (multiply ?189705 (divide ?189706 ?189707))) =>= divide ?189704 (multiply ?189705 (multiply ?189706 (inverse ?189707))) [189707, 189706, 189705, 189704] by Super 30968 with 40350 at 2,2,3
Id : 62131, {_}: divide (divide ?257834 (divide (multiply ?257835 (inverse ?257836)) ?257837)) ?257838 =<= divide (multiply ?257834 ?257837) (multiply ?257838 (multiply ?257835 (inverse ?257836))) [257838, 257837, 257836, 257835, 257834] by Demod 40645 with 40629 at 3
Id : 62178, {_}: divide (divide ?258249 (divide (multiply (multiply (divide ?258250 ?258251) (divide (divide ?258251 ?258250) (divide (inverse ?258252) ?258253))) (inverse ?258252)) ?258254)) ?258255 =>= divide (multiply ?258249 ?258254) (multiply ?258255 ?258253) [258255, 258254, 258253, 258252, 258251, 258250, 258249] by Super 62131 with 6973 at 2,2,3
Id : 62493, {_}: divide (divide ?258249 (divide ?258253 ?258254)) ?258255 =<= divide (multiply ?258249 ?258254) (multiply ?258255 ?258253) [258255, 258254, 258253, 258249] by Demod 62178 with 6973 at 1,2,1,2
Id : 62632, {_}: inverse (divide (divide ?114204 (divide ?114207 (inverse ?114205))) ?114206) =?= inverse (divide ?114204 (divide ?114206 (divide (inverse ?114205) ?114207))) [114206, 114205, 114207, 114204] by Demod 40577 with 62493 at 1,2
Id : 62637, {_}: inverse (divide (divide ?114204 (multiply ?114207 ?114205)) ?114206) =<= inverse (divide ?114204 (divide ?114206 (divide (inverse ?114205) ?114207))) [114206, 114205, 114207, 114204] by Demod 62632 with 3 at 2,1,1,2
Id : 62641, {_}: divide (inverse (divide ?382 ?383)) (divide (divide ?384 (multiply ?385 ?386)) ?382) =>= inverse (divide (divide ?384 (multiply ?385 ?386)) ?383) [386, 385, 384, 383, 382] by Demod 65 with 62637 at 3
Id :  19, {_}: divide (inverse ?90) (divide (divide ?91 ?92) (inverse (divide (divide ?92 ?91) (divide ?90 (multiply (divide (divide ?93 ?94) ?95) (divide ?95 (divide ?96 (divide ?94 ?93)))))))) =>= ?96 [96, 95, 94, 93, 92, 91, 90] by Super 2 with 15 at 1,1,2
Id :  40, {_}: divide (inverse ?90) (multiply (divide ?91 ?92) (divide (divide ?92 ?91) (divide ?90 (multiply (divide (divide ?93 ?94) ?95) (divide ?95 (divide ?96 (divide ?94 ?93))))))) =>= ?96 [96, 95, 94, 93, 92, 91, 90] by Demod 19 with 3 at 2,2
Id : 89822, {_}: divide (inverse (divide ?333797 ?333798)) (divide ?333799 ?333797) =?= inverse (divide (divide (inverse ?333800) (multiply (divide ?333801 ?333802) (divide (divide ?333802 ?333801) (divide ?333800 (multiply (divide (divide ?333803 ?333804) ?333805) (divide ?333805 (divide ?333799 (divide ?333804 ?333803)))))))) ?333798) [333805, 333804, 333803, 333802, 333801, 333800, 333799, 333798, 333797] by Super 62641 with 40 at 1,2,2
Id : 90396, {_}: divide (inverse (divide ?333797 ?333798)) (divide ?333799 ?333797) =>= inverse (divide ?333799 ?333798) [333799, 333798, 333797] by Demod 89822 with 40 at 1,1,3
Id : 101099, {_}: inverse (divide (divide ?31 (divide ?32 ?33)) ?30) =?= inverse (divide ?31 (divide ?30 (divide ?33 ?32))) [30, 33, 32, 31] by Demod 7 with 90396 at 2
Id : 101112, {_}: divide (inverse (divide (divide (inverse ?8832) ?8833) ?8834)) ?8835 =<= inverse (divide (divide (inverse (divide ?8836 ?8835)) (divide (multiply ?8833 ?8832) ?8836)) ?8834) [8836, 8835, 8834, 8833, 8832] by Demod 1908 with 101099 at 3
Id : 101118, {_}: divide (inverse (divide (divide (inverse ?8832) ?8833) ?8834)) ?8835 =<= inverse (divide (inverse (divide (multiply ?8833 ?8832) ?8835)) ?8834) [8835, 8834, 8833, 8832] by Demod 101112 with 90396 at 1,1,3
Id : 101316, {_}: divide (inverse (divide (divide (inverse ?356253) ?356254) (divide ?356255 (multiply ?356254 ?356253)))) ?356256 =>= inverse (inverse (divide ?356255 ?356256)) [356256, 356255, 356254, 356253] by Super 101118 with 90396 at 1,3
Id :  12, {_}: divide (inverse (divide ?53 (divide ?54 (multiply ?55 ?56)))) (divide (divide (inverse ?56) ?55) ?53) =>= ?54 [56, 55, 54, 53] by Super 2 with 3 at 2,2,1,1,2
Id : 101095, {_}: inverse (divide (divide (inverse ?56) ?55) (divide ?54 (multiply ?55 ?56))) =>= ?54 [54, 55, 56] by Demod 12 with 90396 at 2
Id : 101519, {_}: divide ?356255 ?356256 =<= inverse (inverse (divide ?356255 ?356256)) [356256, 356255] by Demod 101316 with 101095 at 1,2
Id : 101520, {_}: divide ?356255 ?356256 =<= multiply ?356255 (inverse ?356256) [356256, 356255] by Demod 101519 with 40350 at 3
Id : 102152, {_}: multiply (divide ?207013 (inverse ?207014)) (divide ?207015 ?207016) =<= multiply (multiply (multiply ?207013 ?207014) (inverse (inverse ?207015))) (inverse ?207016) [207016, 207015, 207014, 207013] by Demod 46333 with 101520 at 1,2
Id : 102153, {_}: multiply (divide ?207013 (inverse ?207014)) (divide ?207015 ?207016) =<= divide (multiply (multiply ?207013 ?207014) (inverse (inverse ?207015))) ?207016 [207016, 207015, 207014, 207013] by Demod 102152 with 101520 at 3
Id : 102154, {_}: multiply (divide ?207013 (inverse ?207014)) (divide ?207015 ?207016) =>= divide (divide (multiply ?207013 ?207014) (inverse ?207015)) ?207016 [207016, 207015, 207014, 207013] by Demod 102153 with 101520 at 1,3
Id : 102308, {_}: multiply (multiply ?207013 ?207014) (divide ?207015 ?207016) =<= divide (divide (multiply ?207013 ?207014) (inverse ?207015)) ?207016 [207016, 207015, 207014, 207013] by Demod 102154 with 3 at 1,2
Id : 102309, {_}: multiply (multiply ?207013 ?207014) (divide ?207015 ?207016) =>= divide (multiply (multiply ?207013 ?207014) ?207015) ?207016 [207016, 207015, 207014, 207013] by Demod 102308 with 3 at 1,3
Id : 102310, {_}: ?38552 =<= multiply (divide (multiply (multiply (inverse ?38553) ?38554) (multiply (inverse ?38554) ?38553)) (divide ?38555 ?38552)) ?38555 [38555, 38554, 38553, 38552] by Demod 7678 with 102309 at 1,3
Id : 52549, {_}: multiply (multiply ?225200 (inverse (inverse ?225201))) (divide ?225202 ?225203) =<= multiply (multiply (multiply ?225200 ?225201) (inverse (inverse ?225202))) (inverse ?225203) [225203, 225202, 225201, 225200] by Super 46240 with 30915 at 1,3
Id : 52684, {_}: multiply (multiply ?226211 (inverse (inverse ?226212))) (divide ?226213 (inverse ?226214)) =<= multiply (multiply ?226211 ?226212) (multiply (inverse (inverse (inverse (inverse ?226213)))) ?226214) [226214, 226213, 226212, 226211] by Super 52549 with 30915 at 3
Id : 53235, {_}: multiply (multiply ?226211 (inverse (inverse ?226212))) (multiply ?226213 ?226214) =<= multiply (multiply ?226211 ?226212) (multiply (inverse (inverse (inverse (inverse ?226213)))) ?226214) [226214, 226213, 226212, 226211] by Demod 52684 with 3 at 2,2
Id : 102165, {_}: multiply (divide ?226211 (inverse ?226212)) (multiply ?226213 ?226214) =<= multiply (multiply ?226211 ?226212) (multiply (inverse (inverse (inverse (inverse ?226213)))) ?226214) [226214, 226213, 226212, 226211] by Demod 53235 with 101520 at 1,2
Id : 102295, {_}: multiply (multiply ?226211 ?226212) (multiply ?226213 ?226214) =<= multiply (multiply ?226211 ?226212) (multiply (inverse (inverse (inverse (inverse ?226213)))) ?226214) [226214, 226213, 226212, 226211] by Demod 102165 with 3 at 1,2
Id : 30916, {_}: multiply (divide ?66357 ?66358) (inverse (inverse ?66359)) =>= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 12770 with 30884 at 2
Id : 9965, {_}: divide (divide ?51846 (divide (inverse (inverse ?51847)) ?51848)) ?51849 =>= multiply (multiply ?51846 ?51848) (inverse (multiply ?51849 ?51847)) [51849, 51848, 51847, 51846] by Super 9472 with 7237 at 1,1,3
Id : 9976, {_}: divide (divide ?51938 (multiply (inverse (inverse ?51939)) ?51940)) ?51941 =<= multiply (multiply ?51938 (inverse ?51940)) (inverse (multiply ?51941 ?51939)) [51941, 51940, 51939, 51938] by Super 9965 with 3 at 2,1,2
Id : 40724, {_}: inverse (inverse (divide ?190294 ?190295)) =>= multiply ?190294 (inverse ?190295) [190295, 190294] by Demod 40158 with 7191 at 3
Id : 40043, {_}: divide (divide ?49359 (divide (inverse ?49360) ?49361)) ?49362 =<= divide (multiply ?49359 ?49361) (multiply ?49362 (inverse ?49360)) [49362, 49361, 49360, 49359] by Demod 9552 with 39950 at 3
Id : 40771, {_}: inverse (inverse (divide (divide ?190577 (divide (inverse ?190578) ?190579)) ?190580)) =>= multiply (multiply ?190577 ?190579) (inverse (multiply ?190580 (inverse ?190578))) [190580, 190579, 190578, 190577] by Super 40724 with 40043 at 1,1,2
Id : 42949, {_}: multiply (divide ?196696 (divide (inverse ?196697) ?196698)) (inverse ?196699) =<= multiply (multiply ?196696 ?196698) (inverse (multiply ?196699 (inverse ?196697))) [196699, 196698, 196697, 196696] by Demod 40771 with 40350 at 2
Id : 42950, {_}: multiply (divide ?196701 (divide (inverse (divide ?196702 (divide (divide ?196703 (divide (divide ?196704 ?196705) ?196702)) (divide ?196705 ?196704)))) ?196706)) (inverse ?196707) =>= multiply (multiply ?196701 ?196706) (inverse (multiply ?196707 ?196703)) [196707, 196706, 196705, 196704, 196703, 196702, 196701] by Super 42949 with 53 at 2,1,2,3
Id : 43226, {_}: multiply (divide ?196701 (divide ?196703 ?196706)) (inverse ?196707) =<= multiply (multiply ?196701 ?196706) (inverse (multiply ?196707 ?196703)) [196707, 196706, 196703, 196701] by Demod 42950 with 53 at 1,2,1,2
Id : 43404, {_}: divide (divide ?51938 (multiply (inverse (inverse ?51939)) ?51940)) ?51941 =<= multiply (divide ?51938 (divide ?51939 (inverse ?51940))) (inverse ?51941) [51941, 51940, 51939, 51938] by Demod 9976 with 43226 at 3
Id : 43406, {_}: divide (divide ?51938 (multiply (inverse (inverse ?51939)) ?51940)) ?51941 =>= multiply (divide ?51938 (multiply ?51939 ?51940)) (inverse ?51941) [51941, 51940, 51939, 51938] by Demod 43404 with 3 at 2,1,3
Id : 62671, {_}: divide (divide (divide ?259262 (divide ?259263 ?259264)) (inverse (inverse ?259265))) ?259266 =>= multiply (divide (multiply ?259262 ?259264) (multiply ?259265 ?259263)) (inverse ?259266) [259266, 259265, 259264, 259263, 259262] by Super 43406 with 62493 at 1,2
Id : 63074, {_}: divide (multiply (divide ?259262 (divide ?259263 ?259264)) (inverse ?259265)) ?259266 =<= multiply (divide (multiply ?259262 ?259264) (multiply ?259265 ?259263)) (inverse ?259266) [259266, 259265, 259264, 259263, 259262] by Demod 62671 with 3 at 1,2
Id : 84448, {_}: divide (multiply (divide ?320603 (divide ?320604 ?320605)) (inverse ?320606)) ?320607 =<= multiply (divide (divide ?320603 (divide ?320604 ?320605)) ?320606) (inverse ?320607) [320607, 320606, 320605, 320604, 320603] by Demod 63074 with 62493 at 1,3
Id : 84555, {_}: divide (multiply (divide (inverse (divide ?321565 (divide ?321566 (multiply (divide (divide ?321567 ?321568) ?321569) (divide ?321569 (divide ?321570 (divide ?321568 ?321567))))))) (divide ?321570 ?321565)) (inverse ?321571)) ?321572 =>= multiply (divide ?321566 ?321571) (inverse ?321572) [321572, 321571, 321570, 321569, 321568, 321567, 321566, 321565] by Super 84448 with 15 at 1,1,3
Id : 85061, {_}: divide (multiply ?321566 (inverse ?321571)) ?321572 =<= multiply (divide ?321566 ?321571) (inverse ?321572) [321572, 321571, 321566] by Demod 84555 with 15 at 1,1,2
Id : 85186, {_}: divide (multiply ?66357 (inverse ?66358)) (inverse ?66359) =>= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 30916 with 85061 at 2
Id : 85229, {_}: multiply (multiply ?66357 (inverse ?66358)) ?66359 =?= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 85186 with 3 at 2
Id : 102180, {_}: multiply (divide ?66357 ?66358) ?66359 =<= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 85229 with 101520 at 1,2
Id : 102296, {_}: multiply (multiply ?226211 ?226212) (multiply ?226213 ?226214) =<= multiply (divide (multiply ?226211 ?226212) (inverse (inverse (inverse ?226213)))) ?226214 [226214, 226213, 226212, 226211] by Demod 102295 with 102180 at 3
Id : 102297, {_}: multiply (multiply ?226211 ?226212) (multiply ?226213 ?226214) =<= multiply (multiply (multiply ?226211 ?226212) (inverse (inverse ?226213))) ?226214 [226214, 226213, 226212, 226211] by Demod 102296 with 3 at 1,3
Id : 102298, {_}: multiply (multiply ?226211 ?226212) (multiply ?226213 ?226214) =<= multiply (divide (multiply ?226211 ?226212) (inverse ?226213)) ?226214 [226214, 226213, 226212, 226211] by Demod 102297 with 101520 at 1,3
Id : 102299, {_}: multiply (multiply ?226211 ?226212) (multiply ?226213 ?226214) =?= multiply (multiply (multiply ?226211 ?226212) ?226213) ?226214 [226214, 226213, 226212, 226211] by Demod 102298 with 3 at 1,3
Id : 102317, {_}: ?38552 =<= multiply (divide (multiply (multiply (multiply (inverse ?38553) ?38554) (inverse ?38554)) ?38553) (divide ?38555 ?38552)) ?38555 [38555, 38554, 38553, 38552] by Demod 102310 with 102299 at 1,1,3
Id : 102318, {_}: ?38552 =<= multiply (divide (multiply (divide (multiply (inverse ?38553) ?38554) ?38554) ?38553) (divide ?38555 ?38552)) ?38555 [38555, 38554, 38553, 38552] by Demod 102317 with 101520 at 1,1,1,3
Id : 2791, {_}: divide (divide (inverse (multiply ?13892 ?13893)) (divide (divide (inverse ?13894) ?13895) ?13892)) (multiply ?13895 ?13894) =>= inverse ?13893 [13895, 13894, 13893, 13892] by Super 2771 with 3 at 2,2
Id : 89847, {_}: divide (inverse ?334058) (multiply (divide ?334059 ?334060) (divide (divide ?334060 ?334059) (divide ?334058 (multiply (divide (divide ?334061 ?334062) ?334063) (divide ?334063 (divide ?334064 (divide ?334062 ?334061))))))) =>= ?334064 [334064, 334063, 334062, 334061, 334060, 334059, 334058] by Demod 19 with 3 at 2,2
Id : 43403, {_}: divide (divide ?49369 (divide (inverse (inverse ?49370)) ?49371)) ?49372 =>= multiply (divide ?49369 (divide ?49370 ?49371)) (inverse ?49372) [49372, 49371, 49370, 49369] by Demod 9554 with 43226 at 3
Id : 85181, {_}: divide (divide ?49369 (divide (inverse (inverse ?49370)) ?49371)) ?49372 =>= divide (multiply ?49369 (inverse (divide ?49370 ?49371))) ?49372 [49372, 49371, 49370, 49369] by Demod 43403 with 85061 at 3
Id : 85235, {_}: divide (divide ?49369 (divide (inverse (inverse ?49370)) ?49371)) ?49372 =>= divide (divide ?49369 (multiply ?49370 (inverse ?49371))) ?49372 [49372, 49371, 49370, 49369] by Demod 85181 with 39950 at 1,3
Id : 89956, {_}: divide (inverse ?335244) (multiply (divide ?335245 ?335246) (divide (divide ?335246 ?335245) (divide ?335244 (multiply (divide (divide ?335247 ?335248) ?335249) (divide ?335249 (divide (divide ?335250 (multiply ?335251 (inverse ?335252))) (divide ?335248 ?335247))))))) =>= divide ?335250 (divide (inverse (inverse ?335251)) ?335252) [335252, 335251, 335250, 335249, 335248, 335247, 335246, 335245, 335244] by Super 89847 with 85235 at 2,2,2,2,2,2,2
Id : 90764, {_}: divide ?335250 (multiply ?335251 (inverse ?335252)) =<= divide ?335250 (divide (inverse (inverse ?335251)) ?335252) [335252, 335251, 335250] by Demod 89956 with 40 at 2
Id : 92959, {_}: divide (inverse (inverse ?344076)) ?344077 =<= multiply (multiply (multiply (inverse ?344078) ?344079) (divide (multiply (inverse ?344079) ?344078) (divide ?344080 (multiply ?344076 (inverse ?344077))))) ?344080 [344080, 344079, 344078, 344077, 344076] by Super 7678 with 90764 at 2,2,1,3
Id : 93432, {_}: divide (inverse (inverse ?344076)) ?344077 =>= multiply ?344076 (inverse ?344077) [344077, 344076] by Demod 92959 with 7678 at 3
Id : 94198, {_}: multiply (inverse (inverse ?346092)) (inverse (multiply ?346093 ?346094)) =?= multiply ?346092 (inverse (multiply ?346093 (inverse (inverse ?346094)))) [346094, 346093, 346092] by Super 30968 with 93432 at 3
Id : 95063, {_}: multiply (inverse (divide ?346094 ?346092)) (inverse ?346093) =<= multiply ?346092 (inverse (multiply ?346093 (inverse (inverse ?346094)))) [346093, 346092, 346094] by Demod 94198 with 35052 at 2
Id : 102213, {_}: divide (inverse (divide ?346094 ?346092)) ?346093 =<= multiply ?346092 (inverse (multiply ?346093 (inverse (inverse ?346094)))) [346093, 346092, 346094] by Demod 95063 with 101520 at 2
Id : 102214, {_}: divide (inverse (divide ?346094 ?346092)) ?346093 =<= divide ?346092 (multiply ?346093 (inverse (inverse ?346094))) [346093, 346092, 346094] by Demod 102213 with 101520 at 3
Id : 102215, {_}: divide (inverse (divide ?346094 ?346092)) ?346093 =?= divide ?346092 (divide ?346093 (inverse ?346094)) [346093, 346092, 346094] by Demod 102214 with 101520 at 2,3
Id : 102222, {_}: divide (inverse (divide ?346094 ?346092)) ?346093 =>= divide ?346092 (multiply ?346093 ?346094) [346093, 346092, 346094] by Demod 102215 with 3 at 2,3
Id : 102235, {_}: divide ?8834 (multiply ?8835 (divide (inverse ?8832) ?8833)) =<= inverse (divide (inverse (divide (multiply ?8833 ?8832) ?8835)) ?8834) [8833, 8832, 8835, 8834] by Demod 101118 with 102222 at 2
Id : 102236, {_}: divide ?8834 (multiply ?8835 (divide (inverse ?8832) ?8833)) =<= inverse (divide ?8835 (multiply ?8834 (multiply ?8833 ?8832))) [8833, 8832, 8835, 8834] by Demod 102235 with 102222 at 1,3
Id : 35199, {_}: inverse (multiply (inverse (divide ?86042 ?86040)) (inverse ?86041)) =<= inverse (divide (inverse (divide (inverse (inverse ?86042)) ?86040)) ?86041) [86041, 86040, 86042] by Demod 16326 with 35052 at 1,2
Id : 40695, {_}: inverse (multiply (inverse (divide (divide ?190115 ?190116) ?190117)) (inverse ?190118)) =>= inverse (divide (inverse (divide (multiply ?190115 (inverse ?190116)) ?190117)) ?190118) [190118, 190117, 190116, 190115] by Super 35199 with 40350 at 1,1,1,1,3
Id : 46674, {_}: inverse (inverse (divide (inverse (divide (multiply ?207380 (inverse ?207381)) ?207382)) ?207383)) =>= multiply (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse (inverse ?207383))) [207383, 207382, 207381, 207380] by Super 30884 with 40695 at 1,2
Id : 47015, {_}: multiply (inverse (divide (multiply ?207380 (inverse ?207381)) ?207382)) (inverse ?207383) =<= multiply (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse (inverse ?207383))) [207383, 207382, 207381, 207380] by Demod 46674 with 40350 at 2
Id : 31439, {_}: multiply ?157170 (inverse (multiply ?157171 ?157172)) =<= divide ?157170 (multiply ?157171 (inverse (inverse ?157172))) [157172, 157171, 157170] by Super 3 with 30884 at 2,3
Id : 31475, {_}: multiply ?157430 (inverse (multiply ?157431 (multiply ?157432 ?157433))) =<= divide ?157430 (multiply ?157431 (multiply ?157432 (inverse (inverse ?157433)))) [157433, 157432, 157431, 157430] by Super 31439 with 30884 at 2,2,3
Id : 45490, {_}: multiply (inverse (inverse ?203652)) (inverse (multiply ?203653 (multiply (inverse ?203654) ?203655))) =>= divide (inverse (divide (inverse (inverse ?203655)) ?203652)) (multiply ?203653 (inverse ?203654)) [203655, 203654, 203653, 203652] by Super 31475 with 45468 at 3
Id : 71413, {_}: multiply (inverse (divide (multiply (inverse ?287029) ?287030) ?287031)) (inverse ?287032) =<= divide (inverse (divide (inverse (inverse ?287030)) ?287031)) (multiply ?287032 (inverse ?287029)) [287032, 287031, 287030, 287029] by Demod 45490 with 35052 at 2
Id : 71414, {_}: multiply (inverse (divide (multiply (inverse (divide ?287034 (divide (divide ?287035 (divide (divide ?287036 ?287037) ?287034)) (divide ?287037 ?287036)))) ?287038) ?287039)) (inverse ?287040) =>= divide (inverse (divide (inverse (inverse ?287038)) ?287039)) (multiply ?287040 ?287035) [287040, 287039, 287038, 287037, 287036, 287035, 287034] by Super 71413 with 53 at 2,2,3
Id : 72001, {_}: multiply (inverse (divide (multiply ?287035 ?287038) ?287039)) (inverse ?287040) =<= divide (inverse (divide (inverse (inverse ?287038)) ?287039)) (multiply ?287040 ?287035) [287040, 287039, 287038, 287035] by Demod 71414 with 53 at 1,1,1,1,2
Id : 94096, {_}: multiply (inverse (divide (multiply ?287035 ?287038) ?287039)) (inverse ?287040) =>= divide (inverse (multiply ?287038 (inverse ?287039))) (multiply ?287040 ?287035) [287040, 287039, 287038, 287035] by Demod 72001 with 93432 at 1,1,3
Id : 94118, {_}: divide (inverse (multiply (inverse ?207381) (inverse ?207382))) (multiply ?207383 ?207380) =<= multiply (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse (inverse ?207383))) [207380, 207383, 207382, 207381] by Demod 47015 with 94096 at 2
Id : 102205, {_}: divide (inverse (divide (inverse ?207381) ?207382)) (multiply ?207383 ?207380) =<= multiply (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse (inverse ?207383))) [207380, 207383, 207382, 207381] by Demod 94118 with 101520 at 1,1,2
Id : 102206, {_}: divide (inverse (divide (inverse ?207381) ?207382)) (multiply ?207383 ?207380) =<= divide (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse ?207383)) [207380, 207383, 207382, 207381] by Demod 102205 with 101520 at 3
Id : 102244, {_}: divide ?207382 (multiply (multiply ?207383 ?207380) (inverse ?207381)) =<= divide (inverse (divide (divide ?207380 ?207381) ?207382)) (inverse (inverse ?207383)) [207381, 207380, 207383, 207382] by Demod 102206 with 102222 at 2
Id : 102245, {_}: divide ?207382 (multiply (multiply ?207383 ?207380) (inverse ?207381)) =<= divide ?207382 (multiply (inverse (inverse ?207383)) (divide ?207380 ?207381)) [207381, 207380, 207383, 207382] by Demod 102244 with 102222 at 3
Id : 102246, {_}: divide ?207382 (divide (multiply ?207383 ?207380) ?207381) =<= divide ?207382 (multiply (inverse (inverse ?207383)) (divide ?207380 ?207381)) [207381, 207380, 207383, 207382] by Demod 102245 with 101520 at 2,2
Id : 85182, {_}: divide (divide ?51938 (multiply (inverse (inverse ?51939)) ?51940)) ?51941 =>= divide (multiply ?51938 (inverse (multiply ?51939 ?51940))) ?51941 [51941, 51940, 51939, 51938] by Demod 43406 with 85061 at 3
Id : 89950, {_}: divide (inverse ?335180) (multiply (divide ?335181 ?335182) (divide (divide ?335182 ?335181) (divide ?335180 (multiply (divide (divide ?335183 ?335184) ?335185) (divide ?335185 (divide (multiply ?335186 (inverse (multiply ?335187 ?335188))) (divide ?335184 ?335183))))))) =>= divide ?335186 (multiply (inverse (inverse ?335187)) ?335188) [335188, 335187, 335186, 335185, 335184, 335183, 335182, 335181, 335180] by Super 89847 with 85182 at 2,2,2,2,2,2,2
Id : 90760, {_}: multiply ?335186 (inverse (multiply ?335187 ?335188)) =<= divide ?335186 (multiply (inverse (inverse ?335187)) ?335188) [335188, 335187, 335186] by Demod 89950 with 40 at 2
Id : 94126, {_}: multiply (inverse (inverse ?345644)) (inverse (multiply ?345645 ?345646)) =?= multiply ?345644 (inverse (multiply (inverse (inverse ?345645)) ?345646)) [345646, 345645, 345644] by Super 90760 with 93432 at 3
Id : 95228, {_}: multiply (inverse (divide ?345646 ?345644)) (inverse ?345645) =<= multiply ?345644 (inverse (multiply (inverse (inverse ?345645)) ?345646)) [345645, 345644, 345646] by Demod 94126 with 35052 at 2
Id : 102219, {_}: divide (inverse (divide ?345646 ?345644)) ?345645 =<= multiply ?345644 (inverse (multiply (inverse (inverse ?345645)) ?345646)) [345645, 345644, 345646] by Demod 95228 with 101520 at 2
Id : 102220, {_}: divide (inverse (divide ?345646 ?345644)) ?345645 =<= divide ?345644 (multiply (inverse (inverse ?345645)) ?345646) [345645, 345644, 345646] by Demod 102219 with 101520 at 3
Id : 102238, {_}: divide ?345644 (multiply ?345645 ?345646) =<= divide ?345644 (multiply (inverse (inverse ?345645)) ?345646) [345646, 345645, 345644] by Demod 102220 with 102222 at 2
Id : 102247, {_}: divide ?207382 (divide (multiply ?207383 ?207380) ?207381) =<= divide ?207382 (multiply ?207383 (divide ?207380 ?207381)) [207381, 207380, 207383, 207382] by Demod 102246 with 102238 at 3
Id : 102262, {_}: divide ?8834 (divide (multiply ?8835 (inverse ?8832)) ?8833) =<= inverse (divide ?8835 (multiply ?8834 (multiply ?8833 ?8832))) [8833, 8832, 8835, 8834] by Demod 102236 with 102247 at 2
Id : 102264, {_}: divide ?8834 (divide (divide ?8835 ?8832) ?8833) =<= inverse (divide ?8835 (multiply ?8834 (multiply ?8833 ?8832))) [8833, 8832, 8835, 8834] by Demod 102262 with 101520 at 1,2,2
Id : 101098, {_}: inverse (divide (divide ?5 ?4) (divide ?3 (divide ?4 ?5))) =>= ?3 [3, 4, 5] by Demod 2 with 90396 at 2
Id : 102493, {_}: divide (divide (inverse (divide (inverse ?357684) ?357685)) (multiply (divide ?357686 ?357687) ?357684)) (divide ?357687 ?357686) =>= inverse (inverse ?357685) [357687, 357686, 357685, 357684] by Super 2814 with 101520 at 1,1,1,2
Id : 102761, {_}: divide (divide ?357685 (multiply (multiply (divide ?357686 ?357687) ?357684) (inverse ?357684))) (divide ?357687 ?357686) =>= inverse (inverse ?357685) [357684, 357687, 357686, 357685] by Demod 102493 with 102222 at 1,2
Id : 102131, {_}: divide ?157430 (multiply ?157431 (multiply ?157432 ?157433)) =<= divide ?157430 (multiply ?157431 (multiply ?157432 (inverse (inverse ?157433)))) [157433, 157432, 157431, 157430] by Demod 31475 with 101520 at 2
Id : 102132, {_}: divide ?157430 (multiply ?157431 (multiply ?157432 ?157433)) =<= divide ?157430 (multiply ?157431 (divide ?157432 (inverse ?157433))) [157433, 157432, 157431, 157430] by Demod 102131 with 101520 at 2,2,3
Id : 102348, {_}: divide ?157430 (multiply ?157431 (multiply ?157432 ?157433)) =<= divide ?157430 (divide (multiply ?157431 ?157432) (inverse ?157433)) [157433, 157432, 157431, 157430] by Demod 102132 with 102247 at 3
Id : 102349, {_}: divide ?157430 (multiply ?157431 (multiply ?157432 ?157433)) =?= divide ?157430 (multiply (multiply ?157431 ?157432) ?157433) [157433, 157432, 157431, 157430] by Demod 102348 with 3 at 2,3
Id : 102762, {_}: divide (divide ?357685 (multiply (divide ?357686 ?357687) (multiply ?357684 (inverse ?357684)))) (divide ?357687 ?357686) =>= inverse (inverse ?357685) [357684, 357687, 357686, 357685] by Demod 102761 with 102349 at 1,2
Id : 102763, {_}: divide (divide ?357685 (multiply (divide ?357686 ?357687) (divide ?357684 ?357684))) (divide ?357687 ?357686) =>= inverse (inverse ?357685) [357684, 357687, 357686, 357685] by Demod 102762 with 101520 at 2,2,1,2
Id : 41245, {_}: multiply ?191831 (inverse (multiply ?191832 (divide ?191833 ?191834))) =>= divide ?191831 (multiply ?191832 (multiply ?191833 (inverse ?191834))) [191834, 191833, 191832, 191831] by Super 30968 with 40350 at 2,2,3
Id : 40574, {_}: multiply (divide ?83055 ?83056) (inverse ?83057) =?= multiply ?83055 (divide (inverse ?83056) ?83057) [83057, 83056, 83055] by Demod 15659 with 40350 at 2
Id : 41328, {_}: multiply ?192465 (divide (inverse ?192466) (multiply ?192467 (divide ?192468 ?192469))) =>= divide (divide ?192465 ?192466) (multiply ?192467 (multiply ?192468 (inverse ?192469))) [192469, 192468, 192467, 192466, 192465] by Super 41245 with 40574 at 2
Id : 85188, {_}: divide (multiply ?83055 (inverse ?83056)) ?83057 =<= multiply ?83055 (divide (inverse ?83056) ?83057) [83057, 83056, 83055] by Demod 40574 with 85061 at 2
Id : 85202, {_}: divide (multiply ?192465 (inverse ?192466)) (multiply ?192467 (divide ?192468 ?192469)) =>= divide (divide ?192465 ?192466) (multiply ?192467 (multiply ?192468 (inverse ?192469))) [192469, 192468, 192467, 192466, 192465] by Demod 41328 with 85188 at 2
Id : 85220, {_}: divide (divide ?192465 (divide (divide ?192468 ?192469) (inverse ?192466))) ?192467 =?= divide (divide ?192465 ?192466) (multiply ?192467 (multiply ?192468 (inverse ?192469))) [192467, 192466, 192469, 192468, 192465] by Demod 85202 with 62493 at 2
Id : 85221, {_}: divide (divide ?192465 (multiply (divide ?192468 ?192469) ?192466)) ?192467 =<= divide (divide ?192465 ?192466) (multiply ?192467 (multiply ?192468 (inverse ?192469))) [192467, 192466, 192469, 192468, 192465] by Demod 85220 with 3 at 2,1,2
Id : 102178, {_}: divide (divide ?192465 (multiply (divide ?192468 ?192469) ?192466)) ?192467 =?= divide (divide ?192465 ?192466) (multiply ?192467 (divide ?192468 ?192469)) [192467, 192466, 192469, 192468, 192465] by Demod 85221 with 101520 at 2,2,3
Id : 102288, {_}: divide (divide ?192465 (multiply (divide ?192468 ?192469) ?192466)) ?192467 =?= divide (divide ?192465 ?192466) (divide (multiply ?192467 ?192468) ?192469) [192467, 192466, 192469, 192468, 192465] by Demod 102178 with 102247 at 3
Id : 102764, {_}: divide (divide ?357685 (divide ?357684 ?357684)) (divide (multiply (divide ?357687 ?357686) ?357686) ?357687) =>= inverse (inverse ?357685) [357686, 357687, 357684, 357685] by Demod 102763 with 102288 at 2
Id : 101094, {_}: divide (inverse (divide (divide ?5777 ?5778) ?5776)) (divide ?5778 ?5777) =>= ?5776 [5776, 5778, 5777] by Demod 1266 with 90396 at 1,2
Id : 102237, {_}: divide ?5776 (multiply (divide ?5778 ?5777) (divide ?5777 ?5778)) =>= ?5776 [5777, 5778, 5776] by Demod 101094 with 102222 at 2
Id : 102251, {_}: divide ?5776 (divide (multiply (divide ?5778 ?5777) ?5777) ?5778) =>= ?5776 [5777, 5778, 5776] by Demod 102237 with 102247 at 2
Id : 102765, {_}: divide ?357685 (divide ?357684 ?357684) =>= inverse (inverse ?357685) [357684, 357685] by Demod 102764 with 102251 at 2
Id : 102313, {_}: inverse ?36880 =<= multiply (divide (multiply (multiply ?36881 ?36882) (divide (inverse ?36882) ?36881)) (multiply ?36883 ?36880)) ?36883 [36883, 36882, 36881, 36880] by Demod 7367 with 102309 at 1,3
Id : 102314, {_}: inverse ?36880 =<= multiply (divide (divide (multiply (multiply ?36881 ?36882) (inverse ?36882)) ?36881) (multiply ?36883 ?36880)) ?36883 [36883, 36882, 36881, 36880] by Demod 102313 with 102309 at 1,1,3
Id : 102315, {_}: inverse ?36880 =<= multiply (divide (divide (divide (multiply ?36881 ?36882) ?36882) ?36881) (multiply ?36883 ?36880)) ?36883 [36883, 36882, 36881, 36880] by Demod 102314 with 101520 at 1,1,1,3
Id : 102533, {_}: inverse (inverse ?357905) =<= multiply (divide (divide (divide (multiply ?357906 ?357907) ?357907) ?357906) (divide ?357908 ?357905)) ?357908 [357908, 357907, 357906, 357905] by Super 102315 with 101520 at 2,1,3
Id : 102311, {_}: ?36095 =<= multiply (divide (multiply (multiply ?36096 ?36097) (divide (inverse ?36097) ?36096)) (divide ?36098 ?36095)) ?36098 [36098, 36097, 36096, 36095] by Demod 7191 with 102309 at 1,3
Id : 102312, {_}: ?36095 =<= multiply (divide (divide (multiply (multiply ?36096 ?36097) (inverse ?36097)) ?36096) (divide ?36098 ?36095)) ?36098 [36098, 36097, 36096, 36095] by Demod 102311 with 102309 at 1,1,3
Id : 102316, {_}: ?36095 =<= multiply (divide (divide (divide (multiply ?36096 ?36097) ?36097) ?36096) (divide ?36098 ?36095)) ?36098 [36098, 36097, 36096, 36095] by Demod 102312 with 101520 at 1,1,1,3
Id : 102664, {_}: inverse (inverse ?357905) =>= ?357905 [357905] by Demod 102533 with 102316 at 3
Id : 103069, {_}: divide ?357685 (divide ?357684 ?357684) =>= ?357685 [357684, 357685] by Demod 102765 with 102664 at 3
Id : 103199, {_}: inverse (divide ?359423 ?359424) =>= divide ?359424 ?359423 [359424, 359423] by Super 101098 with 103069 at 1,2
Id : 103718, {_}: divide ?8834 (divide (divide ?8835 ?8832) ?8833) =?= divide (multiply ?8834 (multiply ?8833 ?8832)) ?8835 [8833, 8832, 8835, 8834] by Demod 102264 with 103199 at 3
Id : 103734, {_}: divide (divide (multiply (inverse (multiply ?13892 ?13893)) (multiply ?13892 ?13895)) (inverse ?13894)) (multiply ?13895 ?13894) =>= inverse ?13893 [13894, 13895, 13893, 13892] by Demod 2791 with 103718 at 1,2
Id : 40697, {_}: multiply (inverse (divide ?190125 (divide ?190126 ?190127))) (inverse ?190128) =>= multiply (multiply ?190126 (inverse ?190127)) (inverse (multiply ?190128 ?190125)) [190128, 190127, 190126, 190125] by Super 35052 with 40350 at 1,3
Id : 40823, {_}: multiply (inverse (divide ?190125 (divide ?190126 ?190127))) (inverse ?190128) =>= divide (divide ?190126 (multiply (inverse (inverse ?190125)) ?190127)) ?190128 [190128, 190127, 190126, 190125] by Demod 40697 with 9976 at 3
Id : 43409, {_}: multiply (inverse (divide ?190125 (divide ?190126 ?190127))) (inverse ?190128) =>= multiply (divide ?190126 (multiply ?190125 ?190127)) (inverse ?190128) [190128, 190127, 190126, 190125] by Demod 40823 with 43406 at 3
Id : 85192, {_}: multiply (inverse (divide ?190125 (divide ?190126 ?190127))) (inverse ?190128) =>= divide (multiply ?190126 (inverse (multiply ?190125 ?190127))) ?190128 [190128, 190127, 190126, 190125] by Demod 43409 with 85061 at 3
Id : 102170, {_}: divide (inverse (divide ?190125 (divide ?190126 ?190127))) ?190128 =>= divide (multiply ?190126 (inverse (multiply ?190125 ?190127))) ?190128 [190128, 190127, 190126, 190125] by Demod 85192 with 101520 at 2
Id : 102171, {_}: divide (inverse (divide ?190125 (divide ?190126 ?190127))) ?190128 =>= divide (divide ?190126 (multiply ?190125 ?190127)) ?190128 [190128, 190127, 190126, 190125] by Demod 102170 with 101520 at 1,3
Id : 102293, {_}: divide (divide ?190126 ?190127) (multiply ?190128 ?190125) =?= divide (divide ?190126 (multiply ?190125 ?190127)) ?190128 [190125, 190128, 190127, 190126] by Demod 102171 with 102222 at 2
Id : 103736, {_}: divide (divide (multiply (inverse (multiply ?13892 ?13893)) (multiply ?13892 ?13895)) (multiply ?13894 (inverse ?13894))) ?13895 =>= inverse ?13893 [13894, 13895, 13893, 13892] by Demod 103734 with 102293 at 2
Id : 103737, {_}: divide (divide (divide (inverse (multiply ?13892 ?13893)) (divide (inverse ?13894) (multiply ?13892 ?13895))) ?13894) ?13895 =>= inverse ?13893 [13895, 13894, 13893, 13892] by Demod 103736 with 62493 at 1,2
Id : 40061, {_}: divide (divide ?188028 (divide (inverse (divide ?188029 ?188030)) ?188031)) ?188032 =<= divide (multiply ?188028 ?188031) (divide ?188032 (multiply ?188029 (inverse ?188030))) [188032, 188031, 188030, 188029, 188028] by Super 40043 with 39950 at 2,3
Id : 102158, {_}: divide (divide ?188028 (divide (inverse (divide ?188029 ?188030)) ?188031)) ?188032 =>= divide (multiply ?188028 ?188031) (divide ?188032 (divide ?188029 ?188030)) [188032, 188031, 188030, 188029, 188028] by Demod 40061 with 101520 at 2,2,3
Id : 102302, {_}: divide (divide ?188028 (divide ?188030 (multiply ?188031 ?188029))) ?188032 =<= divide (multiply ?188028 ?188031) (divide ?188032 (divide ?188029 ?188030)) [188032, 188029, 188031, 188030, 188028] by Demod 102158 with 102222 at 2,1,2
Id : 103711, {_}: divide ?30 (divide ?31 (divide ?32 ?33)) =<= inverse (divide ?31 (divide ?30 (divide ?33 ?32))) [33, 32, 31, 30] by Demod 101099 with 103199 at 2
Id : 103712, {_}: divide ?30 (divide ?31 (divide ?32 ?33)) =?= divide (divide ?30 (divide ?33 ?32)) ?31 [33, 32, 31, 30] by Demod 103711 with 103199 at 3
Id : 103741, {_}: divide (divide ?188028 (divide ?188030 (multiply ?188031 ?188029))) ?188032 =?= divide (divide (multiply ?188028 ?188031) (divide ?188030 ?188029)) ?188032 [188032, 188029, 188031, 188030, 188028] by Demod 102302 with 103712 at 3
Id : 103744, {_}: divide (divide (divide (multiply (inverse (multiply ?13892 ?13893)) ?13892) (divide (inverse ?13894) ?13895)) ?13894) ?13895 =>= inverse ?13893 [13895, 13894, 13893, 13892] by Demod 103737 with 103741 at 1,2
Id : 103708, {_}: divide ?114206 (divide ?114204 (multiply ?114207 ?114205)) =<= inverse (divide ?114204 (divide ?114206 (divide (inverse ?114205) ?114207))) [114205, 114207, 114204, 114206] by Demod 62637 with 103199 at 2
Id : 103709, {_}: divide ?114206 (divide ?114204 (multiply ?114207 ?114205)) =<= divide (divide ?114206 (divide (inverse ?114205) ?114207)) ?114204 [114205, 114207, 114204, 114206] by Demod 103708 with 103199 at 3
Id : 103749, {_}: divide (divide (multiply (inverse (multiply ?13892 ?13893)) ?13892) (divide ?13894 (multiply ?13895 ?13894))) ?13895 =>= inverse ?13893 [13895, 13894, 13893, 13892] by Demod 103744 with 103709 at 1,2
Id : 103750, {_}: divide (divide (multiply (multiply (inverse (multiply ?13892 ?13893)) ?13892) ?13895) (divide ?13894 ?13894)) ?13895 =>= inverse ?13893 [13894, 13895, 13893, 13892] by Demod 103749 with 103741 at 2
Id : 103751, {_}: divide (multiply (multiply (inverse (multiply ?13892 ?13893)) ?13892) ?13895) ?13895 =>= inverse ?13893 [13895, 13893, 13892] by Demod 103750 with 103069 at 1,2
Id : 2811, {_}: divide (divide (inverse (multiply ?14050 ?14051)) (divide (multiply ?14052 ?14053) ?14050)) (divide (inverse ?14053) ?14052) =>= inverse ?14051 [14053, 14052, 14051, 14050] by Super 2771 with 3 at 1,2,1,2
Id : 103699, {_}: divide (divide ?346092 ?346094) ?346093 =?= divide ?346092 (multiply ?346093 ?346094) [346093, 346094, 346092] by Demod 102222 with 103199 at 1,2
Id : 103754, {_}: divide (divide ?258249 (divide ?258253 ?258254)) ?258255 =?= divide (divide (multiply ?258249 ?258254) ?258253) ?258255 [258255, 258254, 258253, 258249] by Demod 62493 with 103699 at 3
Id : 103756, {_}: divide (divide (multiply (inverse (multiply ?14050 ?14051)) ?14050) (multiply ?14052 ?14053)) (divide (inverse ?14053) ?14052) =>= inverse ?14051 [14053, 14052, 14051, 14050] by Demod 2811 with 103754 at 2
Id : 103714, {_}: divide (divide ?54 (multiply ?55 ?56)) (divide (inverse ?56) ?55) =>= ?54 [56, 55, 54] by Demod 101095 with 103199 at 2
Id : 103765, {_}: multiply (inverse (multiply ?14050 ?14051)) ?14050 =>= inverse ?14051 [14051, 14050] by Demod 103756 with 103714 at 2
Id : 103766, {_}: divide (multiply (inverse ?13893) ?13895) ?13895 =>= inverse ?13893 [13895, 13893] by Demod 103751 with 103765 at 1,1,2
Id : 103767, {_}: ?38552 =<= multiply (divide (multiply (inverse ?38553) ?38553) (divide ?38555 ?38552)) ?38555 [38555, 38553, 38552] by Demod 102318 with 103766 at 1,1,1,3
Id : 103801, {_}: multiply ?360754 (divide ?360755 ?360756) =>= divide ?360754 (divide ?360756 ?360755) [360756, 360755, 360754] by Super 3 with 103199 at 2,3
Id : 102172, {_}: divide (divide ?83055 ?83056) ?83057 =<= multiply ?83055 (divide (inverse ?83056) ?83057) [83057, 83056, 83055] by Demod 85188 with 101520 at 1,2
Id : 102958, {_}: divide (divide ?358448 (inverse ?358449)) ?358450 =>= multiply ?358448 (divide ?358449 ?358450) [358450, 358449, 358448] by Super 102172 with 102664 at 1,2,3
Id : 103012, {_}: divide (multiply ?358448 ?358449) ?358450 =<= multiply ?358448 (divide ?358449 ?358450) [358450, 358449, 358448] by Demod 102958 with 3 at 1,2
Id : 104738, {_}: divide (multiply ?360754 ?360755) ?360756 =?= divide ?360754 (divide ?360756 ?360755) [360756, 360755, 360754] by Demod 103801 with 103012 at 2
Id : 104742, {_}: ?38552 =<= multiply (divide (multiply (multiply (inverse ?38553) ?38553) ?38552) ?38555) ?38555 [38555, 38553, 38552] by Demod 103767 with 104738 at 1,3
Id : 102256, {_}: divide (inverse ?35) (divide (multiply (divide ?36 ?37) (divide ?37 ?36)) (divide ?35 (divide ?38 ?39))) =>= divide ?39 ?38 [39, 38, 37, 36, 35] by Demod 362 with 102247 at 2
Id : 102304, {_}: divide (inverse ?35) (divide (divide (divide ?36 ?37) (divide ?39 (multiply (divide ?37 ?36) ?38))) ?35) =>= divide ?39 ?38 [38, 39, 37, 36, 35] by Demod 102256 with 102302 at 2,2
Id : 103730, {_}: divide (multiply (inverse ?35) (multiply ?35 (divide ?39 (multiply (divide ?37 ?36) ?38)))) (divide ?36 ?37) =>= divide ?39 ?38 [38, 36, 37, 39, 35] by Demod 102304 with 103718 at 2
Id : 104003, {_}: divide (multiply (inverse ?35) (divide (multiply ?35 ?39) (multiply (divide ?37 ?36) ?38))) (divide ?36 ?37) =>= divide ?39 ?38 [38, 36, 37, 39, 35] by Demod 103730 with 103012 at 2,1,2
Id : 104004, {_}: divide (divide (multiply (inverse ?35) (multiply ?35 ?39)) (multiply (divide ?37 ?36) ?38)) (divide ?36 ?37) =>= divide ?39 ?38 [38, 36, 37, 39, 35] by Demod 104003 with 103012 at 1,2
Id : 104036, {_}: divide (divide (divide (multiply (inverse ?35) (multiply ?35 ?39)) ?38) (divide ?37 ?36)) (divide ?36 ?37) =>= divide ?39 ?38 [36, 37, 38, 39, 35] by Demod 104004 with 103699 at 1,2
Id : 103700, {_}: divide (divide ?3 (divide ?4 ?5)) (divide ?5 ?4) =>= ?3 [5, 4, 3] by Demod 101098 with 103199 at 2
Id : 104037, {_}: divide (multiply (inverse ?35) (multiply ?35 ?39)) ?38 =>= divide ?39 ?38 [38, 39, 35] by Demod 104036 with 103700 at 2
Id : 21134, {_}: inverse (multiply (inverse (inverse ?108447)) (inverse (divide ?108448 ?108449))) =>= inverse (divide (inverse (divide (inverse ?108449) ?108447)) ?108448) [108449, 108448, 108447] by Demod 20903 with 6973 at 2,1,3
Id : 40046, {_}: inverse (divide (inverse (inverse ?108447)) (multiply ?108448 (inverse ?108449))) =>= inverse (divide (inverse (divide (inverse ?108449) ?108447)) ?108448) [108449, 108448, 108447] by Demod 21134 with 39950 at 1,2
Id : 40707, {_}: inverse (divide (multiply ?190184 (inverse ?190185)) (multiply ?190186 (inverse ?190187))) =<= inverse (divide (inverse (divide (inverse ?190187) (divide ?190184 ?190185))) ?190186) [190187, 190186, 190185, 190184] by Super 40046 with 40350 at 1,1,2
Id : 40813, {_}: inverse (divide (divide ?190184 (divide (inverse ?190187) (inverse ?190185))) ?190186) =<= inverse (divide (inverse (divide (inverse ?190187) (divide ?190184 ?190185))) ?190186) [190186, 190185, 190187, 190184] by Demod 40707 with 40043 at 1,2
Id : 47405, {_}: inverse (divide (divide ?210380 (multiply (inverse ?210381) ?210382)) ?210383) =<= inverse (divide (inverse (divide (inverse ?210381) (divide ?210380 ?210382))) ?210383) [210383, 210382, 210381, 210380] by Demod 40813 with 3 at 2,1,1,2
Id : 47459, {_}: inverse (divide (divide ?210809 (multiply (inverse (divide ?210810 (divide (divide ?210811 (divide (divide ?210812 ?210813) ?210810)) (divide ?210813 ?210812)))) ?210814)) ?210815) =>= inverse (divide (inverse (divide ?210811 (divide ?210809 ?210814))) ?210815) [210815, 210814, 210813, 210812, 210811, 210810, 210809] by Super 47405 with 53 at 1,1,1,1,3
Id : 48148, {_}: inverse (divide (divide ?212886 (multiply ?212887 ?212888)) ?212889) =<= inverse (divide (inverse (divide ?212887 (divide ?212886 ?212888))) ?212889) [212889, 212888, 212887, 212886] by Demod 47459 with 53 at 1,2,1,1,2
Id : 48271, {_}: inverse (divide (divide ?213823 (multiply ?213824 ?213825)) (inverse ?213826)) =<= inverse (multiply (inverse (divide ?213824 (divide ?213823 ?213825))) ?213826) [213826, 213825, 213824, 213823] by Super 48148 with 3 at 1,3
Id : 48613, {_}: inverse (multiply (divide ?213823 (multiply ?213824 ?213825)) ?213826) =<= inverse (multiply (inverse (divide ?213824 (divide ?213823 ?213825))) ?213826) [213826, 213825, 213824, 213823] by Demod 48271 with 3 at 1,2
Id : 103705, {_}: inverse (multiply (divide ?213823 (multiply ?213824 ?213825)) ?213826) =?= inverse (multiply (divide (divide ?213823 ?213825) ?213824) ?213826) [213826, 213825, 213824, 213823] by Demod 48613 with 103199 at 1,1,3
Id : 106200, {_}: divide (multiply ?367270 ?367271) ?367271 =>= ?367270 [367271, 367270] by Super 103069 with 104738 at 2
Id : 106204, {_}: divide (inverse ?367290) ?367291 =<= inverse (multiply ?367291 ?367290) [367291, 367290] by Super 106200 with 103765 at 1,2
Id : 106549, {_}: divide (inverse ?213826) (divide ?213823 (multiply ?213824 ?213825)) =<= inverse (multiply (divide (divide ?213823 ?213825) ?213824) ?213826) [213825, 213824, 213823, 213826] by Demod 103705 with 106204 at 2
Id : 106550, {_}: divide (inverse ?213826) (divide ?213823 (multiply ?213824 ?213825)) =?= divide (inverse ?213826) (divide (divide ?213823 ?213825) ?213824) [213825, 213824, 213823, 213826] by Demod 106549 with 106204 at 3
Id : 47859, {_}: inverse (divide (divide ?210809 (multiply ?210811 ?210814)) ?210815) =<= inverse (divide (inverse (divide ?210811 (divide ?210809 ?210814))) ?210815) [210815, 210814, 210811, 210809] by Demod 47459 with 53 at 1,2,1,1,2
Id : 102230, {_}: inverse (divide (divide ?210809 (multiply ?210811 ?210814)) ?210815) =?= inverse (divide (divide ?210809 ?210814) (multiply ?210815 ?210811)) [210815, 210814, 210811, 210809] by Demod 47859 with 102222 at 1,3
Id : 103696, {_}: divide ?210815 (divide ?210809 (multiply ?210811 ?210814)) =<= inverse (divide (divide ?210809 ?210814) (multiply ?210815 ?210811)) [210814, 210811, 210809, 210815] by Demod 102230 with 103199 at 2
Id : 103697, {_}: divide ?210815 (divide ?210809 (multiply ?210811 ?210814)) =?= divide (multiply ?210815 ?210811) (divide ?210809 ?210814) [210814, 210811, 210809, 210815] by Demod 103696 with 103199 at 3
Id : 106566, {_}: divide (multiply (inverse ?213826) ?213824) (divide ?213823 ?213825) =<= divide (inverse ?213826) (divide (divide ?213823 ?213825) ?213824) [213825, 213823, 213824, 213826] by Demod 106550 with 103697 at 2
Id : 106567, {_}: divide (multiply (inverse ?213826) ?213824) (divide ?213823 ?213825) =?= divide (multiply (inverse ?213826) (multiply ?213824 ?213825)) ?213823 [213825, 213823, 213824, 213826] by Demod 106566 with 103718 at 3
Id : 106568, {_}: divide (multiply (multiply (inverse ?213826) ?213824) ?213825) ?213823 =<= divide (multiply (inverse ?213826) (multiply ?213824 ?213825)) ?213823 [213823, 213825, 213824, 213826] by Demod 106567 with 104738 at 2
Id : 106569, {_}: divide (multiply (multiply (inverse ?35) ?35) ?39) ?38 =>= divide ?39 ?38 [38, 39, 35] by Demod 104037 with 106568 at 2
Id : 106570, {_}: ?38552 =<= multiply (divide ?38552 ?38555) ?38555 [38555, 38552] by Demod 104742 with 106569 at 1,3
Id : 104876, {_}: divide (multiply ?363468 ?363469) ?363469 =>= ?363468 [363469, 363468] by Super 103069 with 104738 at 2
Id : 106173, {_}: inverse ?367130 =<= divide ?367131 (multiply ?367130 ?367131) [367131, 367130] by Super 103199 with 104876 at 1,2
Id : 106805, {_}: ?367778 =<= multiply (inverse ?367779) (multiply ?367779 ?367778) [367779, 367778] by Super 106570 with 106173 at 1,3
Id : 106633, {_}: multiply ?367594 (multiply ?367595 ?367596) =<= divide ?367594 (divide (inverse ?367596) ?367595) [367596, 367595, 367594] by Super 3 with 106204 at 2,3
Id : 104940, {_}: multiply (multiply ?363900 ?363901) ?363902 =<= divide ?363900 (divide (inverse ?363902) ?363901) [363902, 363901, 363900] by Super 3 with 104738 at 3
Id : 108764, {_}: multiply ?367594 (multiply ?367595 ?367596) =?= multiply (multiply ?367594 ?367595) ?367596 [367596, 367595, 367594] by Demod 106633 with 104940 at 3
Id : 109130, {_}: ?367778 =<= multiply (multiply (inverse ?367779) ?367779) ?367778 [367779, 367778] by Demod 106805 with 108764 at 3
Id : 109444, {_}: a2 === a2 [] by Demod 1 with 109130 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP470-1.p
11271: solved GRP470-1.p in 32.33802 using nrkbo
11271: status Unsatisfiable for GRP470-1.p
NO CLASH, using fixed ground order
11326: Facts:
11326:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11326:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11326: Goal:
11326:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11326: Order:
11326:   nrkbo
11326: Leaf order:
11326:  inverse 2 1 0 
11326:  divide 7 2 0 
11326:  c3 2 0 2 2,2
11326:  multiply 5 2 4 0,2
11326:  b3 2 0 2 2,1,2
11326:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11327: Facts:
11327:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11327:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11327: Goal:
11327:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11327: Order:
11327:   kbo
11327: Leaf order:
11327:  inverse 2 1 0 
11327:  divide 7 2 0 
11327:  c3 2 0 2 2,2
11327:  multiply 5 2 4 0,2
11327:  b3 2 0 2 2,1,2
11327:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11328: Facts:
11328:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11328:  Id :   3, {_}:
          multiply ?7 ?8 =>= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11328: Goal:
11328:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11328: Order:
11328:   lpo
11328: Leaf order:
11328:  inverse 2 1 0 
11328:  divide 7 2 0 
11328:  c3 2 0 2 2,2
11328:  multiply 5 2 4 0,2
11328:  b3 2 0 2 2,1,2
11328:  a3 2 0 2 1,1,2
Statistics :
Max weight : 52
Found proof, 38.615883s
% SZS status Unsatisfiable for GRP471-1.p
% SZS output start CNFRefutation for GRP471-1.p
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   2, {_}: divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5)))) (divide (divide ?5 ?4) ?2) =>= ?3 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide ?10 (divide ?11 (divide ?12 ?13)))) (divide (divide ?13 ?12) ?10) =>= ?11 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   8, {_}: divide (inverse ?35) (divide (divide ?36 ?37) (inverse (divide (divide ?37 ?36) (divide ?35 (divide ?38 ?39))))) =>= divide ?39 ?38 [39, 38, 37, 36, 35] by Super 4 with 2 at 1,1,2
Id : 377, {_}: divide (inverse ?1785) (multiply (divide ?1786 ?1787) (divide (divide ?1787 ?1786) (divide ?1785 (divide ?1788 ?1789)))) =>= divide ?1789 ?1788 [1789, 1788, 1787, 1786, 1785] by Demod 8 with 3 at 2,2
Id : 362, {_}: divide (inverse ?35) (multiply (divide ?36 ?37) (divide (divide ?37 ?36) (divide ?35 (divide ?38 ?39)))) =>= divide ?39 ?38 [39, 38, 37, 36, 35] by Demod 8 with 3 at 2,2
Id : 385, {_}: divide (inverse ?1855) (multiply (divide ?1856 ?1857) (divide (divide ?1857 ?1856) (divide ?1855 (divide ?1858 ?1859)))) =?= divide (multiply (divide ?1860 ?1861) (divide (divide ?1861 ?1860) (divide ?1862 (divide ?1859 ?1858)))) (inverse ?1862) [1862, 1861, 1860, 1859, 1858, 1857, 1856, 1855] by Super 377 with 362 at 2,2,2,2,2
Id : 436, {_}: divide ?1859 ?1858 =<= divide (multiply (divide ?1860 ?1861) (divide (divide ?1861 ?1860) (divide ?1862 (divide ?1859 ?1858)))) (inverse ?1862) [1862, 1861, 1860, 1858, 1859] by Demod 385 with 362 at 2
Id : 6830, {_}: divide ?34177 ?34178 =<= multiply (multiply (divide ?34179 ?34180) (divide (divide ?34180 ?34179) (divide ?34181 (divide ?34177 ?34178)))) ?34181 [34181, 34180, 34179, 34178, 34177] by Demod 436 with 3 at 3
Id :   5, {_}: divide (inverse (divide ?15 (divide ?16 (divide (divide (divide ?17 ?18) ?19) (inverse (divide ?19 (divide ?20 (divide ?18 ?17)))))))) (divide ?20 ?15) =>= ?16 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 1,2,2
Id :  15, {_}: divide (inverse (divide ?15 (divide ?16 (multiply (divide (divide ?17 ?18) ?19) (divide ?19 (divide ?20 (divide ?18 ?17))))))) (divide ?20 ?15) =>= ?16 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 2,2,1,1,2
Id :  18, {_}: divide (inverse (divide ?82 ?83)) (divide (divide ?84 ?85) ?82) =?= inverse (divide ?84 (divide ?83 (multiply (divide (divide ?86 ?87) ?88) (divide ?88 (divide ?85 (divide ?87 ?86)))))) [88, 87, 86, 85, 84, 83, 82] by Super 2 with 15 at 2,1,1,2
Id : 1723, {_}: divide (divide (inverse (divide ?8026 ?8027)) (divide (divide ?8028 ?8029) ?8026)) (divide ?8029 ?8028) =>= ?8027 [8029, 8028, 8027, 8026] by Super 15 with 18 at 1,2
Id : 1779, {_}: divide (divide (inverse (multiply ?8457 ?8458)) (divide (divide ?8459 ?8460) ?8457)) (divide ?8460 ?8459) =>= inverse ?8458 [8460, 8459, 8458, 8457] by Super 1723 with 3 at 1,1,1,2
Id : 6854, {_}: divide (divide (inverse (multiply ?34395 ?34396)) (divide (divide ?34397 ?34398) ?34395)) (divide ?34398 ?34397) =?= multiply (multiply (divide ?34399 ?34400) (divide (divide ?34400 ?34399) (divide ?34401 (inverse ?34396)))) ?34401 [34401, 34400, 34399, 34398, 34397, 34396, 34395] by Super 6830 with 1779 at 2,2,2,1,3
Id : 7005, {_}: inverse ?34396 =<= multiply (multiply (divide ?34399 ?34400) (divide (divide ?34400 ?34399) (divide ?34401 (inverse ?34396)))) ?34401 [34401, 34400, 34399, 34396] by Demod 6854 with 1779 at 2
Id : 7303, {_}: inverse ?36376 =<= multiply (multiply (divide ?36377 ?36378) (divide (divide ?36378 ?36377) (multiply ?36379 ?36376))) ?36379 [36379, 36378, 36377, 36376] by Demod 7005 with 3 at 2,2,1,3
Id : 7337, {_}: inverse ?36648 =<= multiply (multiply (divide (inverse ?36649) ?36650) (divide (multiply ?36650 ?36649) (multiply ?36651 ?36648))) ?36651 [36651, 36650, 36649, 36648] by Super 7303 with 3 at 1,2,1,3
Id : 6831, {_}: divide (inverse (divide ?34183 (divide ?34184 (divide ?34185 ?34186)))) (divide (divide ?34186 ?34185) ?34183) =?= multiply (multiply (divide ?34187 ?34188) (divide (divide ?34188 ?34187) (divide ?34189 ?34184))) ?34189 [34189, 34188, 34187, 34186, 34185, 34184, 34183] by Super 6830 with 2 at 2,2,2,1,3
Id : 7101, {_}: ?35399 =<= multiply (multiply (divide ?35400 ?35401) (divide (divide ?35401 ?35400) (divide ?35402 ?35399))) ?35402 [35402, 35401, 35400, 35399] by Demod 6831 with 2 at 2
Id : 2771, {_}: divide (divide (inverse (multiply ?13734 ?13735)) (divide (divide ?13736 ?13737) ?13734)) (divide ?13737 ?13736) =>= inverse ?13735 [13737, 13736, 13735, 13734] by Super 1723 with 3 at 1,1,1,2
Id : 2814, {_}: divide (divide (inverse (multiply (inverse ?14067) ?14068)) (multiply (divide ?14069 ?14070) ?14067)) (divide ?14070 ?14069) =>= inverse ?14068 [14070, 14069, 14068, 14067] by Super 2771 with 3 at 2,1,2
Id : 7163, {_}: ?35873 =<= multiply (multiply (divide (multiply (divide ?35873 ?35874) ?35875) (inverse (multiply (inverse ?35875) ?35876))) (inverse ?35876)) ?35874 [35876, 35875, 35874, 35873] by Super 7101 with 2814 at 2,1,3
Id : 7239, {_}: ?35873 =<= multiply (multiply (multiply (multiply (divide ?35873 ?35874) ?35875) (multiply (inverse ?35875) ?35876)) (inverse ?35876)) ?35874 [35876, 35875, 35874, 35873] by Demod 7163 with 3 at 1,1,3
Id : 1759, {_}: divide (divide (inverse (divide ?8306 ?8307)) (divide (multiply ?8308 ?8309) ?8306)) (divide (inverse ?8309) ?8308) =>= ?8307 [8309, 8308, 8307, 8306] by Super 1723 with 3 at 1,2,1,2
Id : 7159, {_}: ?35853 =<= multiply (multiply (divide (divide (multiply ?35853 ?35854) ?35855) (inverse (divide ?35855 ?35856))) ?35856) (inverse ?35854) [35856, 35855, 35854, 35853] by Super 7101 with 1759 at 2,1,3
Id : 7892, {_}: ?39681 =<= multiply (multiply (multiply (divide (multiply ?39681 ?39682) ?39683) (divide ?39683 ?39684)) ?39684) (inverse ?39682) [39684, 39683, 39682, 39681] by Demod 7159 with 3 at 1,1,3
Id : 9472, {_}: ?48735 =<= multiply (multiply (multiply (multiply (multiply ?48735 ?48736) ?48737) (divide (inverse ?48737) ?48738)) ?48738) (inverse ?48736) [48738, 48737, 48736, 48735] by Super 7892 with 3 at 1,1,1,3
Id : 1266, {_}: divide (divide (inverse (divide ?5775 ?5776)) (divide (divide ?5777 ?5778) ?5775)) (divide ?5778 ?5777) =>= ?5776 [5778, 5777, 5776, 5775] by Super 15 with 18 at 1,2
Id : 7158, {_}: ?35848 =<= multiply (multiply (divide (divide (divide ?35848 ?35849) ?35850) (inverse (divide ?35850 ?35851))) ?35851) ?35849 [35851, 35850, 35849, 35848] by Super 7101 with 1266 at 2,1,3
Id : 7234, {_}: ?35848 =<= multiply (multiply (multiply (divide (divide ?35848 ?35849) ?35850) (divide ?35850 ?35851)) ?35851) ?35849 [35851, 35850, 35849, 35848] by Demod 7158 with 3 at 1,1,3
Id : 9552, {_}: divide (divide ?49359 (divide (inverse ?49360) ?49361)) ?49362 =<= multiply (multiply ?49359 ?49361) (inverse (divide ?49362 ?49360)) [49362, 49361, 49360, 49359] by Super 9472 with 7234 at 1,1,3
Id : 9555, {_}: multiply (divide ?49374 (divide (inverse (inverse ?49375)) ?49376)) ?49377 =<= multiply (multiply ?49374 ?49376) (inverse (multiply (inverse ?49377) ?49375)) [49377, 49376, 49375, 49374] by Super 9472 with 7239 at 1,1,3
Id : 10048, {_}: divide (divide (multiply ?52036 ?52037) (divide (inverse ?52038) (inverse (multiply (inverse ?52039) ?52040)))) ?52041 =<= multiply (multiply (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) ?52039) (inverse (divide ?52041 ?52038)) [52041, 52040, 52039, 52038, 52037, 52036] by Super 9552 with 9555 at 1,3
Id : 10181, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= multiply (multiply (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) ?52039) (inverse (divide ?52041 ?52038)) [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10048 with 3 at 2,1,2
Id : 10182, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= divide (divide (divide ?52036 (divide (inverse (inverse ?52040)) ?52037)) (divide (inverse ?52038) ?52039)) ?52041 [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10181 with 9552 at 3
Id : 7161, {_}: ?35863 =<= multiply (multiply (divide (divide (divide ?35863 ?35864) ?35865) (inverse (multiply ?35865 ?35866))) (inverse ?35866)) ?35864 [35866, 35865, 35864, 35863] by Super 7101 with 1779 at 2,1,3
Id : 7237, {_}: ?35863 =<= multiply (multiply (multiply (divide (divide ?35863 ?35864) ?35865) (multiply ?35865 ?35866)) (inverse ?35866)) ?35864 [35866, 35865, 35864, 35863] by Demod 7161 with 3 at 1,1,3
Id : 9554, {_}: divide (divide ?49369 (divide (inverse (inverse ?49370)) ?49371)) ?49372 =>= multiply (multiply ?49369 ?49371) (inverse (multiply ?49372 ?49370)) [49372, 49371, 49370, 49369] by Super 9472 with 7237 at 1,1,3
Id : 10183, {_}: divide (divide (multiply ?52036 ?52037) (multiply (inverse ?52038) (multiply (inverse ?52039) ?52040))) ?52041 =<= divide (multiply (multiply ?52036 ?52037) (inverse (multiply (divide (inverse ?52038) ?52039) ?52040))) ?52041 [52041, 52040, 52039, 52038, 52037, 52036] by Demod 10182 with 9554 at 1,3
Id : 12174, {_}: multiply (multiply ?64029 ?64030) (inverse (multiply (divide (inverse ?64031) ?64032) ?64033)) =<= multiply (multiply (multiply (multiply (divide (divide (multiply ?64029 ?64030) (multiply (inverse ?64031) (multiply (inverse ?64032) ?64033))) ?64034) ?64035) (multiply (inverse ?64035) ?64036)) (inverse ?64036)) ?64034 [64036, 64035, 64034, 64033, 64032, 64031, 64030, 64029] by Super 7239 with 10183 at 1,1,1,1,3
Id : 12258, {_}: multiply (multiply ?64029 ?64030) (inverse (multiply (divide (inverse ?64031) ?64032) ?64033)) =>= divide (multiply ?64029 ?64030) (multiply (inverse ?64031) (multiply (inverse ?64032) ?64033)) [64033, 64032, 64031, 64030, 64029] by Demod 12174 with 7239 at 3
Id : 12491, {_}: inverse (inverse (multiply (divide (inverse ?65291) ?65292) ?65293)) =<= multiply (multiply (divide (inverse ?65294) ?65295) (divide (multiply ?65295 ?65294) (divide (multiply ?65296 ?65297) (multiply (inverse ?65291) (multiply (inverse ?65292) ?65293))))) (multiply ?65296 ?65297) [65297, 65296, 65295, 65294, 65293, 65292, 65291] by Super 7337 with 12258 at 2,2,1,3
Id : 7157, {_}: ?35843 =<= multiply (multiply (divide (inverse ?35844) ?35845) (divide (multiply ?35845 ?35844) (divide ?35846 ?35843))) ?35846 [35846, 35845, 35844, 35843] by Super 7101 with 3 at 1,2,1,3
Id : 12726, {_}: inverse (inverse (multiply (divide (inverse ?66353) ?66354) ?66355)) =>= multiply (inverse ?66353) (multiply (inverse ?66354) ?66355) [66355, 66354, 66353] by Demod 12491 with 7157 at 3
Id :   7, {_}: divide (inverse (divide ?29 ?30)) (divide (divide ?31 (divide ?32 ?33)) ?29) =>= inverse (divide ?31 (divide ?30 (divide ?33 ?32))) [33, 32, 31, 30, 29] by Super 4 with 2 at 2,1,1,2
Id :  53, {_}: inverse (divide ?279 (divide (divide ?280 (divide (divide ?281 ?282) ?279)) (divide ?282 ?281))) =>= ?280 [282, 281, 280, 279] by Super 2 with 7 at 2
Id : 12727, {_}: inverse (inverse (multiply (divide ?66357 ?66358) ?66359)) =<= multiply (inverse (divide ?66360 (divide (divide ?66357 (divide (divide ?66361 ?66362) ?66360)) (divide ?66362 ?66361)))) (multiply (inverse ?66358) ?66359) [66362, 66361, 66360, 66359, 66358, 66357] by Super 12726 with 53 at 1,1,1,1,2
Id : 12825, {_}: inverse (inverse (multiply (divide ?66943 ?66944) ?66945)) =>= multiply ?66943 (multiply (inverse ?66944) ?66945) [66945, 66944, 66943] by Demod 12727 with 53 at 1,3
Id : 12858, {_}: inverse (inverse (multiply (multiply ?67174 ?67175) ?67176)) =<= multiply ?67174 (multiply (inverse (inverse ?67175)) ?67176) [67176, 67175, 67174] by Super 12825 with 3 at 1,1,1,2
Id :  12, {_}: divide (inverse (divide ?53 (divide ?54 (multiply ?55 ?56)))) (divide (divide (inverse ?56) ?55) ?53) =>= ?54 [56, 55, 54, 53] by Super 2 with 3 at 2,2,1,1,2
Id :  17, {_}: divide (inverse (divide ?73 (divide ?74 ?75))) (divide (divide (divide ?76 ?77) (inverse (divide ?77 (divide ?75 (multiply (divide (divide ?78 ?79) ?80) (divide ?80 (divide ?76 (divide ?79 ?78)))))))) ?73) =>= ?74 [80, 79, 78, 77, 76, 75, 74, 73] by Super 2 with 15 at 2,2,1,1,2
Id : 66361, {_}: divide (inverse (divide ?259836 (divide ?259837 ?259838))) (divide (multiply (divide ?259839 ?259840) (divide ?259840 (divide ?259838 (multiply (divide (divide ?259841 ?259842) ?259843) (divide ?259843 (divide ?259839 (divide ?259842 ?259841))))))) ?259836) =>= ?259837 [259843, 259842, 259841, 259840, 259839, 259838, 259837, 259836] by Demod 17 with 3 at 1,2,2
Id : 12770, {_}: inverse (inverse (multiply (divide ?66357 ?66358) ?66359)) =>= multiply ?66357 (multiply (inverse ?66358) ?66359) [66359, 66358, 66357] by Demod 12727 with 53 at 1,3
Id : 12807, {_}: multiply ?66813 (inverse (multiply (divide ?66814 ?66815) ?66816)) =>= divide ?66813 (multiply ?66814 (multiply (inverse ?66815) ?66816)) [66816, 66815, 66814, 66813] by Super 3 with 12770 at 2,3
Id : 13153, {_}: inverse (inverse (multiply (multiply ?68629 ?68630) (inverse (multiply (divide ?68631 ?68632) ?68633)))) =<= multiply ?68629 (divide (inverse (inverse ?68630)) (multiply ?68631 (multiply (inverse ?68632) ?68633))) [68633, 68632, 68631, 68630, 68629] by Super 12858 with 12807 at 2,3
Id : 15503, {_}: inverse (inverse (divide (multiply ?81665 ?81666) (multiply ?81667 (multiply (inverse ?81668) ?81669)))) =<= multiply ?81665 (divide (inverse (inverse ?81666)) (multiply ?81667 (multiply (inverse ?81668) ?81669))) [81669, 81668, 81667, 81666, 81665] by Demod 13153 with 12807 at 1,1,2
Id : 6973, {_}: ?34184 =<= multiply (multiply (divide ?34187 ?34188) (divide (divide ?34188 ?34187) (divide ?34189 ?34184))) ?34189 [34189, 34188, 34187, 34184] by Demod 6831 with 2 at 2
Id : 15524, {_}: inverse (inverse (divide (multiply ?81857 ?81858) (multiply (multiply (divide ?81859 ?81860) (divide (divide ?81860 ?81859) (divide (multiply (inverse ?81861) ?81862) ?81863))) (multiply (inverse ?81861) ?81862)))) =>= multiply ?81857 (divide (inverse (inverse ?81858)) ?81863) [81863, 81862, 81861, 81860, 81859, 81858, 81857] by Super 15503 with 6973 at 2,2,3
Id : 15656, {_}: inverse (inverse (divide (multiply ?81857 ?81858) ?81863)) =<= multiply ?81857 (divide (inverse (inverse ?81858)) ?81863) [81863, 81858, 81857] by Demod 15524 with 6973 at 2,1,1,2
Id : 23797, {_}: divide (divide ?119374 (divide (inverse ?119375) (divide (inverse (inverse ?119376)) ?119377))) ?119378 =<= multiply (inverse (inverse (divide (multiply ?119374 ?119376) ?119377))) (inverse (divide ?119378 ?119375)) [119378, 119377, 119376, 119375, 119374] by Super 9552 with 15656 at 1,3
Id : 23859, {_}: divide (divide (multiply (divide (inverse ?119930) ?119931) (divide (multiply ?119931 ?119930) (divide ?119932 ?119933))) (divide (inverse ?119934) (divide (inverse (inverse ?119932)) ?119935))) ?119936 =>= multiply (inverse (inverse (divide ?119933 ?119935))) (inverse (divide ?119936 ?119934)) [119936, 119935, 119934, 119933, 119932, 119931, 119930] by Super 23797 with 7157 at 1,1,1,1,3
Id : 13062, {_}: inverse (inverse (divide (divide ?67961 ?67962) (multiply ?67963 (multiply (inverse ?67964) ?67965)))) =>= multiply ?67961 (multiply (inverse ?67962) (inverse (multiply (divide ?67963 ?67964) ?67965))) [67965, 67964, 67963, 67962, 67961] by Super 12770 with 12807 at 1,1,2
Id : 16664, {_}: inverse (inverse (divide (divide ?87645 ?87646) (multiply ?87647 (multiply (inverse ?87648) ?87649)))) =>= multiply ?87645 (divide (inverse ?87646) (multiply ?87647 (multiply (inverse ?87648) ?87649))) [87649, 87648, 87647, 87646, 87645] by Demod 13062 with 12807 at 2,3
Id : 16690, {_}: inverse (inverse (divide (divide ?87882 ?87883) ?87884)) =<= multiply ?87882 (divide (inverse ?87883) (multiply (multiply (divide ?87885 ?87886) (divide (divide ?87886 ?87885) (divide (multiply (inverse ?87887) ?87888) ?87884))) (multiply (inverse ?87887) ?87888))) [87888, 87887, 87886, 87885, 87884, 87883, 87882] by Super 16664 with 6973 at 2,1,1,2
Id : 16778, {_}: inverse (inverse (divide (divide ?87882 ?87883) ?87884)) =>= multiply ?87882 (divide (inverse ?87883) ?87884) [87884, 87883, 87882] by Demod 16690 with 6973 at 2,2,3
Id : 16836, {_}: multiply ?88530 (inverse (divide (divide ?88531 ?88532) ?88533)) =>= divide ?88530 (multiply ?88531 (divide (inverse ?88532) ?88533)) [88533, 88532, 88531, 88530] by Super 3 with 16778 at 2,3
Id : 16941, {_}: divide (divide ?89130 (divide (inverse ?89131) ?89132)) (divide ?89133 ?89134) =<= divide (multiply ?89130 ?89132) (multiply ?89133 (divide (inverse ?89134) ?89131)) [89134, 89133, 89132, 89131, 89130] by Super 9552 with 16836 at 3
Id : 17721, {_}: divide (inverse ?92223) (multiply (divide ?92224 ?92225) (divide (divide ?92225 ?92224) (divide ?92223 (divide (divide ?92226 (divide (inverse ?92227) ?92228)) (divide ?92229 ?92230))))) =>= divide (multiply ?92229 (divide (inverse ?92230) ?92227)) (multiply ?92226 ?92228) [92230, 92229, 92228, 92227, 92226, 92225, 92224, 92223] by Super 362 with 16941 at 2,2,2,2,2
Id : 18088, {_}: divide (divide ?94725 ?94726) (divide ?94727 (divide (inverse ?94728) ?94729)) =<= divide (multiply ?94725 (divide (inverse ?94726) ?94728)) (multiply ?94727 ?94729) [94729, 94728, 94727, 94726, 94725] by Demod 17721 with 362 at 2
Id : 18882, {_}: divide (divide ?99448 ?99449) (divide ?99450 (divide (inverse (inverse ?99451)) ?99452)) =>= divide (multiply ?99448 (multiply (inverse ?99449) ?99451)) (multiply ?99450 ?99452) [99452, 99451, 99450, 99449, 99448] by Super 18088 with 3 at 2,1,3
Id : 18956, {_}: divide (multiply ?100120 ?100121) (divide ?100122 (divide (inverse (inverse ?100123)) ?100124)) =?= divide (multiply ?100120 (multiply (inverse (inverse ?100121)) ?100123)) (multiply ?100122 ?100124) [100124, 100123, 100122, 100121, 100120] by Super 18882 with 3 at 1,2
Id : 19253, {_}: divide (multiply ?100120 ?100121) (divide ?100122 (divide (inverse (inverse ?100123)) ?100124)) =>= divide (inverse (inverse (multiply (multiply ?100120 ?100121) ?100123))) (multiply ?100122 ?100124) [100124, 100123, 100122, 100121, 100120] by Demod 18956 with 12858 at 1,3
Id : 24073, {_}: divide (divide (inverse (inverse (multiply (multiply (divide (inverse ?119930) ?119931) (divide (multiply ?119931 ?119930) (divide ?119932 ?119933))) ?119932))) (multiply (inverse ?119934) ?119935)) ?119936 =>= multiply (inverse (inverse (divide ?119933 ?119935))) (inverse (divide ?119936 ?119934)) [119936, 119935, 119934, 119933, 119932, 119931, 119930] by Demod 23859 with 19253 at 1,2
Id : 24074, {_}: divide (divide (inverse (inverse ?119933)) (multiply (inverse ?119934) ?119935)) ?119936 =<= multiply (inverse (inverse (divide ?119933 ?119935))) (inverse (divide ?119936 ?119934)) [119936, 119935, 119934, 119933] by Demod 24073 with 7157 at 1,1,1,1,2
Id : 18174, {_}: divide (divide ?95484 (inverse ?95485)) (divide ?95486 (divide (inverse ?95487) ?95488)) =>= divide (inverse (inverse (divide (multiply ?95484 ?95485) ?95487))) (multiply ?95486 ?95488) [95488, 95487, 95486, 95485, 95484] by Super 18088 with 15656 at 1,3
Id : 20071, {_}: divide (multiply ?105383 ?105384) (divide ?105385 (divide (inverse ?105386) ?105387)) =<= divide (inverse (inverse (divide (multiply ?105383 ?105384) ?105386))) (multiply ?105385 ?105387) [105387, 105386, 105385, 105384, 105383] by Demod 18174 with 3 at 1,2
Id : 20108, {_}: divide (multiply (multiply (divide ?105694 ?105695) (divide (divide ?105695 ?105694) (divide ?105696 ?105697))) ?105696) (divide ?105698 (divide (inverse ?105699) ?105700)) =>= divide (inverse (inverse (divide ?105697 ?105699))) (multiply ?105698 ?105700) [105700, 105699, 105698, 105697, 105696, 105695, 105694] by Super 20071 with 6973 at 1,1,1,1,3
Id : 20428, {_}: divide ?105697 (divide ?105698 (divide (inverse ?105699) ?105700)) =<= divide (inverse (inverse (divide ?105697 ?105699))) (multiply ?105698 ?105700) [105700, 105699, 105698, 105697] by Demod 20108 with 6973 at 1,2
Id : 20476, {_}: inverse (inverse (divide (divide ?106039 (divide ?106040 (divide (inverse ?106041) ?106042))) ?106043)) =<= multiply (inverse (inverse (divide ?106039 ?106041))) (divide (inverse (multiply ?106040 ?106042)) ?106043) [106043, 106042, 106041, 106040, 106039] by Super 16778 with 20428 at 1,1,1,2
Id : 20938, {_}: multiply ?106039 (divide (inverse (divide ?106040 (divide (inverse ?106041) ?106042))) ?106043) =<= multiply (inverse (inverse (divide ?106039 ?106041))) (divide (inverse (multiply ?106040 ?106042)) ?106043) [106043, 106042, 106041, 106040, 106039] by Demod 20476 with 16778 at 2
Id : 24149, {_}: inverse (inverse (multiply (multiply ?120312 (divide ?120313 ?120314)) (inverse (divide ?120315 ?120316)))) =<= multiply ?120312 (divide (divide (inverse (inverse ?120313)) (multiply (inverse ?120316) ?120314)) ?120315) [120316, 120315, 120314, 120313, 120312] by Super 12858 with 24074 at 2,3
Id : 24438, {_}: inverse (inverse (divide (divide ?120312 (divide (inverse ?120316) (divide ?120313 ?120314))) ?120315)) =<= multiply ?120312 (divide (divide (inverse (inverse ?120313)) (multiply (inverse ?120316) ?120314)) ?120315) [120315, 120314, 120313, 120316, 120312] by Demod 24149 with 9552 at 1,1,2
Id : 24439, {_}: multiply ?120312 (divide (inverse (divide (inverse ?120316) (divide ?120313 ?120314))) ?120315) =<= multiply ?120312 (divide (divide (inverse (inverse ?120313)) (multiply (inverse ?120316) ?120314)) ?120315) [120315, 120314, 120313, 120316, 120312] by Demod 24438 with 16778 at 2
Id : 33216, {_}: inverse (divide (divide (inverse (inverse ?156723)) (multiply (inverse ?156724) ?156725)) ?156726) =<= multiply (multiply (divide (inverse ?156727) ?156728) (divide (multiply ?156728 ?156727) (multiply ?156729 (divide (inverse (divide (inverse ?156724) (divide ?156723 ?156725))) ?156726)))) ?156729 [156729, 156728, 156727, 156726, 156725, 156724, 156723] by Super 7337 with 24439 at 2,2,1,3
Id : 33721, {_}: inverse (divide (divide (inverse (inverse ?158945)) (multiply (inverse ?158946) ?158947)) ?158948) =>= inverse (divide (inverse (divide (inverse ?158946) (divide ?158945 ?158947))) ?158948) [158948, 158947, 158946, 158945] by Demod 33216 with 7337 at 3
Id : 33722, {_}: inverse (divide (divide (inverse (inverse ?158950)) (multiply ?158951 ?158952)) ?158953) =<= inverse (divide (inverse (divide (inverse (divide ?158954 (divide (divide ?158951 (divide (divide ?158955 ?158956) ?158954)) (divide ?158956 ?158955)))) (divide ?158950 ?158952))) ?158953) [158956, 158955, 158954, 158953, 158952, 158951, 158950] by Super 33721 with 53 at 1,2,1,1,2
Id : 34010, {_}: inverse (divide (divide (inverse (inverse ?158950)) (multiply ?158951 ?158952)) ?158953) =>= inverse (divide (inverse (divide ?158951 (divide ?158950 ?158952))) ?158953) [158953, 158952, 158951, 158950] by Demod 33722 with 53 at 1,1,1,1,3
Id : 34077, {_}: inverse (inverse (divide (inverse (divide ?159790 (divide ?159791 ?159792))) ?159793)) =<= multiply (inverse (inverse ?159791)) (divide (inverse (multiply ?159790 ?159792)) ?159793) [159793, 159792, 159791, 159790] by Super 16778 with 34010 at 1,2
Id : 34441, {_}: multiply ?106039 (divide (inverse (divide ?106040 (divide (inverse ?106041) ?106042))) ?106043) =<= inverse (inverse (divide (inverse (divide ?106040 (divide (divide ?106039 ?106041) ?106042))) ?106043)) [106043, 106042, 106041, 106040, 106039] by Demod 20938 with 34077 at 3
Id :  16, {_}: divide (inverse (divide ?64 (divide ?65 (divide (divide ?66 ?67) (inverse (divide ?67 (divide ?68 (multiply (divide (divide ?69 ?70) ?71) (divide ?71 (divide ?66 (divide ?70 ?69))))))))))) (divide ?68 ?64) =>= ?65 [71, 70, 69, 68, 67, 66, 65, 64] by Super 2 with 15 at 1,2,2
Id :  38, {_}: divide (inverse (divide ?64 (divide ?65 (multiply (divide ?66 ?67) (divide ?67 (divide ?68 (multiply (divide (divide ?69 ?70) ?71) (divide ?71 (divide ?66 (divide ?70 ?69)))))))))) (divide ?68 ?64) =>= ?65 [71, 70, 69, 68, 67, 66, 65, 64] by Demod 16 with 3 at 2,2,1,1,2
Id : 43649, {_}: multiply ?191130 (divide (inverse (divide ?191131 (divide (inverse ?191132) (multiply (divide ?191133 ?191134) (divide ?191134 (divide ?191135 (multiply (divide (divide ?191136 ?191137) ?191138) (divide ?191138 (divide ?191133 (divide ?191137 ?191136)))))))))) (divide ?191135 ?191131)) =>= inverse (inverse (divide ?191130 ?191132)) [191138, 191137, 191136, 191135, 191134, 191133, 191132, 191131, 191130] by Super 34441 with 38 at 1,1,3
Id : 44429, {_}: multiply ?191130 (inverse ?191132) =<= inverse (inverse (divide ?191130 ?191132)) [191132, 191130] by Demod 43649 with 38 at 2,2
Id : 44886, {_}: divide (divide (inverse (inverse ?119933)) (multiply (inverse ?119934) ?119935)) ?119936 =>= multiply (multiply ?119933 (inverse ?119935)) (inverse (divide ?119936 ?119934)) [119936, 119935, 119934, 119933] by Demod 24074 with 44429 at 1,3
Id : 44891, {_}: divide (divide (inverse (inverse ?119933)) (multiply (inverse ?119934) ?119935)) ?119936 =>= divide (divide ?119933 (divide (inverse ?119934) (inverse ?119935))) ?119936 [119936, 119935, 119934, 119933] by Demod 44886 with 9552 at 3
Id : 44892, {_}: divide (divide (inverse (inverse ?119933)) (multiply (inverse ?119934) ?119935)) ?119936 =>= divide (divide ?119933 (multiply (inverse ?119934) ?119935)) ?119936 [119936, 119935, 119934, 119933] by Demod 44891 with 3 at 2,1,3
Id : 66804, {_}: divide (inverse (divide ?265003 (divide (divide ?265004 (multiply (inverse ?265005) ?265006)) ?265007))) (divide (multiply (divide ?265008 ?265009) (divide ?265009 (divide ?265007 (multiply (divide (divide ?265010 ?265011) ?265012) (divide ?265012 (divide ?265008 (divide ?265011 ?265010))))))) ?265003) =>= divide (inverse (inverse ?265004)) (multiply (inverse ?265005) ?265006) [265012, 265011, 265010, 265009, 265008, 265007, 265006, 265005, 265004, 265003] by Super 66361 with 44892 at 2,1,1,2
Id :  39, {_}: divide (inverse (divide ?73 (divide ?74 ?75))) (divide (multiply (divide ?76 ?77) (divide ?77 (divide ?75 (multiply (divide (divide ?78 ?79) ?80) (divide ?80 (divide ?76 (divide ?79 ?78))))))) ?73) =>= ?74 [80, 79, 78, 77, 76, 75, 74, 73] by Demod 17 with 3 at 1,2,2
Id : 67572, {_}: divide ?265004 (multiply (inverse ?265005) ?265006) =<= divide (inverse (inverse ?265004)) (multiply (inverse ?265005) ?265006) [265006, 265005, 265004] by Demod 66804 with 39 at 2
Id : 67796, {_}: divide (inverse (divide ?266802 (divide ?266803 (multiply (inverse ?266804) ?266805)))) (divide (divide (inverse ?266805) (inverse ?266804)) ?266802) =>= inverse (inverse ?266803) [266805, 266804, 266803, 266802] by Super 12 with 67572 at 2,1,1,2
Id : 68093, {_}: ?266803 =<= inverse (inverse ?266803) [266803] by Demod 67796 with 12 at 2
Id : 68404, {_}: multiply (multiply ?67174 ?67175) ?67176 =<= multiply ?67174 (multiply (inverse (inverse ?67175)) ?67176) [67176, 67175, 67174] by Demod 12858 with 68093 at 2
Id : 68405, {_}: multiply (multiply ?67174 ?67175) ?67176 =?= multiply ?67174 (multiply ?67175 ?67176) [67176, 67175, 67174] by Demod 68404 with 68093 at 1,2,3
Id : 68861, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 68405 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP471-1.p
11326: solved GRP471-1.p in 19.353208 using nrkbo
11326: status Unsatisfiable for GRP471-1.p
NO CLASH, using fixed ground order
11333: Facts:
11333:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11333:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11333: Goal:
11333:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11333: Order:
11333:   nrkbo
11333: Leaf order:
11333:  divide 7 2 0 
11333:  b1 2 0 2 1,1,3
11333:  multiply 3 2 2 0,2
11333:  inverse 4 1 2 0,1,2
11333:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11334: Facts:
11334:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11334:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11334: Goal:
11334:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11334: Order:
11334:   kbo
11334: Leaf order:
11334:  divide 7 2 0 
11334:  b1 2 0 2 1,1,3
11334:  multiply 3 2 2 0,2
11334:  inverse 4 1 2 0,1,2
11334:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11335: Facts:
11335:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11335:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11335: Goal:
11335:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11335: Order:
11335:   lpo
11335: Leaf order:
11335:  divide 7 2 0 
11335:  b1 2 0 2 1,1,3
11335:  multiply 3 2 2 0,2
11335:  inverse 4 1 2 0,1,2
11335:  a1 2 0 2 1,1,2
% SZS status Timeout for GRP475-1.p
NO CLASH, using fixed ground order
11373: Facts:
11373:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11373:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11373: Goal:
11373:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11373: Order:
11373:   nrkbo
11373: Leaf order:
11373:  divide 7 2 0 
11373:  a2 2 0 2 2,2
11373:  multiply 3 2 2 0,2
11373:  inverse 3 1 1 0,1,1,2
11373:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11374: Facts:
11374:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11374:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11374: Goal:
11374:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11374: Order:
11374:   kbo
11374: Leaf order:
11374:  divide 7 2 0 
11374:  a2 2 0 2 2,2
11374:  multiply 3 2 2 0,2
11374:  inverse 3 1 1 0,1,1,2
11374:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11375: Facts:
11375:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11375:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11375: Goal:
11375:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11375: Order:
11375:   lpo
11375: Leaf order:
11375:  divide 7 2 0 
11375:  a2 2 0 2 2,2
11375:  multiply 3 2 2 0,2
11375:  inverse 3 1 1 0,1,1,2
11375:  b2 2 0 2 1,1,1,2
Statistics :
Max weight : 49
Found proof, 60.308770s
% SZS status Unsatisfiable for GRP476-1.p
% SZS output start CNFRefutation for GRP476-1.p
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?3 ?2) =>= ?5 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?11) ?12) (divide ?13 ?12))) (divide ?11 ?10) =>= ?13 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   5, {_}: divide (inverse (divide (divide (divide (divide ?15 ?16) (inverse (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17)))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2
Id :  17, {_}: divide (inverse (divide (divide (multiply (divide ?15 ?16) (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,1,2
Id :  20, {_}: divide (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?81 ?80) =?= inverse (divide (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?83 ?87)) [87, 86, 85, 84, 83, 82, 81, 80] by Super 2 with 17 at 2,1,1,2
Id : 2201, {_}: divide (divide (inverse (divide (divide (divide ?9850 ?9851) ?9852) ?9853)) (divide ?9851 ?9850)) ?9852 =>= ?9853 [9853, 9852, 9851, 9850] by Super 17 with 20 at 1,2
Id : 2522, {_}: divide (divide (inverse (multiply (divide (divide ?11173 ?11174) ?11175) ?11176)) (divide ?11174 ?11173)) ?11175 =>= inverse ?11176 [11176, 11175, 11174, 11173] by Super 2201 with 3 at 1,1,1,2
Id : 3974, {_}: divide (divide (inverse (multiply (divide (divide (inverse ?18265) ?18266) ?18267) ?18268)) (multiply ?18266 ?18265)) ?18267 =>= inverse ?18268 [18268, 18267, 18266, 18265] by Super 2522 with 3 at 2,1,2
Id : 4011, {_}: divide (divide (inverse (multiply (divide (multiply (inverse ?18535) ?18536) ?18537) ?18538)) (multiply (inverse ?18536) ?18535)) ?18537 =>= inverse ?18538 [18538, 18537, 18536, 18535] by Super 3974 with 3 at 1,1,1,1,1,2
Id : 3335, {_}: divide (divide (inverse (divide (divide (divide (inverse ?15160) ?15161) ?15162) ?15163)) (multiply ?15161 ?15160)) ?15162 =>= ?15163 [15163, 15162, 15161, 15160] by Super 2201 with 3 at 2,1,2
Id : 3370, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?15416) ?15417) ?15418) ?15419)) (multiply (inverse ?15417) ?15416)) ?15418 =>= ?15419 [15419, 15418, 15417, 15416] by Super 3335 with 3 at 1,1,1,1,1,2
Id :   7, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (divide (divide ?32 ?33) (inverse (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34)))) =>= ?31 [34, 33, 32, 31, 30, 29] by Super 4 with 2 at 1,1,1,1,2
Id : 602, {_}: divide (inverse (divide (divide ?2300 ?2301) (divide ?2302 ?2301))) (multiply (divide ?2303 ?2304) (divide (divide (divide ?2304 ?2303) ?2305) (divide ?2300 ?2305))) =>= ?2302 [2305, 2304, 2303, 2302, 2301, 2300] by Demod 7 with 3 at 2,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?23) (divide ?24 ?25)) ?26)) (divide ?23 ?22) =?= inverse (divide (divide (divide ?25 ?24) ?27) (divide ?26 ?27)) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 300, {_}: inverse (divide (divide (divide ?1003 ?1004) ?1005) (divide (divide ?1006 (divide ?1004 ?1003)) ?1005)) =>= ?1006 [1006, 1005, 1004, 1003] by Super 2 with 6 at 2
Id : 673, {_}: divide ?2877 (multiply (divide ?2878 ?2879) (divide (divide (divide ?2879 ?2878) ?2880) (divide (divide ?2881 ?2882) ?2880))) =>= divide ?2877 (divide ?2882 ?2881) [2882, 2881, 2880, 2879, 2878, 2877] by Super 602 with 300 at 1,2
Id : 18343, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?89645) ?89646) ?89647) (divide ?89648 ?89649))) (multiply (inverse ?89646) ?89645)) ?89647 =?= multiply (divide ?89650 ?89651) (divide (divide (divide ?89651 ?89650) ?89652) (divide (divide ?89649 ?89648) ?89652)) [89652, 89651, 89650, 89649, 89648, 89647, 89646, 89645] by Super 3370 with 673 at 1,1,1,2
Id : 19039, {_}: divide ?92370 ?92371 =<= multiply (divide ?92372 ?92373) (divide (divide (divide ?92373 ?92372) ?92374) (divide (divide ?92371 ?92370) ?92374)) [92374, 92373, 92372, 92371, 92370] by Demod 18343 with 3370 at 2
Id : 19158, {_}: divide ?93334 ?93335 =<= multiply (multiply ?93336 ?93337) (divide (divide (divide (inverse ?93337) ?93336) ?93338) (divide (divide ?93335 ?93334) ?93338)) [93338, 93337, 93336, 93335, 93334] by Super 19039 with 3 at 1,3
Id : 2243, {_}: divide (divide (inverse (multiply (divide (divide ?10125 ?10126) ?10127) ?10128)) (divide ?10126 ?10125)) ?10127 =>= inverse ?10128 [10128, 10127, 10126, 10125] by Super 2201 with 3 at 1,1,1,2
Id : 18627, {_}: divide ?89648 ?89649 =<= multiply (divide ?89650 ?89651) (divide (divide (divide ?89651 ?89650) ?89652) (divide (divide ?89649 ?89648) ?89652)) [89652, 89651, 89650, 89649, 89648] by Demod 18343 with 3370 at 2
Id : 18986, {_}: divide (divide (inverse (divide ?91944 ?91945)) (divide ?91946 ?91947)) ?91948 =<= inverse (divide (divide (divide ?91948 (divide ?91947 ?91946)) ?91949) (divide (divide ?91945 ?91944) ?91949)) [91949, 91948, 91947, 91946, 91945, 91944] by Super 2243 with 18627 at 1,1,1,2
Id : 19370, {_}: divide (divide (divide (inverse (divide ?93677 ?93678)) (divide ?93679 ?93680)) ?93681) (divide (divide ?93680 ?93679) ?93681) =>= divide ?93678 ?93677 [93681, 93680, 93679, 93678, 93677] by Super 2 with 18986 at 1,2
Id : 33018, {_}: divide ?156119 ?156120 =<= multiply (multiply (divide ?156119 ?156120) (divide ?156121 ?156122)) (divide ?156122 ?156121) [156122, 156121, 156120, 156119] by Super 19158 with 19370 at 2,3
Id : 33087, {_}: divide (inverse (divide (divide (divide ?156646 ?156647) ?156648) (divide ?156649 ?156648))) (divide ?156647 ?156646) =?= multiply (multiply ?156649 (divide ?156650 ?156651)) (divide ?156651 ?156650) [156651, 156650, 156649, 156648, 156647, 156646] by Super 33018 with 2 at 1,1,3
Id : 33278, {_}: ?156649 =<= multiply (multiply ?156649 (divide ?156650 ?156651)) (divide ?156651 ?156650) [156651, 156650, 156649] by Demod 33087 with 2 at 2
Id : 412, {_}: inverse (divide (divide (divide ?1605 ?1606) ?1607) (divide (divide ?1608 (divide ?1606 ?1605)) ?1607)) =>= ?1608 [1608, 1607, 1606, 1605] by Super 2 with 6 at 2
Id : 433, {_}: inverse (divide (divide (divide ?1731 ?1732) (inverse ?1733)) (multiply (divide ?1734 (divide ?1732 ?1731)) ?1733)) =>= ?1734 [1734, 1733, 1732, 1731] by Super 412 with 3 at 2,1,2
Id : 477, {_}: inverse (divide (multiply (divide ?1731 ?1732) ?1733) (multiply (divide ?1734 (divide ?1732 ?1731)) ?1733)) =>= ?1734 [1734, 1733, 1732, 1731] by Demod 433 with 3 at 1,1,2
Id : 503, {_}: inverse (divide (multiply (divide ?1881 ?1882) ?1883) (multiply (divide ?1884 (divide ?1882 ?1881)) ?1883)) =>= ?1884 [1884, 1883, 1882, 1881] by Demod 433 with 3 at 1,1,2
Id : 511, {_}: inverse (divide (multiply (divide (inverse ?1933) ?1934) ?1935) (multiply (divide ?1936 (multiply ?1934 ?1933)) ?1935)) =>= ?1936 [1936, 1935, 1934, 1933] by Super 503 with 3 at 2,1,2,1,2
Id : 32469, {_}: divide (divide (inverse (divide ?153394 ?153395)) (divide ?153395 ?153394)) (inverse (divide ?153396 ?153397)) =>= inverse (divide ?153397 ?153396) [153397, 153396, 153395, 153394] by Super 18986 with 19370 at 1,3
Id : 32700, {_}: multiply (divide (inverse (divide ?153394 ?153395)) (divide ?153395 ?153394)) (divide ?153396 ?153397) =>= inverse (divide ?153397 ?153396) [153397, 153396, 153395, 153394] by Demod 32469 with 3 at 2
Id : 35765, {_}: inverse (divide (inverse (divide ?167563 ?167564)) (multiply (divide ?167565 (multiply (divide ?167566 ?167567) (divide ?167567 ?167566))) (divide ?167564 ?167563))) =>= ?167565 [167567, 167566, 167565, 167564, 167563] by Super 511 with 32700 at 1,1,2
Id :   9, {_}: divide (inverse (divide (divide (divide (inverse ?38) ?39) ?40) (divide ?41 ?40))) (multiply ?39 ?38) =>= ?41 [41, 40, 39, 38] by Super 2 with 3 at 2,2
Id : 32402, {_}: divide (inverse (divide ?152772 ?152773)) (multiply (divide ?152774 ?152775) (divide ?152773 ?152772)) =>= divide ?152775 ?152774 [152775, 152774, 152773, 152772] by Super 9 with 19370 at 1,1,2
Id : 36094, {_}: inverse (divide (multiply (divide ?167566 ?167567) (divide ?167567 ?167566)) ?167565) =>= ?167565 [167565, 167567, 167566] by Demod 35765 with 32402 at 1,2
Id : 36327, {_}: multiply (divide ?169738 (divide ?169739 ?169740)) (divide ?169739 ?169740) =>= ?169738 [169740, 169739, 169738] by Super 477 with 36094 at 2
Id : 36681, {_}: divide ?171580 (divide ?171581 ?171582) =<= multiply ?171580 (divide ?171582 ?171581) [171582, 171581, 171580] by Super 33278 with 36327 at 1,3
Id : 37087, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?173237) ?173238) ?173239) (divide ?173240 ?173241))) (multiply (inverse ?173238) ?173237)) ?173239 =>= inverse (divide ?173241 ?173240) [173241, 173240, 173239, 173238, 173237] by Super 4011 with 36681 at 1,1,1,2
Id : 37291, {_}: divide ?173240 ?173241 =<= inverse (divide ?173241 ?173240) [173241, 173240] by Demod 37087 with 3370 at 2
Id : 36954, {_}: inverse (divide (divide (divide ?167566 ?167567) (divide ?167566 ?167567)) ?167565) =>= ?167565 [167565, 167567, 167566] by Demod 36094 with 36681 at 1,1,2
Id : 37568, {_}: divide ?167565 (divide (divide ?167566 ?167567) (divide ?167566 ?167567)) =>= ?167565 [167567, 167566, 167565] by Demod 36954 with 37291 at 2
Id : 33466, {_}: ?158075 =<= multiply (multiply ?158075 (divide ?158076 ?158077)) (divide ?158077 ?158076) [158077, 158076, 158075] by Demod 33087 with 2 at 2
Id : 33531, {_}: ?158517 =<= multiply (multiply ?158517 (multiply ?158518 ?158519)) (divide (inverse ?158519) ?158518) [158519, 158518, 158517] by Super 33466 with 3 at 2,1,3
Id : 36952, {_}: ?158517 =<= divide (multiply ?158517 (multiply ?158518 ?158519)) (divide ?158518 (inverse ?158519)) [158519, 158518, 158517] by Demod 33531 with 36681 at 3
Id : 36955, {_}: ?158517 =<= divide (multiply ?158517 (multiply ?158518 ?158519)) (multiply ?158518 ?158519) [158519, 158518, 158517] by Demod 36952 with 3 at 2,3
Id : 36684, {_}: multiply (divide ?171593 (divide ?171594 ?171595)) (divide ?171594 ?171595) =>= ?171593 [171595, 171594, 171593] by Super 477 with 36094 at 2
Id : 36687, {_}: multiply (divide ?171605 (divide (inverse (divide (divide (divide ?171606 ?171607) ?171608) (divide ?171609 ?171608))) (divide ?171607 ?171606))) ?171609 =>= ?171605 [171609, 171608, 171607, 171606, 171605] by Super 36684 with 2 at 2,2
Id : 36819, {_}: multiply (divide ?171605 ?171609) ?171609 =>= ?171605 [171609, 171605] by Demod 36687 with 2 at 2,1,2
Id : 38144, {_}: ?175420 =<= divide (multiply ?175420 (multiply (divide ?175421 ?175422) ?175422)) ?175421 [175422, 175421, 175420] by Super 36955 with 36819 at 2,3
Id : 38311, {_}: ?175420 =<= divide (multiply ?175420 ?175421) ?175421 [175421, 175420] by Demod 38144 with 36819 at 2,1,3
Id : 38590, {_}: divide ?177333 (divide (divide (multiply ?177334 ?177335) ?177335) ?177334) =>= ?177333 [177335, 177334, 177333] by Super 37568 with 38311 at 2,2,2
Id : 38627, {_}: divide ?177333 (divide ?177334 ?177334) =>= ?177333 [177334, 177333] by Demod 38590 with 38311 at 1,2,2
Id : 41488, {_}: divide (divide ?193733 ?193733) ?193734 =>= inverse ?193734 [193734, 193733] by Super 37291 with 38627 at 1,3
Id : 42000, {_}: multiply (divide ?195057 ?195057) ?195058 =>= inverse (inverse ?195058) [195058, 195057] by Super 3 with 41488 at 3
Id : 38603, {_}: divide ?177417 (multiply ?177418 ?177417) =>= inverse ?177418 [177418, 177417] by Super 37291 with 38311 at 1,3
Id : 40108, {_}: divide (multiply ?188666 ?188667) ?188667 =>= inverse (inverse ?188666) [188667, 188666] by Super 37291 with 38603 at 1,3
Id : 40636, {_}: ?188666 =<= inverse (inverse ?188666) [188666] by Demod 40108 with 38311 at 2
Id : 43036, {_}: multiply (divide ?197334 ?197334) ?197335 =>= ?197335 [197335, 197334] by Demod 42000 with 40636 at 3
Id : 43063, {_}: multiply (multiply (inverse ?197470) ?197470) ?197471 =>= ?197471 [197471, 197470] by Super 43036 with 3 at 1,2
Id : 47549, {_}: a2 =?= a2 [] by Demod 1 with 43063 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP476-1.p
11374: solved GRP476-1.p in 30.053878 using kbo
11374: status Unsatisfiable for GRP476-1.p
NO CLASH, using fixed ground order
11392: Facts:
11392:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11392:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11392: Goal:
11392:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11392: Order:
11392:   nrkbo
11392: Leaf order:
11392:  inverse 2 1 0 
11392:  divide 7 2 0 
11392:  c3 2 0 2 2,2
11392:  multiply 5 2 4 0,2
11392:  b3 2 0 2 2,1,2
11392:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11393: Facts:
11393:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11393:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11393: Goal:
11393:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11393: Order:
11393:   kbo
11393: Leaf order:
11393:  inverse 2 1 0 
11393:  divide 7 2 0 
11393:  c3 2 0 2 2,2
11393:  multiply 5 2 4 0,2
11393:  b3 2 0 2 2,1,2
11393:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11395: Facts:
11395:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11395:  Id :   3, {_}:
          multiply ?7 ?8 =>= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11395: Goal:
11395:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11395: Order:
11395:   lpo
11395: Leaf order:
11395:  inverse 2 1 0 
11395:  divide 7 2 0 
11395:  c3 2 0 2 2,2
11395:  multiply 5 2 4 0,2
11395:  b3 2 0 2 2,1,2
11395:  a3 2 0 2 1,1,2
Statistics :
Max weight : 49
Found proof, 65.047626s
% SZS status Unsatisfiable for GRP477-1.p
% SZS output start CNFRefutation for GRP477-1.p
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?3 ?2) =>= ?5 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?11) ?12) (divide ?13 ?12))) (divide ?11 ?10) =>= ?13 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   5, {_}: divide (inverse (divide (divide (divide (divide ?15 ?16) (inverse (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17)))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2
Id :  17, {_}: divide (inverse (divide (divide (multiply (divide ?15 ?16) (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,1,2
Id :  20, {_}: divide (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?81 ?80) =?= inverse (divide (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?83 ?87)) [87, 86, 85, 84, 83, 82, 81, 80] by Super 2 with 17 at 2,1,1,2
Id : 2201, {_}: divide (divide (inverse (divide (divide (divide ?9850 ?9851) ?9852) ?9853)) (divide ?9851 ?9850)) ?9852 =>= ?9853 [9853, 9852, 9851, 9850] by Super 17 with 20 at 1,2
Id : 2216, {_}: divide (divide (inverse (divide (divide (divide (inverse ?9957) ?9958) ?9959) ?9960)) (multiply ?9958 ?9957)) ?9959 =>= ?9960 [9960, 9959, 9958, 9957] by Super 2201 with 3 at 2,1,2
Id : 2522, {_}: divide (divide (inverse (multiply (divide (divide ?11173 ?11174) ?11175) ?11176)) (divide ?11174 ?11173)) ?11175 =>= inverse ?11176 [11176, 11175, 11174, 11173] by Super 2201 with 3 at 1,1,1,2
Id : 3974, {_}: divide (divide (inverse (multiply (divide (divide (inverse ?18265) ?18266) ?18267) ?18268)) (multiply ?18266 ?18265)) ?18267 =>= inverse ?18268 [18268, 18267, 18266, 18265] by Super 2522 with 3 at 2,1,2
Id : 4011, {_}: divide (divide (inverse (multiply (divide (multiply (inverse ?18535) ?18536) ?18537) ?18538)) (multiply (inverse ?18536) ?18535)) ?18537 =>= inverse ?18538 [18538, 18537, 18536, 18535] by Super 3974 with 3 at 1,1,1,1,1,2
Id : 3335, {_}: divide (divide (inverse (divide (divide (divide (inverse ?15160) ?15161) ?15162) ?15163)) (multiply ?15161 ?15160)) ?15162 =>= ?15163 [15163, 15162, 15161, 15160] by Super 2201 with 3 at 2,1,2
Id : 3370, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?15416) ?15417) ?15418) ?15419)) (multiply (inverse ?15417) ?15416)) ?15418 =>= ?15419 [15419, 15418, 15417, 15416] by Super 3335 with 3 at 1,1,1,1,1,2
Id :   7, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (divide (divide ?32 ?33) (inverse (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34)))) =>= ?31 [34, 33, 32, 31, 30, 29] by Super 4 with 2 at 1,1,1,1,2
Id : 602, {_}: divide (inverse (divide (divide ?2300 ?2301) (divide ?2302 ?2301))) (multiply (divide ?2303 ?2304) (divide (divide (divide ?2304 ?2303) ?2305) (divide ?2300 ?2305))) =>= ?2302 [2305, 2304, 2303, 2302, 2301, 2300] by Demod 7 with 3 at 2,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?23) (divide ?24 ?25)) ?26)) (divide ?23 ?22) =?= inverse (divide (divide (divide ?25 ?24) ?27) (divide ?26 ?27)) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 300, {_}: inverse (divide (divide (divide ?1003 ?1004) ?1005) (divide (divide ?1006 (divide ?1004 ?1003)) ?1005)) =>= ?1006 [1006, 1005, 1004, 1003] by Super 2 with 6 at 2
Id : 673, {_}: divide ?2877 (multiply (divide ?2878 ?2879) (divide (divide (divide ?2879 ?2878) ?2880) (divide (divide ?2881 ?2882) ?2880))) =>= divide ?2877 (divide ?2882 ?2881) [2882, 2881, 2880, 2879, 2878, 2877] by Super 602 with 300 at 1,2
Id : 18343, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?89645) ?89646) ?89647) (divide ?89648 ?89649))) (multiply (inverse ?89646) ?89645)) ?89647 =?= multiply (divide ?89650 ?89651) (divide (divide (divide ?89651 ?89650) ?89652) (divide (divide ?89649 ?89648) ?89652)) [89652, 89651, 89650, 89649, 89648, 89647, 89646, 89645] by Super 3370 with 673 at 1,1,1,2
Id : 19039, {_}: divide ?92370 ?92371 =<= multiply (divide ?92372 ?92373) (divide (divide (divide ?92373 ?92372) ?92374) (divide (divide ?92371 ?92370) ?92374)) [92374, 92373, 92372, 92371, 92370] by Demod 18343 with 3370 at 2
Id : 19158, {_}: divide ?93334 ?93335 =<= multiply (multiply ?93336 ?93337) (divide (divide (divide (inverse ?93337) ?93336) ?93338) (divide (divide ?93335 ?93334) ?93338)) [93338, 93337, 93336, 93335, 93334] by Super 19039 with 3 at 1,3
Id : 2243, {_}: divide (divide (inverse (multiply (divide (divide ?10125 ?10126) ?10127) ?10128)) (divide ?10126 ?10125)) ?10127 =>= inverse ?10128 [10128, 10127, 10126, 10125] by Super 2201 with 3 at 1,1,1,2
Id : 18627, {_}: divide ?89648 ?89649 =<= multiply (divide ?89650 ?89651) (divide (divide (divide ?89651 ?89650) ?89652) (divide (divide ?89649 ?89648) ?89652)) [89652, 89651, 89650, 89649, 89648] by Demod 18343 with 3370 at 2
Id : 18986, {_}: divide (divide (inverse (divide ?91944 ?91945)) (divide ?91946 ?91947)) ?91948 =<= inverse (divide (divide (divide ?91948 (divide ?91947 ?91946)) ?91949) (divide (divide ?91945 ?91944) ?91949)) [91949, 91948, 91947, 91946, 91945, 91944] by Super 2243 with 18627 at 1,1,1,2
Id : 19370, {_}: divide (divide (divide (inverse (divide ?93677 ?93678)) (divide ?93679 ?93680)) ?93681) (divide (divide ?93680 ?93679) ?93681) =>= divide ?93678 ?93677 [93681, 93680, 93679, 93678, 93677] by Super 2 with 18986 at 1,2
Id : 33018, {_}: divide ?156119 ?156120 =<= multiply (multiply (divide ?156119 ?156120) (divide ?156121 ?156122)) (divide ?156122 ?156121) [156122, 156121, 156120, 156119] by Super 19158 with 19370 at 2,3
Id : 33087, {_}: divide (inverse (divide (divide (divide ?156646 ?156647) ?156648) (divide ?156649 ?156648))) (divide ?156647 ?156646) =?= multiply (multiply ?156649 (divide ?156650 ?156651)) (divide ?156651 ?156650) [156651, 156650, 156649, 156648, 156647, 156646] by Super 33018 with 2 at 1,1,3
Id : 33278, {_}: ?156649 =<= multiply (multiply ?156649 (divide ?156650 ?156651)) (divide ?156651 ?156650) [156651, 156650, 156649] by Demod 33087 with 2 at 2
Id : 412, {_}: inverse (divide (divide (divide ?1605 ?1606) ?1607) (divide (divide ?1608 (divide ?1606 ?1605)) ?1607)) =>= ?1608 [1608, 1607, 1606, 1605] by Super 2 with 6 at 2
Id : 433, {_}: inverse (divide (divide (divide ?1731 ?1732) (inverse ?1733)) (multiply (divide ?1734 (divide ?1732 ?1731)) ?1733)) =>= ?1734 [1734, 1733, 1732, 1731] by Super 412 with 3 at 2,1,2
Id : 477, {_}: inverse (divide (multiply (divide ?1731 ?1732) ?1733) (multiply (divide ?1734 (divide ?1732 ?1731)) ?1733)) =>= ?1734 [1734, 1733, 1732, 1731] by Demod 433 with 3 at 1,1,2
Id : 503, {_}: inverse (divide (multiply (divide ?1881 ?1882) ?1883) (multiply (divide ?1884 (divide ?1882 ?1881)) ?1883)) =>= ?1884 [1884, 1883, 1882, 1881] by Demod 433 with 3 at 1,1,2
Id : 511, {_}: inverse (divide (multiply (divide (inverse ?1933) ?1934) ?1935) (multiply (divide ?1936 (multiply ?1934 ?1933)) ?1935)) =>= ?1936 [1936, 1935, 1934, 1933] by Super 503 with 3 at 2,1,2,1,2
Id : 32469, {_}: divide (divide (inverse (divide ?153394 ?153395)) (divide ?153395 ?153394)) (inverse (divide ?153396 ?153397)) =>= inverse (divide ?153397 ?153396) [153397, 153396, 153395, 153394] by Super 18986 with 19370 at 1,3
Id : 32700, {_}: multiply (divide (inverse (divide ?153394 ?153395)) (divide ?153395 ?153394)) (divide ?153396 ?153397) =>= inverse (divide ?153397 ?153396) [153397, 153396, 153395, 153394] by Demod 32469 with 3 at 2
Id : 35765, {_}: inverse (divide (inverse (divide ?167563 ?167564)) (multiply (divide ?167565 (multiply (divide ?167566 ?167567) (divide ?167567 ?167566))) (divide ?167564 ?167563))) =>= ?167565 [167567, 167566, 167565, 167564, 167563] by Super 511 with 32700 at 1,1,2
Id :   9, {_}: divide (inverse (divide (divide (divide (inverse ?38) ?39) ?40) (divide ?41 ?40))) (multiply ?39 ?38) =>= ?41 [41, 40, 39, 38] by Super 2 with 3 at 2,2
Id : 32402, {_}: divide (inverse (divide ?152772 ?152773)) (multiply (divide ?152774 ?152775) (divide ?152773 ?152772)) =>= divide ?152775 ?152774 [152775, 152774, 152773, 152772] by Super 9 with 19370 at 1,1,2
Id : 36094, {_}: inverse (divide (multiply (divide ?167566 ?167567) (divide ?167567 ?167566)) ?167565) =>= ?167565 [167565, 167567, 167566] by Demod 35765 with 32402 at 1,2
Id : 36327, {_}: multiply (divide ?169738 (divide ?169739 ?169740)) (divide ?169739 ?169740) =>= ?169738 [169740, 169739, 169738] by Super 477 with 36094 at 2
Id : 36681, {_}: divide ?171580 (divide ?171581 ?171582) =<= multiply ?171580 (divide ?171582 ?171581) [171582, 171581, 171580] by Super 33278 with 36327 at 1,3
Id : 37087, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?173237) ?173238) ?173239) (divide ?173240 ?173241))) (multiply (inverse ?173238) ?173237)) ?173239 =>= inverse (divide ?173241 ?173240) [173241, 173240, 173239, 173238, 173237] by Super 4011 with 36681 at 1,1,1,2
Id : 37291, {_}: divide ?173240 ?173241 =<= inverse (divide ?173241 ?173240) [173241, 173240] by Demod 37087 with 3370 at 2
Id : 37631, {_}: divide (divide (divide ?9960 (divide (divide (inverse ?9957) ?9958) ?9959)) (multiply ?9958 ?9957)) ?9959 =>= ?9960 [9959, 9958, 9957, 9960] by Demod 2216 with 37291 at 1,1,2
Id : 37745, {_}: divide ?174363 ?174364 =<= inverse (divide ?174364 ?174363) [174364, 174363] by Demod 37087 with 3370 at 2
Id : 37810, {_}: divide (inverse ?174753) ?174754 =>= inverse (multiply ?174754 ?174753) [174754, 174753] by Super 37745 with 3 at 1,3
Id : 38028, {_}: divide (divide (divide ?9960 (divide (inverse (multiply ?9958 ?9957)) ?9959)) (multiply ?9958 ?9957)) ?9959 =>= ?9960 [9959, 9957, 9958, 9960] by Demod 37631 with 37810 at 1,2,1,1,2
Id : 38029, {_}: divide (divide (divide ?9960 (inverse (multiply ?9959 (multiply ?9958 ?9957)))) (multiply ?9958 ?9957)) ?9959 =>= ?9960 [9957, 9958, 9959, 9960] by Demod 38028 with 37810 at 2,1,1,2
Id : 38096, {_}: divide (divide (multiply ?9960 (multiply ?9959 (multiply ?9958 ?9957))) (multiply ?9958 ?9957)) ?9959 =>= ?9960 [9957, 9958, 9959, 9960] by Demod 38029 with 3 at 1,1,2
Id : 36684, {_}: multiply (divide ?171593 (divide ?171594 ?171595)) (divide ?171594 ?171595) =>= ?171593 [171595, 171594, 171593] by Super 477 with 36094 at 2
Id : 36687, {_}: multiply (divide ?171605 (divide (inverse (divide (divide (divide ?171606 ?171607) ?171608) (divide ?171609 ?171608))) (divide ?171607 ?171606))) ?171609 =>= ?171605 [171609, 171608, 171607, 171606, 171605] by Super 36684 with 2 at 2,2
Id : 36819, {_}: multiply (divide ?171605 ?171609) ?171609 =>= ?171605 [171609, 171605] by Demod 36687 with 2 at 2,1,2
Id : 51854, {_}: divide (divide ?212601 (multiply ?212602 ?212603)) ?212604 =>= divide ?212601 (multiply ?212604 (multiply ?212602 ?212603)) [212604, 212603, 212602, 212601] by Super 38096 with 36819 at 1,1,2
Id :  18, {_}: multiply (inverse (divide (divide (multiply (divide ?64 ?65) (divide (divide (divide ?65 ?64) ?66) (divide (inverse ?67) ?66))) ?68) (divide ?69 ?68))) ?67 =>= ?69 [69, 68, 67, 66, 65, 64] by Super 3 with 17 at 3
Id : 1822, {_}: multiply (divide (inverse (divide (divide (divide ?7521 ?7522) (inverse ?7523)) ?7524)) (divide ?7522 ?7521)) ?7523 =>= ?7524 [7524, 7523, 7522, 7521] by Super 18 with 20 at 1,2
Id : 2348, {_}: multiply (divide (inverse (divide (multiply (divide ?10333 ?10334) ?10335) ?10336)) (divide ?10334 ?10333)) ?10335 =>= ?10336 [10336, 10335, 10334, 10333] by Demod 1822 with 3 at 1,1,1,1,2
Id : 2690, {_}: multiply (divide (inverse (multiply (multiply (divide ?11645 ?11646) ?11647) ?11648)) (divide ?11646 ?11645)) ?11647 =>= inverse ?11648 [11648, 11647, 11646, 11645] by Super 2348 with 3 at 1,1,1,2
Id : 2723, {_}: multiply (divide (inverse (multiply (multiply (multiply ?11878 ?11879) ?11880) ?11881)) (divide (inverse ?11879) ?11878)) ?11880 =>= inverse ?11881 [11881, 11880, 11879, 11878] by Super 2690 with 3 at 1,1,1,1,1,2
Id : 38038, {_}: multiply (inverse (multiply (divide (inverse ?11879) ?11878) (multiply (multiply (multiply ?11878 ?11879) ?11880) ?11881))) ?11880 =>= inverse ?11881 [11881, 11880, 11878, 11879] by Demod 2723 with 37810 at 1,2
Id : 38039, {_}: multiply (inverse (multiply (inverse (multiply ?11878 ?11879)) (multiply (multiply (multiply ?11878 ?11879) ?11880) ?11881))) ?11880 =>= inverse ?11881 [11881, 11880, 11879, 11878] by Demod 38038 with 37810 at 1,1,1,2
Id : 38184, {_}: multiply (inverse ?175473) ?175474 =<= inverse (multiply (inverse ?175474) ?175473) [175474, 175473] by Super 3 with 37810 at 3
Id : 38716, {_}: multiply (multiply (inverse (multiply (multiply (multiply ?11878 ?11879) ?11880) ?11881)) (multiply ?11878 ?11879)) ?11880 =>= inverse ?11881 [11881, 11880, 11879, 11878] by Demod 38039 with 38184 at 1,2
Id : 51866, {_}: divide (divide ?212677 (inverse ?212678)) ?212679 =<= divide ?212677 (multiply ?212679 (multiply (multiply (inverse (multiply (multiply (multiply ?212680 ?212681) ?212682) ?212678)) (multiply ?212680 ?212681)) ?212682)) [212682, 212681, 212680, 212679, 212678, 212677] by Super 51854 with 38716 at 2,1,2
Id : 52301, {_}: divide (multiply ?212677 ?212678) ?212679 =<= divide ?212677 (multiply ?212679 (multiply (multiply (inverse (multiply (multiply (multiply ?212680 ?212681) ?212682) ?212678)) (multiply ?212680 ?212681)) ?212682)) [212682, 212681, 212680, 212679, 212678, 212677] by Demod 51866 with 3 at 1,2
Id : 52302, {_}: divide (multiply ?212677 ?212678) ?212679 =<= divide ?212677 (multiply ?212679 (inverse ?212678)) [212679, 212678, 212677] by Demod 52301 with 38716 at 2,2,3
Id : 38247, {_}: divide ?175863 (inverse ?175864) =<= inverse (inverse (multiply ?175863 ?175864)) [175864, 175863] by Super 37291 with 37810 at 1,3
Id : 38843, {_}: multiply ?176435 ?176436 =<= inverse (inverse (multiply ?176435 ?176436)) [176436, 176435] by Demod 38247 with 3 at 2
Id : 3670, {_}: multiply (divide (inverse (divide (multiply (divide (inverse ?16718) ?16719) ?16720) ?16721)) (multiply ?16719 ?16718)) ?16720 =>= ?16721 [16721, 16720, 16719, 16718] by Super 2348 with 3 at 2,1,2
Id : 3706, {_}: multiply (divide (inverse (divide (multiply (multiply (inverse ?16981) ?16982) ?16983) ?16984)) (multiply (inverse ?16982) ?16981)) ?16983 =>= ?16984 [16984, 16983, 16982, 16981] by Super 3670 with 3 at 1,1,1,1,1,2
Id : 37609, {_}: multiply (divide (divide ?16984 (multiply (multiply (inverse ?16981) ?16982) ?16983)) (multiply (inverse ?16982) ?16981)) ?16983 =>= ?16984 [16983, 16982, 16981, 16984] by Demod 3706 with 37291 at 1,1,2
Id : 38847, {_}: multiply (divide (divide ?176447 (multiply (multiply (inverse ?176448) ?176449) ?176450)) (multiply (inverse ?176449) ?176448)) ?176450 =>= inverse (inverse ?176447) [176450, 176449, 176448, 176447] by Super 38843 with 37609 at 1,1,3
Id : 38880, {_}: ?176447 =<= inverse (inverse ?176447) [176447] by Demod 38847 with 37609 at 2
Id : 40331, {_}: multiply ?187278 (inverse ?187279) =>= divide ?187278 ?187279 [187279, 187278] by Super 3 with 38880 at 2,3
Id : 52303, {_}: divide (multiply ?212677 ?212678) ?212679 =>= divide ?212677 (divide ?212679 ?212678) [212679, 212678, 212677] by Demod 52302 with 40331 at 2,3
Id : 53261, {_}: multiply (multiply ?214472 ?214473) ?214474 =<= divide ?214472 (divide (inverse ?214474) ?214473) [214474, 214473, 214472] by Super 3 with 52303 at 3
Id : 53437, {_}: multiply (multiply ?214472 ?214473) ?214474 =<= divide ?214472 (inverse (multiply ?214473 ?214474)) [214474, 214473, 214472] by Demod 53261 with 37810 at 2,3
Id : 53438, {_}: multiply (multiply ?214472 ?214473) ?214474 =>= multiply ?214472 (multiply ?214473 ?214474) [214474, 214473, 214472] by Demod 53437 with 3 at 3
Id : 53834, {_}: multiply a3 (multiply b3 c3) =?= multiply a3 (multiply b3 c3) [] by Demod 1 with 53438 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP477-1.p
11393: solved GRP477-1.p in 32.410025 using kbo
11393: status Unsatisfiable for GRP477-1.p
NO CLASH, using fixed ground order
11411: Facts:
11411:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11411:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11411: Goal:
11411:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11411: Order:
11411:   nrkbo
11411: Leaf order:
11411:  divide 7 2 0 
11411:  b1 2 0 2 1,1,3
11411:  multiply 3 2 2 0,2
11411:  inverse 4 1 2 0,1,2
11411:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11412: Facts:
11412:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11412:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11412: Goal:
11412:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11412: Order:
11412:   kbo
11412: Leaf order:
11412:  divide 7 2 0 
11412:  b1 2 0 2 1,1,3
11412:  multiply 3 2 2 0,2
11412:  inverse 4 1 2 0,1,2
11412:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
11413: Facts:
11413:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11413:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11413: Goal:
11413:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
11413: Order:
11413:   lpo
11413: Leaf order:
11413:  divide 7 2 0 
11413:  b1 2 0 2 1,1,3
11413:  multiply 3 2 2 0,2
11413:  inverse 4 1 2 0,1,2
11413:  a1 2 0 2 1,1,2
% SZS status Timeout for GRP478-1.p
NO CLASH, using fixed ground order
11446: Facts:
11446:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11446:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11446: Goal:
11446:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11446: Order:
11446:   nrkbo
11446: Leaf order:
11446:  divide 7 2 0 
11446:  a2 2 0 2 2,2
11446:  multiply 3 2 2 0,2
11446:  inverse 3 1 1 0,1,1,2
11446:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11447: Facts:
11447:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11447:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11447: Goal:
11447:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11447: Order:
11447:   kbo
11447: Leaf order:
11447:  divide 7 2 0 
11447:  a2 2 0 2 2,2
11447:  multiply 3 2 2 0,2
11447:  inverse 3 1 1 0,1,1,2
11447:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11448: Facts:
11448:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11448:  Id :   3, {_}:
          multiply ?7 ?8 =?= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11448: Goal:
11448:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
11448: Order:
11448:   lpo
11448: Leaf order:
11448:  divide 7 2 0 
11448:  a2 2 0 2 2,2
11448:  multiply 3 2 2 0,2
11448:  inverse 3 1 1 0,1,1,2
11448:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP479-1.p
NO CLASH, using fixed ground order
11491: Facts:
NO CLASH, using fixed ground order
11492: Facts:
11492:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11492:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11492: Goal:
11492:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11492: Order:
11492:   kbo
11492: Leaf order:
11492:  inverse 2 1 0 
11492:  divide 7 2 0 
11492:  c3 2 0 2 2,2
11492:  multiply 5 2 4 0,2
11492:  b3 2 0 2 2,1,2
11492:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
11493: Facts:
11493:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11493:  Id :   3, {_}:
          multiply ?7 ?8 =>= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11493: Goal:
11493:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11493: Order:
11493:   lpo
11493: Leaf order:
11493:  inverse 2 1 0 
11493:  divide 7 2 0 
11493:  c3 2 0 2 2,2
11493:  multiply 5 2 4 0,2
11493:  b3 2 0 2 2,1,2
11493:  a3 2 0 2 1,1,2
11491:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
11491:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
11491: Goal:
11491:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
11491: Order:
11491:   nrkbo
11491: Leaf order:
11491:  inverse 2 1 0 
11491:  divide 7 2 0 
11491:  c3 2 0 2 2,2
11491:  multiply 5 2 4 0,2
11491:  b3 2 0 2 2,1,2
11491:  a3 2 0 2 1,1,2
Statistics :
Max weight : 78
Found proof, 69.885629s
% SZS status Unsatisfiable for GRP480-1.p
% SZS output start CNFRefutation for GRP480-1.p
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?10) ?11) (divide ?12 (divide ?11 ?13)))) ?13 =>= ?12 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5)))) ?5 =>= ?4 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   8, {_}: divide (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) (inverse ?34) =>= ?33 [34, 33, 32, 31] by Super 2 with 3 at 2,2,1,1,2
Id :  44, {_}: multiply (inverse (divide (divide (divide ?198 ?198) ?199) (divide ?200 (multiply ?199 ?201)))) ?201 =>= ?200 [201, 200, 199, 198] by Demod 8 with 3 at 2
Id :  46, {_}: multiply (inverse (divide (divide (divide ?210 ?210) ?211) ?212)) ?213 =?= inverse (divide (divide (divide ?214 ?214) ?215) (divide ?212 (divide ?215 (multiply ?211 ?213)))) [215, 214, 213, 212, 211, 210] by Super 44 with 2 at 2,1,1,2
Id :   5, {_}: divide (inverse (divide (divide (divide ?15 ?15) (inverse (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19))))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2,1,1,2
Id :  22, {_}: divide (inverse (divide (multiply (divide ?87 ?87) (divide (divide (divide ?88 ?88) ?89) (divide ?90 (divide ?89 ?91)))) (divide ?92 ?90))) ?91 =>= ?92 [92, 91, 90, 89, 88, 87] by Demod 5 with 3 at 1,1,1,2
Id :  18, {_}: divide (inverse (divide (multiply (divide ?15 ?15) (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19)))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,2
Id :  30, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (divide ?161 (inverse (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165)))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Super 22 with 18 at 2,2,1,1,1,2
Id :  42, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (multiply ?161 (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Demod 30 with 3 at 2,1,1,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?22) ?23) ?24)) ?25 =?= inverse (divide (divide (divide ?26 ?26) ?27) (divide ?24 (divide ?27 (divide ?23 ?25)))) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 202, {_}: divide (divide (inverse (divide (divide (divide ?974 ?974) ?975) ?976)) ?977) (divide ?975 ?977) =>= ?976 [977, 976, 975, 974] by Super 2 with 6 at 1,2
Id : 208, {_}: divide (divide (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) (inverse ?1021)) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Super 202 with 3 at 2,2
Id : 372, {_}: divide (multiply (inverse (divide (divide (divide ?1664 ?1664) ?1665) ?1666)) ?1667) (multiply ?1665 ?1667) =>= ?1666 [1667, 1666, 1665, 1664] by Demod 208 with 3 at 1,2
Id : 378, {_}: divide (multiply (inverse (divide (multiply (divide ?1702 ?1702) ?1703) ?1704)) ?1705) (multiply (inverse ?1703) ?1705) =>= ?1704 [1705, 1704, 1703, 1702] by Super 372 with 3 at 1,1,1,1,2
Id :  15, {_}: multiply (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) ?34 =>= ?33 [34, 33, 32, 31] by Demod 8 with 3 at 2
Id :  86, {_}: divide (divide (inverse (divide (divide (divide ?404 ?404) ?405) ?406)) ?407) (divide ?405 ?407) =>= ?406 [407, 406, 405, 404] by Super 2 with 6 at 1,2
Id : 193, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (divide ?904 (inverse (divide (divide (divide ?905 ?905) ?904) ?902))) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Super 15 with 86 at 1,1,1,2
Id : 223, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (multiply ?904 (divide (divide (divide ?905 ?905) ?904) ?902)) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Demod 193 with 3 at 1,2,2,1,1,2
Id : 88082, {_}: divide ?485240 (multiply (inverse ?485241) ?485242) =<= divide ?485240 (multiply (multiply ?485243 (divide (divide (divide ?485244 ?485244) ?485243) (multiply (divide ?485245 ?485245) ?485241))) ?485242) [485245, 485244, 485243, 485242, 485241, 485240] by Super 378 with 223 at 1,2
Id : 89234, {_}: divide (inverse (divide (multiply (divide ?494319 ?494319) (divide (divide (divide ?494320 ?494320) ?494321) ?494322)) (multiply (inverse ?494323) (divide (multiply (divide ?494324 ?494324) (divide (divide (divide ?494325 ?494325) ?494326) (divide ?494327 (divide ?494326 (divide ?494321 ?494328))))) (divide ?494322 ?494327))))) ?494328 =?= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494328, 494327, 494326, 494325, 494324, 494323, 494322, 494321, 494320, 494319] by Super 42 with 88082 at 1,1,2
Id : 89554, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494323] by Demod 89234 with 42 at 2
Id :  23, {_}: divide (inverse (divide (multiply (divide ?94 ?94) (divide (divide (divide ?95 ?95) ?96) (divide ?97 (divide ?96 ?98)))) ?99)) ?98 =?= inverse (divide (divide (divide ?100 ?100) ?101) (divide ?99 (divide ?101 ?97))) [101, 100, 99, 98, 97, 96, 95, 94] by Super 22 with 2 at 2,1,1,2
Id : 1304, {_}: inverse (divide (divide (divide ?6515 ?6515) ?6516) (divide (divide ?6517 ?6518) (divide ?6516 ?6518))) =>= ?6517 [6518, 6517, 6516, 6515] by Super 18 with 23 at 2
Id : 2998, {_}: inverse (divide (divide (multiply (inverse ?16319) ?16319) ?16320) (divide (divide ?16321 ?16322) (divide ?16320 ?16322))) =>= ?16321 [16322, 16321, 16320, 16319] by Super 1304 with 3 at 1,1,1,2
Id : 3072, {_}: inverse (divide (multiply (multiply (inverse ?16865) ?16865) ?16866) (divide (divide ?16867 ?16868) (divide (inverse ?16866) ?16868))) =>= ?16867 [16868, 16867, 16866, 16865] by Super 2998 with 3 at 1,1,2
Id : 1319, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (divide ?6632 (inverse ?6633)) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Super 1304 with 3 at 2,2,1,2
Id : 1369, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (multiply ?6632 ?6633) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Demod 1319 with 3 at 1,2,1,2
Id : 1389, {_}: multiply ?6881 (divide (divide (divide ?6882 ?6882) ?6883) (divide (multiply ?6884 ?6885) (multiply ?6883 ?6885))) =>= divide ?6881 ?6884 [6885, 6884, 6883, 6882, 6881] by Super 3 with 1369 at 2,3
Id : 90512, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide (divide (divide ?497371 ?497371) (multiply ?497372 (divide (divide (divide ?497373 ?497373) ?497372) ?497368))) (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497373, 497372, 497371, 497370, 497369, 497368] by Super 223 with 89554 at 2,2,1,1,2
Id : 196, {_}: divide (inverse (divide (divide (divide ?925 ?925) ?926) (divide (inverse (divide (divide (divide ?927 ?927) ?928) ?929)) (divide ?926 ?930)))) ?930 =?= inverse (divide (divide (divide ?931 ?931) ?928) ?929) [931, 930, 929, 928, 927, 926, 925] by Super 6 with 86 at 2,1,3
Id : 6409, {_}: inverse (divide (divide (divide ?34204 ?34204) ?34205) ?34206) =?= inverse (divide (divide (divide ?34207 ?34207) ?34205) ?34206) [34207, 34206, 34205, 34204] by Demod 196 with 2 at 2
Id : 6420, {_}: inverse (divide (divide (divide ?34278 ?34278) (divide ?34279 (inverse (divide (divide (divide ?34280 ?34280) ?34279) ?34281)))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Super 6409 with 86 at 1,1,3
Id : 6497, {_}: inverse (divide (divide (divide ?34278 ?34278) (multiply ?34279 (divide (divide (divide ?34280 ?34280) ?34279) ?34281))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Demod 6420 with 3 at 2,1,1,2
Id : 28325, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= divide ?153090 (inverse (divide ?153094 ?153095)) [153095, 153094, 153093, 153092, 153091, 153090] by Super 3 with 6497 at 2,3
Id : 28522, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= multiply ?153090 (divide ?153094 ?153095) [153095, 153094, 153093, 153092, 153091, 153090] by Demod 28325 with 3 at 3
Id : 91190, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide ?497368 (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497370, 497369, 497368] by Demod 90512 with 28522 at 2
Id : 91665, {_}: multiply (inverse (divide ?503116 (multiply ?503117 ?503118))) (divide ?503116 (multiply (divide ?503119 ?503119) ?503118)) =>= ?503117 [503119, 503118, 503117, 503116] by Demod 91190 with 3 at 2,1,1,2
Id : 231, {_}: divide (multiply (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) ?1021) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Demod 208 with 3 at 1,2
Id : 1057, {_}: inverse (divide (divide (divide ?5280 ?5280) ?5281) (divide (divide ?5282 ?5283) (divide ?5281 ?5283))) =>= ?5282 [5283, 5282, 5281, 5280] by Super 18 with 23 at 2
Id : 1292, {_}: divide (divide ?6440 ?6441) (divide ?6442 ?6441) =?= divide (divide ?6440 ?6443) (divide ?6442 ?6443) [6443, 6442, 6441, 6440] by Super 86 with 1057 at 1,1,2
Id : 2334, {_}: divide (multiply (inverse (divide (divide (divide ?12626 ?12626) ?12627) (divide ?12628 ?12627))) ?12629) (multiply ?12630 ?12629) =>= divide ?12628 ?12630 [12630, 12629, 12628, 12627, 12626] by Super 231 with 1292 at 1,1,1,2
Id : 91784, {_}: multiply (inverse (divide (multiply (inverse (divide (divide (divide ?504066 ?504066) ?504067) (divide ?504068 ?504067))) ?504069) (multiply ?504070 ?504069))) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504069, 504068, 504067, 504066] by Super 91665 with 2334 at 2,2
Id : 92186, {_}: multiply (inverse (divide ?504068 ?504070)) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504068] by Demod 91784 with 2334 at 1,1,2
Id : 92346, {_}: ?505751 =<= divide (inverse (divide (divide (divide ?505752 ?505752) ?505753) ?505751)) ?505753 [505753, 505752, 505751] by Super 1389 with 92186 at 2
Id : 93111, {_}: divide ?509269 (divide ?509270 ?509270) =>= ?509269 [509270, 509269] by Super 2 with 92346 at 2
Id : 100321, {_}: inverse (multiply (multiply (inverse ?535124) ?535124) ?535125) =>= inverse ?535125 [535125, 535124] by Super 3072 with 93111 at 1,2
Id : 100420, {_}: inverse (inverse ?535740) =<= inverse (divide (divide (divide ?535741 ?535741) (multiply (inverse ?535742) ?535742)) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535742, 535741, 535740] by Super 100321 with 89554 at 1,2
Id : 94282, {_}: divide ?515515 (divide ?515516 ?515516) =>= ?515515 [515516, 515515] by Super 2 with 92346 at 2
Id : 94361, {_}: divide ?515973 (multiply (inverse ?515974) ?515974) =>= ?515973 [515974, 515973] by Super 94282 with 3 at 2,2
Id : 100488, {_}: inverse (inverse ?535740) =<= inverse (divide (divide ?535741 ?535741) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535741, 535740] by Demod 100420 with 94361 at 1,1,3
Id : 93886, {_}: inverse (divide (divide ?513000 ?513000) ?513001) =>= ?513001 [513001, 513000] by Super 1369 with 93111 at 1,2
Id : 100489, {_}: inverse (inverse ?535740) =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100488 with 93886 at 3
Id : 100491, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (inverse (inverse ?494323))) [494330, 494329, 494323] by Demod 89554 with 100489 at 2,2,3
Id : 100612, {_}: inverse ?494323 =<= multiply ?494329 (multiply (divide (divide ?494330 ?494330) ?494329) (inverse ?494323)) [494330, 494329, 494323] by Demod 100491 with 3 at 2,3
Id : 1348, {_}: inverse (divide (multiply (divide ?6830 ?6830) ?6831) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831, 6830] by Super 1304 with 3 at 1,1,2
Id : 3107, {_}: multiply ?16917 (divide (multiply (divide ?16918 ?16918) ?16919) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16918, 16917] by Super 3 with 1348 at 2,3
Id : 100541, {_}: multiply ?16917 (divide (inverse (inverse ?16919)) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 3107 with 100489 at 1,2,2
Id : 100747, {_}: inverse (inverse (divide (inverse (inverse ?536517)) (divide (divide ?536518 ?536519) (divide (inverse ?536517) ?536519)))) =?= divide (divide ?536520 ?536520) ?536518 [536520, 536519, 536518, 536517] by Super 100541 with 100489 at 2
Id : 100526, {_}: inverse (divide (inverse (inverse ?6831)) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831] by Demod 1348 with 100489 at 1,1,2
Id : 100849, {_}: inverse ?536518 =<= divide (divide ?536520 ?536520) ?536518 [536520, 536518] by Demod 100747 with 100526 at 1,2
Id : 101341, {_}: inverse ?494323 =<= multiply ?494329 (multiply (inverse ?494329) (inverse ?494323)) [494329, 494323] by Demod 100612 with 100849 at 1,2,3
Id : 101328, {_}: inverse (inverse ?513001) =>= ?513001 [513001] by Demod 93886 with 100849 at 1,2
Id : 101357, {_}: multiply ?16917 (divide ?16919 (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 100541 with 101328 at 1,2,2
Id : 210, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?1032) ?1032) ?1033) ?1034)) ?1035) (divide ?1033 ?1035) =>= ?1034 [1035, 1034, 1033, 1032] by Super 202 with 3 at 1,1,1,1,1,2
Id : 2224, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?11772) ?11772) ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773, 11772] by Super 210 with 1292 at 1,1,1,2
Id : 778, {_}: divide (inverse (divide (divide (divide ?3892 ?3892) ?3893) (divide (inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896)) (divide ?3893 ?3897)))) ?3897 =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3897, 3896, 3895, 3894, 3893, 3892] by Super 6 with 210 at 2,1,3
Id : 811, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3896, 3895, 3894] by Demod 778 with 2 at 2
Id : 101312, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =>= inverse (divide (inverse ?3895) ?3896) [3896, 3895, 3894] by Demod 811 with 100849 at 1,1,3
Id : 101430, {_}: divide (divide (inverse (divide (inverse ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773] by Demod 2224 with 101312 at 1,1,2
Id : 375, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?1685) ?1685) ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686, 1685] by Super 372 with 3 at 1,1,1,1,1,2
Id : 2362, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?12860) ?12860) ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861, 12860] by Super 375 with 1292 at 1,1,1,2
Id : 101423, {_}: divide (multiply (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861] by Demod 2362 with 101312 at 1,1,2
Id : 1298, {_}: divide (multiply ?6472 ?6473) (multiply ?6474 ?6473) =?= divide (divide ?6472 ?6475) (divide ?6474 ?6475) [6475, 6474, 6473, 6472] by Super 231 with 1057 at 1,1,2
Id : 2653, {_}: divide (multiply (inverse (divide (multiply (divide ?14473 ?14473) ?14474) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474, 14473] by Super 231 with 1298 at 1,1,1,2
Id : 100505, {_}: divide (multiply (inverse (divide (inverse (inverse ?14474)) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 2653 with 100489 at 1,1,1,1,2
Id : 101382, {_}: divide (multiply (inverse (divide ?14474 (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 100505 with 101328 at 1,1,1,1,2
Id : 101429, {_}: divide (multiply (inverse (divide (inverse ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686] by Demod 375 with 101312 at 1,1,2
Id : 101386, {_}: ?535740 =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100489 with 101328 at 2
Id : 101594, {_}: ?537458 =<= multiply (inverse (divide ?537459 ?537459)) ?537458 [537459, 537458] by Super 101386 with 100849 at 1,3
Id : 101980, {_}: divide ?538112 (multiply ?538113 ?538112) =>= inverse ?538113 [538113, 538112] by Super 101429 with 101594 at 1,2
Id : 102412, {_}: divide (multiply (inverse (inverse ?14475)) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 101382 with 101980 at 1,1,1,2
Id : 102413, {_}: divide (multiply ?14475 ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 102412 with 101328 at 1,1,2
Id : 102434, {_}: divide (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12864 =>= divide ?12862 ?12864 [12864, 12862, 12861] by Demod 101423 with 102413 at 2
Id : 102436, {_}: divide (divide ?11774 ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774] by Demod 101430 with 102434 at 1,2
Id : 102441, {_}: multiply ?16917 (divide ?16919 (divide ?16920 (inverse ?16919))) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 101357 with 102436 at 2,2,2
Id : 102474, {_}: multiply ?16917 (divide ?16919 (multiply ?16920 ?16919)) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 102441 with 3 at 2,2,2
Id : 102475, {_}: multiply ?16917 (inverse ?16920) =>= divide ?16917 ?16920 [16920, 16917] by Demod 102474 with 101980 at 2,2
Id : 102476, {_}: inverse ?494323 =<= multiply ?494329 (divide (inverse ?494329) ?494323) [494329, 494323] by Demod 101341 with 102475 at 2,3
Id : 102520, {_}: inverse (multiply ?538987 (inverse ?538988)) =>= multiply ?538988 (inverse ?538987) [538988, 538987] by Super 102476 with 101980 at 2,3
Id : 102785, {_}: inverse (divide ?538987 ?538988) =<= multiply ?538988 (inverse ?538987) [538988, 538987] by Demod 102520 with 102475 at 1,2
Id : 102786, {_}: inverse (divide ?538987 ?538988) =>= divide ?538988 ?538987 [538988, 538987] by Demod 102785 with 102475 at 3
Id : 104734, {_}: multiply (divide ?212 (divide (divide ?210 ?210) ?211)) ?213 =?= inverse (divide (divide (divide ?214 ?214) ?215) (divide ?212 (divide ?215 (multiply ?211 ?213)))) [215, 214, 213, 211, 210, 212] by Demod 46 with 102786 at 1,2
Id : 104735, {_}: multiply (divide ?212 (divide (divide ?210 ?210) ?211)) ?213 =?= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide (divide ?214 ?214) ?215) [214, 215, 213, 211, 210, 212] by Demod 104734 with 102786 at 3
Id : 104736, {_}: multiply (divide ?212 (inverse ?211)) ?213 =<= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide (divide ?214 ?214) ?215) [214, 215, 213, 211, 212] by Demod 104735 with 100849 at 2,1,2
Id : 104737, {_}: multiply (divide ?212 (inverse ?211)) ?213 =<= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (inverse ?215) [215, 213, 211, 212] by Demod 104736 with 100849 at 2,3
Id : 104738, {_}: multiply (multiply ?212 ?211) ?213 =<= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (inverse ?215) [215, 213, 211, 212] by Demod 104737 with 3 at 1,2
Id : 104739, {_}: multiply (multiply ?212 ?211) ?213 =<= multiply (divide ?212 (divide ?215 (multiply ?211 ?213))) ?215 [215, 213, 211, 212] by Demod 104738 with 3 at 3
Id : 104774, {_}: multiply (multiply ?542474 ?542475) ?542476 =<= multiply (divide ?542474 (divide ?542477 (multiply ?542475 ?542476))) ?542477 [542477, 542476, 542475, 542474] by Demod 104738 with 3 at 3
Id : 104783, {_}: multiply (multiply ?542524 (divide ?542525 ?542525)) ?542526 =?= multiply (divide ?542524 (divide ?542527 ?542526)) ?542527 [542527, 542526, 542525, 542524] by Super 104774 with 101386 at 2,2,1,3
Id : 102917, {_}: multiply ?539648 (divide ?539649 ?539650) =>= divide ?539648 (divide ?539650 ?539649) [539650, 539649, 539648] by Super 102475 with 102786 at 2,2
Id : 104878, {_}: multiply (divide ?542524 (divide ?542525 ?542525)) ?542526 =?= multiply (divide ?542524 (divide ?542527 ?542526)) ?542527 [542527, 542526, 542525, 542524] by Demod 104783 with 102917 at 1,2
Id : 104879, {_}: multiply ?542524 ?542526 =<= multiply (divide ?542524 (divide ?542527 ?542526)) ?542527 [542527, 542526, 542524] by Demod 104878 with 93111 at 1,2
Id : 107171, {_}: multiply (multiply ?212 ?211) ?213 =?= multiply ?212 (multiply ?211 ?213) [213, 211, 212] by Demod 104739 with 104879 at 3
Id : 107392, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 107171 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP480-1.p
11491: solved GRP480-1.p in 34.906181 using nrkbo
11491: status Unsatisfiable for GRP480-1.p
NO CLASH, using fixed ground order
11510: Facts:
11510:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11510:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11510:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11510:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11510:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11510:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11510:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11510:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11510:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
11510: Goal:
11510:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
11510: Order:
11510:   nrkbo
11510: Leaf order:
11510:  meet 17 2 4 0,2
11510:  join 19 2 4 0,2,2
11510:  c 2 0 2 2,2,2
11510:  b 4 0 4 1,2,2
11510:  a 4 0 4 1,2
NO CLASH, using fixed ground order
11511: Facts:
11511:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11511:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11511:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11511:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11511:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11511:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11511:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11511:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11511:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
11511: Goal:
11511:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
11511: Order:
11511:   kbo
11511: Leaf order:
11511:  meet 17 2 4 0,2
11511:  join 19 2 4 0,2,2
11511:  c 2 0 2 2,2,2
11511:  b 4 0 4 1,2,2
11511:  a 4 0 4 1,2
NO CLASH, using fixed ground order
11512: Facts:
11512:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11512:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11512:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11512:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11512:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11512:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11512:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11512:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11512:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
11512: Goal:
11512:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
11512: Order:
11512:   lpo
11512: Leaf order:
11512:  meet 17 2 4 0,2
11512:  join 19 2 4 0,2,2
11512:  c 2 0 2 2,2,2
11512:  b 4 0 4 1,2,2
11512:  a 4 0 4 1,2
% SZS status Timeout for LAT168-1.p
NO CLASH, using fixed ground order
11539: Facts:
11539:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11539:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11539:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11539:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11539: Goal:
11539:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
11539: Order:
11539:   nrkbo
11539: Leaf order:
11539:  not 2 1 0 
11539:  truth 4 0 1 3
11539:  implies 18 2 5 0,2
11539:  b 3 0 3 2,1,1,2
11539:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
11540: Facts:
11540:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11540:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11540:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11540:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11540: Goal:
11540:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
11540: Order:
11540:   kbo
11540: Leaf order:
11540:  not 2 1 0 
11540:  truth 4 0 1 3
11540:  implies 18 2 5 0,2
11540:  b 3 0 3 2,1,1,2
11540:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
11541: Facts:
11541:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11541:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11541:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11541:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11541: Goal:
11541:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
11541: Order:
11541:   lpo
11541: Leaf order:
11541:  not 2 1 0 
11541:  truth 4 0 1 3
11541:  implies 18 2 5 0,2
11541:  b 3 0 3 2,1,1,2
11541:  a 3 0 3 1,1,1,2
% SZS status Timeout for LCL109-2.p
NO CLASH, using fixed ground order
11558: Facts:
11558:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11558:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11558:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11558:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11558: Goal:
11558:  Id :   1, {_}:
          implies x (implies y z) =>= implies y (implies x z)
          [] by prove_wajsberg_lemma
11558: Order:
11558:   nrkbo
11558: Leaf order:
11558:  not 2 1 0 
11558:  truth 3 0 0 
11558:  implies 17 2 4 0,2
11558:  z 2 0 2 2,2,2
11558:  y 2 0 2 1,2,2
11558:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11559: Facts:
11559:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11559:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11559:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11559:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11559: Goal:
11559:  Id :   1, {_}:
          implies x (implies y z) =>= implies y (implies x z)
          [] by prove_wajsberg_lemma
11559: Order:
11559:   kbo
11559: Leaf order:
11559:  not 2 1 0 
11559:  truth 3 0 0 
11559:  implies 17 2 4 0,2
11559:  z 2 0 2 2,2,2
11559:  y 2 0 2 1,2,2
11559:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11560: Facts:
11560:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11560:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11560:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11560:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11560: Goal:
11560:  Id :   1, {_}:
          implies x (implies y z) =>= implies y (implies x z)
          [] by prove_wajsberg_lemma
11560: Order:
11560:   lpo
11560: Leaf order:
11560:  not 2 1 0 
11560:  truth 3 0 0 
11560:  implies 17 2 4 0,2
11560:  z 2 0 2 2,2,2
11560:  y 2 0 2 1,2,2
11560:  x 2 0 2 1,2
% SZS status Timeout for LCL138-1.p
NO CLASH, using fixed ground order
11593: Facts:
11593:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11593:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11593:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11593:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11593:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
11593:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
11593:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
11593:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
11593:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
11593:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
11593:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
11593:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
11593:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
11593:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =?= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
11593:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
11593:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
11593: Goal:
11593:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
11593: Order:
11593:   nrkbo
11593: Leaf order:
11593:  falsehood 1 0 0 
11593:  and_star 7 2 0 
11593:  and 9 2 0 
11593:  or 10 2 0 
11593:  not 12 1 0 
11593:  implies 14 2 0 
11593:  xor 7 2 4 0,2
11593:  y 2 0 2 2,2,2
11593:  truth 6 0 2 1,2,2
11593:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11594: Facts:
11594:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11594:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11594:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11594:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11594:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
11594:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
11594:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
11594:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
11594:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
11594:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
11594:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
11594:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
11594:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
11594:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
11594:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
11594:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
11594: Goal:
11594:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
11594: Order:
11594:   kbo
11594: Leaf order:
11594:  falsehood 1 0 0 
11594:  and_star 7 2 0 
11594:  and 9 2 0 
11594:  or 10 2 0 
11594:  not 12 1 0 
11594:  implies 14 2 0 
11594:  xor 7 2 4 0,2
11594:  y 2 0 2 2,2,2
11594:  truth 6 0 2 1,2,2
11594:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11595: Facts:
11595:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
11595:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
11595:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
11595:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
11595:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
11595:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
11595:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
11595:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
11595:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
11595:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
11595:  Id :  12, {_}:
          xor ?34 ?35 =>= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
11595:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
11595:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
11595:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
11595:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
11595:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
11595: Goal:
11595:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
11595: Order:
11595:   lpo
11595: Leaf order:
11595:  falsehood 1 0 0 
11595:  and_star 7 2 0 
11595:  and 9 2 0 
11595:  or 10 2 0 
11595:  not 12 1 0 
11595:  implies 14 2 0 
11595:  xor 7 2 4 0,2
11595:  y 2 0 2 2,2,2
11595:  truth 6 0 2 1,2,2
11595:  x 2 0 2 1,2
Statistics :
Max weight : 25
Found proof, 7.279985s
% SZS status Unsatisfiable for LCL159-1.p
% SZS output start CNFRefutation for LCL159-1.p
Id :   5, {_}: implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth [12, 11] by wajsberg_4 ?11 ?12
Id :   7, {_}: or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19) [19, 18, 17] by or_associativity ?17 ?18 ?19
Id :  39, {_}: implies (implies ?111 ?112) ?112 =?= implies (implies ?112 ?111) ?111 [112, 111] by wajsberg_3 ?111 ?112
Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
Id :   3, {_}: implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6)) =>= truth [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
Id :  20, {_}: implies (implies ?55 ?56) (implies (implies ?56 ?57) (implies ?55 ?57)) =>= truth [57, 56, 55] by wajsberg_2 ?55 ?56 ?57
Id :  17, {_}: not truth =>= falsehood [] by false_definition
Id :   6, {_}: or ?14 ?15 =<= implies (not ?14) ?15 [15, 14] by or_definition ?14 ?15
Id :   4, {_}: implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8 [9, 8] by wajsberg_3 ?8 ?9
Id :  11, {_}: and ?31 ?32 =?= and ?32 ?31 [32, 31] by and_commutativity ?31 ?32
Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
Id :   9, {_}: and ?24 ?25 =<= not (or (not ?24) (not ?25)) [25, 24] by and_definition ?24 ?25
Id :  14, {_}: and_star ?40 ?41 =<= not (or (not ?40) (not ?41)) [41, 40] by and_star_definition ?40 ?41
Id :  12, {_}: xor ?34 ?35 =>= or (and ?34 (not ?35)) (and (not ?34) ?35) [35, 34] by xor_definition ?34 ?35
Id : 207, {_}: and_star ?40 ?41 =<= and ?40 ?41 [41, 40] by Demod 14 with 9 at 3
Id : 212, {_}: xor ?34 ?35 =>= or (and_star ?34 (not ?35)) (and (not ?34) ?35) [35, 34] by Demod 12 with 207 at 1,3
Id : 213, {_}: xor ?34 ?35 =>= or (and_star ?34 (not ?35)) (and_star (not ?34) ?35) [35, 34] by Demod 212 with 207 at 2,3
Id : 219, {_}: and_star ?31 ?32 =<= and ?32 ?31 [32, 31] by Demod 11 with 207 at 2
Id : 220, {_}: and_star ?31 ?32 =?= and_star ?32 ?31 [32, 31] by Demod 219 with 207 at 3
Id : 240, {_}: or truth ?463 =<= implies falsehood ?463 [463] by Super 6 with 17 at 1,3
Id : 286, {_}: implies (implies ?477 falsehood) falsehood =>= implies (or truth ?477) ?477 [477] by Super 4 with 240 at 1,3
Id :  22, {_}: implies (implies (implies ?62 ?63) ?64) (implies (implies ?64 (implies (implies ?63 ?65) (implies ?62 ?65))) truth) =>= truth [65, 64, 63, 62] by Super 20 with 3 at 2,2,2
Id : 784, {_}: implies (implies ?990 truth) (implies ?991 (implies ?990 ?991)) =>= truth [991, 990] by Super 20 with 2 at 1,2,2
Id : 785, {_}: implies (implies truth truth) (implies ?993 ?993) =>= truth [993] by Super 784 with 2 at 2,2,2
Id : 818, {_}: implies truth (implies ?993 ?993) =>= truth [993] by Demod 785 with 2 at 1,2
Id : 819, {_}: implies ?993 ?993 =>= truth [993] by Demod 818 with 2 at 2
Id : 870, {_}: implies (implies (implies ?1070 ?1070) ?1071) (implies (implies ?1071 truth) truth) =>= truth [1071, 1070] by Super 22 with 819 at 2,1,2,2
Id : 898, {_}: implies (implies truth ?1071) (implies (implies ?1071 truth) truth) =>= truth [1071] by Demod 870 with 819 at 1,1,2
Id :  40, {_}: implies (implies ?114 truth) truth =>= implies ?114 ?114 [114] by Super 39 with 2 at 1,3
Id : 864, {_}: implies (implies ?114 truth) truth =>= truth [114] by Demod 40 with 819 at 3
Id : 899, {_}: implies (implies truth ?1071) truth =>= truth [1071] by Demod 898 with 864 at 2,2
Id : 900, {_}: implies ?1071 truth =>= truth [1071] by Demod 899 with 2 at 1,2
Id : 980, {_}: or ?1117 truth =>= truth [1117] by Super 6 with 900 at 3
Id : 1078, {_}: or truth ?1157 =>= truth [1157] by Super 8 with 980 at 3
Id : 1116, {_}: implies (implies ?477 falsehood) falsehood =>= implies truth ?477 [477] by Demod 286 with 1078 at 1,3
Id : 1117, {_}: implies (implies ?477 falsehood) falsehood =>= ?477 [477] by Demod 1116 with 2 at 3
Id : 218, {_}: and_star ?24 ?25 =<= not (or (not ?24) (not ?25)) [25, 24] by Demod 9 with 207 at 2
Id : 239, {_}: and_star truth ?461 =<= not (or falsehood (not ?461)) [461] by Super 218 with 17 at 1,1,3
Id : 517, {_}: or (or falsehood (not ?805)) ?806 =<= implies (and_star truth ?805) ?806 [806, 805] by Super 6 with 239 at 1,3
Id : 1565, {_}: or falsehood (or (not ?1468) ?1469) =<= implies (and_star truth ?1468) ?1469 [1469, 1468] by Demod 517 with 7 at 2
Id : 1566, {_}: or falsehood (or (not ?1471) ?1472) =<= implies (and_star ?1471 truth) ?1472 [1472, 1471] by Super 1565 with 220 at 1,3
Id : 525, {_}: or falsehood (or (not ?805) ?806) =<= implies (and_star truth ?805) ?806 [806, 805] by Demod 517 with 7 at 2
Id : 520, {_}: and_star truth ?814 =<= not (or falsehood (not ?814)) [814] by Super 218 with 17 at 1,1,3
Id : 521, {_}: and_star truth truth =<= not (or falsehood falsehood) [] by Super 520 with 17 at 2,1,3
Id : 564, {_}: or (or falsehood falsehood) ?828 =<= implies (and_star truth truth) ?828 [828] by Super 6 with 521 at 1,3
Id : 589, {_}: or falsehood (or falsehood ?828) =<= implies (and_star truth truth) ?828 [828] by Demod 564 with 7 at 2
Id : 1273, {_}: implies (or falsehood (or falsehood falsehood)) falsehood =>= and_star truth truth [] by Super 1117 with 589 at 1,2
Id :  69, {_}: implies (or ?11 (not ?12)) (implies ?12 ?11) =>= truth [12, 11] by Demod 5 with 6 at 1,2
Id : 241, {_}: implies (or ?465 falsehood) (implies truth ?465) =>= truth [465] by Super 69 with 17 at 2,1,2
Id : 260, {_}: implies (or ?465 falsehood) ?465 =>= truth [465] by Demod 241 with 2 at 2,2
Id : 1322, {_}: implies truth falsehood =>= or falsehood falsehood [] by Super 1117 with 260 at 1,2
Id : 1344, {_}: falsehood =<= or falsehood falsehood [] by Demod 1322 with 2 at 2
Id : 1375, {_}: or falsehood ?1348 =<= or falsehood (or falsehood ?1348) [1348] by Super 7 with 1344 at 1,2
Id : 2080, {_}: implies (or falsehood falsehood) falsehood =>= and_star truth truth [] by Demod 1273 with 1375 at 1,2
Id : 2081, {_}: truth =<= and_star truth truth [] by Demod 2080 with 260 at 2
Id : 2088, {_}: or falsehood (or (not truth) ?1976) =<= implies truth ?1976 [1976] by Super 525 with 2081 at 1,3
Id : 2092, {_}: or falsehood (or falsehood ?1976) =<= implies truth ?1976 [1976] by Demod 2088 with 17 at 1,2,2
Id : 2093, {_}: or falsehood (or falsehood ?1976) =>= ?1976 [1976] by Demod 2092 with 2 at 3
Id : 2094, {_}: or falsehood ?1976 =>= ?1976 [1976] by Demod 2093 with 1375 at 2
Id : 2619, {_}: or (not ?1471) ?1472 =<= implies (and_star ?1471 truth) ?1472 [1472, 1471] by Demod 1566 with 2094 at 2
Id : 2636, {_}: implies (or (not ?2581) falsehood) falsehood =>= and_star ?2581 truth [2581] by Super 1117 with 2619 at 1,2
Id : 2658, {_}: implies (or falsehood (not ?2581)) falsehood =>= and_star ?2581 truth [2581] by Demod 2636 with 8 at 1,2
Id : 2659, {_}: implies (not ?2581) falsehood =>= and_star ?2581 truth [2581] by Demod 2658 with 2094 at 1,2
Id : 2660, {_}: or ?2581 falsehood =>= and_star ?2581 truth [2581] by Demod 2659 with 6 at 2
Id : 1407, {_}: or falsehood ?1358 =<= or falsehood (or falsehood ?1358) [1358] by Super 7 with 1344 at 1,2
Id : 1408, {_}: or falsehood ?1360 =<= or falsehood (or ?1360 falsehood) [1360] by Super 1407 with 8 at 2,3
Id : 2132, {_}: ?1360 =<= or falsehood (or ?1360 falsehood) [1360] by Demod 1408 with 2094 at 2
Id : 2133, {_}: ?1360 =<= or ?1360 falsehood [1360] by Demod 2132 with 2094 at 3
Id : 2661, {_}: ?2581 =<= and_star ?2581 truth [2581] by Demod 2660 with 2133 at 2
Id : 2708, {_}: or (not ?1471) ?1472 =<= implies ?1471 ?1472 [1472, 1471] by Demod 2619 with 2661 at 1,3
Id : 2725, {_}: or (not (implies ?477 falsehood)) falsehood =>= ?477 [477] by Demod 1117 with 2708 at 2
Id : 2726, {_}: or (not (or (not ?477) falsehood)) falsehood =>= ?477 [477] by Demod 2725 with 2708 at 1,1,2
Id : 2767, {_}: or falsehood (not (or (not ?477) falsehood)) =>= ?477 [477] by Demod 2726 with 8 at 2
Id : 2768, {_}: not (or (not ?477) falsehood) =>= ?477 [477] by Demod 2767 with 2094 at 2
Id : 2769, {_}: not (or falsehood (not ?477)) =>= ?477 [477] by Demod 2768 with 8 at 1,2
Id : 2770, {_}: not (not ?477) =>= ?477 [477] by Demod 2769 with 2094 at 1,2
Id : 2131, {_}: and_star truth ?461 =<= not (not ?461) [461] by Demod 239 with 2094 at 1,3
Id : 2771, {_}: and_star truth ?477 =>= ?477 [477] by Demod 2770 with 2131 at 2
Id : 563, {_}: and_star (or falsehood falsehood) ?826 =<= not (or (and_star truth truth) (not ?826)) [826] by Super 218 with 521 at 1,1,3
Id : 3108, {_}: and_star falsehood ?826 =<= not (or (and_star truth truth) (not ?826)) [826] by Demod 563 with 2094 at 1,2
Id : 3109, {_}: and_star falsehood ?826 =<= not (or truth (not ?826)) [826] by Demod 3108 with 2771 at 1,1,3
Id : 3110, {_}: and_star falsehood ?826 =?= not truth [826] by Demod 3109 with 1078 at 1,3
Id : 3111, {_}: and_star falsehood ?826 =>= falsehood [826] by Demod 3110 with 17 at 3
Id : 2777, {_}: ?461 =<= not (not ?461) [461] by Demod 2131 with 2771 at 2
Id : 3185, {_}: or (and_star y x) (and_star (not y) (not x)) === or (and_star y x) (and_star (not y) (not x)) [] by Demod 3184 with 220 at 1,2
Id : 3184, {_}: or (and_star x y) (and_star (not y) (not x)) =>= or (and_star y x) (and_star (not y) (not x)) [] by Demod 3183 with 8 at 2
Id : 3183, {_}: or (and_star (not y) (not x)) (and_star x y) =>= or (and_star y x) (and_star (not y) (not x)) [] by Demod 3182 with 2777 at 2,2,2
Id : 3182, {_}: or (and_star (not y) (not x)) (and_star x (not (not y))) =>= or (and_star y x) (and_star (not y) (not x)) [] by Demod 3181 with 2094 at 1,1,2
Id : 3181, {_}: or (and_star (or falsehood (not y)) (not x)) (and_star x (not (not y))) =>= or (and_star y x) (and_star (not y) (not x)) [] by Demod 3180 with 8 at 3
Id : 3180, {_}: or (and_star (or falsehood (not y)) (not x)) (and_star x (not (not y))) =>= or (and_star (not y) (not x)) (and_star y x) [] by Demod 3179 with 2094 at 1,2,2,2
Id : 3179, {_}: or (and_star (or falsehood (not y)) (not x)) (and_star x (not (or falsehood (not y)))) =>= or (and_star (not y) (not x)) (and_star y x) [] by Demod 3178 with 3111 at 1,1,1,2
Id : 3178, {_}: or (and_star (or (and_star falsehood y) (not y)) (not x)) (and_star x (not (or falsehood (not y)))) =>= or (and_star (not y) (not x)) (and_star y x) [] by Demod 3177 with 2777 at 2,2,3
Id : 3177, {_}: or (and_star (or (and_star falsehood y) (not y)) (not x)) (and_star x (not (or falsehood (not y)))) =<= or (and_star (not y) (not x)) (and_star y (not (not x))) [] by Demod 3176 with 3111 at 1,1,2,2,2
Id : 3176, {_}: or (and_star (or (and_star falsehood y) (not y)) (not x)) (and_star x (not (or (and_star falsehood y) (not y)))) =<= or (and_star (not y) (not x)) (and_star y (not (not x))) [] by Demod 3175 with 220 at 1,1,1,2
Id : 3175, {_}: or (and_star (or (and_star y falsehood) (not y)) (not x)) (and_star x (not (or (and_star falsehood y) (not y)))) =<= or (and_star (not y) (not x)) (and_star y (not (not x))) [] by Demod 3174 with 2094 at 1,2,2,3
Id : 3174, {_}: or (and_star (or (and_star y falsehood) (not y)) (not x)) (and_star x (not (or (and_star falsehood y) (not y)))) =<= or (and_star (not y) (not x)) (and_star y (not (or falsehood (not x)))) [] by Demod 3173 with 2094 at 2,1,3
Id : 3173, {_}: or (and_star (or (and_star y falsehood) (not y)) (not x)) (and_star x (not (or (and_star falsehood y) (not y)))) =<= or (and_star (not y) (or falsehood (not x))) (and_star y (not (or falsehood (not x)))) [] by Demod 3172 with 220 at 1,1,2,2,2
Id : 3172, {_}: or (and_star (or (and_star y falsehood) (not y)) (not x)) (and_star x (not (or (and_star y falsehood) (not y)))) =<= or (and_star (not y) (or falsehood (not x))) (and_star y (not (or falsehood (not x)))) [] by Demod 3171 with 8 at 1,1,2
Id : 3171, {_}: or (and_star (or (not y) (and_star y falsehood)) (not x)) (and_star x (not (or (and_star y falsehood) (not y)))) =<= or (and_star (not y) (or falsehood (not x))) (and_star y (not (or falsehood (not x)))) [] by Demod 3170 with 3111 at 1,1,2,2,3
Id : 3170, {_}: or (and_star (or (not y) (and_star y falsehood)) (not x)) (and_star x (not (or (and_star y falsehood) (not y)))) =<= or (and_star (not y) (or falsehood (not x))) (and_star y (not (or (and_star falsehood x) (not x)))) [] by Demod 3169 with 3111 at 1,2,1,3
Id : 3169, {_}: or (and_star (or (not y) (and_star y falsehood)) (not x)) (and_star x (not (or (and_star y falsehood) (not y)))) =<= or (and_star (not y) (or (and_star falsehood x) (not x))) (and_star y (not (or (and_star falsehood x) (not x)))) [] by Demod 3168 with 8 at 1,2,2,2
Id : 3168, {_}: or (and_star (or (not y) (and_star y falsehood)) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star falsehood x) (not x))) (and_star y (not (or (and_star falsehood x) (not x)))) [] by Demod 3167 with 17 at 2,2,1,1,2
Id : 3167, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star falsehood x) (not x))) (and_star y (not (or (and_star falsehood x) (not x)))) [] by Demod 3166 with 2771 at 2,1,2,2,3
Id : 3166, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star falsehood x) (not x))) (and_star y (not (or (and_star falsehood x) (and_star truth (not x))))) [] by Demod 3165 with 220 at 1,1,2,2,3
Id : 3165, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star falsehood x) (not x))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3164 with 2771 at 2,2,1,3
Id : 3164, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star falsehood x) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3163 with 220 at 1,2,1,3
Id : 3163, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y falsehood)))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3162 with 17 at 2,2,1,2,2,2
Id : 3162, {_}: or (and_star (or (not y) (and_star y (not truth))) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3161 with 220 at 2,1,1,2
Id : 3161, {_}: or (and_star (or (not y) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3160 with 2771 at 1,1,1,2
Id : 3160, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star truth (not x))))) [] by Demod 3159 with 220 at 2,1,2,2,3
Id : 3159, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x falsehood) (and_star (not x) truth)))) [] by Demod 3158 with 17 at 2,1,1,2,2,3
Id : 3158, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star truth (not x)))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3157 with 220 at 2,2,1,3
Id : 3157, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x falsehood) (and_star (not x) truth))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3156 with 17 at 2,1,2,1,3
Id : 3156, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star y (not truth))))) =<= or (and_star (not y) (or (and_star x (not truth)) (and_star (not x) truth))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3155 with 220 at 2,1,2,2,2
Id : 3155, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (not y) (and_star (not truth) y)))) =<= or (and_star (not y) (or (and_star x (not truth)) (and_star (not x) truth))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3154 with 2771 at 1,1,2,2,2
Id : 3154, {_}: or (and_star (or (and_star truth (not y)) (and_star (not truth) y)) (not x)) (and_star x (not (or (and_star truth (not y)) (and_star (not truth) y)))) =<= or (and_star (not y) (or (and_star x (not truth)) (and_star (not x) truth))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3153 with 220 at 1,2
Id : 3153, {_}: or (and_star (not x) (or (and_star truth (not y)) (and_star (not truth) y))) (and_star x (not (or (and_star truth (not y)) (and_star (not truth) y)))) =<= or (and_star (not y) (or (and_star x (not truth)) (and_star (not x) truth))) (and_star y (not (or (and_star x (not truth)) (and_star (not x) truth)))) [] by Demod 3152 with 213 at 1,2,2,3
Id : 3152, {_}: or (and_star (not x) (or (and_star truth (not y)) (and_star (not truth) y))) (and_star x (not (or (and_star truth (not y)) (and_star (not truth) y)))) =<= or (and_star (not y) (or (and_star x (not truth)) (and_star (not x) truth))) (and_star y (not (xor x truth))) [] by Demod 3151 with 213 at 2,1,3
Id : 3151, {_}: or (and_star (not x) (or (and_star truth (not y)) (and_star (not truth) y))) (and_star x (not (or (and_star truth (not y)) (and_star (not truth) y)))) =<= or (and_star (not y) (xor x truth)) (and_star y (not (xor x truth))) [] by Demod 3150 with 213 at 1,2,2,2
Id : 3150, {_}: or (and_star (not x) (or (and_star truth (not y)) (and_star (not truth) y))) (and_star x (not (xor truth y))) =<= or (and_star (not y) (xor x truth)) (and_star y (not (xor x truth))) [] by Demod 3149 with 213 at 2,1,2
Id : 3149, {_}: or (and_star (not x) (xor truth y)) (and_star x (not (xor truth y))) =<= or (and_star (not y) (xor x truth)) (and_star y (not (xor x truth))) [] by Demod 3148 with 220 at 2,3
Id : 3148, {_}: or (and_star (not x) (xor truth y)) (and_star x (not (xor truth y))) =<= or (and_star (not y) (xor x truth)) (and_star (not (xor x truth)) y) [] by Demod 3147 with 220 at 1,3
Id : 3147, {_}: or (and_star (not x) (xor truth y)) (and_star x (not (xor truth y))) =<= or (and_star (xor x truth) (not y)) (and_star (not (xor x truth)) y) [] by Demod 3146 with 8 at 2
Id : 3146, {_}: or (and_star x (not (xor truth y))) (and_star (not x) (xor truth y)) =<= or (and_star (xor x truth) (not y)) (and_star (not (xor x truth)) y) [] by Demod 3145 with 213 at 3
Id : 3145, {_}: or (and_star x (not (xor truth y))) (and_star (not x) (xor truth y)) =<= xor (xor x truth) y [] by Demod 1 with 213 at 2
Id :   1, {_}: xor x (xor truth y) =<= xor (xor x truth) y [] by prove_alternative_wajsberg_axiom
% SZS output end CNFRefutation for LCL159-1.p
11595: solved LCL159-1.p in 3.608225 using lpo
11595: status Unsatisfiable for LCL159-1.p
NO CLASH, using fixed ground order
11600: Facts:
11600:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11600:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11600:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11600:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11600:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11600:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11600:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11600:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11600:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11600:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11600:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11600:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11600:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11600:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11600:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11600: Goal:
11600:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
11600: Order:
11600:   nrkbo
11600: Leaf order:
11600:  commutator 1 2 0 
11600:  additive_inverse 6 1 0 
11600:  multiply 22 2 0 
11600:  additive_identity 8 0 0 
11600:  associator 4 3 3 0,2
11600:  add 18 2 2 0,3,2
11600:  v 2 0 2 2,3,2
11600:  u 2 0 2 1,3,2
11600:  y 3 0 3 2,2
11600:  x 3 0 3 1,2
NO CLASH, using fixed ground order
11601: Facts:
11601:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11601:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11601:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11601:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11601:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11601:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11601:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11601:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11601:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11601:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11601:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11601:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11601:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11601:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11601:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11601: Goal:
11601:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
11601: Order:
11601:   kbo
11601: Leaf order:
11601:  commutator 1 2 0 
11601:  additive_inverse 6 1 0 
11601:  multiply 22 2 0 
11601:  additive_identity 8 0 0 
11601:  associator 4 3 3 0,2
11601:  add 18 2 2 0,3,2
11601:  v 2 0 2 2,3,2
11601:  u 2 0 2 1,3,2
11601:  y 3 0 3 2,2
11601:  x 3 0 3 1,2
NO CLASH, using fixed ground order
11602: Facts:
11602:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11602:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11602:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11602:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11602:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11602:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11602:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11602:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11602:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11602:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11602:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11602:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11602:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11602:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11602:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11602: Goal:
11602:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
11602: Order:
11602:   lpo
11602: Leaf order:
11602:  commutator 1 2 0 
11602:  additive_inverse 6 1 0 
11602:  multiply 22 2 0 
11602:  additive_identity 8 0 0 
11602:  associator 4 3 3 0,2
11602:  add 18 2 2 0,3,2
11602:  v 2 0 2 2,3,2
11602:  u 2 0 2 1,3,2
11602:  y 3 0 3 2,2
11602:  x 3 0 3 1,2
% SZS status Timeout for RNG019-6.p
NO CLASH, using fixed ground order
11618: Facts:
11618:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11618:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11618:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11618:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11618:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11618:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11618:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11618:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11618:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11618:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11618:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11618:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11618:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11618:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11618:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11618: Goal:
11618:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
11618: Order:
11618:   nrkbo
11618: Leaf order:
11618:  commutator 1 2 0 
11618:  additive_inverse 6 1 0 
11618:  multiply 22 2 0 
11618:  additive_identity 8 0 0 
11618:  associator 4 3 3 0,2
11618:  y 3 0 3 3,2
11618:  x 3 0 3 2,2
11618:  add 18 2 2 0,1,2
11618:  v 2 0 2 2,1,2
11618:  u 2 0 2 1,1,2
NO CLASH, using fixed ground order
11619: Facts:
11619:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11619:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11619:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11619:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11619:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11619:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11619:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11619:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11619:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11619:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11619:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11619:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11619:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11619:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11619:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11619: Goal:
11619:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
11619: Order:
11619:   kbo
11619: Leaf order:
11619:  commutator 1 2 0 
11619:  additive_inverse 6 1 0 
11619:  multiply 22 2 0 
11619:  additive_identity 8 0 0 
11619:  associator 4 3 3 0,2
11619:  y 3 0 3 3,2
11619:  x 3 0 3 2,2
11619:  add 18 2 2 0,1,2
11619:  v 2 0 2 2,1,2
11619:  u 2 0 2 1,1,2
NO CLASH, using fixed ground order
11620: Facts:
11620:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11620:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11620:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11620:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11620:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11620:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11620:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11620:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11620:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11620:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11620:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11620:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11620:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11620:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11620:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11620: Goal:
11620:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
11620: Order:
11620:   lpo
11620: Leaf order:
11620:  commutator 1 2 0 
11620:  additive_inverse 6 1 0 
11620:  multiply 22 2 0 
11620:  additive_identity 8 0 0 
11620:  associator 4 3 3 0,2
11620:  y 3 0 3 3,2
11620:  x 3 0 3 2,2
11620:  add 18 2 2 0,1,2
11620:  v 2 0 2 2,1,2
11620:  u 2 0 2 1,1,2
% SZS status Timeout for RNG021-6.p
NO CLASH, using fixed ground order
11722: Facts:
11722:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11722:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11722:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11722:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11722:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11722:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11722:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11722:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11722:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11722:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11722:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11722:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11722:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11722:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11722:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11722: Goal:
11722:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
11722: Order:
11722:   nrkbo
11722: Leaf order:
11722:  commutator 1 2 0 
11722:  additive_inverse 6 1 0 
11722:  multiply 22 2 0 
11722:  add 16 2 0 
11722:  additive_identity 9 0 1 3
11722:  associator 2 3 1 0,2
11722:  y 1 0 1 2,2
11722:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11723: Facts:
11723:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11723:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11723:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11723:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11723:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11723:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11723:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11723:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11723:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11723:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11723:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11723:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11723:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11723:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11723:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11723: Goal:
11723:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
11723: Order:
11723:   kbo
11723: Leaf order:
11723:  commutator 1 2 0 
11723:  additive_inverse 6 1 0 
11723:  multiply 22 2 0 
11723:  add 16 2 0 
11723:  additive_identity 9 0 1 3
11723:  associator 2 3 1 0,2
11723:  y 1 0 1 2,2
11723:  x 2 0 2 1,2
NO CLASH, using fixed ground order
11724: Facts:
11724:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11724:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11724:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11724:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11724:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11724:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11724:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11724:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11724:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11724:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11724:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11724:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11724:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11724:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11724:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11724: Goal:
11724:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
11724: Order:
11724:   lpo
11724: Leaf order:
11724:  commutator 1 2 0 
11724:  additive_inverse 6 1 0 
11724:  multiply 22 2 0 
11724:  add 16 2 0 
11724:  additive_identity 9 0 1 3
11724:  associator 2 3 1 0,2
11724:  y 1 0 1 2,2
11724:  x 2 0 2 1,2
% SZS status Timeout for RNG025-6.p
NO CLASH, using fixed ground order
11740: Facts:
11740:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
11740:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
11740:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
11740:  Id :   5, {_}: add c c =>= c [] by idempotence
11740: Goal:
11740:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
11740: Order:
11740:   nrkbo
11740: Leaf order:
11740:  c 3 0 0 
11740:  add 13 2 3 0,2
11740:  negate 9 1 5 0,1,2
11740:  b 3 0 3 1,2,1,1,2
11740:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11741: Facts:
11741:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
11741:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
11741:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
11741:  Id :   5, {_}: add c c =>= c [] by idempotence
11741: Goal:
11741:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
11741: Order:
11741:   kbo
11741: Leaf order:
11741:  c 3 0 0 
11741:  add 13 2 3 0,2
11741:  negate 9 1 5 0,1,2
11741:  b 3 0 3 1,2,1,1,2
11741:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
11742: Facts:
11742:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
11742:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
11742:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
11742:  Id :   5, {_}: add c c =>= c [] by idempotence
11742: Goal:
11742:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
11742: Order:
11742:   lpo
11742: Leaf order:
11742:  c 3 0 0 
11742:  add 13 2 3 0,2
11742:  negate 9 1 5 0,1,2
11742:  b 3 0 3 1,2,1,1,2
11742:  a 2 0 2 1,1,1,2
% SZS status Timeout for ROB005-1.p
NO CLASH, using fixed ground order
11769: Facts:
11769:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
11769:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
11769:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
11769:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
11769: Goal:
11769:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
11769: Order:
11769:   nrkbo
11769: Leaf order:
11769:  inverse 2 1 0 
11769:  multiply 9 3 1 0,2
11769:  x 3 0 3 2,2
11769:  y 1 0 1 1,2
NO CLASH, using fixed ground order
11770: Facts:
11770:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
11770:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
11770:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
11770:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
11770: Goal:
11770:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
11770: Order:
11770:   kbo
11770: Leaf order:
11770:  inverse 2 1 0 
11770:  multiply 9 3 1 0,2
11770:  x 3 0 3 2,2
11770:  y 1 0 1 1,2
NO CLASH, using fixed ground order
11771: Facts:
11771:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
11771:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
11771:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
11771:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
11771: Goal:
11771:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
11771: Order:
11771:   lpo
11771: Leaf order:
11771:  inverse 2 1 0 
11771:  multiply 9 3 1 0,2
11771:  x 3 0 3 2,2
11771:  y 1 0 1 1,2
% SZS status Timeout for BOO019-1.p
CLASH, statistics insufficient
11791: Facts:
11791:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11791:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11791:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
11791:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
11791:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
11791:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
11791: Goal:
11791:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11791: Order:
11791:   nrkbo
11791: Leaf order:
11791:  add 11 2 0 
11791:  multiply 11 2 0 
11791:  inverse 3 1 2 0,2
11791:  a 2 0 2 1,1,2
CLASH, statistics insufficient
11792: Facts:
11792:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11792:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11792:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
11792:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
11792:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
11792:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
11792: Goal:
11792:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11792: Order:
11792:   kbo
11792: Leaf order:
11792:  add 11 2 0 
11792:  multiply 11 2 0 
11792:  inverse 3 1 2 0,2
11792:  a 2 0 2 1,1,2
CLASH, statistics insufficient
11793: Facts:
11793:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11793:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11793:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
11793:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
11793:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
11793:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
11793: Goal:
11793:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11793: Order:
11793:   lpo
11793: Leaf order:
11793:  add 11 2 0 
11793:  multiply 11 2 0 
11793:  inverse 3 1 2 0,2
11793:  a 2 0 2 1,1,2
% SZS status Timeout for BOO030-1.p
CLASH, statistics insufficient
11822: Facts:
11822:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11822:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11822:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
11822:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
11822:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
11822:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
11822:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
11822:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
11822:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
11822:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
11822:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
11822:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
11822: Goal:
11822:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11822: Order:
11822:   lpo
11822: Leaf order:
11822:  add 21 2 0 
11822:  multiply 21 2 0 
11822:  inverse 4 1 2 0,2
11822:  a 2 0 2 1,1,2
CLASH, statistics insufficient
11821: Facts:
11821:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11821:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11821:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
11821:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
11821:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
11821:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
11821:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
11821:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
11821:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
11821:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
11821:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
11821:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
11821: Goal:
11821:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11821: Order:
11821:   kbo
11821: Leaf order:
11821:  add 21 2 0 
11821:  multiply 21 2 0 
11821:  inverse 4 1 2 0,2
11821:  a 2 0 2 1,1,2
CLASH, statistics insufficient
11820: Facts:
11820:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
11820:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
11820:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
11820:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
11820:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
11820:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
11820:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
11820:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
11820:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
11820:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
11820:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
11820:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
11820: Goal:
11820:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11820: Order:
11820:   nrkbo
11820: Leaf order:
11820:  add 21 2 0 
11820:  multiply 21 2 0 
11820:  inverse 4 1 2 0,2
11820:  a 2 0 2 1,1,2
% SZS status Timeout for BOO032-1.p
NO CLASH, using fixed ground order
11838: Facts:
11838:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
11838:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
11838:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
11838:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
11838:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
11838:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
11838:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
11838: Goal:
11838:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11838: Order:
11838:   nrkbo
11838: Leaf order:
11838:  add 15 2 0 multiply
11838:  multiply 16 2 0 add
11838:  inverse 3 1 2 0,2
11838:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
11839: Facts:
11839:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
11839:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
11839:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
11839:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
11839:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
11839:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
11839:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
11839: Goal:
11839:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11839: Order:
11839:   kbo
11839: Leaf order:
11839:  add 15 2 0 multiply
11839:  multiply 16 2 0 add
11839:  inverse 3 1 2 0,2
11839:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
11840: Facts:
11840:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
11840:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
11840:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
11840:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
11840:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
11840:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
11840:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
11840: Goal:
11840:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
11840: Order:
11840:   lpo
11840: Leaf order:
11840:  add 15 2 0 multiply
11840:  multiply 16 2 0 add
11840:  inverse 3 1 2 0,2
11840:  a 2 0 2 1,1,2
% SZS status Timeout for BOO033-1.p
NO CLASH, using fixed ground order
11868: Facts:
11868:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
11868:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
11868:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
11868: Goal:
11868:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
11868: Order:
11868:   nrkbo
11868: Leaf order:
11868:  w 4 0 0 
11868:  b 7 0 0 
11868:  apply 20 2 3 0,2
11868:  fixed_pt 3 0 3 2,2
11868:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
11869: Facts:
11869:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
11869:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
11869:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
11869: Goal:
11869:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
11869: Order:
11869:   kbo
11869: Leaf order:
11869:  w 4 0 0 
11869:  b 7 0 0 
11869:  apply 20 2 3 0,2
11869:  fixed_pt 3 0 3 2,2
11869:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
11870: Facts:
11870:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
11870:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
11870:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
11870: Goal:
11870:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
11870: Order:
11870:   lpo
11870: Leaf order:
11870:  w 4 0 0 
11870:  b 7 0 0 
11870:  apply 20 2 3 0,2
11870:  fixed_pt 3 0 3 2,2
11870:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL003-20.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
11889: Facts:
11889:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
11889:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
11889: Goal:
11889:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
11889: Order:
11889:   kbo
11889: Leaf order:
11889:  y 3 0 3 2,2
11889:  x 3 0 3 2,1,2
11889:  apply 25 2 17 0,2
11889:  k 8 0 7 1,2,1,1,1,2
11889:  s 7 0 6 1,1,1,1,2
11888: Facts:
11888:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
11888:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
11888: Goal:
11888:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
11888: Order:
11888:   nrkbo
11888: Leaf order:
11888:  y 3 0 3 2,2
11888:  x 3 0 3 2,1,2
11888:  apply 25 2 17 0,2
11888:  k 8 0 7 1,2,1,1,1,2
11888:  s 7 0 6 1,1,1,1,2
NO CLASH, using fixed ground order
11890: Facts:
11890:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
11890:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
11890: Goal:
11890:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
11890: Order:
11890:   lpo
11890: Leaf order:
11890:  y 3 0 3 2,2
11890:  x 3 0 3 2,1,2
11890:  apply 25 2 17 0,2
11890:  k 8 0 7 1,2,1,1,1,2
11890:  s 7 0 6 1,1,1,1,2
Statistics :
Max weight : 29
Found proof, 0.014068s
% SZS status Unsatisfiable for COL004-3.p
% SZS output start CNFRefutation for COL004-3.p
Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
Id :   2, {_}: apply (apply (apply s ?2) ?3) ?4 =?= apply (apply ?2 ?4) (apply ?3 ?4) [4, 3, 2] by s_definition ?2 ?3 ?4
Id :  35, {_}: apply y (apply (apply x x) y) === apply y (apply (apply x x) y) [] by Demod 34 with 3 at 1,2
Id :  34, {_}: apply (apply (apply k y) (apply k y)) (apply (apply x x) y) =>= apply y (apply (apply x x) y) [] by Demod 33 with 2 at 1,2
Id :  33, {_}: apply (apply (apply (apply s k) k) y) (apply (apply x x) y) =>= apply y (apply (apply x x) y) [] by Demod 32 with 2 at 2
Id :  32, {_}: apply (apply (apply s (apply (apply s k) k)) (apply x x)) y =>= apply y (apply (apply x x) y) [] by Demod 31 with 3 at 2,2,1,2
Id :  31, {_}: apply (apply (apply s (apply (apply s k) k)) (apply x (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 30 with 3 at 1,2,1,2
Id :  30, {_}: apply (apply (apply s (apply (apply s k) k)) (apply (apply (apply k x) (apply k x)) (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 20 with 3 at 1,1,2
Id :  20, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply k x) (apply k x)) (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 19 with 2 at 2,2,1,2
Id :  19, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply k x) (apply k x)) (apply (apply (apply s k) k) x))) y =>= apply y (apply (apply x x) y) [] by Demod 18 with 2 at 1,2,1,2
Id :  18, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply (apply s k) k) x) (apply (apply (apply s k) k) x))) y =>= apply y (apply (apply x x) y) [] by Demod 17 with 2 at 2,1,2
Id :  17, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)) x)) y =>= apply y (apply (apply x x) y) [] by Demod 1 with 2 at 1,2
Id :   1, {_}: apply (apply (apply (apply s (apply k (apply s (apply (apply s k) k)))) (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))) x) y =>= apply y (apply (apply x x) y) [] by prove_u_combinator
% SZS output end CNFRefutation for COL004-3.p
11890: solved COL004-3.p in 0.020001 using lpo
11890: status Unsatisfiable for COL004-3.p
CLASH, statistics insufficient
11895: Facts:
11895:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11895:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
11895: Goal:
11895:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
11895: Order:
11895:   nrkbo
11895: Leaf order:
11895:  w 1 0 0 
11895:  s 1 0 0 
11895:  apply 11 2 1 0,3
11895:  combinator 1 0 1 1,3
CLASH, statistics insufficient
11896: Facts:
11896:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11896:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
11896: Goal:
11896:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
11896: Order:
11896:   kbo
11896: Leaf order:
11896:  w 1 0 0 
11896:  s 1 0 0 
11896:  apply 11 2 1 0,3
11896:  combinator 1 0 1 1,3
CLASH, statistics insufficient
11897: Facts:
11897:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11897:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
11897: Goal:
11897:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
11897: Order:
11897:   lpo
11897: Leaf order:
11897:  w 1 0 0 
11897:  s 1 0 0 
11897:  apply 11 2 1 0,3
11897:  combinator 1 0 1 1,3
% SZS status Timeout for COL005-1.p
CLASH, statistics insufficient
11929: Facts:
11929:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11929:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
11929:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
11929: Goal:
11929:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11929: Order:
11929:   nrkbo
11929: Leaf order:
11929:  v 1 0 0 
11929:  m 1 0 0 
11929:  b 1 0 0 
11929:  apply 15 2 3 0,2
11929:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11930: Facts:
11930:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11930:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
11930:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
11930: Goal:
11930:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11930: Order:
11930:   kbo
11930: Leaf order:
11930:  v 1 0 0 
11930:  m 1 0 0 
11930:  b 1 0 0 
11930:  apply 15 2 3 0,2
11930:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11931: Facts:
11931:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11931:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
11931:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =?= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
11931: Goal:
11931:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11931: Order:
11931:   lpo
11931: Leaf order:
11931:  v 1 0 0 
11931:  m 1 0 0 
11931:  b 1 0 0 
11931:  apply 15 2 3 0,2
11931:  f 3 1 3 0,2,2
Goal subsumed
Statistics :
Max weight : 78
Found proof, 6.233757s
% SZS status Unsatisfiable for COL038-1.p
% SZS output start CNFRefutation for COL038-1.p
Id :   4, {_}: apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10 [11, 10, 9] by v_definition ?9 ?10 ?11
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :  19, {_}: apply (apply (apply v ?47) ?48) ?49 =>= apply (apply ?49 ?47) ?48 [49, 48, 47] by v_definition ?47 ?48 ?49
Id :   5, {_}: apply (apply (apply b ?13) ?14) ?15 =>= apply ?13 (apply ?14 ?15) [15, 14, 13] by b_definition ?13 ?14 ?15
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :   6, {_}: apply ?17 (apply ?18 ?19) =?= apply ?17 (apply ?18 ?19) [19, 18, 17] by Super 5 with 2 at 2
Id : 1244, {_}: apply (apply m (apply v ?1596)) ?1597 =?= apply (apply ?1597 ?1596) (apply v ?1596) [1597, 1596] by Super 19 with 3 at 1,2
Id :  18, {_}: apply m (apply (apply v ?44) ?45) =<= apply (apply (apply (apply v ?44) ?45) ?44) ?45 [45, 44] by Super 3 with 4 at 3
Id : 224, {_}: apply m (apply (apply v ?485) ?486) =<= apply (apply (apply ?485 ?485) ?486) ?486 [486, 485] by Demod 18 with 4 at 1,3
Id : 232, {_}: apply m (apply (apply v ?509) ?510) =<= apply (apply (apply m ?509) ?510) ?510 [510, 509] by Super 224 with 3 at 1,1,3
Id : 7751, {_}: apply (apply m (apply v ?7787)) (apply (apply m ?7788) ?7787) =<= apply (apply m (apply (apply v ?7788) ?7787)) (apply v ?7787) [7788, 7787] by Super 1244 with 232 at 1,3
Id :   9, {_}: apply (apply (apply m b) ?24) ?25 =>= apply b (apply ?24 ?25) [25, 24] by Super 2 with 3 at 1,1,2
Id : 236, {_}: apply m (apply (apply v (apply v ?521)) ?522) =<= apply (apply (apply ?522 ?521) (apply v ?521)) ?522 [522, 521] by Super 224 with 4 at 1,3
Id : 2866, {_}: apply m (apply (apply v (apply v b)) m) =>= apply b (apply (apply v b) m) [] by Super 9 with 236 at 2
Id : 7790, {_}: apply (apply m (apply v m)) (apply (apply m (apply v b)) m) =>= apply (apply b (apply (apply v b) m)) (apply v m) [] by Super 7751 with 2866 at 1,3
Id :  20, {_}: apply (apply m (apply v ?51)) ?52 =?= apply (apply ?52 ?51) (apply v ?51) [52, 51] by Super 19 with 3 at 1,2
Id : 7860, {_}: apply (apply m (apply v m)) (apply (apply m b) (apply v b)) =>= apply (apply b (apply (apply v b) m)) (apply v m) [] by Demod 7790 with 20 at 2,2
Id :  11, {_}: apply m (apply (apply b ?30) ?31) =<= apply ?30 (apply ?31 (apply (apply b ?30) ?31)) [31, 30] by Super 2 with 3 at 2
Id : 9568, {_}: apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b)) (apply m (apply (apply b (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b))) m)) =?= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b)) (apply m (apply (apply b (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b))) m)) [] by Super 9567 with 11 at 2
Id : 9567, {_}: apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m)) [8771] by Demod 9566 with 2 at 2,3
Id : 9566, {_}: apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m) [8771] by Demod 9565 with 2 at 2
Id : 9565, {_}: apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m) [8771] by Demod 9564 with 4 at 1,2,3
Id : 9564, {_}: apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m) [8771] by Demod 9563 with 4 at 1,2
Id : 9563, {_}: apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m) [8771] by Demod 9562 with 4 at 2,3
Id : 9562, {_}: apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))))) [8771] by Demod 9561 with 4 at 2
Id : 9561, {_}: apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))))) [8771] by Demod 9560 with 2 at 2,3
Id : 9560, {_}: apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9559 with 2 at 2
Id : 9559, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9558 with 7860 at 1,2,3
Id : 9558, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9557 with 7860 at 2,1,1,1,3
Id : 9557, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9556 with 7860 at 2,1,1,2,2,2
Id : 9556, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9078 with 7860 at 1,2
Id : 9078, {_}: apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Super 174 with 7860 at 2,1,1,2,2,2,3
Id : 174, {_}: apply (apply ?379 ?380) (apply ?381 (f (apply (apply b (apply ?379 ?380)) ?381))) =<= apply (f (apply (apply b (apply ?379 ?380)) ?381)) (apply (apply ?379 ?380) (apply ?381 (f (apply (apply b (apply ?379 ?380)) ?381)))) [381, 380, 379] by Super 8 with 6 at 1,1,2,2,2,3
Id :   8, {_}: apply ?21 (apply ?22 (f (apply (apply b ?21) ?22))) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?21) ?22) (f (apply (apply b ?21) ?22)) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL038-1.p
11930: solved COL038-1.p in 3.116194 using kbo
11930: status Unsatisfiable for COL038-1.p
CLASH, statistics insufficient
11936: Facts:
11936:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11936:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
11936:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
11936: Goal:
11936:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11936: Order:
11936:   nrkbo
11936: Leaf order:
11936:  m 1 0 0 
11936:  b 1 0 0 
11936:  s 1 0 0 
11936:  apply 16 2 3 0,2
11936:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11937: Facts:
11937:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11937:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
11937:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
11937: Goal:
11937:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11937: Order:
11937:   kbo
11937: Leaf order:
11937:  m 1 0 0 
11937:  b 1 0 0 
11937:  s 1 0 0 
11937:  apply 16 2 3 0,2
11937:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11938: Facts:
11938:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
11938:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
11938:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
11938: Goal:
11938:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
11938: Order:
11938:   lpo
11938: Leaf order:
11938:  m 1 0 0 
11938:  b 1 0 0 
11938:  s 1 0 0 
11938:  apply 16 2 3 0,2
11938:  f 3 1 3 0,2,2
% SZS status Timeout for COL046-1.p
CLASH, statistics insufficient
11954: Facts:
11954:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
11954:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
11954: Goal:
11954:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
11954: Order:
11954:   nrkbo
11954: Leaf order:
11954:  q 1 0 0 
11954:  l 1 0 0 
11954:  apply 12 2 3 0,2
11954:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11955: Facts:
11955:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
11955:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
11955: Goal:
11955:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
11955: Order:
11955:   kbo
11955: Leaf order:
11955:  q 1 0 0 
11955:  l 1 0 0 
11955:  apply 12 2 3 0,2
11955:  f 3 1 3 0,2,2
CLASH, statistics insufficient
11956: Facts:
11956:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
11956:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
11956: Goal:
11956:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
11956: Order:
11956:   lpo
11956: Leaf order:
11956:  q 1 0 0 
11956:  l 1 0 0 
11956:  apply 12 2 3 0,2
11956:  f 3 1 3 0,2,2
% SZS status Timeout for COL047-1.p
CLASH, statistics insufficient
11983: Facts:
11983:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11983:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11983: Goal:
11983:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
11983: Order:
11983:   nrkbo
11983: Leaf order:
11983:  t 1 0 0 
11983:  b 1 0 0 
11983:  h 2 1 2 0,2,2
11983:  g 2 1 2 0,2,1,2
11983:  apply 13 2 5 0,2
11983:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11984: Facts:
11984:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11984:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11984: Goal:
11984:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
11984: Order:
11984:   kbo
11984: Leaf order:
11984:  t 1 0 0 
11984:  b 1 0 0 
11984:  h 2 1 2 0,2,2
11984:  g 2 1 2 0,2,1,2
11984:  apply 13 2 5 0,2
11984:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11985: Facts:
11985:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11985:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11985: Goal:
11985:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
11985: Order:
11985:   lpo
11985: Leaf order:
11985:  t 1 0 0 
11985:  b 1 0 0 
11985:  h 2 1 2 0,2,2
11985:  g 2 1 2 0,2,1,2
11985:  apply 13 2 5 0,2
11985:  f 2 1 2 0,2,1,1,2
Goal subsumed
Statistics :
Max weight : 76
Found proof, 1.436300s
% SZS status Unsatisfiable for COL060-1.p
% SZS output start CNFRefutation for COL060-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 447, {_}: apply (g (apply (apply b (apply t b)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t b)) (apply (apply b b) t))) (h (apply (apply b (apply t b)) (apply (apply b b) t)))) === apply (g (apply (apply b (apply t b)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t b)) (apply (apply b b) t))) (h (apply (apply b (apply t b)) (apply (apply b b) t)))) [] by Super 445 with 2 at 2
Id : 445, {_}: apply (apply (apply ?1404 (g (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (f (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t))) =>= apply (g (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) [1404] by Super 277 with 3 at 1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (g (apply (apply b ?33) (apply (apply b ?34) ?35))) (apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (h (apply (apply b ?33) (apply (apply b ?34) ?35)))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (g (apply (apply b ?18) ?19)) (apply (f (apply (apply b ?18) ?19)) (h (apply (apply b ?18) ?19))) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (g ?1) (apply (f ?1) (h ?1)) [1] by prove_q_combinator ?1
% SZS output end CNFRefutation for COL060-1.p
11983: solved COL060-1.p in 0.376023 using nrkbo
11983: status Unsatisfiable for COL060-1.p
CLASH, statistics insufficient
11990: Facts:
11990:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11990:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11990: Goal:
11990:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
11990: Order:
11990:   nrkbo
11990: Leaf order:
11990:  t 1 0 0 
11990:  b 1 0 0 
11990:  h 2 1 2 0,2,2
11990:  g 2 1 2 0,2,1,2
11990:  apply 13 2 5 0,2
11990:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11991: Facts:
11991:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11991:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11991: Goal:
11991:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
11991: Order:
11991:   kbo
11991: Leaf order:
11991:  t 1 0 0 
11991:  b 1 0 0 
11991:  h 2 1 2 0,2,2
11991:  g 2 1 2 0,2,1,2
11991:  apply 13 2 5 0,2
11991:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11992: Facts:
11992:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11992:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11992: Goal:
11992:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
11992: Order:
11992:   lpo
11992: Leaf order:
11992:  t 1 0 0 
11992:  b 1 0 0 
11992:  h 2 1 2 0,2,2
11992:  g 2 1 2 0,2,1,2
11992:  apply 13 2 5 0,2
11992:  f 2 1 2 0,2,1,1,2
Goal subsumed
Statistics :
Max weight : 76
Found proof, 2.573692s
% SZS status Unsatisfiable for COL061-1.p
% SZS output start CNFRefutation for COL061-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 447, {_}: apply (f (apply (apply b (apply t t)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) b))) (g (apply (apply b (apply t t)) (apply (apply b b) b)))) === apply (f (apply (apply b (apply t t)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) b))) (g (apply (apply b (apply t t)) (apply (apply b b) b)))) [] by Super 446 with 3 at 2,2
Id : 446, {_}: apply (f (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (apply (apply ?1406 (g (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) (h (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) =>= apply (f (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (g (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) [1406] by Super 277 with 2 at 2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (f (apply (apply b ?18) ?19)) (apply (h (apply (apply b ?18) ?19)) (g (apply (apply b ?18) ?19))) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (f ?1) (apply (h ?1) (g ?1)) [1] by prove_q1_combinator ?1
% SZS output end CNFRefutation for COL061-1.p
11990: solved COL061-1.p in 0.344021 using nrkbo
11990: status Unsatisfiable for COL061-1.p
CLASH, statistics insufficient
11997: Facts:
11997:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11997:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11997: Goal:
11997:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
11997: Order:
11997:   nrkbo
11997: Leaf order:
11997:  t 1 0 0 
11997:  b 1 0 0 
11997:  h 2 1 2 0,2,2
11997:  g 2 1 2 0,2,1,2
11997:  apply 13 2 5 0,2
11997:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11998: Facts:
11998:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11998:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11998: Goal:
11998:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
11998: Order:
11998:   kbo
11998: Leaf order:
11998:  t 1 0 0 
11998:  b 1 0 0 
11998:  h 2 1 2 0,2,2
11998:  g 2 1 2 0,2,1,2
11998:  apply 13 2 5 0,2
11998:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
11999: Facts:
11999:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
11999:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
11999: Goal:
11999:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
11999: Order:
11999:   lpo
11999: Leaf order:
11999:  t 1 0 0 
11999:  b 1 0 0 
11999:  h 2 1 2 0,2,2
11999:  g 2 1 2 0,2,1,2
11999:  apply 13 2 5 0,2
11999:  f 2 1 2 0,2,1,1,2
Goal subsumed
Statistics :
Max weight : 100
Found proof, 3.178698s
% SZS status Unsatisfiable for COL062-1.p
% SZS output start CNFRefutation for COL062-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 1574, {_}: apply (apply (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) === apply (apply (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) [] by Super 1573 with 3 at 2
Id : 1573, {_}: apply (apply ?5215 (g (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) (apply (f (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) =>= apply (apply (f (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) [5215] by Super 447 with 2 at 2
Id : 447, {_}: apply (apply (apply ?1408 (apply ?1409 (g (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))))) (f (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t)))) (h (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) =>= apply (apply (f (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) [1409, 1408] by Super 445 with 2 at 1,1,2
Id : 445, {_}: apply (apply (apply ?1404 (g (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (f (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t))) =>= apply (apply (f (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (g (apply (apply b (apply t ?1404)) (apply (apply b b) t))) [1404] by Super 277 with 3 at 1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (h (apply (apply b ?33) (apply (apply b ?34) ?35)))) (g (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (f (apply (apply b ?18) ?19)) (h (apply (apply b ?18) ?19))) (g (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (f ?1) (h ?1)) (g ?1) [1] by prove_c_combinator ?1
% SZS output end CNFRefutation for COL062-1.p
11997: solved COL062-1.p in 1.812113 using nrkbo
11997: status Unsatisfiable for COL062-1.p
CLASH, statistics insufficient
12004: Facts:
12004:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
CLASH, statistics insufficient
12006: Facts:
12006:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
12006:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
12006: Goal:
12006:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
12006: Order:
12006:   lpo
12006: Leaf order:
12006:  q 1 0 0 
12006:  n 1 0 0 
12006:  apply 14 2 3 0,2
12006:  f 3 1 3 0,2,2
12004:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
12004: Goal:
12004:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
12004: Order:
12004:   nrkbo
12004: Leaf order:
12004:  q 1 0 0 
12004:  n 1 0 0 
12004:  apply 14 2 3 0,2
12004:  f 3 1 3 0,2,2
CLASH, statistics insufficient
12005: Facts:
12005:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
12005:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
12005: Goal:
12005:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
12005: Order:
12005:   kbo
12005: Leaf order:
12005:  q 1 0 0 
12005:  n 1 0 0 
12005:  apply 14 2 3 0,2
12005:  f 3 1 3 0,2,2
% SZS status Timeout for COL071-1.p
CLASH, statistics insufficient
12093: Facts:
12093:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
12093:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
12093: Goal:
12093:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
12093: Order:
12093:   nrkbo
12093: Leaf order:
12093:  b 1 0 0 
12093:  n1 1 0 0 
12093:  apply 14 2 3 0,2
12093:  f 3 1 3 0,2,2
CLASH, statistics insufficient
12094: Facts:
12094:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
12094:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
12094: Goal:
12094:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
12094: Order:
12094:   kbo
12094: Leaf order:
12094:  b 1 0 0 
12094:  n1 1 0 0 
12094:  apply 14 2 3 0,2
12094:  f 3 1 3 0,2,2
CLASH, statistics insufficient
12095: Facts:
12095:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
12095:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
12095: Goal:
12095:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
12095: Order:
12095:   lpo
12095: Leaf order:
12095:  b 1 0 0 
12095:  n1 1 0 0 
12095:  apply 14 2 3 0,2
12095:  f 3 1 3 0,2,2
% SZS status Timeout for COL073-1.p
NO CLASH, using fixed ground order
12117: Facts:
12117:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12117:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12117:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12117:  Id :   5, {_}:
          commutator ?10 ?11
          =<=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
12117:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =?=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
12117: Goal:
12117:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
12117: Order:
12117:   nrkbo
12117: Leaf order:
12117:  inverse 3 1 0 
12117:  identity 2 0 0 
12117:  multiply 11 2 2 0,2
12117:  commutator 7 2 2 0,2,2
12117:  c 2 0 2 2,2,2
12117:  b 2 0 2 1,2,2
12117:  a 2 0 2 1,2
NO CLASH, using fixed ground order
12118: Facts:
12118:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12118:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12118:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12118:  Id :   5, {_}:
          commutator ?10 ?11
          =<=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
12118:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =>=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
12118: Goal:
12118:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
12118: Order:
12118:   kbo
12118: Leaf order:
12118:  inverse 3 1 0 
12118:  identity 2 0 0 
12118:  multiply 11 2 2 0,2
12118:  commutator 7 2 2 0,2,2
12118:  c 2 0 2 2,2,2
12118:  b 2 0 2 1,2,2
12118:  a 2 0 2 1,2
NO CLASH, using fixed ground order
12119: Facts:
12119:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12119:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12119:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12119:  Id :   5, {_}:
          commutator ?10 ?11
          =>=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
12119:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =>=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
12119: Goal:
12119:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
12119: Order:
12119:   lpo
12119: Leaf order:
12119:  inverse 3 1 0 
12119:  identity 2 0 0 
12119:  multiply 11 2 2 0,2
12119:  commutator 7 2 2 0,2,2
12119:  c 2 0 2 2,2,2
12119:  b 2 0 2 1,2,2
12119:  a 2 0 2 1,2
% SZS status Timeout for GRP024-5.p
CLASH, statistics insufficient
12145: Facts:
12145:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12145:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12145:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12145:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
12145:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
12145:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =<= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
12145:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
12145:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
12145:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
CLASH, statistics insufficient
12146: Facts:
12146:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12146:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12146:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12146:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
12146:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
12146:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =?= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
12146:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
12146:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
12146:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
12146:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
12146:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =<=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
12146:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =<= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
12146:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
12146:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
12146:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =>=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
12146:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =>=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
12146:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =>=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
12146:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =>=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
12146:  Id :  20, {_}:
          positive_part ?56 =>= union ?56 identity
          [56] by positive_part ?56
12146:  Id :  21, {_}:
          negative_part ?58 =>= intersection ?58 identity
          [58] by negative_part ?58
12146: Goal:
12146:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
12146: Order:
12146:   lpo
12146: Leaf order:
12146:  union 14 2 0 
12146:  intersection 14 2 0 
12146:  inverse 7 1 0 
12146:  identity 6 0 0 
12146:  multiply 21 2 1 0,2
12146:  negative_part 2 1 1 0,2,2
12146:  positive_part 2 1 1 0,1,2
12146:  a 3 0 3 1,1,2
12145:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
12145:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =<=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
12145:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =<= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
12145:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
12145:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
12145:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =<=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
12145:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =<=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
12145:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =<=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
12145:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =<=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
12145:  Id :  20, {_}:
          positive_part ?56 =<= union ?56 identity
          [56] by positive_part ?56
12145:  Id :  21, {_}:
          negative_part ?58 =<= intersection ?58 identity
          [58] by negative_part ?58
12145: Goal:
12145:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
12145: Order:
12145:   kbo
12145: Leaf order:
12145:  union 14 2 0 
12145:  intersection 14 2 0 
12145:  inverse 7 1 0 
12145:  identity 6 0 0 
12145:  multiply 21 2 1 0,2
12145:  negative_part 2 1 1 0,2,2
12145:  positive_part 2 1 1 0,1,2
12145:  a 3 0 3 1,1,2
CLASH, statistics insufficient
12144: Facts:
12144:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12144:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12144:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12144:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
12144:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
12144:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =<= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
12144:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
12144:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
12144:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
12144:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
12144:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =?=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
12144:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =?= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
12144:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
12144:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
12144:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =<=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
12144:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =<=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
12144:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =<=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
12144:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =<=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
12144:  Id :  20, {_}:
          positive_part ?56 =<= union ?56 identity
          [56] by positive_part ?56
12144:  Id :  21, {_}:
          negative_part ?58 =<= intersection ?58 identity
          [58] by negative_part ?58
12144: Goal:
12144:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
12144: Order:
12144:   nrkbo
12144: Leaf order:
12144:  union 14 2 0 
12144:  intersection 14 2 0 
12144:  inverse 7 1 0 
12144:  identity 6 0 0 
12144:  multiply 21 2 1 0,2
12144:  negative_part 2 1 1 0,2,2
12144:  positive_part 2 1 1 0,1,2
12144:  a 3 0 3 1,1,2
Statistics :
Max weight : 15
Found proof, 17.397670s
% SZS status Unsatisfiable for GRP114-1.p
% SZS output start CNFRefutation for GRP114-1.p
Id :  12, {_}: intersection ?26 (intersection ?27 ?28) =<= intersection (intersection ?26 ?27) ?28 [28, 27, 26] by intersection_associative ?26 ?27 ?28
Id :  14, {_}: union (intersection ?34 ?35) ?35 =>= ?35 [35, 34] by union_intersection_absorbtion ?34 ?35
Id :  13, {_}: union ?30 (union ?31 ?32) =<= union (union ?30 ?31) ?32 [32, 31, 30] by union_associative ?30 ?31 ?32
Id : 235, {_}: multiply (union ?499 ?500) ?501 =<= union (multiply ?499 ?501) (multiply ?500 ?501) [501, 500, 499] by multiply_union2 ?499 ?500 ?501
Id :  15, {_}: intersection (union ?37 ?38) ?38 =>= ?38 [38, 37] by intersection_union_absorbtion ?37 ?38
Id : 195, {_}: multiply ?427 (intersection ?428 ?429) =<= intersection (multiply ?427 ?428) (multiply ?427 ?429) [429, 428, 427] by multiply_intersection1 ?427 ?428 ?429
Id :  10, {_}: intersection ?20 ?21 =?= intersection ?21 ?20 [21, 20] by intersection_commutative ?20 ?21
Id :  21, {_}: negative_part ?58 =<= intersection ?58 identity [58] by negative_part ?58
Id :  17, {_}: multiply ?44 (intersection ?45 ?46) =<= intersection (multiply ?44 ?45) (multiply ?44 ?46) [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
Id :   7, {_}: inverse (multiply ?13 ?14) =<= multiply (inverse ?14) (inverse ?13) [14, 13] by inverse_product_lemma ?13 ?14
Id :  11, {_}: union ?23 ?24 =?= union ?24 ?23 [24, 23] by union_commutative ?23 ?24
Id :  20, {_}: positive_part ?56 =<= union ?56 identity [56] by positive_part ?56
Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
Id :  16, {_}: multiply ?40 (union ?41 ?42) =<= union (multiply ?40 ?41) (multiply ?40 ?42) [42, 41, 40] by multiply_union1 ?40 ?41 ?42
Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
Id :  48, {_}: inverse (multiply ?104 ?105) =<= multiply (inverse ?105) (inverse ?104) [105, 104] by inverse_product_lemma ?104 ?105
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  26, {_}: multiply (multiply ?67 ?68) ?69 =>= multiply ?67 (multiply ?68 ?69) [69, 68, 67] by associativity ?67 ?68 ?69
Id :  28, {_}: multiply identity ?74 =<= multiply (inverse ?75) (multiply ?75 ?74) [75, 74] by Super 26 with 3 at 1,2
Id :  32, {_}: ?74 =<= multiply (inverse ?75) (multiply ?75 ?74) [75, 74] by Demod 28 with 2 at 2
Id :  50, {_}: inverse (multiply (inverse ?109) ?110) =>= multiply (inverse ?110) ?109 [110, 109] by Super 48 with 6 at 2,3
Id :  49, {_}: inverse (multiply identity ?107) =<= multiply (inverse ?107) identity [107] by Super 48 with 5 at 2,3
Id : 835, {_}: inverse ?1371 =<= multiply (inverse ?1371) identity [1371] by Demod 49 with 2 at 1,2
Id : 841, {_}: inverse (inverse ?1382) =<= multiply ?1382 identity [1382] by Super 835 with 6 at 1,3
Id : 864, {_}: ?1382 =<= multiply ?1382 identity [1382] by Demod 841 with 6 at 2
Id : 881, {_}: multiply ?1419 (union ?1420 identity) =?= union (multiply ?1419 ?1420) ?1419 [1420, 1419] by Super 16 with 864 at 2,3
Id : 900, {_}: multiply ?1419 (positive_part ?1420) =<= union (multiply ?1419 ?1420) ?1419 [1420, 1419] by Demod 881 with 20 at 2,2
Id : 2897, {_}: multiply ?3964 (positive_part ?3965) =<= union ?3964 (multiply ?3964 ?3965) [3965, 3964] by Demod 900 with 11 at 3
Id : 2901, {_}: multiply (inverse ?3975) (positive_part ?3975) =>= union (inverse ?3975) identity [3975] by Super 2897 with 3 at 2,3
Id : 2938, {_}: multiply (inverse ?3975) (positive_part ?3975) =>= union identity (inverse ?3975) [3975] by Demod 2901 with 11 at 3
Id : 296, {_}: union identity ?627 =>= positive_part ?627 [627] by Super 11 with 20 at 3
Id : 2939, {_}: multiply (inverse ?3975) (positive_part ?3975) =>= positive_part (inverse ?3975) [3975] by Demod 2938 with 296 at 3
Id : 2958, {_}: inverse (positive_part (inverse ?4028)) =<= multiply (inverse (positive_part ?4028)) ?4028 [4028] by Super 50 with 2939 at 1,2
Id : 3609, {_}: ?4904 =<= multiply (inverse (inverse (positive_part ?4904))) (inverse (positive_part (inverse ?4904))) [4904] by Super 32 with 2958 at 2,3
Id : 3661, {_}: ?4904 =<= inverse (multiply (positive_part (inverse ?4904)) (inverse (positive_part ?4904))) [4904] by Demod 3609 with 7 at 3
Id :  52, {_}: inverse (multiply ?114 (inverse ?115)) =>= multiply ?115 (inverse ?114) [115, 114] by Super 48 with 6 at 1,3
Id : 3662, {_}: ?4904 =<= multiply (positive_part ?4904) (inverse (positive_part (inverse ?4904))) [4904] by Demod 3661 with 52 at 3
Id : 875, {_}: multiply ?1405 (intersection ?1406 identity) =?= intersection (multiply ?1405 ?1406) ?1405 [1406, 1405] by Super 17 with 864 at 2,3
Id : 906, {_}: multiply ?1405 (negative_part ?1406) =<= intersection (multiply ?1405 ?1406) ?1405 [1406, 1405] by Demod 875 with 21 at 2,2
Id : 3727, {_}: multiply ?5043 (negative_part ?5044) =<= intersection ?5043 (multiply ?5043 ?5044) [5044, 5043] by Demod 906 with 10 at 3
Id :  40, {_}: multiply ?89 (inverse ?89) =>= identity [89] by Super 3 with 6 at 1,2
Id : 3734, {_}: multiply ?5063 (negative_part (inverse ?5063)) =>= intersection ?5063 identity [5063] by Super 3727 with 40 at 2,3
Id : 3782, {_}: multiply ?5063 (negative_part (inverse ?5063)) =>= negative_part ?5063 [5063] by Demod 3734 with 21 at 3
Id : 201, {_}: multiply (inverse ?449) (intersection ?449 ?450) =>= intersection identity (multiply (inverse ?449) ?450) [450, 449] by Super 195 with 3 at 1,3
Id : 311, {_}: intersection identity ?654 =>= negative_part ?654 [654] by Super 10 with 21 at 3
Id : 8114, {_}: multiply (inverse ?449) (intersection ?449 ?450) =>= negative_part (multiply (inverse ?449) ?450) [450, 449] by Demod 201 with 311 at 3
Id : 135, {_}: intersection ?38 (union ?37 ?38) =>= ?38 [37, 38] by Demod 15 with 10 at 2
Id : 701, {_}: intersection ?1238 (positive_part ?1238) =>= ?1238 [1238] by Super 135 with 296 at 2,2
Id : 241, {_}: multiply (union (inverse ?521) ?522) ?521 =>= union identity (multiply ?522 ?521) [522, 521] by Super 235 with 3 at 1,3
Id : 8575, {_}: multiply (union (inverse ?10997) ?10998) ?10997 =>= positive_part (multiply ?10998 ?10997) [10998, 10997] by Demod 241 with 296 at 3
Id : 699, {_}: union identity (union ?1233 ?1234) =>= union (positive_part ?1233) ?1234 [1234, 1233] by Super 13 with 296 at 1,3
Id : 716, {_}: positive_part (union ?1233 ?1234) =>= union (positive_part ?1233) ?1234 [1234, 1233] by Demod 699 with 296 at 2
Id : 299, {_}: union ?634 (union ?635 identity) =>= positive_part (union ?634 ?635) [635, 634] by Super 13 with 20 at 3
Id : 307, {_}: union ?634 (positive_part ?635) =<= positive_part (union ?634 ?635) [635, 634] by Demod 299 with 20 at 2,2
Id : 1223, {_}: union ?1233 (positive_part ?1234) =<= union (positive_part ?1233) ?1234 [1234, 1233] by Demod 716 with 307 at 2
Id : 2971, {_}: multiply (inverse ?4064) (positive_part ?4064) =>= positive_part (inverse ?4064) [4064] by Demod 2938 with 296 at 3
Id : 121, {_}: union ?35 (intersection ?34 ?35) =>= ?35 [34, 35] by Demod 14 with 11 at 2
Id : 700, {_}: positive_part (intersection ?1236 identity) =>= identity [1236] by Super 121 with 296 at 2
Id : 715, {_}: positive_part (negative_part ?1236) =>= identity [1236] by Demod 700 with 21 at 1,2
Id : 2976, {_}: multiply (inverse (negative_part ?4073)) identity =>= positive_part (inverse (negative_part ?4073)) [4073] by Super 2971 with 715 at 2,2
Id : 3014, {_}: inverse (negative_part ?4073) =<= positive_part (inverse (negative_part ?4073)) [4073] by Demod 2976 with 864 at 2
Id : 3035, {_}: union (inverse (negative_part ?4112)) (positive_part ?4113) =>= union (inverse (negative_part ?4112)) ?4113 [4113, 4112] by Super 1223 with 3014 at 1,3
Id : 8597, {_}: multiply (union (inverse (negative_part ?11063)) ?11064) (negative_part ?11063) =>= positive_part (multiply (positive_part ?11064) (negative_part ?11063)) [11064, 11063] by Super 8575 with 3035 at 1,2
Id : 8560, {_}: multiply (union (inverse ?521) ?522) ?521 =>= positive_part (multiply ?522 ?521) [522, 521] by Demod 241 with 296 at 3
Id : 8643, {_}: positive_part (multiply ?11064 (negative_part ?11063)) =<= positive_part (multiply (positive_part ?11064) (negative_part ?11063)) [11063, 11064] by Demod 8597 with 8560 at 2
Id : 907, {_}: multiply ?1405 (negative_part ?1406) =<= intersection ?1405 (multiply ?1405 ?1406) [1406, 1405] by Demod 906 with 10 at 3
Id : 8600, {_}: multiply (positive_part (inverse ?11072)) ?11072 =>= positive_part (multiply identity ?11072) [11072] by Super 8575 with 20 at 1,2
Id : 8645, {_}: multiply (positive_part (inverse ?11072)) ?11072 =>= positive_part ?11072 [11072] by Demod 8600 with 2 at 1,3
Id : 8660, {_}: multiply (positive_part (inverse ?11112)) (negative_part ?11112) =>= intersection (positive_part (inverse ?11112)) (positive_part ?11112) [11112] by Super 907 with 8645 at 2,3
Id : 8719, {_}: multiply (positive_part (inverse ?11112)) (negative_part ?11112) =>= intersection (positive_part ?11112) (positive_part (inverse ?11112)) [11112] by Demod 8660 with 10 at 3
Id : 9585, {_}: positive_part (multiply (inverse ?11973) (negative_part ?11973)) =<= positive_part (intersection (positive_part ?11973) (positive_part (inverse ?11973))) [11973] by Super 8643 with 8719 at 1,3
Id : 3731, {_}: multiply (inverse ?5054) (negative_part ?5054) =>= intersection (inverse ?5054) identity [5054] by Super 3727 with 3 at 2,3
Id : 3776, {_}: multiply (inverse ?5054) (negative_part ?5054) =>= intersection identity (inverse ?5054) [5054] by Demod 3731 with 10 at 3
Id : 3777, {_}: multiply (inverse ?5054) (negative_part ?5054) =>= negative_part (inverse ?5054) [5054] by Demod 3776 with 311 at 3
Id : 9660, {_}: positive_part (negative_part (inverse ?11973)) =<= positive_part (intersection (positive_part ?11973) (positive_part (inverse ?11973))) [11973] by Demod 9585 with 3777 at 1,2
Id : 9661, {_}: identity =<= positive_part (intersection (positive_part ?11973) (positive_part (inverse ?11973))) [11973] by Demod 9660 with 715 at 2
Id : 37105, {_}: intersection (intersection (positive_part ?38557) (positive_part (inverse ?38557))) identity =>= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Super 701 with 9661 at 2,2
Id : 37338, {_}: intersection identity (intersection (positive_part ?38557) (positive_part (inverse ?38557))) =>= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Demod 37105 with 10 at 2
Id : 37339, {_}: negative_part (intersection (positive_part ?38557) (positive_part (inverse ?38557))) =>= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Demod 37338 with 311 at 2
Id : 314, {_}: intersection ?661 (intersection ?662 identity) =>= negative_part (intersection ?661 ?662) [662, 661] by Super 12 with 21 at 3
Id : 321, {_}: intersection ?661 (negative_part ?662) =<= negative_part (intersection ?661 ?662) [662, 661] by Demod 314 with 21 at 2,2
Id : 37340, {_}: intersection (positive_part ?38557) (negative_part (positive_part (inverse ?38557))) =>= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Demod 37339 with 321 at 2
Id : 743, {_}: intersection identity (intersection ?1274 ?1275) =>= intersection (negative_part ?1274) ?1275 [1275, 1274] by Super 12 with 311 at 1,3
Id : 757, {_}: negative_part (intersection ?1274 ?1275) =>= intersection (negative_part ?1274) ?1275 [1275, 1274] by Demod 743 with 311 at 2
Id : 1432, {_}: intersection ?2159 (negative_part ?2160) =<= intersection (negative_part ?2159) ?2160 [2160, 2159] by Demod 757 with 321 at 2
Id : 738, {_}: negative_part (union ?1265 identity) =>= identity [1265] by Super 135 with 311 at 2
Id : 761, {_}: negative_part (positive_part ?1265) =>= identity [1265] by Demod 738 with 20 at 1,2
Id : 1437, {_}: intersection (positive_part ?2173) (negative_part ?2174) =>= intersection identity ?2174 [2174, 2173] by Super 1432 with 761 at 1,3
Id : 1472, {_}: intersection (positive_part ?2173) (negative_part ?2174) =>= negative_part ?2174 [2174, 2173] by Demod 1437 with 311 at 3
Id : 37341, {_}: negative_part (positive_part (inverse ?38557)) =<= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Demod 37340 with 1472 at 2
Id : 37342, {_}: identity =<= intersection (positive_part ?38557) (positive_part (inverse ?38557)) [38557] by Demod 37341 with 761 at 2
Id : 37637, {_}: multiply (inverse (positive_part ?38828)) identity =<= negative_part (multiply (inverse (positive_part ?38828)) (positive_part (inverse ?38828))) [38828] by Super 8114 with 37342 at 2,2
Id : 37769, {_}: inverse (positive_part ?38828) =<= negative_part (multiply (inverse (positive_part ?38828)) (positive_part (inverse ?38828))) [38828] by Demod 37637 with 864 at 2
Id : 8675, {_}: multiply (positive_part (inverse ?11150)) ?11150 =>= positive_part ?11150 [11150] by Demod 8600 with 2 at 1,3
Id : 8679, {_}: multiply (positive_part ?11157) (inverse ?11157) =>= positive_part (inverse ?11157) [11157] by Super 8675 with 6 at 1,1,2
Id : 8754, {_}: inverse ?11202 =<= multiply (inverse (positive_part ?11202)) (positive_part (inverse ?11202)) [11202] by Super 32 with 8679 at 2,3
Id : 37770, {_}: inverse (positive_part ?38828) =<= negative_part (inverse ?38828) [38828] by Demod 37769 with 8754 at 1,3
Id : 37939, {_}: multiply ?5063 (inverse (positive_part ?5063)) =>= negative_part ?5063 [5063] by Demod 3782 with 37770 at 2,2
Id : 8672, {_}: inverse (positive_part (inverse ?11144)) =<= multiply ?11144 (inverse (positive_part (inverse (inverse ?11144)))) [11144] by Super 52 with 8645 at 1,2
Id : 8705, {_}: inverse (positive_part (inverse ?11144)) =<= multiply ?11144 (inverse (positive_part ?11144)) [11144] by Demod 8672 with 6 at 1,1,2,3
Id : 37967, {_}: inverse (positive_part (inverse ?5063)) =>= negative_part ?5063 [5063] by Demod 37939 with 8705 at 2
Id : 37970, {_}: ?4904 =<= multiply (positive_part ?4904) (negative_part ?4904) [4904] by Demod 3662 with 37967 at 2,3
Id : 38259, {_}: a =?= a [] by Demod 1 with 37970 at 2
Id :   1, {_}: multiply (positive_part a) (negative_part a) =>= a [] by prove_product
% SZS output end CNFRefutation for GRP114-1.p
12145: solved GRP114-1.p in 5.996374 using kbo
12145: status Unsatisfiable for GRP114-1.p
NO CLASH, using fixed ground order
12157: Facts:
12157:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12157:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12157:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12157:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12157:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12157:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12157:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12157:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12157:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12157:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12157:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12157:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12157:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12157:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12157:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12157:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
12157:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
12157:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
12157: Goal:
12157:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
12157: Order:
12157:   nrkbo
12157: Leaf order:
12157:  inverse 7 1 0 
12157:  multiply 21 2 1 0,3
12157:  greatest_lower_bound 14 2 1 0,2,3
12157:  least_upper_bound 14 2 1 0,1,3
12157:  identity 6 0 2 2,1,3
12157:  a 3 0 3 2
NO CLASH, using fixed ground order
12158: Facts:
12158:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12158:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12158:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12158:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12158:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12158:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12158:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12158:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12158:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12158:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12158:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12158:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12158:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12158:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12158:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12158:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
12158:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
12158:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
12158: Goal:
12158:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
12158: Order:
12158:   kbo
12158: Leaf order:
12158:  inverse 7 1 0 
12158:  multiply 21 2 1 0,3
12158:  greatest_lower_bound 14 2 1 0,2,3
12158:  least_upper_bound 14 2 1 0,1,3
12158:  identity 6 0 2 2,1,3
12158:  a 3 0 3 2
NO CLASH, using fixed ground order
12159: Facts:
12159:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12159:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12159:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12159:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12159:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12159:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12159:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12159:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12159:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12159:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12159:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12159:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12159:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12159:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12159:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12159:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
12159:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
12159:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
12159: Goal:
12159:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
12159: Order:
12159:   lpo
12159: Leaf order:
12159:  inverse 7 1 0 
12159:  multiply 21 2 1 0,3
12159:  greatest_lower_bound 14 2 1 0,2,3
12159:  least_upper_bound 14 2 1 0,1,3
12159:  identity 6 0 2 2,1,3
12159:  a 3 0 3 2
% SZS status Timeout for GRP167-4.p
NO CLASH, using fixed ground order
12195: Facts:
12195:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12195:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12195:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12195:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12195:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12195:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12195:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12195:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12195:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12195:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12195:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12195:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12195:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12195:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12195:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12195:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
12195:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
12195:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
12195: Goal:
12195:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
12195: Order:
12195:   nrkbo
12195: Leaf order:
12195:  least_upper_bound 13 2 0 
12195:  inverse 1 1 0 
12195:  identity 8 0 0 
12195:  greatest_lower_bound 21 2 5 0,2
12195:  multiply 21 2 3 0,2,1,2
12195:  c 4 0 3 2,2,1,2
12195:  b 4 0 3 1,2,1,2
12195:  a 5 0 4 1,1,2
NO CLASH, using fixed ground order
12196: Facts:
12196:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12196:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12196:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12196:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12196:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12196:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12196:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12196:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12196:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12196:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12196:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12196:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12196:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12196:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12196:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12196:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
12196:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
12196:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
12196: Goal:
12196:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
12196: Order:
12196:   kbo
12196: Leaf order:
12196:  least_upper_bound 13 2 0 
12196:  inverse 1 1 0 
12196:  identity 8 0 0 
12196:  greatest_lower_bound 21 2 5 0,2
12196:  multiply 21 2 3 0,2,1,2
12196:  c 4 0 3 2,2,1,2
12196:  b 4 0 3 1,2,1,2
12196:  a 5 0 4 1,1,2
NO CLASH, using fixed ground order
12197: Facts:
12197:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12197:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12197:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12197:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12197:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12197:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12197:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12197:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12197:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12197:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12197:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12197:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12197:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12197:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12197:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12197:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
12197:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
12197:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
12197: Goal:
12197:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
12197: Order:
12197:   lpo
12197: Leaf order:
12197:  least_upper_bound 13 2 0 
12197:  inverse 1 1 0 
12197:  identity 8 0 0 
12197:  greatest_lower_bound 21 2 5 0,2
12197:  multiply 21 2 3 0,2,1,2
12197:  c 4 0 3 2,2,1,2
12197:  b 4 0 3 1,2,1,2
12197:  a 5 0 4 1,1,2
% SZS status Timeout for GRP177-2.p
NO CLASH, using fixed ground order
12224: Facts:
12224:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12224:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12224:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12224:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12224:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12224:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12224:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12224:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12224:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12224:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12224:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12224:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12224:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12224:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12224:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12224:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
12224:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
12224:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
12224: Goal:
12224:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
12224: Order:
12224:   nrkbo
12224: Leaf order:
12224:  multiply 20 2 0 
12224:  greatest_lower_bound 14 2 1 0,1,3
12224:  least_upper_bound 14 2 1 0,2
12224:  identity 6 0 2 2,2
12224:  inverse 9 1 2 0,1,2
12224:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12225: Facts:
12225:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12225:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12225:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12225:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12225:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12225:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12225:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12225:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12225:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
NO CLASH, using fixed ground order
12226: Facts:
12226:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12226:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12226:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12226:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12226:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12226:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12226:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12226:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12226:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12226:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12226:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12226:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12226:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12226:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12226:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12226:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
12226:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
12226:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =>= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
12226: Goal:
12226:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
12226: Order:
12226:   lpo
12226: Leaf order:
12226:  multiply 20 2 0 
12226:  greatest_lower_bound 14 2 1 0,1,3
12226:  least_upper_bound 14 2 1 0,2
12226:  identity 6 0 2 2,2
12226:  inverse 9 1 2 0,1,2
12226:  a 2 0 2 1,1,2
12225:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12225:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12225:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12225:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12225:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12225:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12225:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
12225:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
12225:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
12225: Goal:
12225:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
12225: Order:
12225:   kbo
12225: Leaf order:
12225:  multiply 20 2 0 
12225:  greatest_lower_bound 14 2 1 0,1,3
12225:  least_upper_bound 14 2 1 0,2
12225:  identity 6 0 2 2,2
12225:  inverse 9 1 2 0,1,2
12225:  a 2 0 2 1,1,2
% SZS status Timeout for GRP179-3.p
NO CLASH, using fixed ground order
12243: Facts:
12243:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12243:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12243:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12243:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12243:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12243:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12243:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12243:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12243:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12243:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12243:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12243:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12243:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12243:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12243:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12243:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
12243:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
12243:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
12243: Goal:
12243:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
12243: Order:
12243:   nrkbo
12243: Leaf order:
12243:  identity 4 0 0 
12243:  least_upper_bound 14 2 1 0,3
12243:  multiply 22 2 2 0,2
12243:  inverse 8 1 1 0,1,2,2
12243:  greatest_lower_bound 14 2 1 0,1,1,2,2
12243:  b 3 0 3 2,1,1,2,2
12243:  a 3 0 3 1,2
NO CLASH, using fixed ground order
12244: Facts:
12244:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12244:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12244:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12244:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12244:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12244:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12244:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12244:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12244:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12244:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12244:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12244:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12244:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12244:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12244:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12244:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
12244:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
12244:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
12244: Goal:
12244:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
12244: Order:
12244:   kbo
12244: Leaf order:
12244:  identity 4 0 0 
12244:  least_upper_bound 14 2 1 0,3
12244:  multiply 22 2 2 0,2
12244:  inverse 8 1 1 0,1,2,2
12244:  greatest_lower_bound 14 2 1 0,1,1,2,2
12244:  b 3 0 3 2,1,1,2,2
12244:  a 3 0 3 1,2
NO CLASH, using fixed ground order
12245: Facts:
12245:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12245:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12245:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12245:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12245:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12245:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12245:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12245:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12245:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12245:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12245:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12245:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12245:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12245:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12245:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12245:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
12245:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
12245:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =>= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
12245: Goal:
12245:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
12245: Order:
12245:   lpo
12245: Leaf order:
12245:  identity 4 0 0 
12245:  least_upper_bound 14 2 1 0,3
12245:  multiply 22 2 2 0,2
12245:  inverse 8 1 1 0,1,2,2
12245:  greatest_lower_bound 14 2 1 0,1,1,2,2
12245:  b 3 0 3 2,1,1,2,2
12245:  a 3 0 3 1,2
% SZS status Timeout for GRP180-2.p
CLASH, statistics insufficient
12274: Facts:
12274:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12274:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12274:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12274:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12274:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12274:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12274:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12274:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12274:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12274:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12274:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12274:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12274:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12274:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12274:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12274:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
12274:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
12274:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
12274:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
12274:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
12274:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =<=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
12274:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =<=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
12274: Goal:
12274:  Id :   1, {_}: a =>= b [] by prove_p12x
12274: Order:
12274:   nrkbo
12274: Leaf order:
12274:  c 4 0 0 
12274:  least_upper_bound 17 2 0 
12274:  greatest_lower_bound 17 2 0 
12274:  inverse 13 1 0 
12274:  multiply 20 2 0 
12274:  identity 4 0 0 
12274:  b 3 0 1 3
12274:  a 3 0 1 2
CLASH, statistics insufficient
12275: Facts:
12275:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12275:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12275:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12275:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12275:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12275:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12275:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12275:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12275:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12275:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12275:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12275:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12275:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12275:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12275:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12275:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
12275:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
12275:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
12275:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
12275:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
12275:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =<=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
12275:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =<=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
12275: Goal:
12275:  Id :   1, {_}: a =>= b [] by prove_p12x
12275: Order:
12275:   kbo
12275: Leaf order:
12275:  c 4 0 0 
12275:  least_upper_bound 17 2 0 
12275:  greatest_lower_bound 17 2 0 
12275:  inverse 13 1 0 
12275:  multiply 20 2 0 
12275:  identity 4 0 0 
12275:  b 3 0 1 3
12275:  a 3 0 1 2
CLASH, statistics insufficient
12276: Facts:
12276:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12276:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12276:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12276:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12276:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12276:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12276:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12276:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12276:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12276:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12276:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12276:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12276:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12276:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12276:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12276:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
12276:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
12276:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
12276:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
12276:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
12276:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =>=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
12276:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =>=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
12276: Goal:
12276:  Id :   1, {_}: a =>= b [] by prove_p12x
12276: Order:
12276:   lpo
12276: Leaf order:
12276:  c 4 0 0 
12276:  least_upper_bound 17 2 0 
12276:  greatest_lower_bound 17 2 0 
12276:  inverse 13 1 0 
12276:  multiply 20 2 0 
12276:  identity 4 0 0 
12276:  b 3 0 1 3
12276:  a 3 0 1 2
Statistics :
Max weight : 16
Found proof, 22.107626s
% SZS status Unsatisfiable for GRP181-4.p
% SZS output start CNFRefutation for GRP181-4.p
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id :  20, {_}: greatest_lower_bound a c =>= greatest_lower_bound b c [] by p12x_4
Id : 188, {_}: multiply ?586 (greatest_lower_bound ?587 ?588) =<= greatest_lower_bound (multiply ?586 ?587) (multiply ?586 ?588) [588, 587, 586] by monotony_glb1 ?586 ?587 ?588
Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
Id : 364, {_}: inverse (least_upper_bound ?929 ?930) =<= greatest_lower_bound (inverse ?929) (inverse ?930) [930, 929] by p12x_7 ?929 ?930
Id : 342, {_}: inverse (greatest_lower_bound ?890 ?891) =<= least_upper_bound (inverse ?890) (inverse ?891) [891, 890] by p12x_6 ?890 ?891
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 158, {_}: multiply ?515 (least_upper_bound ?516 ?517) =<= least_upper_bound (multiply ?515 ?516) (multiply ?515 ?517) [517, 516, 515] by monotony_lub1 ?515 ?516 ?517
Id :   4, {_}: multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8) [8, 7, 6] by associativity ?6 ?7 ?8
Id :  19, {_}: inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53) [54, 53] by p12x_3 ?53 ?54
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  17, {_}: inverse identity =>= identity [] by p12x_1
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  28, {_}: multiply (multiply ?71 ?72) ?73 =?= multiply ?71 (multiply ?72 ?73) [73, 72, 71] by associativity ?71 ?72 ?73
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
Id : 302, {_}: inverse (multiply ?845 ?846) =<= multiply (inverse ?846) (inverse ?845) [846, 845] by p12x_3 ?845 ?846
Id : 803, {_}: inverse (multiply ?1561 (inverse ?1562)) =>= multiply ?1562 (inverse ?1561) [1562, 1561] by Super 302 with 18 at 1,3
Id :  30, {_}: multiply (multiply ?78 (inverse ?79)) ?79 =>= multiply ?78 identity [79, 78] by Super 28 with 3 at 2,3
Id : 303, {_}: inverse (multiply identity ?848) =<= multiply (inverse ?848) identity [848] by Super 302 with 17 at 2,3
Id : 394, {_}: inverse ?984 =<= multiply (inverse ?984) identity [984] by Demod 303 with 2 at 1,2
Id : 396, {_}: inverse (inverse ?987) =<= multiply ?987 identity [987] by Super 394 with 18 at 1,3
Id : 406, {_}: ?987 =<= multiply ?987 identity [987] by Demod 396 with 18 at 2
Id : 638, {_}: multiply (multiply ?78 (inverse ?79)) ?79 =>= ?78 [79, 78] by Demod 30 with 406 at 3
Id : 816, {_}: inverse ?1599 =<= multiply ?1600 (inverse (multiply ?1599 (inverse (inverse ?1600)))) [1600, 1599] by Super 803 with 638 at 1,2
Id : 306, {_}: inverse (multiply ?855 (inverse ?856)) =>= multiply ?856 (inverse ?855) [856, 855] by Super 302 with 18 at 1,3
Id : 837, {_}: inverse ?1599 =<= multiply ?1600 (multiply (inverse ?1600) (inverse ?1599)) [1600, 1599] by Demod 816 with 306 at 2,3
Id : 838, {_}: inverse ?1599 =<= multiply ?1600 (inverse (multiply ?1599 ?1600)) [1600, 1599] by Demod 837 with 19 at 2,3
Id : 285, {_}: multiply ?794 (inverse ?794) =>= identity [794] by Super 3 with 18 at 1,2
Id : 607, {_}: multiply (multiply ?1261 ?1262) (inverse ?1262) =>= multiply ?1261 identity [1262, 1261] by Super 4 with 285 at 2,3
Id : 19344, {_}: multiply (multiply ?27523 ?27524) (inverse ?27524) =>= ?27523 [27524, 27523] by Demod 607 with 406 at 3
Id : 160, {_}: multiply (inverse ?522) (least_upper_bound ?523 ?522) =>= least_upper_bound (multiply (inverse ?522) ?523) identity [523, 522] by Super 158 with 3 at 2,3
Id : 177, {_}: multiply (inverse ?522) (least_upper_bound ?523 ?522) =>= least_upper_bound identity (multiply (inverse ?522) ?523) [523, 522] by Demod 160 with 6 at 3
Id : 345, {_}: inverse (greatest_lower_bound identity ?898) =>= least_upper_bound identity (inverse ?898) [898] by Super 342 with 17 at 1,3
Id : 487, {_}: inverse (multiply (greatest_lower_bound identity ?1114) ?1115) =<= multiply (inverse ?1115) (least_upper_bound identity (inverse ?1114)) [1115, 1114] by Super 19 with 345 at 2,3
Id : 11534, {_}: inverse (multiply (greatest_lower_bound identity ?15482) (inverse ?15482)) =>= least_upper_bound identity (multiply (inverse (inverse ?15482)) identity) [15482] by Super 177 with 487 at 2
Id : 11607, {_}: multiply ?15482 (inverse (greatest_lower_bound identity ?15482)) =?= least_upper_bound identity (multiply (inverse (inverse ?15482)) identity) [15482] by Demod 11534 with 306 at 2
Id : 11608, {_}: multiply ?15482 (inverse (greatest_lower_bound identity ?15482)) =>= least_upper_bound identity (inverse (inverse ?15482)) [15482] by Demod 11607 with 406 at 2,3
Id : 11609, {_}: multiply ?15482 (least_upper_bound identity (inverse ?15482)) =>= least_upper_bound identity (inverse (inverse ?15482)) [15482] by Demod 11608 with 345 at 2,2
Id : 11610, {_}: multiply ?15482 (least_upper_bound identity (inverse ?15482)) =>= least_upper_bound identity ?15482 [15482] by Demod 11609 with 18 at 2,3
Id : 19409, {_}: multiply (least_upper_bound identity ?27743) (inverse (least_upper_bound identity (inverse ?27743))) =>= ?27743 [27743] by Super 19344 with 11610 at 1,2
Id : 366, {_}: inverse (least_upper_bound ?934 (inverse ?935)) =>= greatest_lower_bound (inverse ?934) ?935 [935, 934] by Super 364 with 18 at 2,3
Id : 19451, {_}: multiply (least_upper_bound identity ?27743) (greatest_lower_bound (inverse identity) ?27743) =>= ?27743 [27743] by Demod 19409 with 366 at 2,2
Id : 44019, {_}: multiply (least_upper_bound identity ?52011) (greatest_lower_bound identity ?52011) =>= ?52011 [52011] by Demod 19451 with 17 at 1,2,2
Id : 367, {_}: inverse (least_upper_bound identity ?937) =>= greatest_lower_bound identity (inverse ?937) [937] by Super 364 with 17 at 1,3
Id : 8913, {_}: multiply (inverse ?11632) (least_upper_bound ?11632 ?11633) =>= least_upper_bound identity (multiply (inverse ?11632) ?11633) [11633, 11632] by Super 158 with 3 at 1,3
Id : 326, {_}: least_upper_bound c a =<= least_upper_bound b c [] by Demod 21 with 6 at 2
Id : 327, {_}: least_upper_bound c a =>= least_upper_bound c b [] by Demod 326 with 6 at 3
Id : 8921, {_}: multiply (inverse c) (least_upper_bound c b) =>= least_upper_bound identity (multiply (inverse c) a) [] by Super 8913 with 327 at 2,2
Id : 164, {_}: multiply (inverse ?538) (least_upper_bound ?538 ?539) =>= least_upper_bound identity (multiply (inverse ?538) ?539) [539, 538] by Super 158 with 3 at 1,3
Id : 9001, {_}: least_upper_bound identity (multiply (inverse c) b) =<= least_upper_bound identity (multiply (inverse c) a) [] by Demod 8921 with 164 at 2
Id : 9081, {_}: inverse (least_upper_bound identity (multiply (inverse c) b)) =>= greatest_lower_bound identity (inverse (multiply (inverse c) a)) [] by Super 367 with 9001 at 1,2
Id : 9110, {_}: greatest_lower_bound identity (inverse (multiply (inverse c) b)) =<= greatest_lower_bound identity (inverse (multiply (inverse c) a)) [] by Demod 9081 with 367 at 2
Id : 304, {_}: inverse (multiply (inverse ?850) ?851) =>= multiply (inverse ?851) ?850 [851, 850] by Super 302 with 18 at 2,3
Id : 9111, {_}: greatest_lower_bound identity (inverse (multiply (inverse c) b)) =>= greatest_lower_bound identity (multiply (inverse a) c) [] by Demod 9110 with 304 at 2,3
Id : 9112, {_}: greatest_lower_bound identity (multiply (inverse b) c) =<= greatest_lower_bound identity (multiply (inverse a) c) [] by Demod 9111 with 304 at 2,2
Id : 44043, {_}: multiply (least_upper_bound identity (multiply (inverse a) c)) (greatest_lower_bound identity (multiply (inverse b) c)) =>= multiply (inverse a) c [] by Super 44019 with 9112 at 2,2
Id : 10178, {_}: multiply (inverse ?13641) (greatest_lower_bound ?13641 ?13642) =>= greatest_lower_bound identity (multiply (inverse ?13641) ?13642) [13642, 13641] by Super 188 with 3 at 1,3
Id : 315, {_}: greatest_lower_bound c a =<= greatest_lower_bound b c [] by Demod 20 with 5 at 2
Id : 316, {_}: greatest_lower_bound c a =>= greatest_lower_bound c b [] by Demod 315 with 5 at 3
Id : 10190, {_}: multiply (inverse c) (greatest_lower_bound c b) =>= greatest_lower_bound identity (multiply (inverse c) a) [] by Super 10178 with 316 at 2,2
Id : 194, {_}: multiply (inverse ?609) (greatest_lower_bound ?609 ?610) =>= greatest_lower_bound identity (multiply (inverse ?609) ?610) [610, 609] by Super 188 with 3 at 1,3
Id : 10270, {_}: greatest_lower_bound identity (multiply (inverse c) b) =<= greatest_lower_bound identity (multiply (inverse c) a) [] by Demod 10190 with 194 at 2
Id : 10361, {_}: inverse (greatest_lower_bound identity (multiply (inverse c) b)) =>= least_upper_bound identity (inverse (multiply (inverse c) a)) [] by Super 345 with 10270 at 1,2
Id : 10393, {_}: least_upper_bound identity (inverse (multiply (inverse c) b)) =<= least_upper_bound identity (inverse (multiply (inverse c) a)) [] by Demod 10361 with 345 at 2
Id : 10394, {_}: least_upper_bound identity (inverse (multiply (inverse c) b)) =>= least_upper_bound identity (multiply (inverse a) c) [] by Demod 10393 with 304 at 2,3
Id : 10395, {_}: least_upper_bound identity (multiply (inverse b) c) =<= least_upper_bound identity (multiply (inverse a) c) [] by Demod 10394 with 304 at 2,2
Id : 44130, {_}: multiply (least_upper_bound identity (multiply (inverse b) c)) (greatest_lower_bound identity (multiply (inverse b) c)) =>= multiply (inverse a) c [] by Demod 44043 with 10395 at 1,2
Id : 19452, {_}: multiply (least_upper_bound identity ?27743) (greatest_lower_bound identity ?27743) =>= ?27743 [27743] by Demod 19451 with 17 at 1,2,2
Id : 44131, {_}: multiply (inverse b) c =<= multiply (inverse a) c [] by Demod 44130 with 19452 at 2
Id : 44165, {_}: inverse (inverse a) =<= multiply c (inverse (multiply (inverse b) c)) [] by Super 838 with 44131 at 1,2,3
Id : 44200, {_}: a =<= multiply c (inverse (multiply (inverse b) c)) [] by Demod 44165 with 18 at 2
Id : 44201, {_}: a =<= inverse (inverse b) [] by Demod 44200 with 838 at 3
Id : 44202, {_}: a =>= b [] by Demod 44201 with 18 at 3
Id : 44399, {_}: b === b [] by Demod 1 with 44202 at 2
Id :   1, {_}: a =>= b [] by prove_p12x
% SZS output end CNFRefutation for GRP181-4.p
12274: solved GRP181-4.p in 8.100505 using nrkbo
12274: status Unsatisfiable for GRP181-4.p
NO CLASH, using fixed ground order
12282: Facts:
12282:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12282:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12282:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12282:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12282:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12282:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12282:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12282:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12282:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12282:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12282:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12282:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12282:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12282:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12282:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12282: Goal:
12282:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
12282: Order:
12282:   kbo
12282: Leaf order:
12282:  multiply 18 2 0 
12282:  inverse 2 1 1 0,2,2
12282:  greatest_lower_bound 15 2 2 0,2
12282:  least_upper_bound 14 2 1 0,1,2
12282:  identity 5 0 3 2,1,2
12282:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12283: Facts:
12283:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12283:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12283:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12283:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12283:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12283:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12283:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12283:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12283:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12283:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12283:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12283:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12283:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12283:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12283:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12283: Goal:
12283:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
12283: Order:
12283:   lpo
12283: Leaf order:
12283:  multiply 18 2 0 
12283:  inverse 2 1 1 0,2,2
12283:  greatest_lower_bound 15 2 2 0,2
12283:  least_upper_bound 14 2 1 0,1,2
12283:  identity 5 0 3 2,1,2
12283:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12281: Facts:
12281:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12281:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12281:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12281:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12281:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12281:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12281:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12281:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12281:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12281:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12281:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12281:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12281:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12281:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12281:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12281: Goal:
12281:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
12281: Order:
12281:   nrkbo
12281: Leaf order:
12281:  multiply 18 2 0 
12281:  inverse 2 1 1 0,2,2
12281:  greatest_lower_bound 15 2 2 0,2
12281:  least_upper_bound 14 2 1 0,1,2
12281:  identity 5 0 3 2,1,2
12281:  a 2 0 2 1,1,2
% SZS status Timeout for GRP183-1.p
NO CLASH, using fixed ground order
12310: Facts:
12310:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12310:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12310:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12310:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12310:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12310:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12310:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12310:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12310:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12310:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12310:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12310:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12310:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12310:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12310:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12310: Goal:
12310:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12310: Order:
12310:   nrkbo
12310: Leaf order:
12310:  multiply 18 2 0 
12310:  greatest_lower_bound 14 2 1 0,2
12310:  inverse 2 1 1 0,1,2,2
12310:  least_upper_bound 15 2 2 0,1,2
12310:  identity 5 0 3 2,1,2
12310:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12311: Facts:
12311:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12311:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12311:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12311:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12311:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12311:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12311:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12311:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12311:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12311:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12311:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12311:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12311:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12311:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12311:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12311: Goal:
12311:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12311: Order:
12311:   kbo
12311: Leaf order:
12311:  multiply 18 2 0 
12311:  greatest_lower_bound 14 2 1 0,2
12311:  inverse 2 1 1 0,1,2,2
12311:  least_upper_bound 15 2 2 0,1,2
12311:  identity 5 0 3 2,1,2
12311:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12312: Facts:
12312:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12312:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12312:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12312:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12312:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12312:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12312:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12312:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12312:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12312:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12312:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12312:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12312:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12312:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12312:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12312: Goal:
12312:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12312: Order:
12312:   lpo
12312: Leaf order:
12312:  multiply 18 2 0 
12312:  greatest_lower_bound 14 2 1 0,2
12312:  inverse 2 1 1 0,1,2,2
12312:  least_upper_bound 15 2 2 0,1,2
12312:  identity 5 0 3 2,1,2
12312:  a 2 0 2 1,1,2
% SZS status Timeout for GRP183-3.p
NO CLASH, using fixed ground order
12349: Facts:
12349:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12349:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12349:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12349:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12349:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12349:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12349:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12349:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12349:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12349:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12349:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12349:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12349:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12349:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12349:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12349:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
12349:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
12349:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
12349: Goal:
12349:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12349: Order:
12349:   nrkbo
12349: Leaf order:
12349:  multiply 20 2 0 
12349:  greatest_lower_bound 14 2 1 0,2
12349:  inverse 8 1 1 0,1,2,2
12349:  least_upper_bound 15 2 2 0,1,2
12349:  identity 7 0 3 2,1,2
12349:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12350: Facts:
12350:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12350:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12350:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12350:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12350:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12350:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12350:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12350:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12350:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12350:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12350:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12350:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12350:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12350:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12350:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12350:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
12350:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
12350:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
12350: Goal:
12350:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12350: Order:
12350:   kbo
12350: Leaf order:
12350:  multiply 20 2 0 
12350:  greatest_lower_bound 14 2 1 0,2
12350:  inverse 8 1 1 0,1,2,2
12350:  least_upper_bound 15 2 2 0,1,2
12350:  identity 7 0 3 2,1,2
12350:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
12351: Facts:
12351:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12351:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12351:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12351:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12351:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12351:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12351:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12351:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12351:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12351:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12351:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12351:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12351:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12351:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12351:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12351:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
12351:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
12351:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =>= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
12351: Goal:
12351:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
12351: Order:
12351:   lpo
12351: Leaf order:
12351:  multiply 20 2 0 
12351:  greatest_lower_bound 14 2 1 0,2
12351:  inverse 8 1 1 0,1,2,2
12351:  least_upper_bound 15 2 2 0,1,2
12351:  identity 7 0 3 2,1,2
12351:  a 2 0 2 1,1,2
% SZS status Timeout for GRP183-4.p
NO CLASH, using fixed ground order
12378: Facts:
12378:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12378:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12378:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12378:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12378:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12378:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12378:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12378:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12378:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12378:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12378:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12378:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12378:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12378:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12378:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12378: Goal:
12378:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
12378: Order:
12378:   nrkbo
12378: Leaf order:
12378:  multiply 20 2 2 0,2
12378:  inverse 3 1 2 0,2,2
12378:  greatest_lower_bound 15 2 2 0,1,2,2
12378:  least_upper_bound 15 2 2 0,1,2
12378:  identity 6 0 4 2,1,2
12378:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
12379: Facts:
12379:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12379:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12379:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12379:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12379:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12379:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12379:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12379:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12379:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12379:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12379:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12379:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12379:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12379:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12379:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12379: Goal:
12379:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
12379: Order:
12379:   kbo
12379: Leaf order:
12379:  multiply 20 2 2 0,2
12379:  inverse 3 1 2 0,2,2
12379:  greatest_lower_bound 15 2 2 0,1,2,2
12379:  least_upper_bound 15 2 2 0,1,2
12379:  identity 6 0 4 2,1,2
12379:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
12380: Facts:
12380:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12380:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12380:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12380:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12380:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12380:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12380:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12380:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12380:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12380:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12380:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12380:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12380:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12380:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12380:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12380: Goal:
12380:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
12380: Order:
12380:   lpo
12380: Leaf order:
12380:  multiply 20 2 2 0,2
12380:  inverse 3 1 2 0,2,2
12380:  greatest_lower_bound 15 2 2 0,1,2,2
12380:  least_upper_bound 15 2 2 0,1,2
12380:  identity 6 0 4 2,1,2
12380:  a 4 0 4 1,1,2
% SZS status Timeout for GRP184-1.p
NO CLASH, using fixed ground order
12396: Facts:
12396:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12396:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12396:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12396:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12396:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12396:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12396:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12396:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12396:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12396:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12396:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12396:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12396:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12396:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12396:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12396: Goal:
12396:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
12396: Order:
12396:   nrkbo
12396: Leaf order:
12396:  multiply 20 2 2 0,2
12396:  inverse 3 1 2 0,2,2
12396:  greatest_lower_bound 15 2 2 0,1,2,2
12396:  least_upper_bound 15 2 2 0,1,2
12396:  identity 6 0 4 2,1,2
12396:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
12397: Facts:
12397:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12397:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12397:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12397:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12397:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12397:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12397:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12397:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12397:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12397:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12397:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12397:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12397:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12397:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12397:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12397: Goal:
12397:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
12397: Order:
12397:   kbo
12397: Leaf order:
12397:  multiply 20 2 2 0,2
12397:  inverse 3 1 2 0,2,2
12397:  greatest_lower_bound 15 2 2 0,1,2,2
12397:  least_upper_bound 15 2 2 0,1,2
12397:  identity 6 0 4 2,1,2
12397:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
12398: Facts:
12398:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12398:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12398:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12398:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12398:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12398:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12398:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12398:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12398:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12398:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12398:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12398:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12398:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12398:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12398:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12398: Goal:
12398:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
12398: Order:
12398:   lpo
12398: Leaf order:
12398:  multiply 20 2 2 0,2
12398:  inverse 3 1 2 0,2,2
12398:  greatest_lower_bound 15 2 2 0,1,2,2
12398:  least_upper_bound 15 2 2 0,1,2
12398:  identity 6 0 4 2,1,2
12398:  a 4 0 4 1,1,2
% SZS status Timeout for GRP184-3.p
NO CLASH, using fixed ground order
12794: Facts:
12794:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12794:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12794:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12794:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12794:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12794:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12794:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12794:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12794:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12794:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12794:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12794:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12794:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12794:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12794:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12794: Goal:
12794:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12794: Order:
12794:   nrkbo
12794: Leaf order:
12794:  inverse 1 1 0 
12794:  greatest_lower_bound 14 2 1 0,2
12794:  least_upper_bound 17 2 4 0,1,2
12794:  identity 6 0 4 2,1,2
12794:  multiply 21 2 3 0,1,1,2
12794:  b 3 0 3 2,1,1,2
12794:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
12795: Facts:
12795:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12795:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12795:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12795:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12795:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12795:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12795:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12795:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12795:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12795:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
NO CLASH, using fixed ground order
12796: Facts:
12796:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12796:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12796:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12796:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12796:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12796:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12796:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12796:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12796:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12796:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12796:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12795:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12795:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12795:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12795:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12795:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12795: Goal:
12795:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12795: Order:
12795:   kbo
12795: Leaf order:
12795:  inverse 1 1 0 
12795:  greatest_lower_bound 14 2 1 0,2
12795:  least_upper_bound 17 2 4 0,1,2
12795:  identity 6 0 4 2,1,2
12795:  multiply 21 2 3 0,1,1,2
12795:  b 3 0 3 2,1,1,2
12795:  a 3 0 3 1,1,1,2
12796:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12796:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12796:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12796:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12796: Goal:
12796:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12796: Order:
12796:   lpo
12796: Leaf order:
12796:  inverse 1 1 0 
12796:  greatest_lower_bound 14 2 1 0,2
12796:  least_upper_bound 17 2 4 0,1,2
12796:  identity 6 0 4 2,1,2
12796:  multiply 21 2 3 0,1,1,2
12796:  b 3 0 3 2,1,1,2
12796:  a 3 0 3 1,1,1,2
Statistics :
Max weight : 21
Found proof, 1.752071s
% SZS status Unsatisfiable for GRP185-3.p
% SZS output start CNFRefutation for GRP185-3.p
Id : 120, {_}: greatest_lower_bound ?251 (least_upper_bound ?251 ?252) =>= ?251 [252, 251] by glb_absorbtion ?251 ?252
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  21, {_}: multiply (multiply ?57 ?58) ?59 =>= multiply ?57 (multiply ?58 ?59) [59, 58, 57] by associativity ?57 ?58 ?59
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  23, {_}: multiply identity ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Super 21 with 3 at 1,2
Id : 436, {_}: ?594 =<= multiply (inverse ?595) (multiply ?595 ?594) [595, 594] by Demod 23 with 2 at 2
Id : 438, {_}: ?599 =<= multiply (inverse (inverse ?599)) identity [599] by Super 436 with 3 at 2,3
Id :  27, {_}: ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Demod 23 with 2 at 2
Id : 444, {_}: multiply ?621 ?622 =<= multiply (inverse (inverse ?621)) ?622 [622, 621] by Super 436 with 27 at 2,3
Id : 599, {_}: ?599 =<= multiply ?599 identity [599] by Demod 438 with 444 at 3
Id :  63, {_}: least_upper_bound ?143 (least_upper_bound ?144 ?145) =?= least_upper_bound ?144 (least_upper_bound ?145 ?143) [145, 144, 143] by Super 6 with 8 at 3
Id : 894, {_}: greatest_lower_bound ?1092 (least_upper_bound ?1093 ?1092) =>= ?1092 [1093, 1092] by Super 120 with 6 at 2,2
Id : 901, {_}: greatest_lower_bound ?1112 (least_upper_bound ?1113 (least_upper_bound ?1114 ?1112)) =>= ?1112 [1114, 1113, 1112] by Super 894 with 8 at 2,2
Id : 2450, {_}: least_upper_bound identity (multiply a b) === least_upper_bound identity (multiply a b) [] by Demod 2449 with 901 at 2
Id : 2449, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2448 with 2 at 1,2,2,2,2
Id : 2448, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound b (least_upper_bound (multiply identity identity) (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2447 with 2 at 1,2,2,2
Id : 2447, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound (multiply identity b) (least_upper_bound (multiply identity identity) (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2446 with 63 at 2,2,2
Id : 2446, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a b) (multiply identity b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2445 with 599 at 1,2,2
Id : 2445, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a b) (multiply identity b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2444 with 8 at 2,2
Id : 2444, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a identity) (multiply identity identity)) (least_upper_bound (multiply a b) (multiply identity b))) =>= least_upper_bound identity (multiply a b) [] by Demod 2443 with 15 at 2,2,2
Id : 2443, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a identity) (multiply identity identity)) (multiply (least_upper_bound a identity) b)) =>= least_upper_bound identity (multiply a b) [] by Demod 2442 with 15 at 1,2,2
Id : 2442, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b)) =>= least_upper_bound identity (multiply a b) [] by Demod 2441 with 6 at 2,2
Id : 2441, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 2440 with 6 at 3
Id : 2440, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 2439 with 13 at 2,2
Id : 2439, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 1 with 6 at 1,2
Id :   1, {_}: greatest_lower_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by prove_p22b
% SZS output end CNFRefutation for GRP185-3.p
12796: solved GRP185-3.p in 0.64804 using lpo
12796: status Unsatisfiable for GRP185-3.p
NO CLASH, using fixed ground order
12801: Facts:
12801:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12801:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12801:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12801:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12801:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12801:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12801:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12801:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12801:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12801:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12801:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12801:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12801:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12801:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12801:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12801:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
12801:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
12801:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
12801: Goal:
12801:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12801: Order:
12801:   nrkbo
12801: Leaf order:
12801:  inverse 7 1 0 
12801:  greatest_lower_bound 14 2 1 0,2
12801:  least_upper_bound 17 2 4 0,1,2
12801:  identity 8 0 4 2,1,2
12801:  multiply 23 2 3 0,1,1,2
12801:  b 3 0 3 2,1,1,2
12801:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
12802: Facts:
12802:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12802:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12802:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12802:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12802:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12802:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12802:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12802:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12802:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12802:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12802:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12802:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12802:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12802:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12802:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12802:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
12802:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
12802:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
12802: Goal:
12802:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12802: Order:
12802:   kbo
12802: Leaf order:
12802:  inverse 7 1 0 
12802:  greatest_lower_bound 14 2 1 0,2
12802:  least_upper_bound 17 2 4 0,1,2
12802:  identity 8 0 4 2,1,2
12802:  multiply 23 2 3 0,1,1,2
12802:  b 3 0 3 2,1,1,2
12802:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
12803: Facts:
12803:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12803:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12803:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12803:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12803:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12803:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12803:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12803:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12803:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12803:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12803:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12803:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12803:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12803:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12803:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12803:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
12803:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
12803:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
12803: Goal:
12803:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
12803: Order:
12803:   lpo
12803: Leaf order:
12803:  inverse 7 1 0 
12803:  greatest_lower_bound 14 2 1 0,2
12803:  least_upper_bound 17 2 4 0,1,2
12803:  identity 8 0 4 2,1,2
12803:  multiply 23 2 3 0,1,1,2
12803:  b 3 0 3 2,1,1,2
12803:  a 3 0 3 1,1,1,2
Statistics :
Max weight : 21
Found proof, 2.993705s
% SZS status Unsatisfiable for GRP185-4.p
% SZS output start CNFRefutation for GRP185-4.p
Id : 123, {_}: greatest_lower_bound ?257 (least_upper_bound ?257 ?258) =>= ?257 [258, 257] by glb_absorbtion ?257 ?258
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  17, {_}: inverse identity =>= identity [] by p22b_1
Id : 382, {_}: inverse (multiply ?520 ?521) =?= multiply (inverse ?521) (inverse ?520) [521, 520] by p22b_3 ?520 ?521
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 383, {_}: inverse (multiply identity ?523) =<= multiply (inverse ?523) identity [523] by Super 382 with 17 at 2,3
Id : 422, {_}: inverse ?569 =<= multiply (inverse ?569) identity [569] by Demod 383 with 2 at 1,2
Id : 424, {_}: inverse (inverse ?572) =<= multiply ?572 identity [572] by Super 422 with 18 at 1,3
Id : 432, {_}: ?572 =<= multiply ?572 identity [572] by Demod 424 with 18 at 2
Id :  66, {_}: least_upper_bound ?149 (least_upper_bound ?150 ?151) =?= least_upper_bound ?150 (least_upper_bound ?151 ?149) [151, 150, 149] by Super 6 with 8 at 3
Id : 766, {_}: greatest_lower_bound ?881 (least_upper_bound ?882 ?881) =>= ?881 [882, 881] by Super 123 with 6 at 2,2
Id : 773, {_}: greatest_lower_bound ?901 (least_upper_bound ?902 (least_upper_bound ?903 ?901)) =>= ?901 [903, 902, 901] by Super 766 with 8 at 2,2
Id : 4003, {_}: least_upper_bound identity (multiply a b) === least_upper_bound identity (multiply a b) [] by Demod 4002 with 773 at 2
Id : 4002, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 4001 with 2 at 1,2,2,2,2
Id : 4001, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound b (least_upper_bound (multiply identity identity) (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 4000 with 2 at 1,2,2,2
Id : 4000, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound (multiply identity b) (least_upper_bound (multiply identity identity) (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 3999 with 66 at 2,2,2
Id : 3999, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound a (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a b) (multiply identity b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 3998 with 432 at 1,2,2
Id : 3998, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a identity) (least_upper_bound (multiply identity identity) (least_upper_bound (multiply a b) (multiply identity b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 3997 with 8 at 2,2
Id : 3997, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a identity) (multiply identity identity)) (least_upper_bound (multiply a b) (multiply identity b))) =>= least_upper_bound identity (multiply a b) [] by Demod 3996 with 15 at 2,2,2
Id : 3996, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a identity) (multiply identity identity)) (multiply (least_upper_bound a identity) b)) =>= least_upper_bound identity (multiply a b) [] by Demod 3995 with 15 at 1,2,2
Id : 3995, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) identity) (multiply (least_upper_bound a identity) b)) =>= least_upper_bound identity (multiply a b) [] by Demod 3994 with 6 at 2,2
Id : 3994, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 3993 with 6 at 3
Id : 3993, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 3992 with 13 at 2,2
Id : 3992, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 1 with 6 at 1,2
Id :   1, {_}: greatest_lower_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by prove_p22b
% SZS output end CNFRefutation for GRP185-4.p
12803: solved GRP185-4.p in 0.988061 using lpo
12803: status Unsatisfiable for GRP185-4.p
NO CLASH, using fixed ground order
12808: Facts:
12808:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12808:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12808:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12808:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12808:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12808:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12808:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12808:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12808:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12808:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12808:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12808:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12808:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12808:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12808:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12808:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
12808:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
12808:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
12808: Goal:
12808:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
12808: Order:
12808:   nrkbo
12808: Leaf order:
12808:  greatest_lower_bound 14 2 1 0,1,2,3
12808:  inverse 9 1 2 0,2,3
12808:  least_upper_bound 14 2 1 0,2
12808:  identity 5 0 1 2,2
12808:  multiply 22 2 2 0,1,2
12808:  b 2 0 2 2,1,2
12808:  a 3 0 3 1,1,2
NO CLASH, using fixed ground order
12809: Facts:
12809:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12809:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12809:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12809:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12809:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12809:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12809:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12809:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12809:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12809:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12809:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12809:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12809:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12809:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12809:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12809:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
12809:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
12809:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
12809: Goal:
12809:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
12809: Order:
12809:   kbo
12809: Leaf order:
12809:  greatest_lower_bound 14 2 1 0,1,2,3
12809:  inverse 9 1 2 0,2,3
12809:  least_upper_bound 14 2 1 0,2
12809:  identity 5 0 1 2,2
12809:  multiply 22 2 2 0,1,2
12809:  b 2 0 2 2,1,2
12809:  a 3 0 3 1,1,2
NO CLASH, using fixed ground order
12810: Facts:
12810:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12810:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
12810:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
12810:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
12810:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
12810:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
12810:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
12810:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
12810:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
12810:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
12810:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
12810:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
12810:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
12810:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
12810:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
12810:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
12810:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
12810:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
12810: Goal:
12810:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
12810: Order:
12810:   lpo
12810: Leaf order:
12810:  greatest_lower_bound 14 2 1 0,1,2,3
12810:  inverse 9 1 2 0,2,3
12810:  least_upper_bound 14 2 1 0,2
12810:  identity 5 0 1 2,2
12810:  multiply 22 2 2 0,1,2
12810:  b 2 0 2 2,1,2
12810:  a 3 0 3 1,1,2
% SZS status Timeout for GRP186-2.p
NO CLASH, using fixed ground order
12831: Facts:
12831:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12831:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
12831:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =?=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
12831: Goal:
12831:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
12831: Order:
12831:   nrkbo
12831: Leaf order:
12831:  left_inverse 1 1 0 
12831:  identity 2 0 0 
12831:  c 2 0 2 2,1,2
12831:  multiply 14 2 6 0,2
12831:  b 4 0 4 2,1,1,2
12831:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
12833: Facts:
12833:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12833:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
12833:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =>=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
12833: Goal:
12833:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
12833: Order:
12833:   lpo
12833: Leaf order:
12833:  left_inverse 1 1 0 
12833:  identity 2 0 0 
12833:  c 2 0 2 2,1,2
12833:  multiply 14 2 6 0,2
12833:  b 4 0 4 2,1,1,2
12833:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
12832: Facts:
12832:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12832:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
12832:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =>=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
12832: Goal:
12832:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
12832: Order:
12832:   kbo
12832: Leaf order:
12832:  left_inverse 1 1 0 
12832:  identity 2 0 0 
12832:  c 2 0 2 2,1,2
12832:  multiply 14 2 6 0,2
12832:  b 4 0 4 2,1,1,2
12832:  a 2 0 2 1,1,1,2
% SZS status Timeout for GRP204-1.p
CLASH, statistics insufficient
12860: Facts:
12860:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12860:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
12860:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
12860:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
12860:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
12860:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
12860:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
12860:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
12860:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =?=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
12860: Goal:
12860:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
12860: Order:
12860:   nrkbo
12860: Leaf order:
12860:  left_inverse 1 1 0 
12860:  right_inverse 1 1 0 
12860:  right_division 2 2 0 
12860:  left_division 2 2 0 
12860:  identity 4 0 0 
12860:  multiply 20 2 6 0,2
12860:  z 2 0 2 2,1,2,2
12860:  y 2 0 2 1,1,2,2
12860:  x 4 0 4 1,2
CLASH, statistics insufficient
12861: Facts:
12861:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12861:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
12861:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
12861:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
12861:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
12861:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
12861:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
12861:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
12861:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
12861: Goal:
12861:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
12861: Order:
12861:   kbo
12861: Leaf order:
12861:  left_inverse 1 1 0 
12861:  right_inverse 1 1 0 
12861:  right_division 2 2 0 
12861:  left_division 2 2 0 
12861:  identity 4 0 0 
12861:  multiply 20 2 6 0,2
12861:  z 2 0 2 2,1,2,2
12861:  y 2 0 2 1,1,2,2
12861:  x 4 0 4 1,2
CLASH, statistics insufficient
12862: Facts:
12862:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
12862:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
12862:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
12862:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
12862:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
12862:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
12862:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
12862:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
12862:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
12862: Goal:
12862:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
12862: Order:
12862:   lpo
12862: Leaf order:
12862:  left_inverse 1 1 0 
12862:  right_inverse 1 1 0 
12862:  right_division 2 2 0 
12862:  left_division 2 2 0 
12862:  identity 4 0 0 
12862:  multiply 20 2 6 0,2
12862:  z 2 0 2 2,1,2,2
12862:  y 2 0 2 1,1,2,2
12862:  x 4 0 4 1,2
Statistics :
Max weight : 20
Found proof, 29.150598s
% SZS status Unsatisfiable for GRP205-1.p
% SZS output start CNFRefutation for GRP205-1.p
Id :  56, {_}: multiply (multiply (multiply ?126 ?127) ?126) ?128 =>= multiply ?126 (multiply ?127 (multiply ?126 ?128)) [128, 127, 126] by moufang3 ?126 ?127 ?128
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?22) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by moufang3 ?22 ?23 ?24
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :  53, {_}: multiply ?115 (multiply ?116 (multiply ?115 identity)) =>= multiply (multiply ?115 ?116) ?115 [116, 115] by Super 3 with 10 at 2
Id :  70, {_}: multiply ?115 (multiply ?116 ?115) =<= multiply (multiply ?115 ?116) ?115 [116, 115] by Demod 53 with 3 at 2,2,2
Id : 889, {_}: right_division (multiply ?1099 (multiply ?1100 ?1099)) ?1099 =>= multiply ?1099 ?1100 [1100, 1099] by Super 7 with 70 at 1,2
Id : 895, {_}: right_division (multiply ?1115 ?1116) ?1115 =<= multiply ?1115 (right_division ?1116 ?1115) [1116, 1115] by Super 889 with 6 at 2,1,2
Id :  55, {_}: right_division (multiply ?122 (multiply ?123 (multiply ?122 ?124))) ?124 =>= multiply (multiply ?122 ?123) ?122 [124, 123, 122] by Super 7 with 10 at 1,2
Id : 2553, {_}: right_division (multiply ?3478 (multiply ?3479 (multiply ?3478 ?3480))) ?3480 =>= multiply ?3478 (multiply ?3479 ?3478) [3480, 3479, 3478] by Demod 55 with 70 at 3
Id : 647, {_}: multiply ?831 (multiply ?832 ?831) =<= multiply (multiply ?831 ?832) ?831 [832, 831] by Demod 53 with 3 at 2,2,2
Id : 654, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= multiply identity ?850 [850] by Super 647 with 8 at 1,3
Id : 677, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= ?850 [850] by Demod 654 with 2 at 3
Id : 763, {_}: left_division ?991 ?991 =<= multiply (right_inverse ?991) ?991 [991] by Super 5 with 677 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 789, {_}: identity =<= multiply (right_inverse ?991) ?991 [991] by Demod 763 with 24 at 2
Id : 816, {_}: right_division identity ?1047 =>= right_inverse ?1047 [1047] by Super 7 with 789 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 843, {_}: left_inverse ?1047 =<= right_inverse ?1047 [1047] by Demod 816 with 45 at 2
Id : 857, {_}: multiply ?18 (left_inverse ?18) =>= identity [18] by Demod 8 with 843 at 2,2
Id : 2562, {_}: right_division (multiply ?3513 (multiply ?3514 identity)) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Super 2553 with 857 at 2,2,1,2
Id : 2621, {_}: right_division (multiply ?3513 ?3514) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Demod 2562 with 3 at 2,1,2
Id : 2806, {_}: right_division (multiply (left_inverse ?3781) (multiply ?3781 ?3782)) (left_inverse ?3781) =>= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Super 895 with 2621 at 2,3
Id :  52, {_}: multiply ?111 (multiply ?112 (multiply ?111 (left_division (multiply (multiply ?111 ?112) ?111) ?113))) =>= ?113 [113, 112, 111] by Super 4 with 10 at 2
Id : 963, {_}: multiply ?1216 (multiply ?1217 (multiply ?1216 (left_division (multiply ?1216 (multiply ?1217 ?1216)) ?1218))) =>= ?1218 [1218, 1217, 1216] by Demod 52 with 70 at 1,2,2,2,2
Id : 970, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division (multiply ?1242 identity) ?1243))) =>= ?1243 [1243, 1242] by Super 963 with 9 at 2,1,2,2,2,2
Id : 1030, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division ?1242 ?1243))) =>= ?1243 [1243, 1242] by Demod 970 with 3 at 1,2,2,2,2
Id : 1031, {_}: multiply ?1242 (multiply (left_inverse ?1242) ?1243) =>= ?1243 [1243, 1242] by Demod 1030 with 4 at 2,2,2
Id : 1164, {_}: left_division ?1548 ?1549 =<= multiply (left_inverse ?1548) ?1549 [1549, 1548] by Super 5 with 1031 at 2,2
Id : 2852, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =<= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2806 with 1164 at 1,2
Id : 2853, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =>= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2852 with 1164 at 3
Id : 2854, {_}: right_division ?3782 (left_inverse ?3781) =<= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3781, 3782] by Demod 2853 with 5 at 1,2
Id : 2855, {_}: right_division ?3782 (left_inverse ?3781) =>= multiply ?3782 ?3781 [3781, 3782] by Demod 2854 with 5 at 3
Id : 1378, {_}: right_division (left_division ?1827 ?1828) ?1828 =>= left_inverse ?1827 [1828, 1827] by Super 7 with 1164 at 1,2
Id :  28, {_}: left_division (right_division ?62 ?63) ?62 =>= ?63 [63, 62] by Super 5 with 6 at 2,2
Id : 1384, {_}: right_division ?1844 ?1845 =<= left_inverse (right_division ?1845 ?1844) [1845, 1844] by Super 1378 with 28 at 1,2
Id : 3643, {_}: multiply (multiply ?4879 ?4880) ?4881 =<= multiply ?4880 (multiply (left_division ?4880 ?4879) (multiply ?4880 ?4881)) [4881, 4880, 4879] by Super 56 with 4 at 1,1,2
Id : 3648, {_}: multiply (multiply ?4897 ?4898) (left_division ?4898 ?4899) =>= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Super 3643 with 4 at 2,2,3
Id : 2922, {_}: right_division (left_inverse ?3910) ?3911 =>= left_inverse (multiply ?3911 ?3910) [3911, 3910] by Super 1384 with 2855 at 1,3
Id : 3008, {_}: left_inverse (multiply (left_inverse ?4021) ?4022) =>= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Super 2855 with 2922 at 2
Id : 3027, {_}: left_inverse (left_division ?4021 ?4022) =<= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Demod 3008 with 1164 at 1,2
Id : 3028, {_}: left_inverse (left_division ?4021 ?4022) =>= left_division ?4022 ?4021 [4022, 4021] by Demod 3027 with 1164 at 3
Id : 3191, {_}: right_division ?4224 (left_division ?4225 ?4226) =<= multiply ?4224 (left_division ?4226 ?4225) [4226, 4225, 4224] by Super 2855 with 3028 at 2,2
Id : 8019, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Demod 3648 with 3191 at 2
Id : 3187, {_}: left_division (left_division ?4210 ?4211) ?4212 =<= multiply (left_division ?4211 ?4210) ?4212 [4212, 4211, 4210] by Super 1164 with 3028 at 1,3
Id : 8020, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (left_division (left_division ?4897 ?4898) ?4899) [4899, 4898, 4897] by Demod 8019 with 3187 at 2,3
Id : 8021, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =>= right_division ?4898 (left_division ?4899 (left_division ?4897 ?4898)) [4899, 4898, 4897] by Demod 8020 with 3191 at 3
Id : 8034, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= left_inverse (right_division ?9767 (left_division ?9766 (left_division ?9768 ?9767))) [9768, 9767, 9766] by Super 1384 with 8021 at 1,3
Id : 8099, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= right_division (left_division ?9766 (left_division ?9768 ?9767)) ?9767 [9768, 9767, 9766] by Demod 8034 with 1384 at 3
Id : 23672, {_}: right_division (left_division ?25246 (left_inverse ?25247)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25247, 25246] by Super 2855 with 8099 at 2
Id : 2932, {_}: right_division ?3937 (left_inverse ?3938) =>= multiply ?3937 ?3938 [3938, 3937] by Demod 2854 with 5 at 3
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 426, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 860, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 426 with 843 at 2
Id : 2936, {_}: right_division ?3949 ?3950 =<= multiply ?3949 (left_inverse ?3950) [3950, 3949] by Super 2932 with 860 at 2,2
Id : 3077, {_}: left_division ?4125 (left_inverse ?4126) =>= right_division (left_inverse ?4125) ?4126 [4126, 4125] by Super 1164 with 2936 at 3
Id : 3115, {_}: left_division ?4125 (left_inverse ?4126) =>= left_inverse (multiply ?4126 ?4125) [4126, 4125] by Demod 3077 with 2922 at 3
Id : 23819, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23672 with 3115 at 1,2
Id : 23820, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23819 with 2936 at 2,2
Id : 23821, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25248, 25246, 25247] by Demod 23820 with 3187 at 3
Id : 23822, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23821 with 2922 at 2
Id : 23823, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23822 with 3115 at 1,1,3
Id : 1167, {_}: multiply ?1556 (multiply (left_inverse ?1556) ?1557) =>= ?1557 [1557, 1556] by Demod 1030 with 4 at 2,2,2
Id : 1177, {_}: multiply ?1584 ?1585 =<= left_division (left_inverse ?1584) ?1585 [1585, 1584] by Super 1167 with 4 at 2,2
Id : 1414, {_}: multiply (right_division ?1873 ?1874) ?1875 =>= left_division (right_division ?1874 ?1873) ?1875 [1875, 1874, 1873] by Super 1177 with 1384 at 1,3
Id : 23824, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25248, 25247] by Demod 23823 with 1414 at 1,2
Id : 23825, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =>= left_division (multiply (multiply ?25247 ?25248) ?25246) ?25247 [25246, 25248, 25247] by Demod 23824 with 1177 at 1,3
Id : 37248, {_}: left_division (multiply ?37773 ?37774) (right_division ?37773 ?37775) =<= left_division (multiply (multiply ?37773 ?37775) ?37774) ?37773 [37775, 37774, 37773] by Demod 23825 with 3028 at 2
Id : 37265, {_}: left_division (multiply ?37844 ?37845) (right_division ?37844 (left_inverse ?37846)) =>= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Super 37248 with 2936 at 1,1,3
Id : 37472, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Demod 37265 with 2855 at 2,2
Id : 37473, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (left_division (right_division ?37846 ?37844) ?37845) ?37844 [37846, 37845, 37844] by Demod 37472 with 1414 at 1,3
Id : 8041, {_}: right_division (multiply ?9794 ?9795) (left_division ?9796 ?9795) =>= right_division ?9795 (left_division ?9796 (left_division ?9794 ?9795)) [9796, 9795, 9794] by Demod 8020 with 3191 at 3
Id : 8054, {_}: right_division (multiply ?9845 (left_inverse ?9846)) (left_inverse (multiply ?9846 ?9847)) =>= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Super 8041 with 3115 at 2,2
Id : 8126, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Demod 8054 with 2855 at 2
Id : 8127, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8126 with 2922 at 3
Id : 8128, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8127 with 2936 at 1,2
Id : 8129, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9846, 9845] by Demod 8128 with 3187 at 1,3
Id : 8130, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9845, 9846] by Demod 8129 with 1414 at 2
Id : 8131, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) [9847, 9845, 9846] by Demod 8130 with 3028 at 3
Id : 8132, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_inverse (multiply ?9846 ?9845)) ?9847) [9847, 9845, 9846] by Demod 8131 with 3115 at 1,2,3
Id : 24031, {_}: left_division (right_division ?25824 ?25825) (multiply ?25824 ?25826) =>= left_division ?25824 (multiply (multiply ?25824 ?25825) ?25826) [25826, 25825, 25824] by Demod 8132 with 1177 at 2,3
Id : 24068, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =<= left_division ?25977 (multiply (multiply ?25977 (left_inverse ?25978)) ?25979) [25979, 25978, 25977] by Super 24031 with 2855 at 1,2
Id : 24287, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (multiply (right_division ?25977 ?25978) ?25979) [25979, 25978, 25977] by Demod 24068 with 2936 at 1,2,3
Id : 24288, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (left_division (right_division ?25978 ?25977) ?25979) [25979, 25978, 25977] by Demod 24287 with 1414 at 2,3
Id : 47819, {_}: left_division ?49234 (left_division (right_division ?49235 ?49234) ?49236) =<= left_division (left_division (right_division ?49236 ?49234) ?49235) ?49234 [49236, 49235, 49234] by Demod 37473 with 24288 at 2
Id : 1246, {_}: multiply (left_inverse ?1641) (multiply ?1642 (left_inverse ?1641)) =>= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Super 70 with 1164 at 1,3
Id : 1310, {_}: left_division ?1641 (multiply ?1642 (left_inverse ?1641)) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1246 with 1164 at 2
Id : 3056, {_}: left_division ?1641 (right_division ?1642 ?1641) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1310 with 2936 at 2,2
Id : 3057, {_}: left_division ?1641 (right_division ?1642 ?1641) =>= right_division (left_division ?1641 ?1642) ?1641 [1642, 1641] by Demod 3056 with 2936 at 3
Id : 47887, {_}: left_division ?49524 (left_division (right_division (right_division ?49525 (right_division ?49526 ?49524)) ?49524) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Super 47819 with 3057 at 1,3
Id :  59, {_}: multiply (multiply ?136 ?137) ?138 =<= multiply ?137 (multiply (left_division ?137 ?136) (multiply ?137 ?138)) [138, 137, 136] by Super 56 with 4 at 1,1,2
Id : 3632, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= multiply (left_division ?4830 ?4831) (multiply ?4830 ?4832) [4832, 4831, 4830] by Super 5 with 59 at 2,2
Id : 7833, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= left_division (left_division ?4831 ?4830) (multiply ?4830 ?4832) [4832, 4831, 4830] by Demod 3632 with 3187 at 3
Id : 7841, {_}: left_inverse (left_division ?9488 (multiply (multiply ?9489 ?9488) ?9490)) =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9489, 9488] by Super 3028 with 7833 at 1,2
Id : 7910, {_}: left_division (multiply (multiply ?9489 ?9488) ?9490) ?9488 =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9488, 9489] by Demod 7841 with 3028 at 2
Id : 22545, {_}: left_division (multiply (left_inverse ?23598) ?23599) (left_division ?23600 (left_inverse ?23598)) =>= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Super 3115 with 7910 at 2
Id : 22628, {_}: left_division (left_division ?23598 ?23599) (left_division ?23600 (left_inverse ?23598)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22545 with 1164 at 1,2
Id : 22629, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22628 with 3115 at 2,2
Id : 22630, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23600, 23599, 23598] by Demod 22629 with 2936 at 1,2,1,3
Id : 22631, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23599, 23600, 23598] by Demod 22630 with 3115 at 2
Id : 22632, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22631 with 1414 at 2,1,3
Id : 22633, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =<= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22632 with 3191 at 1,2
Id : 22634, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =>= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23599, 23600, 23598] by Demod 22633 with 3191 at 1,3
Id : 22635, {_}: right_division (left_division ?23599 ?23598) (multiply ?23598 ?23600) =<= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23600, 23598, 23599] by Demod 22634 with 1384 at 2
Id : 33282, {_}: right_division (left_division ?33402 ?33403) (multiply ?33403 ?33404) =<= right_division (left_division ?33402 (right_division ?33403 ?33404)) ?33403 [33404, 33403, 33402] by Demod 22635 with 1384 at 3
Id : 33363, {_}: right_division (left_division (left_inverse ?33737) ?33738) (multiply ?33738 ?33739) =>= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Super 33282 with 1177 at 1,3
Id : 33649, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Demod 33363 with 1177 at 1,2
Id : 2939, {_}: right_division ?3957 (right_division ?3958 ?3959) =<= multiply ?3957 (right_division ?3959 ?3958) [3959, 3958, 3957] by Super 2932 with 1384 at 2,2
Id : 33650, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (right_division ?33737 (right_division ?33739 ?33738)) ?33738 [33739, 33738, 33737] by Demod 33649 with 2939 at 1,3
Id : 48257, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Demod 47887 with 33650 at 1,2,2
Id : 640, {_}: multiply (multiply ?22 (multiply ?23 ?22)) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by Demod 10 with 70 at 1,2
Id : 1251, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =<= multiply ?1655 (multiply (left_inverse ?1656) (multiply ?1655 ?1657)) [1657, 1656, 1655] by Super 640 with 1164 at 2,1,2
Id : 1306, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1251 with 1164 at 2,3
Id : 5008, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1306 with 3191 at 1,2
Id : 5009, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5008 with 3191 at 3
Id : 5010, {_}: left_division (right_division (left_division ?1655 ?1656) ?1655) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5009 with 1414 at 2
Id : 48258, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49526, 49525, 49524] by Demod 48257 with 5010 at 3
Id : 3070, {_}: multiply (multiply (left_inverse ?4103) (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Super 640 with 2936 at 2,1,2
Id : 3126, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3070 with 1164 at 1,2
Id : 3127, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3126 with 1164 at 3
Id : 3128, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3127 with 3057 at 1,2
Id : 3129, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3128 with 1164 at 2,2,3
Id : 3130, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3129 with 1414 at 2
Id : 7047, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (right_division ?4104 (left_division ?4105 ?4103)) [4105, 4104, 4103] by Demod 3130 with 3191 at 2,3
Id : 7063, {_}: left_division ?8435 (right_division ?8436 (left_division (left_inverse ?8437) ?8435)) =>= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Super 3115 with 7047 at 2
Id : 7165, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Demod 7063 with 1177 at 2,2,2
Id : 7166, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (right_division ?8437 (right_division (left_division ?8435 ?8436) ?8435)) [8437, 8436, 8435] by Demod 7165 with 2939 at 1,3
Id : 7167, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =>= right_division (right_division (left_division ?8435 ?8436) ?8435) ?8437 [8437, 8436, 8435] by Demod 7166 with 1384 at 3
Id : 21426, {_}: left_inverse (right_division (right_division (left_division ?22100 ?22101) ?22100) ?22102) =>= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22102, 22101, 22100] by Super 3028 with 7167 at 1,2
Id : 21547, {_}: right_division ?22102 (right_division (left_division ?22100 ?22101) ?22100) =<= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22101, 22100, 22102] by Demod 21426 with 1384 at 2
Id : 48259, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49525, 49526, 49524] by Demod 48258 with 21547 at 2,2
Id : 48260, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49525, 49526, 49524] by Demod 48259 with 1414 at 1,2,3
Id : 3073, {_}: left_division ?4114 (right_division ?4114 ?4115) =>= left_inverse ?4115 [4115, 4114] by Super 5 with 2936 at 2,2
Id : 48261, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =<= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49524, 49525, 49526] by Demod 48260 with 3073 at 2
Id : 48262, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48261 with 28 at 1,2,3
Id : 48263, {_}: right_division ?49526 (left_division ?49526 (multiply ?49525 ?49524)) =<= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48262 with 1384 at 2
Id : 52424, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= left_inverse (right_division ?54688 (left_division ?54688 (multiply ?54689 ?54690))) [54690, 54689, 54688] by Super 1384 with 48263 at 1,3
Id : 52654, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= right_division (left_division ?54688 (multiply ?54689 ?54690)) ?54688 [54690, 54689, 54688] by Demod 52424 with 1384 at 3
Id : 54963, {_}: right_division (left_division (left_inverse ?57654) ?57655) (right_division (left_inverse ?57654) ?57656) =>= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Super 2855 with 52654 at 2
Id : 55156, {_}: right_division (multiply ?57654 ?57655) (right_division (left_inverse ?57654) ?57656) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 54963 with 1177 at 1,2
Id : 55157, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55156 with 2922 at 2,2
Id : 55158, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55157 with 3187 at 3
Id : 55159, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55158 with 2855 at 2
Id : 55160, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_inverse (multiply ?57654 (multiply ?57655 ?57656))) ?57654 [57656, 57655, 57654] by Demod 55159 with 3115 at 1,3
Id : 55161, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= multiply (multiply ?57654 (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55160 with 1177 at 3
Id : 55162, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =>= multiply ?57654 (multiply (multiply ?57655 ?57656) ?57654) [57656, 57655, 57654] by Demod 55161 with 70 at 3
Id : 56911, {_}: multiply x (multiply (multiply y z) x) =?= multiply x (multiply (multiply y z) x) [] by Demod 1 with 55162 at 3
Id :   1, {_}: multiply x (multiply (multiply y z) x) =<= multiply (multiply x y) (multiply z x) [] by prove_moufang4
% SZS output end CNFRefutation for GRP205-1.p
12861: solved GRP205-1.p in 14.652915 using kbo
12861: status Unsatisfiable for GRP205-1.p
NO CLASH, using fixed ground order
12867: Facts:
12867:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
12867: Goal:
12867:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
12867: Order:
12867:   nrkbo
12867: Leaf order:
12867:  u 2 0 2 1,1,2,1,2,1,2,2
12867:  multiply 12 2 6 0,2
12867:  inverse 6 1 3 0,2,2
12867:  z 2 0 2 1,1,1,2,1,2,2
12867:  y 2 0 2 1,1,2,2
12867:  x 2 0 2 1,2
NO CLASH, using fixed ground order
12868: Facts:
12868:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
12868: Goal:
12868:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
12868: Order:
12868:   kbo
12868: Leaf order:
12868:  u 2 0 2 1,1,2,1,2,1,2,2
12868:  multiply 12 2 6 0,2
12868:  inverse 6 1 3 0,2,2
12868:  z 2 0 2 1,1,1,2,1,2,2
12868:  y 2 0 2 1,1,2,2
12868:  x 2 0 2 1,2
NO CLASH, using fixed ground order
12869: Facts:
12869:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
12869: Goal:
12869:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
12869: Order:
12869:   lpo
12869: Leaf order:
12869:  u 2 0 2 1,1,2,1,2,1,2,2
12869:  multiply 12 2 6 0,2
12869:  inverse 6 1 3 0,2,2
12869:  z 2 0 2 1,1,1,2,1,2,2
12869:  y 2 0 2 1,1,2,2
12869:  x 2 0 2 1,2
% SZS status Timeout for GRP207-1.p
Fatal error: exception Assert_failure("matitaprover.ml", 265, 46)
NO CLASH, using fixed ground order
12900: Facts:
12900:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12900: Goal:
12900:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12900: Order:
12900:   nrkbo
12900: Leaf order:
12900:  inverse 7 1 0 
12900:  c3 2 0 2 2,2
12900:  multiply 10 2 4 0,2
12900:  b3 2 0 2 2,1,2
12900:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
12901: Facts:
12901:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12901: Goal:
12901:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12901: Order:
12901:   kbo
12901: Leaf order:
12901:  inverse 7 1 0 
12901:  c3 2 0 2 2,2
12901:  multiply 10 2 4 0,2
12901:  b3 2 0 2 2,1,2
12901:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
12902: Facts:
12902:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12902: Goal:
12902:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12902: Order:
12902:   lpo
12902: Leaf order:
12902:  inverse 7 1 0 
12902:  c3 2 0 2 2,2
12902:  multiply 10 2 4 0,2
12902:  b3 2 0 2 2,1,2
12902:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP420-1.p
NO CLASH, using fixed ground order
12949: Facts:
12949:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12949:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
12949:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
12949: Goal:
12949:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12949: Order:
12949:   nrkbo
12949: Leaf order:
12949:  inverse 1 1 0 
12949:  divide 13 2 0 
12949:  c3 2 0 2 2,2
12949:  multiply 5 2 4 0,2
12949:  b3 2 0 2 2,1,2
12949:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
12950: Facts:
12950:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12950:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
12950:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
12950: Goal:
12950:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12950: Order:
12950:   kbo
12950: Leaf order:
12950:  inverse 1 1 0 
12950:  divide 13 2 0 
12950:  c3 2 0 2 2,2
12950:  multiply 5 2 4 0,2
12950:  b3 2 0 2 2,1,2
12950:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
12951: Facts:
12951:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
12951:  Id :   3, {_}:
          multiply ?6 ?7 =?= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
12951:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
12951: Goal:
12951:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
12951: Order:
12951:   lpo
12951: Leaf order:
12951:  inverse 1 1 0 
12951:  divide 13 2 0 
12951:  c3 2 0 2 2,2
12951:  multiply 5 2 4 0,2
12951:  b3 2 0 2 2,1,2
12951:  a3 2 0 2 1,1,2
Statistics :
Max weight : 38
Found proof, 2.410071s
% SZS status Unsatisfiable for GRP453-1.p
% SZS output start CNFRefutation for GRP453-1.p
Id :  35, {_}: inverse ?90 =<= divide (divide ?91 ?91) ?90 [91, 90] by inverse ?90 ?91
Id :   2, {_}: divide (divide (divide ?2 ?2) (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   5, {_}: divide (divide (divide ?13 ?13) (divide ?13 (divide ?14 (divide (divide (divide ?13 ?13) ?13) ?15)))) ?15 =>= ?14 [15, 14, 13] by single_axiom ?13 ?14 ?15
Id :   4, {_}: inverse ?10 =<= divide (divide ?11 ?11) ?10 [11, 10] by inverse ?10 ?11
Id :   3, {_}: multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7) [8, 7, 6] by multiply ?6 ?7 ?8
Id :  29, {_}: multiply ?6 ?7 =<= divide ?6 (inverse ?7) [7, 6] by Demod 3 with 4 at 2,3
Id :   6, {_}: divide (divide (divide ?17 ?17) (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Super 5 with 2 at 2,2,1,2
Id : 142, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 6 with 4 at 1,2
Id : 143, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 142 with 4 at 3
Id : 144, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 143 with 4 at 1,2,2,1,3
Id : 145, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (inverse ?17) ?19)))) [20, 19, 18, 17] by Demod 144 with 4 at 1,2,2,2,1,3
Id :  36, {_}: inverse ?93 =<= divide (inverse (divide ?94 ?94)) ?93 [94, 93] by Super 35 with 4 at 1,3
Id : 226, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (divide (divide ?529 ?529) (divide ?527 (inverse (divide (inverse ?526) ?528)))) [529, 528, 527, 526] by Super 145 with 36 at 2,2,1,3
Id : 249, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (divide ?527 (inverse (divide (inverse ?526) ?528)))) [528, 527, 526] by Demod 226 with 4 at 1,3
Id : 250, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (multiply ?527 (divide (inverse ?526) ?528))) [528, 527, 526] by Demod 249 with 29 at 1,1,3
Id :  13, {_}: divide (multiply (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50))) ?50 =>= ?49 [50, 49, 48] by Super 2 with 3 at 1,2
Id :  32, {_}: multiply (divide ?79 ?79) ?80 =>= inverse (inverse ?80) [80, 79] by Super 29 with 4 at 3
Id : 479, {_}: divide (inverse (inverse (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 13 with 32 at 1,2
Id : 480, {_}: divide (inverse (inverse (divide ?49 (divide (inverse (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 479 with 4 at 1,2,1,1,1,2
Id : 481, {_}: divide (inverse (inverse (divide ?49 (inverse ?50)))) ?50 =>= ?49 [50, 49] by Demod 480 with 36 at 2,1,1,1,2
Id : 482, {_}: divide (inverse (inverse (multiply ?49 ?50))) ?50 =>= ?49 [50, 49] by Demod 481 with 29 at 1,1,1,2
Id : 888, {_}: divide (inverse (divide ?1873 ?1874)) ?1875 =<= inverse (inverse (multiply ?1874 (divide (inverse ?1873) ?1875))) [1875, 1874, 1873] by Demod 249 with 29 at 1,1,3
Id : 903, {_}: divide (inverse (divide (divide ?1940 ?1940) ?1941)) ?1942 =>= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941, 1940] by Super 888 with 36 at 2,1,1,3
Id : 936, {_}: divide (inverse (inverse ?1941)) ?1942 =<= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941] by Demod 903 with 4 at 1,1,2
Id : 969, {_}: divide (inverse (inverse ?2088)) ?2089 =<= inverse (inverse (multiply ?2088 (inverse ?2089))) [2089, 2088] by Demod 903 with 4 at 1,1,2
Id : 980, {_}: divide (inverse (inverse (divide ?2127 ?2127))) ?2128 =>= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128, 2127] by Super 969 with 32 at 1,1,3
Id : 223, {_}: inverse ?515 =<= divide (inverse (inverse (divide ?516 ?516))) ?515 [516, 515] by Super 4 with 36 at 1,3
Id : 1009, {_}: inverse ?2128 =<= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128] by Demod 980 with 223 at 2
Id : 1026, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= divide ?2199 (inverse ?2200) [2200, 2199] by Super 29 with 1009 at 2,3
Id : 1064, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= multiply ?2199 ?2200 [2200, 2199] by Demod 1026 with 29 at 3
Id : 1096, {_}: divide (inverse (inverse ?2287)) (inverse (inverse (inverse ?2288))) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Super 936 with 1064 at 1,1,3
Id : 1169, {_}: multiply (inverse (inverse ?2287)) (inverse (inverse ?2288)) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Demod 1096 with 29 at 2
Id : 1211, {_}: divide (inverse (inverse (inverse (inverse ?2471)))) (inverse ?2472) =>= inverse (inverse (inverse (inverse (multiply ?2471 ?2472)))) [2472, 2471] by Super 936 with 1169 at 1,1,3
Id : 1253, {_}: multiply (inverse (inverse (inverse (inverse ?2471)))) ?2472 =>= inverse (inverse (inverse (inverse (multiply ?2471 ?2472)))) [2472, 2471] by Demod 1211 with 29 at 2
Id : 1506, {_}: divide (inverse (inverse (inverse (inverse (inverse (inverse (multiply ?3181 ?3182))))))) ?3182 =>= inverse (inverse (inverse (inverse ?3181))) [3182, 3181] by Super 482 with 1253 at 1,1,1,2
Id : 1558, {_}: divide (inverse (inverse (multiply ?3181 ?3182))) ?3182 =>= inverse (inverse (inverse (inverse ?3181))) [3182, 3181] by Demod 1506 with 1009 at 1,2
Id : 1559, {_}: ?3181 =<= inverse (inverse (inverse (inverse ?3181))) [3181] by Demod 1558 with 482 at 2
Id : 1611, {_}: multiply ?3343 (inverse (inverse (inverse ?3344))) =>= divide ?3343 ?3344 [3344, 3343] by Super 29 with 1559 at 2,3
Id : 1683, {_}: divide (inverse (inverse ?3483)) (inverse (inverse ?3484)) =>= inverse (inverse (divide ?3483 ?3484)) [3484, 3483] by Super 936 with 1611 at 1,1,3
Id : 1717, {_}: multiply (inverse (inverse ?3483)) (inverse ?3484) =>= inverse (inverse (divide ?3483 ?3484)) [3484, 3483] by Demod 1683 with 29 at 2
Id : 1782, {_}: divide (inverse (inverse (inverse (inverse (divide ?3605 ?3606))))) (inverse ?3606) =>= inverse (inverse ?3605) [3606, 3605] by Super 482 with 1717 at 1,1,1,2
Id : 1824, {_}: multiply (inverse (inverse (inverse (inverse (divide ?3605 ?3606))))) ?3606 =>= inverse (inverse ?3605) [3606, 3605] by Demod 1782 with 29 at 2
Id : 1825, {_}: multiply (divide ?3605 ?3606) ?3606 =>= inverse (inverse ?3605) [3606, 3605] by Demod 1824 with 1559 at 1,2
Id : 1854, {_}: inverse (inverse ?3731) =<= divide (divide ?3731 (inverse (inverse (inverse ?3732)))) ?3732 [3732, 3731] by Super 1611 with 1825 at 2
Id : 2653, {_}: inverse (inverse ?5844) =<= divide (multiply ?5844 (inverse (inverse ?5845))) ?5845 [5845, 5844] by Demod 1854 with 29 at 1,3
Id : 224, {_}: multiply (inverse (inverse (divide ?518 ?518))) ?519 =>= inverse (inverse ?519) [519, 518] by Super 32 with 36 at 1,2
Id : 2679, {_}: inverse (inverse (inverse (inverse (divide ?5935 ?5935)))) =?= divide (inverse (inverse (inverse (inverse ?5936)))) ?5936 [5936, 5935] by Super 2653 with 224 at 1,3
Id : 2732, {_}: divide ?5935 ?5935 =?= divide (inverse (inverse (inverse (inverse ?5936)))) ?5936 [5936, 5935] by Demod 2679 with 1559 at 2
Id : 2733, {_}: divide ?5935 ?5935 =?= divide ?5936 ?5936 [5936, 5935] by Demod 2732 with 1559 at 1,3
Id : 2794, {_}: divide (inverse (divide ?6115 (divide (inverse ?6116) (divide (inverse ?6115) ?6117)))) ?6117 =?= inverse (divide ?6116 (divide ?6118 ?6118)) [6118, 6117, 6116, 6115] by Super 145 with 2733 at 2,1,3
Id :  30, {_}: divide (inverse (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 2 with 4 at 1,2
Id :  31, {_}: divide (inverse (divide ?2 (divide ?3 (divide (inverse ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 30 with 4 at 1,2,2,1,1,2
Id : 2869, {_}: inverse ?6116 =<= inverse (divide ?6116 (divide ?6118 ?6118)) [6118, 6116] by Demod 2794 with 31 at 2
Id : 2925, {_}: divide ?6471 (divide ?6472 ?6472) =>= inverse (inverse (inverse (inverse ?6471))) [6472, 6471] by Super 1559 with 2869 at 1,1,1,3
Id : 2977, {_}: divide ?6471 (divide ?6472 ?6472) =>= ?6471 [6472, 6471] by Demod 2925 with 1559 at 3
Id : 3050, {_}: divide (inverse (divide ?6728 ?6729)) (divide ?6730 ?6730) =>= inverse (inverse (multiply ?6729 (inverse ?6728))) [6730, 6729, 6728] by Super 250 with 2977 at 2,1,1,3
Id : 3110, {_}: inverse (divide ?6728 ?6729) =<= inverse (inverse (multiply ?6729 (inverse ?6728))) [6729, 6728] by Demod 3050 with 2977 at 2
Id : 3383, {_}: inverse (divide ?7439 ?7440) =<= divide (inverse (inverse ?7440)) ?7439 [7440, 7439] by Demod 3110 with 936 at 3
Id : 1622, {_}: ?3381 =<= inverse (inverse (inverse (inverse ?3381))) [3381] by Demod 1558 with 482 at 2
Id : 1636, {_}: multiply ?3417 (inverse ?3418) =<= inverse (inverse (divide (inverse (inverse ?3417)) ?3418)) [3418, 3417] by Super 1622 with 936 at 1,1,3
Id : 3111, {_}: inverse (divide ?6728 ?6729) =<= divide (inverse (inverse ?6729)) ?6728 [6729, 6728] by Demod 3110 with 936 at 3
Id : 3340, {_}: multiply ?3417 (inverse ?3418) =<= inverse (inverse (inverse (divide ?3418 ?3417))) [3418, 3417] by Demod 1636 with 3111 at 1,1,3
Id : 3404, {_}: inverse (divide ?7516 (inverse (divide ?7517 ?7518))) =>= divide (multiply ?7518 (inverse ?7517)) ?7516 [7518, 7517, 7516] by Super 3383 with 3340 at 1,3
Id : 3497, {_}: inverse (multiply ?7516 (divide ?7517 ?7518)) =<= divide (multiply ?7518 (inverse ?7517)) ?7516 [7518, 7517, 7516] by Demod 3404 with 29 at 1,2
Id : 229, {_}: inverse ?541 =<= divide (inverse (divide ?542 ?542)) ?541 [542, 541] by Super 35 with 4 at 1,3
Id : 236, {_}: inverse ?562 =<= divide (inverse (inverse (inverse (divide ?563 ?563)))) ?562 [563, 562] by Super 229 with 36 at 1,1,3
Id : 3338, {_}: inverse ?562 =<= inverse (divide ?562 (inverse (divide ?563 ?563))) [563, 562] by Demod 236 with 3111 at 3
Id : 3343, {_}: inverse ?562 =<= inverse (multiply ?562 (divide ?563 ?563)) [563, 562] by Demod 3338 with 29 at 1,3
Id : 3051, {_}: multiply ?6732 (divide ?6733 ?6733) =>= inverse (inverse ?6732) [6733, 6732] by Super 1825 with 2977 at 1,2
Id : 3711, {_}: inverse ?562 =<= inverse (inverse (inverse ?562)) [562] by Demod 3343 with 3051 at 1,3
Id : 3714, {_}: multiply ?3343 (inverse ?3344) =>= divide ?3343 ?3344 [3344, 3343] by Demod 1611 with 3711 at 2,2
Id : 4200, {_}: inverse (multiply ?8647 (divide ?8648 ?8649)) =>= divide (divide ?8649 ?8648) ?8647 [8649, 8648, 8647] by Demod 3497 with 3714 at 1,3
Id : 3401, {_}: inverse (divide ?7505 (inverse (inverse ?7506))) =>= divide ?7506 ?7505 [7506, 7505] by Super 3383 with 1559 at 1,3
Id : 3496, {_}: inverse (multiply ?7505 (inverse ?7506)) =>= divide ?7506 ?7505 [7506, 7505] by Demod 3401 with 29 at 1,2
Id : 3715, {_}: inverse (divide ?7505 ?7506) =>= divide ?7506 ?7505 [7506, 7505] by Demod 3496 with 3714 at 1,2
Id : 3725, {_}: divide (divide ?527 ?526) ?528 =<= inverse (inverse (multiply ?527 (divide (inverse ?526) ?528))) [528, 526, 527] by Demod 250 with 3715 at 1,2
Id : 3337, {_}: inverse (divide ?50 (multiply ?49 ?50)) =>= ?49 [49, 50] by Demod 482 with 3111 at 2
Id : 3721, {_}: divide (multiply ?49 ?50) ?50 =>= ?49 [50, 49] by Demod 3337 with 3715 at 2
Id : 1860, {_}: multiply (divide ?3752 ?3753) ?3753 =>= inverse (inverse ?3752) [3753, 3752] by Demod 1824 with 1559 at 1,2
Id : 1869, {_}: multiply (multiply ?3781 ?3782) (inverse ?3782) =>= inverse (inverse ?3781) [3782, 3781] by Super 1860 with 29 at 1,2
Id : 3717, {_}: divide (multiply ?3781 ?3782) ?3782 =>= inverse (inverse ?3781) [3782, 3781] by Demod 1869 with 3714 at 2
Id : 3737, {_}: inverse (inverse ?49) =>= ?49 [49] by Demod 3721 with 3717 at 2
Id : 3738, {_}: divide (divide ?527 ?526) ?528 =<= multiply ?527 (divide (inverse ?526) ?528) [528, 526, 527] by Demod 3725 with 3737 at 3
Id : 4230, {_}: inverse (divide (divide ?8777 ?8778) ?8779) =<= divide (divide ?8779 (inverse ?8778)) ?8777 [8779, 8778, 8777] by Super 4200 with 3738 at 1,2
Id : 4280, {_}: divide ?8779 (divide ?8777 ?8778) =<= divide (divide ?8779 (inverse ?8778)) ?8777 [8778, 8777, 8779] by Demod 4230 with 3715 at 2
Id : 4281, {_}: divide ?8779 (divide ?8777 ?8778) =<= divide (multiply ?8779 ?8778) ?8777 [8778, 8777, 8779] by Demod 4280 with 29 at 1,3
Id : 4962, {_}: multiply (multiply ?10173 ?10174) ?10175 =<= divide ?10173 (divide (inverse ?10175) ?10174) [10175, 10174, 10173] by Super 29 with 4281 at 3
Id : 4205, {_}: inverse (multiply ?8667 ?8668) =<= divide (divide (divide ?8669 ?8669) ?8668) ?8667 [8669, 8668, 8667] by Super 4200 with 2977 at 2,1,2
Id : 4245, {_}: inverse (multiply ?8667 ?8668) =<= divide (inverse ?8668) ?8667 [8668, 8667] by Demod 4205 with 4 at 1,3
Id : 5005, {_}: multiply (multiply ?10173 ?10174) ?10175 =<= divide ?10173 (inverse (multiply ?10174 ?10175)) [10175, 10174, 10173] by Demod 4962 with 4245 at 2,3
Id : 5006, {_}: multiply (multiply ?10173 ?10174) ?10175 =>= multiply ?10173 (multiply ?10174 ?10175) [10175, 10174, 10173] by Demod 5005 with 29 at 3
Id : 5130, {_}: multiply a3 (multiply b3 c3) =?= multiply a3 (multiply b3 c3) [] by Demod 1 with 5006 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP453-1.p
12950: solved GRP453-1.p in 1.216075 using kbo
12950: status Unsatisfiable for GRP453-1.p
Fatal error: exception Assert_failure("matitaprover.ml", 265, 46)
NO CLASH, using fixed ground order
12960: Facts:
12960:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
12960:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
12960: Goal:
12960:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
12960: Order:
12960:   nrkbo
12960: Leaf order:
12960:  meet 4 2 0 
12960:  c 2 0 2 2,2
12960:  join 7 2 4 0,2
12960:  b 2 0 2 2,1,2
12960:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
12962: Facts:
12962:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
12962:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =?= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
12962: Goal:
12962:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
12962: Order:
12962:   lpo
12962: Leaf order:
12962:  meet 4 2 0 
12962:  c 2 0 2 2,2
12962:  join 7 2 4 0,2
12962:  b 2 0 2 2,1,2
12962:  a 2 0 2 1,1,2
12961: Facts:
12961:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
12961:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
12961: Goal:
12961:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
12961: Order:
12961:   kbo
12961: Leaf order:
12961:  meet 4 2 0 
12961:  c 2 0 2 2,2
12961:  join 7 2 4 0,2
12961:  b 2 0 2 2,1,2
12961:  a 2 0 2 1,1,2
Statistics :
Max weight : 22
Found proof, 37.088774s
% SZS status Unsatisfiable for LAT007-1.p
% SZS output start CNFRefutation for LAT007-1.p
Id :   3, {_}: meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5) [7, 6, 5] by distribution ?5 ?6 ?7
Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
Id :   7, {_}: meet ?18 (join ?19 ?20) =<= join (meet ?20 ?18) (meet ?19 ?18) [20, 19, 18] by distribution ?18 ?19 ?20
Id :   8, {_}: meet (join ?22 ?23) (join ?22 ?24) =<= join (meet ?24 (join ?22 ?23)) ?22 [24, 23, 22] by Super 7 with 2 at 2,3
Id : 122, {_}: meet (meet ?274 ?275) (meet ?275 (join ?276 ?274)) =>= meet ?274 ?275 [276, 275, 274] by Super 2 with 3 at 2,2
Id : 132, {_}: meet (meet ?317 ?318) ?318 =>= meet ?317 ?318 [318, 317] by Super 122 with 2 at 2,2
Id : 166, {_}: meet ?380 (join ?381 (meet ?382 ?380)) =<= join (meet ?382 ?380) (meet ?381 ?380) [382, 381, 380] by Super 3 with 132 at 1,3
Id : 405, {_}: meet ?915 (join ?916 (meet ?917 ?915)) =>= meet ?915 (join ?916 ?917) [917, 916, 915] by Demod 166 with 3 at 3
Id : 419, {_}: meet ?974 (meet ?974 (join ?975 ?976)) =?= meet ?974 (join (meet ?976 ?974) ?975) [976, 975, 974] by Super 405 with 3 at 2,2
Id : 165, {_}: meet ?376 (join (meet ?377 ?376) ?378) =<= join (meet ?378 ?376) (meet ?377 ?376) [378, 377, 376] by Super 3 with 132 at 2,3
Id : 187, {_}: meet ?376 (join (meet ?377 ?376) ?378) =>= meet ?376 (join ?377 ?378) [378, 377, 376] by Demod 165 with 3 at 3
Id : 473, {_}: meet ?1062 (meet ?1062 (join ?1063 ?1064)) =>= meet ?1062 (join ?1064 ?1063) [1064, 1063, 1062] by Demod 419 with 187 at 3
Id : 484, {_}: meet ?1111 ?1111 =<= meet ?1111 (join ?1112 ?1111) [1112, 1111] by Super 473 with 2 at 2,2
Id : 590, {_}: meet (join ?1333 ?1334) (join ?1333 ?1334) =>= join (meet ?1334 ?1334) ?1333 [1334, 1333] by Super 8 with 484 at 1,3
Id : 593, {_}: meet ?1344 ?1344 =>= ?1344 [1344] by Super 2 with 484 at 2
Id : 2478, {_}: join ?1333 ?1334 =<= join (meet ?1334 ?1334) ?1333 [1334, 1333] by Demod 590 with 593 at 2
Id : 2479, {_}: join ?1333 ?1334 =?= join ?1334 ?1333 [1334, 1333] by Demod 2478 with 593 at 1,3
Id : 639, {_}: meet ?1436 (join ?1437 ?1436) =<= join ?1436 (meet ?1437 ?1436) [1437, 1436] by Super 3 with 593 at 1,3
Id : 631, {_}: ?1111 =<= meet ?1111 (join ?1112 ?1111) [1112, 1111] by Demod 484 with 593 at 2
Id : 669, {_}: ?1436 =<= join ?1436 (meet ?1437 ?1436) [1437, 1436] by Demod 639 with 631 at 2
Id :  53, {_}: meet (join ?112 ?113) (join ?112 ?114) =<= join (meet ?114 (join ?112 ?113)) ?112 [114, 113, 112] by Super 7 with 2 at 2,3
Id :  62, {_}: meet (join ?150 ?151) (join ?150 ?150) =>= join ?150 ?150 [151, 150] by Super 53 with 2 at 1,3
Id :  57, {_}: meet (join (meet ?128 ?129) (meet ?130 ?129)) (join (meet ?128 ?129) ?131) =>= join (meet ?131 (meet ?129 (join ?130 ?128))) (meet ?128 ?129) [131, 130, 129, 128] by Super 53 with 3 at 2,1,3
Id :  73, {_}: meet (meet ?129 (join ?130 ?128)) (join (meet ?128 ?129) ?131) =<= join (meet ?131 (meet ?129 (join ?130 ?128))) (meet ?128 ?129) [131, 128, 130, 129] by Demod 57 with 3 at 1,2
Id : 642, {_}: meet (meet ?1444 (join ?1445 ?1444)) (join (meet ?1444 ?1444) ?1446) =>= join (meet ?1446 (meet ?1444 (join ?1445 ?1444))) ?1444 [1446, 1445, 1444] by Super 73 with 593 at 2,3
Id : 657, {_}: meet ?1444 (join (meet ?1444 ?1444) ?1446) =<= join (meet ?1446 (meet ?1444 (join ?1445 ?1444))) ?1444 [1445, 1446, 1444] by Demod 642 with 631 at 1,2
Id : 658, {_}: meet ?1444 (join ?1444 ?1446) =<= join (meet ?1446 (meet ?1444 (join ?1445 ?1444))) ?1444 [1445, 1446, 1444] by Demod 657 with 593 at 1,2,2
Id : 659, {_}: meet ?1444 (join ?1444 ?1446) =<= join (meet ?1446 ?1444) ?1444 [1446, 1444] by Demod 658 with 631 at 2,1,3
Id : 699, {_}: ?1517 =<= join (meet ?1518 ?1517) ?1517 [1518, 1517] by Demod 659 with 2 at 2
Id : 711, {_}: ?1557 =<= join ?1557 ?1557 [1557] by Super 699 with 593 at 1,3
Id : 744, {_}: meet (join ?150 ?151) ?150 =>= join ?150 ?150 [151, 150] by Demod 62 with 711 at 2,2
Id : 745, {_}: meet (join ?150 ?151) ?150 =>= ?150 [151, 150] by Demod 744 with 711 at 3
Id : 713, {_}: join ?1562 ?1563 =<= join ?1563 (join ?1562 ?1563) [1563, 1562] by Super 699 with 631 at 1,3
Id : 1157, {_}: meet (join ?2329 ?2330) ?2330 =>= ?2330 [2330, 2329] by Super 745 with 713 at 1,2
Id : 1688, {_}: meet ?3262 (join (join ?3263 ?3262) ?3264) =>= join (meet ?3264 ?3262) ?3262 [3264, 3263, 3262] by Super 3 with 1157 at 2,3
Id : 660, {_}: ?1444 =<= join (meet ?1446 ?1444) ?1444 [1446, 1444] by Demod 659 with 2 at 2
Id : 1738, {_}: meet ?3262 (join (join ?3263 ?3262) ?3264) =>= ?3262 [3264, 3263, 3262] by Demod 1688 with 660 at 3
Id : 4104, {_}: join (join ?7363 ?7364) ?7365 =<= join (join (join ?7363 ?7364) ?7365) ?7364 [7365, 7364, 7363] by Super 669 with 1738 at 2,3
Id : 9885, {_}: join (join ?18104 ?18105) ?18106 =<= join ?18105 (join (join ?18104 ?18105) ?18106) [18106, 18105, 18104] by Demod 4104 with 2479 at 3
Id : 9889, {_}: join (join ?18120 ?18121) ?18122 =<= join ?18121 (join (join ?18121 ?18120) ?18122) [18122, 18121, 18120] by Super 9885 with 2479 at 1,2,3
Id : 4118, {_}: meet ?7422 (join (join ?7423 ?7422) ?7424) =>= ?7422 [7424, 7423, 7422] by Demod 1688 with 660 at 3
Id : 4122, {_}: meet ?7438 (join (join ?7438 ?7439) ?7440) =>= ?7438 [7440, 7439, 7438] by Super 4118 with 2479 at 1,2,2
Id : 9604, {_}: join (join ?17475 ?17476) ?17477 =<= join (join (join ?17475 ?17476) ?17477) ?17475 [17477, 17476, 17475] by Super 669 with 4122 at 2,3
Id : 9740, {_}: join (join ?17475 ?17476) ?17477 =<= join ?17475 (join (join ?17475 ?17476) ?17477) [17477, 17476, 17475] by Demod 9604 with 2479 at 3
Id : 16688, {_}: join (join ?18120 ?18121) ?18122 =?= join (join ?18121 ?18120) ?18122 [18122, 18121, 18120] by Demod 9889 with 9740 at 3
Id :   9, {_}: meet (join ?26 ?27) (join ?28 ?26) =<= join ?26 (meet ?28 (join ?26 ?27)) [28, 27, 26] by Super 7 with 2 at 1,3
Id : 753, {_}: meet ?1599 (join ?1600 ?1600) =>= meet ?1600 ?1599 [1600, 1599] by Super 3 with 711 at 3
Id : 773, {_}: meet ?1599 ?1600 =?= meet ?1600 ?1599 [1600, 1599] by Demod 753 with 711 at 2,2
Id : 2380, {_}: meet (join ?4513 ?4514) (join ?4515 ?4513) =<= join ?4513 (meet (join ?4513 ?4514) ?4515) [4515, 4514, 4513] by Super 9 with 773 at 2,3
Id : 2506, {_}: meet (join ?4784 ?4785) (join ?4786 ?4784) =<= join ?4784 (meet ?4786 (join ?4785 ?4784)) [4786, 4785, 4784] by Super 9 with 2479 at 2,2,3
Id : 1153, {_}: meet (join ?2312 (join ?2313 ?2312)) (join ?2314 ?2312) =>= join ?2312 (meet ?2314 (join ?2313 ?2312)) [2314, 2313, 2312] by Super 9 with 713 at 2,2,3
Id : 1191, {_}: meet (join ?2313 ?2312) (join ?2314 ?2312) =<= join ?2312 (meet ?2314 (join ?2313 ?2312)) [2314, 2312, 2313] by Demod 1153 with 713 at 1,2
Id : 5434, {_}: meet (join ?4784 ?4785) (join ?4786 ?4784) =?= meet (join ?4785 ?4784) (join ?4786 ?4784) [4786, 4785, 4784] by Demod 2506 with 1191 at 3
Id : 455, {_}: meet ?974 (meet ?974 (join ?975 ?976)) =>= meet ?974 (join ?976 ?975) [976, 975, 974] by Demod 419 with 187 at 3
Id : 757, {_}: meet ?1611 (meet ?1611 ?1612) =?= meet ?1611 (join ?1612 ?1612) [1612, 1611] by Super 455 with 711 at 2,2,2
Id : 767, {_}: meet ?1611 (meet ?1611 ?1612) =>= meet ?1611 ?1612 [1612, 1611] by Demod 757 with 711 at 2,3
Id : 1239, {_}: meet (meet ?2426 ?2427) (join ?2426 ?2428) =<= join (meet ?2428 (meet ?2426 ?2427)) (meet ?2426 ?2427) [2428, 2427, 2426] by Super 3 with 767 at 2,3
Id : 1275, {_}: meet (meet ?2426 ?2427) (join ?2426 ?2428) =>= meet ?2426 ?2427 [2428, 2427, 2426] by Demod 1239 with 660 at 3
Id : 30976, {_}: meet (join ?55510 ?55511) (join (meet ?55510 ?55512) ?55511) =>= join ?55511 (meet ?55510 ?55512) [55512, 55511, 55510] by Super 1191 with 1275 at 2,3
Id : 30986, {_}: meet (join ?55551 ?55552) (join (meet ?55553 ?55551) ?55552) =>= join ?55552 (meet ?55551 ?55553) [55553, 55552, 55551] by Super 30976 with 773 at 1,2,2
Id : 3010, {_}: meet (join ?5441 ?5442) (join ?5443 ?5442) =<= join ?5442 (meet ?5443 (join ?5441 ?5442)) [5443, 5442, 5441] by Demod 1153 with 713 at 1,2
Id : 3031, {_}: meet (join (meet ?5530 ?5531) ?5532) (join ?5531 ?5532) =>= join ?5532 (meet ?5531 (join ?5530 ?5532)) [5532, 5531, 5530] by Super 3010 with 187 at 2,3
Id : 3109, {_}: meet (join ?5531 ?5532) (join (meet ?5530 ?5531) ?5532) =>= join ?5532 (meet ?5531 (join ?5530 ?5532)) [5530, 5532, 5531] by Demod 3031 with 773 at 2
Id : 3110, {_}: meet (join ?5531 ?5532) (join (meet ?5530 ?5531) ?5532) =>= meet (join ?5530 ?5532) (join ?5531 ?5532) [5530, 5532, 5531] by Demod 3109 with 1191 at 3
Id : 31246, {_}: meet (join ?55553 ?55552) (join ?55551 ?55552) =>= join ?55552 (meet ?55551 ?55553) [55551, 55552, 55553] by Demod 30986 with 3110 at 2
Id : 31561, {_}: meet (join ?4784 ?4785) (join ?4786 ?4784) =>= join ?4784 (meet ?4786 ?4785) [4786, 4785, 4784] by Demod 5434 with 31246 at 3
Id : 31569, {_}: join ?4513 (meet ?4515 ?4514) =<= join ?4513 (meet (join ?4513 ?4514) ?4515) [4514, 4515, 4513] by Demod 2380 with 31561 at 2
Id : 31659, {_}: join ?56550 (meet (join ?56551 ?56552) ?56552) =?= join ?56550 (join ?56552 (meet ?56551 ?56550)) [56552, 56551, 56550] by Super 31569 with 31246 at 2,3
Id : 31781, {_}: join ?56550 (meet ?56552 (join ?56551 ?56552)) =?= join ?56550 (join ?56552 (meet ?56551 ?56550)) [56551, 56552, 56550] by Demod 31659 with 773 at 2,2
Id : 32533, {_}: join ?58368 ?58369 =<= join ?58368 (join ?58369 (meet ?58370 ?58368)) [58370, 58369, 58368] by Demod 31781 with 631 at 2,2
Id : 32536, {_}: join (join ?58380 ?58381) ?58382 =<= join (join ?58380 ?58381) (join ?58382 ?58380) [58382, 58381, 58380] by Super 32533 with 2 at 2,2,3
Id : 35660, {_}: join (join ?62824 ?62825) (join ?62825 ?62826) =>= join (join ?62825 ?62826) ?62824 [62826, 62825, 62824] by Super 2479 with 32536 at 3
Id : 188, {_}: meet ?380 (join ?381 (meet ?382 ?380)) =>= meet ?380 (join ?381 ?382) [382, 381, 380] by Demod 166 with 3 at 3
Id : 1695, {_}: meet ?3292 (join ?3293 ?3292) =<= meet ?3292 (join ?3293 (join ?3294 ?3292)) [3294, 3293, 3292] by Super 188 with 1157 at 2,2,2
Id : 1732, {_}: ?3292 =<= meet ?3292 (join ?3293 (join ?3294 ?3292)) [3294, 3293, 3292] by Demod 1695 with 631 at 2
Id : 3955, {_}: join ?7063 (join ?7064 ?7065) =<= join (join ?7063 (join ?7064 ?7065)) ?7065 [7065, 7064, 7063] by Super 669 with 1732 at 2,3
Id : 9413, {_}: join ?17183 (join ?17184 ?17185) =<= join ?17185 (join ?17183 (join ?17184 ?17185)) [17185, 17184, 17183] by Demod 3955 with 2479 at 3
Id : 9417, {_}: join ?17199 (join ?17200 ?17201) =<= join ?17201 (join ?17199 (join ?17201 ?17200)) [17201, 17200, 17199] by Super 9413 with 2479 at 2,2,3
Id : 3974, {_}: ?7142 =<= meet ?7142 (join ?7143 (join ?7144 ?7142)) [7144, 7143, 7142] by Demod 1695 with 631 at 2
Id : 3978, {_}: ?7158 =<= meet ?7158 (join ?7159 (join ?7158 ?7160)) [7160, 7159, 7158] by Super 3974 with 2479 at 2,2,3
Id : 8662, {_}: join ?15620 (join ?15621 ?15622) =<= join (join ?15620 (join ?15621 ?15622)) ?15621 [15622, 15621, 15620] by Super 669 with 3978 at 2,3
Id : 8767, {_}: join ?15620 (join ?15621 ?15622) =<= join ?15621 (join ?15620 (join ?15621 ?15622)) [15622, 15621, 15620] by Demod 8662 with 2479 at 3
Id : 15553, {_}: join ?17199 (join ?17200 ?17201) =?= join ?17199 (join ?17201 ?17200) [17201, 17200, 17199] by Demod 9417 with 8767 at 3
Id : 31782, {_}: join ?56550 ?56552 =<= join ?56550 (join ?56552 (meet ?56551 ?56550)) [56551, 56552, 56550] by Demod 31781 with 631 at 2,2
Id : 35263, {_}: join ?62192 (join (meet ?62193 ?62192) ?62194) =>= join ?62192 ?62194 [62194, 62193, 62192] by Super 15553 with 31782 at 3
Id : 35296, {_}: join (join ?62350 ?62351) (join ?62351 ?62352) =>= join (join ?62350 ?62351) ?62352 [62352, 62351, 62350] by Super 35263 with 631 at 1,2,2
Id : 38052, {_}: join (join ?62824 ?62825) ?62826 =?= join (join ?62825 ?62826) ?62824 [62826, 62825, 62824] by Demod 35660 with 35296 at 2
Id : 38125, {_}: join ?67897 (join ?67898 ?67899) =<= join (join ?67899 ?67897) ?67898 [67899, 67898, 67897] by Super 2479 with 38052 at 3
Id : 38567, {_}: join ?18121 (join ?18122 ?18120) =<= join (join ?18121 ?18120) ?18122 [18120, 18122, 18121] by Demod 16688 with 38125 at 2
Id : 38568, {_}: join ?18121 (join ?18122 ?18120) =?= join ?18120 (join ?18122 ?18121) [18120, 18122, 18121] by Demod 38567 with 38125 at 3
Id : 39014, {_}: join c (join b a) =?= join c (join b a) [] by Demod 39013 with 2479 at 2,2
Id : 39013, {_}: join c (join a b) =?= join c (join b a) [] by Demod 39012 with 38568 at 3
Id : 39012, {_}: join c (join a b) =<= join a (join b c) [] by Demod 1 with 2479 at 2
Id :   1, {_}: join (join a b) c =>= join a (join b c) [] by prove_associativity_of_join
% SZS output end CNFRefutation for LAT007-1.p
12961: solved LAT007-1.p in 17.645102 using kbo
12961: status Unsatisfiable for LAT007-1.p
NO CLASH, using fixed ground order
12978: Facts:
12978:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
12978:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
12978:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
12978:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
12978:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
12978:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
12978:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
12978:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
12978:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
12978:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
12978: Goal:
12978:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
12978: Order:
12978:   nrkbo
12978: Leaf order:
12978:  n0 1 0 0 
12978:  n1 2 0 1 3
12978:  join 20 2 8 0,2
12978:  meet 15 2 6 0,1,1,1,2
12978:  complement 18 1 9 0,1,2
12978:  b 6 0 6 1,2,1,1,1,2
12978:  a 9 0 9 1,1,1,1,2
NO CLASH, using fixed ground order
12979: Facts:
12979:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
12979:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
12979:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
12979:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
12979:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
12979:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
12979:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
12979:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
12979:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
12979:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
12979: Goal:
12979:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
12979: Order:
12979:   kbo
12979: Leaf order:
12979:  n0 1 0 0 
12979:  n1 2 0 1 3
12979:  join 20 2 8 0,2
12979:  meet 15 2 6 0,1,1,1,2
12979:  complement 18 1 9 0,1,2
12979:  b 6 0 6 1,2,1,1,1,2
12979:  a 9 0 9 1,1,1,1,2
NO CLASH, using fixed ground order
12980: Facts:
12980:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
12980:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
12980:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
12980:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
12980:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
12980:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
12980:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
12980:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
12980:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
12980:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
12980: Goal:
12980:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
12980: Order:
12980:   lpo
12980: Leaf order:
12980:  n0 1 0 0 
12980:  n1 2 0 1 3
12980:  join 20 2 8 0,2
12980:  meet 15 2 6 0,1,1,1,2
12980:  complement 18 1 9 0,1,2
12980:  b 6 0 6 1,2,1,1,1,2
12980:  a 9 0 9 1,1,1,1,2
% SZS status Timeout for LAT016-1.p
NO CLASH, using fixed ground order
12998: Facts:
12998:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
12998:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
NO CLASH, using fixed ground order
12999: Facts:
12999:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
12999:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
12999:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
12999:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
12999:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
12999:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
12999:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
NO CLASH, using fixed ground order
13000: Facts:
13000:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13000:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13000:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
13000:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
13000:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
13000:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
13000:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
13000:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
13000:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
13000:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
13000:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =>= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
12998:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
12999:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
12998:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
13000:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
13000:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
13000: Goal:
13000:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
13000: Order:
13000:   lpo
13000: Leaf order:
13000:  join 19 2 0 
13000:  meet2 14 2 1 0,3
13000:  meet 14 2 1 0,2
13000:  b 2 0 2 2,2
13000:  a 2 0 2 1,2
12998:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =?= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
12998:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =?= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
12998:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
12998:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
12998:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
12998:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
12998:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =?= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
12998:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
12998:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
12998: Goal:
12998:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
12998: Order:
12998:   nrkbo
12998: Leaf order:
12998:  join 19 2 0 
12998:  meet2 14 2 1 0,3
12998:  meet 14 2 1 0,2
12998:  b 2 0 2 2,2
12998:  a 2 0 2 1,2
12999:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
12999:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
12999:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =>= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
12999:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
12999:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
12999: Goal:
12999:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
12999: Order:
12999:   kbo
12999: Leaf order:
12999:  join 19 2 0 
12999:  meet2 14 2 1 0,3
12999:  meet 14 2 1 0,2
12999:  b 2 0 2 2,2
12999:  a 2 0 2 1,2
% SZS status Timeout for LAT024-1.p
NO CLASH, using fixed ground order
13029: Facts:
13029:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13029:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13029:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13029:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13029:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13029:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13029:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
13029:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
13029:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
13029:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
13029:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
13029:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
13029:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
13029:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
13029: Goal:
13029:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
13029: Order:
13029:   nrkbo
13029: Leaf order:
13029:  join 13 2 0 
13029:  meet2 9 2 1 0,3
13029:  meet 9 2 1 0,2
13029:  b 2 0 2 2,2
13029:  a 2 0 2 1,2
NO CLASH, using fixed ground order
13030: Facts:
13030:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13030:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13030:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13030:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13030:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13030:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13030:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
13030:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
13030:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
13030:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
13030:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
13030:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
13030:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
13030:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
13030: Goal:
13030:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
13030: Order:
13030:   kbo
13030: Leaf order:
13030:  join 13 2 0 
13030:  meet2 9 2 1 0,3
13030:  meet 9 2 1 0,2
13030:  b 2 0 2 2,2
13030:  a 2 0 2 1,2
NO CLASH, using fixed ground order
13031: Facts:
13031:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13031:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13031:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13031:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13031:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13031:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13031:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
13031:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
13031:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
13031:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
13031:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
13031:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
13031:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
13031:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
13031: Goal:
13031:  Id :   1, {_}: meet a b =>= meet2 a b [] by prove_meets_equal
13031: Order:
13031:   lpo
13031: Leaf order:
13031:  join 13 2 0 
13031:  meet2 9 2 1 0,3
13031:  meet 9 2 1 0,2
13031:  b 2 0 2 2,2
13031:  a 2 0 2 1,2
% SZS status Timeout for LAT025-1.p
CLASH, statistics insufficient
13057: Facts:
13057:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13057:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13057:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13057:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13057:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13057:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13057:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13057:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13057:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13057:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13057:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13057:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13057:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13057:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
13057: Goal:
13057:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
13057: Order:
13057:   nrkbo
13057: Leaf order:
13057:  n0 1 0 0 
13057:  n1 1 0 0 
13057:  complement 10 1 0 
13057:  meet 17 2 3 0,2
13057:  join 18 2 2 0,2,2
13057:  c 2 0 2 2,2,2
13057:  b 2 0 2 1,2,2
13057:  a 3 0 3 1,2
CLASH, statistics insufficient
13058: Facts:
13058:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13058:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13058:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13058:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13058:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13058:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13058:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13058:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13058:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13058:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13058:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13058:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13058:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13058:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
13058: Goal:
13058:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
13058: Order:
13058:   kbo
13058: Leaf order:
13058:  n0 1 0 0 
13058:  n1 1 0 0 
13058:  complement 10 1 0 
13058:  meet 17 2 3 0,2
13058:  join 18 2 2 0,2,2
13058:  c 2 0 2 2,2,2
13058:  b 2 0 2 1,2,2
13058:  a 3 0 3 1,2
CLASH, statistics insufficient
13059: Facts:
13059:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13059:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13059:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13059:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13059:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13059:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13059:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13059:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13059:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13059:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13059:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13059:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13059:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13059:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
13059: Goal:
13059:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
13059: Order:
13059:   lpo
13059: Leaf order:
13059:  n0 1 0 0 
13059:  n1 1 0 0 
13059:  complement 10 1 0 
13059:  meet 17 2 3 0,2
13059:  join 18 2 2 0,2,2
13059:  c 2 0 2 2,2,2
13059:  b 2 0 2 1,2,2
13059:  a 3 0 3 1,2
% SZS status Timeout for LAT046-1.p
NO CLASH, using fixed ground order
13087: Facts:
NO CLASH, using fixed ground order
13088: Facts:
13088:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13088:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13088:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13088:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13088:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13088:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13088:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13088:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13088: Goal:
13088:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
13088: Order:
13088:   kbo
13088: Leaf order:
13088:  meet 11 2 2 0,2,2
13088:  join 13 2 4 0,2
13088:  c 2 0 2 2,2,2,2
13088:  b 2 0 2 1,2,2
13088:  a 4 0 4 1,2
13087:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13087:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13087:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13087:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13087:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13087:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13087:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13087:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13087: Goal:
13087:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
13087: Order:
13087:   nrkbo
13087: Leaf order:
13087:  meet 11 2 2 0,2,2
13087:  join 13 2 4 0,2
13087:  c 2 0 2 2,2,2,2
13087:  b 2 0 2 1,2,2
13087:  a 4 0 4 1,2
NO CLASH, using fixed ground order
13089: Facts:
13089:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13089:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13089:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13089:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13089:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13089:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13089:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13089:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13089: Goal:
13089:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
13089: Order:
13089:   lpo
13089: Leaf order:
13089:  meet 11 2 2 0,2,2
13089:  join 13 2 4 0,2
13089:  c 2 0 2 2,2,2,2
13089:  b 2 0 2 1,2,2
13089:  a 4 0 4 1,2
% SZS status Timeout for LAT047-1.p
NO CLASH, using fixed ground order
13105: Facts:
13105:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13105:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13105:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13105:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13105:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13105:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13105:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13105:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13105:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13105:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13105:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13105:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13105:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13105:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
13105: Goal:
13105:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
13105: Order:
13105:   nrkbo
13105: Leaf order:
13105:  n0 1 0 0 
13105:  n1 2 0 0 
13105:  meet 15 2 1 0,2,2
13105:  join 18 2 3 0,2
13105:  b 2 0 2 2,2,2,2
13105:  complement 13 1 1 0,1,2,2
13105:  a 4 0 4 1,2
NO CLASH, using fixed ground order
13106: Facts:
13106:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13106:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13106:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13106:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13106:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13106:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13106:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13106:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13106:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13106:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13106:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13106:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13106:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13106:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
13106: Goal:
13106:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
13106: Order:
13106:   kbo
13106: Leaf order:
13106:  n0 1 0 0 
13106:  n1 2 0 0 
13106:  meet 15 2 1 0,2,2
13106:  join 18 2 3 0,2
13106:  b 2 0 2 2,2,2,2
13106:  complement 13 1 1 0,1,2,2
13106:  a 4 0 4 1,2
NO CLASH, using fixed ground order
13107: Facts:
13107:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13107:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13107:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13107:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13107:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13107:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13107:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13107:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13107:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13107:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13107:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13107:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13107:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13107:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
13107: Goal:
13107:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
13107: Order:
13107:   lpo
13107: Leaf order:
13107:  n0 1 0 0 
13107:  n1 2 0 0 
13107:  meet 15 2 1 0,2,2
13107:  join 18 2 3 0,2
13107:  b 2 0 2 2,2,2,2
13107:  complement 13 1 1 0,1,2,2
13107:  a 4 0 4 1,2
% SZS status Timeout for LAT048-1.p
NO CLASH, using fixed ground order
13228: Facts:
13228:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13228:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13228:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13228:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13228:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13228:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13228:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13228:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13228:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13228:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13228:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13228:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13228:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13228: Goal:
13228:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
13228: Order:
13228:   nrkbo
13228: Leaf order:
13228:  n0 1 0 0 
13228:  n1 2 0 1 3
13228:  meet 14 2 2 0,1,2
13228:  join 15 2 3 0,2
13228:  b 3 0 3 2,2,1,2
13228:  complement 12 1 2 0,1,1,2
13228:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
13229: Facts:
13229:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13229:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13229:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13229:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13229:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13229:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13229:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13229:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13229:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13229:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13229:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13229:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13229:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13229: Goal:
13229:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
13229: Order:
13229:   kbo
13229: Leaf order:
13229:  n0 1 0 0 
13229:  n1 2 0 1 3
13229:  meet 14 2 2 0,1,2
13229:  join 15 2 3 0,2
13229:  b 3 0 3 2,2,1,2
13229:  complement 12 1 2 0,1,1,2
13229:  a 3 0 3 1,1,1,2
NO CLASH, using fixed ground order
13230: Facts:
13230:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13230:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13230:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13230:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13230:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13230:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13230:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13230:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13230:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13230:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13230:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13230:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13230:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13230: Goal:
13230:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
13230: Order:
13230:   lpo
13230: Leaf order:
13230:  n0 1 0 0 
13230:  n1 2 0 1 3
13230:  meet 14 2 2 0,1,2
13230:  join 15 2 3 0,2
13230:  b 3 0 3 2,2,1,2
13230:  complement 12 1 2 0,1,1,2
13230:  a 3 0 3 1,1,1,2
% SZS status Timeout for LAT049-1.p
CLASH, statistics insufficient
13579: Facts:
13579:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13579:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13579:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13579:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13579:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13579:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13579:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13579:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13579:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13579:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13579:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13579:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13579:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13579:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
13579: Goal:
13579:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
13579: Order:
13579:   nrkbo
13579: Leaf order:
13579:  n0 1 0 0 
13579:  n1 1 0 0 
13579:  complement 11 1 0 
13579:  meet 15 2 2 0,2,2
13579:  join 19 2 4 0,2
13579:  c 2 0 2 2,2,2,2
13579:  b 2 0 2 1,2,2
13579:  a 4 0 4 1,2
CLASH, statistics insufficient
13580: Facts:
13580:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13580:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13580:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13580:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13580:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13580:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13580:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13580:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13580:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13580:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13580:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13580:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13580:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13580:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
13580: Goal:
13580:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
13580: Order:
13580:   kbo
13580: Leaf order:
13580:  n0 1 0 0 
13580:  n1 1 0 0 
13580:  complement 11 1 0 
13580:  meet 15 2 2 0,2,2
13580:  join 19 2 4 0,2
13580:  c 2 0 2 2,2,2,2
13580:  b 2 0 2 1,2,2
13580:  a 4 0 4 1,2
CLASH, statistics insufficient
13582: Facts:
13582:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13582:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13582:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13582:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13582:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13582:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13582:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13582:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13582:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13582:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13582:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13582:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13582:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13582:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
13582: Goal:
13582:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
13582: Order:
13582:   lpo
13582: Leaf order:
13582:  n0 1 0 0 
13582:  n1 1 0 0 
13582:  complement 11 1 0 
13582:  meet 15 2 2 0,2,2
13582:  join 19 2 4 0,2
13582:  c 2 0 2 2,2,2,2
13582:  b 2 0 2 1,2,2
13582:  a 4 0 4 1,2
% SZS status Timeout for LAT050-1.p
CLASH, statistics insufficient
13811: Facts:
13811:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13811:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13811:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13811:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13811:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13811:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13811:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13811:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13811:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13811:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13811:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13811: Goal:
13811:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
13811: Order:
13811:   nrkbo
13811: Leaf order:
13811:  n0 1 0 0 
13811:  n1 1 0 0 
13811:  meet 11 2 1 0,3
13811:  complement 7 1 3 0,2
13811:  join 11 2 1 0,1,2
13811:  b 2 0 2 2,1,2
13811:  a 2 0 2 1,1,2
CLASH, statistics insufficient
13812: Facts:
13812:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13812:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13812:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13812:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13812:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13812:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13812:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13812:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13812:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13812:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13812:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13812: Goal:
13812:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
13812: Order:
13812:   kbo
13812: Leaf order:
13812:  n0 1 0 0 
13812:  n1 1 0 0 
13812:  meet 11 2 1 0,3
13812:  complement 7 1 3 0,2
13812:  join 11 2 1 0,1,2
13812:  b 2 0 2 2,1,2
13812:  a 2 0 2 1,1,2
CLASH, statistics insufficient
13813: Facts:
13813:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13813:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13813:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13813:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13813:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13813:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13813:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13813:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13813:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13813:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13813:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13813: Goal:
13813:  Id :   1, {_}:
          complement (join a b) =>= meet (complement a) (complement b)
          [] by prove_compatibility_law
13813: Order:
13813:   lpo
13813: Leaf order:
13813:  n0 1 0 0 
13813:  n1 1 0 0 
13813:  meet 11 2 1 0,3
13813:  complement 7 1 3 0,2
13813:  join 11 2 1 0,1,2
13813:  b 2 0 2 2,1,2
13813:  a 2 0 2 1,1,2
% SZS status Timeout for LAT051-1.p
CLASH, statistics insufficient
13839: Facts:
13839:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13839:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13839:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13839:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13839:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13839:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13839:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13839:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13839:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13839:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13839:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13839:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
13839: Goal:
13839:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
13839: Order:
13839:   nrkbo
13839: Leaf order:
13839:  n0 1 0 0 
13839:  n1 1 0 0 
13839:  meet 13 2 1 0,3
13839:  complement 7 1 3 0,2
13839:  join 15 2 1 0,1,2
13839:  b 2 0 2 2,1,2
13839:  a 2 0 2 1,1,2
CLASH, statistics insufficient
13840: Facts:
13840:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13840:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13840:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13840:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13840:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13840:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13840:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13840:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13840:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13840:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13840:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13840:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
13840: Goal:
13840:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
13840: Order:
13840:   kbo
13840: Leaf order:
13840:  n0 1 0 0 
13840:  n1 1 0 0 
13840:  meet 13 2 1 0,3
13840:  complement 7 1 3 0,2
13840:  join 15 2 1 0,1,2
13840:  b 2 0 2 2,1,2
13840:  a 2 0 2 1,1,2
CLASH, statistics insufficient
13841: Facts:
13841:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13841:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13841:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13841:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13841:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13841:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13841:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13841:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13841:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
13841:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
13841:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
13841:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
13841: Goal:
13841:  Id :   1, {_}:
          complement (join a b) =>= meet (complement a) (complement b)
          [] by prove_compatibility_law
13841: Order:
13841:   lpo
13841: Leaf order:
13841:  n0 1 0 0 
13841:  n1 1 0 0 
13841:  meet 13 2 1 0,3
13841:  complement 7 1 3 0,2
13841:  join 15 2 1 0,1,2
13841:  b 2 0 2 2,1,2
13841:  a 2 0 2 1,1,2
% SZS status Timeout for LAT052-1.p
CLASH, statistics insufficient
13871: Facts:
13871:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13871:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13871:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13871:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13871:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13871:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13871:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13871:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13871:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13871:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13871:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13871:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13871:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13871: Goal:
13871:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
13871: Order:
13871:   nrkbo
13871: Leaf order:
13871:  n0 1 0 0 
13871:  n1 1 0 0 
13871:  join 19 2 7 0,2
13871:  meet 19 2 7 0,2,2
13871:  complement 21 1 11 0,1,2,2
13871:  b 7 0 7 1,1,2,2
13871:  a 9 0 9 1,2
CLASH, statistics insufficient
13872: Facts:
13872:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13872:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13872:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13872:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13872:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13872:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13872:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13872:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13872:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13872:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13872:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13872:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13872:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13872: Goal:
13872:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
13872: Order:
13872:   kbo
13872: Leaf order:
13872:  n0 1 0 0 
13872:  n1 1 0 0 
13872:  join 19 2 7 0,2
13872:  meet 19 2 7 0,2,2
13872:  complement 21 1 11 0,1,2,2
13872:  b 7 0 7 1,1,2,2
13872:  a 9 0 9 1,2
CLASH, statistics insufficient
13873: Facts:
13873:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13873:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13873:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13873:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13873:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13873:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13873:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13873:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13873:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
13873:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
13873:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
13873:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
13873:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
13873: Goal:
13873:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
13873: Order:
13873:   lpo
13873: Leaf order:
13873:  n0 1 0 0 
13873:  n1 1 0 0 
13873:  join 19 2 7 0,2
13873:  meet 19 2 7 0,2,2
13873:  complement 21 1 11 0,1,2,2
13873:  b 7 0 7 1,1,2,2
13873:  a 9 0 9 1,2
% SZS status Timeout for LAT054-1.p
CLASH, statistics insufficient
13890: Facts:
13890:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13890:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13890:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13890:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13890:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13890:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13890:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13890:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13890:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13890:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13890:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13890: Goal:
13890:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
13890: Order:
13890:   nrkbo
13890: Leaf order:
13890:  n0 1 0 0 
13890:  n1 1 0 0 
13890:  meet 17 2 6 0,2
13890:  join 15 2 4 0,1,2
13890:  complement 11 1 6 0,2,1,2
13890:  b 6 0 6 1,2,1,2
13890:  a 6 0 6 1,1,2
CLASH, statistics insufficient
13891: Facts:
13891:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13891:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13891:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13891:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13891:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13891:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13891:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13891:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13891:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13891:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13891:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13891: Goal:
13891:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
13891: Order:
13891:   kbo
13891: Leaf order:
13891:  n0 1 0 0 
13891:  n1 1 0 0 
13891:  meet 17 2 6 0,2
13891:  join 15 2 4 0,1,2
13891:  complement 11 1 6 0,2,1,2
13891:  b 6 0 6 1,2,1,2
13891:  a 6 0 6 1,1,2
CLASH, statistics insufficient
13892: Facts:
13892:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13892:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13892:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13892:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13892:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13892:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13892:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13892:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13892:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13892:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13892:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13892: Goal:
13892:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
13892: Order:
13892:   lpo
13892: Leaf order:
13892:  n0 1 0 0 
13892:  n1 1 0 0 
13892:  meet 17 2 6 0,2
13892:  join 15 2 4 0,1,2
13892:  complement 11 1 6 0,2,1,2
13892:  b 6 0 6 1,2,1,2
13892:  a 6 0 6 1,1,2
% SZS status Timeout for LAT062-1.p
CLASH, statistics insufficient
13921: Facts:
13921:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13921:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13921:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13921:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13921:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13921:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13921:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13921:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13921:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13921:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13921:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13921: Goal:
CLASH, statistics insufficient
CLASH, statistics insufficient
13921:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
13921: Order:
13921:   nrkbo
13921: Leaf order:
13921:  n0 1 0 0 
13921:  n1 1 0 0 
13921:  join 14 2 3 0,2,2
13921:  meet 16 2 5 0,2
13921:  complement 7 1 2 0,1,2,2,2,2
13921:  b 3 0 3 1,2,2
13921:  a 7 0 7 1,2
13923: Facts:
13923:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13923:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13923:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13923:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13923:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13923:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13923:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13923:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13923:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13923:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13923:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13923: Goal:
13923:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
13923: Order:
13923:   lpo
13923: Leaf order:
13923:  n0 1 0 0 
13923:  n1 1 0 0 
13923:  join 14 2 3 0,2,2
13923:  meet 16 2 5 0,2
13923:  complement 7 1 2 0,1,2,2,2,2
13923:  b 3 0 3 1,2,2
13923:  a 7 0 7 1,2
13922: Facts:
13922:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13922:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13922:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13922:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13922:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13922:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13922:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13922:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13922:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
13922:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
13922:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
13922: Goal:
13922:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
13922: Order:
13922:   kbo
13922: Leaf order:
13922:  n0 1 0 0 
13922:  n1 1 0 0 
13922:  join 14 2 3 0,2,2
13922:  meet 16 2 5 0,2
13922:  complement 7 1 2 0,1,2,2,2,2
13922:  b 3 0 3 1,2,2
13922:  a 7 0 7 1,2
% SZS status Timeout for LAT063-1.p
NO CLASH, using fixed ground order
13955: Facts:
13955:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13955:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13955:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13955:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13955:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13955:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13955:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13955:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13955:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
13955: Goal:
13955:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
13955: Order:
13955:   nrkbo
13955: Leaf order:
13955:  join 17 2 4 0,2,2
13955:  meet 21 2 6 0,2
13955:  c 3 0 3 2,2,2,2
13955:  b 4 0 4 1,2,2
13955:  a 5 0 5 1,2
NO CLASH, using fixed ground order
13956: Facts:
13956:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13956:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13956:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13956:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13956:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13956:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13956:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13956:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13956:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
13956: Goal:
13956:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
13956: Order:
13956:   kbo
13956: Leaf order:
13956:  join 17 2 4 0,2,2
13956:  meet 21 2 6 0,2
13956:  c 3 0 3 2,2,2,2
13956:  b 4 0 4 1,2,2
13956:  a 5 0 5 1,2
NO CLASH, using fixed ground order
13957: Facts:
13957:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13957:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13957:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13957:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13957:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13957:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13957:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13957:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13957:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
13957: Goal:
13957:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
13957: Order:
13957:   lpo
13957: Leaf order:
13957:  join 17 2 4 0,2,2
13957:  meet 21 2 6 0,2
13957:  c 3 0 3 2,2,2,2
13957:  b 4 0 4 1,2,2
13957:  a 5 0 5 1,2
% SZS status Timeout for LAT098-1.p
NO CLASH, using fixed ground order
13999: Facts:
13999:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13999:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13999:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13999:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13999:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13999:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13999:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13999:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13999:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
13999: Goal:
13999:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
13999: Order:
13999:   nrkbo
13999: Leaf order:
13999:  meet 20 2 5 0,2
13999:  join 18 2 5 0,2,2
13999:  d 3 0 3 2,2,2,2,2
13999:  c 2 0 2 1,2,2,2,2
13999:  b 3 0 3 1,2,2
13999:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14000: Facts:
14000:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14000:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14000:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14000:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14000:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14000:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14000:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14000:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14000:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
14000: Goal:
14000:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
14000: Order:
14000:   kbo
14000: Leaf order:
14000:  meet 20 2 5 0,2
14000:  join 18 2 5 0,2,2
14000:  d 3 0 3 2,2,2,2,2
14000:  c 2 0 2 1,2,2,2,2
14000:  b 3 0 3 1,2,2
14000:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14001: Facts:
14001:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14001:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14001:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14001:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14001:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14001:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14001:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14001:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14001:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
14001: Goal:
14001:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
14001: Order:
14001:   lpo
14001: Leaf order:
14001:  meet 20 2 5 0,2
14001:  join 18 2 5 0,2,2
14001:  d 3 0 3 2,2,2,2,2
14001:  c 2 0 2 1,2,2,2,2
14001:  b 3 0 3 1,2,2
14001:  a 4 0 4 1,2
% SZS status Timeout for LAT100-1.p
NO CLASH, using fixed ground order
14017: Facts:
14017:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14017:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14017:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14017:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14017:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14017:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14017:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14017:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14017:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
14017: Goal:
14017:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14017: Order:
14017:   nrkbo
14017: Leaf order:
14017:  join 16 2 3 0,2,2
14017:  meet 20 2 5 0,2
14017:  c 3 0 3 2,2,2,2
14017:  b 3 0 3 1,2,2
14017:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14018: Facts:
14018:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14018:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14018:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14018:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14018:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14018:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14018:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14018:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14018:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
14018: Goal:
14018:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14018: Order:
14018:   kbo
14018: Leaf order:
14018:  join 16 2 3 0,2,2
14018:  meet 20 2 5 0,2
14018:  c 3 0 3 2,2,2,2
14018:  b 3 0 3 1,2,2
14018:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14019: Facts:
14019:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14019:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14019:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14019:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14019:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14019:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14019:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14019:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14019:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
14019: Goal:
14019:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14019: Order:
14019:   lpo
14019: Leaf order:
14019:  join 16 2 3 0,2,2
14019:  meet 20 2 5 0,2
14019:  c 3 0 3 2,2,2,2
14019:  b 3 0 3 1,2,2
14019:  a 4 0 4 1,2
% SZS status Timeout for LAT101-1.p
NO CLASH, using fixed ground order
14050: Facts:
14050:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14050:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14050:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14050:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14050:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14050:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14050:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14050:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14050:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
14050: Goal:
14050:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
14050: Order:
14050:   nrkbo
14050: Leaf order:
14050:  meet 20 2 5 0,2
14050:  join 18 2 5 0,2,2
14050:  d 3 0 3 2,2,2,2,2
14050:  c 2 0 2 1,2,2,2,2
14050:  b 3 0 3 1,2,2
14050:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14051: Facts:
14051:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14051:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14051:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14051:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14051:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14051:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14051:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14051:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14051:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
14051: Goal:
14051:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
14051: Order:
14051:   kbo
14051: Leaf order:
14051:  meet 20 2 5 0,2
14051:  join 18 2 5 0,2,2
14051:  d 3 0 3 2,2,2,2,2
14051:  c 2 0 2 1,2,2,2,2
14051:  b 3 0 3 1,2,2
14051:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14052: Facts:
14052:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14052:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14052:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14052:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14052:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14052:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14052:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14052:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14052:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
14052: Goal:
14052:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
14052: Order:
14052:   lpo
14052: Leaf order:
14052:  meet 20 2 5 0,2
14052:  join 18 2 5 0,2,2
14052:  d 3 0 3 2,2,2,2,2
14052:  c 2 0 2 1,2,2,2,2
14052:  b 3 0 3 1,2,2
14052:  a 4 0 4 1,2
% SZS status Timeout for LAT102-1.p
NO CLASH, using fixed ground order
14140: Facts:
14140:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14140:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14140:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14140:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14140:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14140:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14140:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14140:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14140:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
14140: Goal:
14140:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
14140: Order:
14140:   nrkbo
14140: Leaf order:
14140:  join 16 2 4 0,2,2
14140:  meet 20 2 6 0,2
14140:  c 3 0 3 2,2,2,2
14140:  b 3 0 3 1,2,2
14140:  a 6 0 6 1,2
NO CLASH, using fixed ground order
14141: Facts:
14141:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14141:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14141:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14141:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14141:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14141:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14141:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14141:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14141:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
14141: Goal:
14141:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
14141: Order:
14141:   kbo
14141: Leaf order:
14141:  join 16 2 4 0,2,2
14141:  meet 20 2 6 0,2
14141:  c 3 0 3 2,2,2,2
14141:  b 3 0 3 1,2,2
14141:  a 6 0 6 1,2
NO CLASH, using fixed ground order
14142: Facts:
14142:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14142:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14142:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14142:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14142:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14142:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14142:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14142:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14142:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
14142: Goal:
14142:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
14142: Order:
14142:   lpo
14142: Leaf order:
14142:  join 16 2 4 0,2,2
14142:  meet 20 2 6 0,2
14142:  c 3 0 3 2,2,2,2
14142:  b 3 0 3 1,2,2
14142:  a 6 0 6 1,2
% SZS status Timeout for LAT103-1.p
NO CLASH, using fixed ground order
14175: Facts:
14175:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14175:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14175:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14175:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14175:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14175:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14175:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14175:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14175:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14175: Goal:
14175:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14175: Order:
14175:   kbo
14175: Leaf order:
14175:  join 17 2 4 0,2,2
14175:  meet 21 2 6 0,2
14175:  c 3 0 3 2,2,2,2
14175:  b 4 0 4 1,2,2
14175:  a 5 0 5 1,2
NO CLASH, using fixed ground order
14176: Facts:
14176:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14176:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14176:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14176:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14176:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14176:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14176:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14176:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14176:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14176: Goal:
14176:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14176: Order:
14176:   lpo
14176: Leaf order:
14176:  join 17 2 4 0,2,2
14176:  meet 21 2 6 0,2
14176:  c 3 0 3 2,2,2,2
14176:  b 4 0 4 1,2,2
14176:  a 5 0 5 1,2
NO CLASH, using fixed ground order
14174: Facts:
14174:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14174:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14174:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14174:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14174:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14174:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14174:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14174:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14174:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14174: Goal:
14174:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14174: Order:
14174:   nrkbo
14174: Leaf order:
14174:  join 17 2 4 0,2,2
14174:  meet 21 2 6 0,2
14174:  c 3 0 3 2,2,2,2
14174:  b 4 0 4 1,2,2
14174:  a 5 0 5 1,2
% SZS status Timeout for LAT104-1.p
NO CLASH, using fixed ground order
14193: Facts:
14193:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14193:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14193:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14193:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14193:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14193:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14193:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14193:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14193:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14193: Goal:
14193:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14193: Order:
14193:   nrkbo
14193: Leaf order:
14193:  join 16 2 3 0,2,2
14193:  meet 20 2 5 0,2
14193:  c 3 0 3 2,2,2,2
14193:  b 3 0 3 1,2,2
14193:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14194: Facts:
14194:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14194:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14194:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14194:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14194:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14194:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14194:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14194:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14194:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14194: Goal:
14194:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14194: Order:
14194:   kbo
14194: Leaf order:
14194:  join 16 2 3 0,2,2
14194:  meet 20 2 5 0,2
14194:  c 3 0 3 2,2,2,2
14194:  b 3 0 3 1,2,2
14194:  a 4 0 4 1,2
NO CLASH, using fixed ground order
14195: Facts:
14195:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14195:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14195:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14195:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14195:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14195:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14195:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14195:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14195:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
14195: Goal:
14195:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
14195: Order:
14195:   lpo
14195: Leaf order:
14195:  join 16 2 3 0,2,2
14195:  meet 20 2 5 0,2
14195:  c 3 0 3 2,2,2,2
14195:  b 3 0 3 1,2,2
14195:  a 4 0 4 1,2
% SZS status Timeout for LAT105-1.p
NO CLASH, using fixed ground order
14223: Facts:
14223:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14223:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14223:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14223:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14223:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14223:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14223:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14223:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14223:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14223: Goal:
14223:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14223: Order:
14223:   nrkbo
14223: Leaf order:
14223:  join 17 2 4 0,2,2
14223:  meet 21 2 6 0,2
14223:  c 3 0 3 2,2,2,2
14223:  b 4 0 4 1,2,2
14223:  a 5 0 5 1,2
NO CLASH, using fixed ground order
14224: Facts:
14224:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14224:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14224:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14224:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14224:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14224:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14224:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14224:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14224:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14224: Goal:
14224:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14224: Order:
14224:   kbo
14224: Leaf order:
NO CLASH, using fixed ground order
14225: Facts:
14225:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14225:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14225:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14225:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14225:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14225:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14225:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14225:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14225:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14225: Goal:
14225:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
14225: Order:
14225:   lpo
14225: Leaf order:
14225:  join 17 2 4 0,2,2
14225:  meet 21 2 6 0,2
14225:  c 3 0 3 2,2,2,2
14225:  b 4 0 4 1,2,2
14225:  a 5 0 5 1,2
14224:  join 17 2 4 0,2,2
14224:  meet 21 2 6 0,2
14224:  c 3 0 3 2,2,2,2
14224:  b 4 0 4 1,2,2
14224:  a 5 0 5 1,2
% SZS status Timeout for LAT106-1.p
NO CLASH, using fixed ground order
14371: Facts:
14371:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14371:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14371:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14371:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14371:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14371:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14371:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14371:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14371:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14371: Goal:
14371:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =<=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
14371: Order:
14371:   nrkbo
14371: Leaf order:
14371:  join 17 2 4 0,2,2
14371:  c 3 0 3 2,2,2,2
14371:  meet 22 2 7 0,2
14371:  b 4 0 4 2,1,2,2
14371:  a 6 0 6 1,2
NO CLASH, using fixed ground order
14372: Facts:
14372:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14372:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14372:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14372:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14372:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14372:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14372:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14372:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14372:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14372: Goal:
14372:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =<=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
14372: Order:
14372:   kbo
14372: Leaf order:
14372:  join 17 2 4 0,2,2
14372:  c 3 0 3 2,2,2,2
14372:  meet 22 2 7 0,2
14372:  b 4 0 4 2,1,2,2
14372:  a 6 0 6 1,2
NO CLASH, using fixed ground order
14373: Facts:
14373:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14373:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14373:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14373:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14373:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14373:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14373:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14373:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14373:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
14373: Goal:
14373:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =>=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
14373: Order:
14373:   lpo
14373: Leaf order:
14373:  join 17 2 4 0,2,2
14373:  c 3 0 3 2,2,2,2
14373:  meet 22 2 7 0,2
14373:  b 4 0 4 2,1,2,2
14373:  a 6 0 6 1,2
% SZS status Timeout for LAT107-1.p
NO CLASH, using fixed ground order
15801: Facts:
15801:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15801:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15801:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15801:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15801:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15801:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15801:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15801:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15801:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
15801: Goal:
15801:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
15801: Order:
15801:   nrkbo
15801: Leaf order:
15801:  meet 21 2 5 0,2
15801:  join 17 2 5 0,2,2
15801:  d 2 0 2 2,2,2,2,2
15801:  c 3 0 3 1,2,2,2
15801:  b 3 0 3 1,2,2
15801:  a 4 0 4 1,2
NO CLASH, using fixed ground order
15804: Facts:
15804:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15804:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15804:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15804:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15804:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15804:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15804:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15804:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15804:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
15804: Goal:
15804:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
15804: Order:
15804:   kbo
15804: Leaf order:
15804:  meet 21 2 5 0,2
15804:  join 17 2 5 0,2,2
15804:  d 2 0 2 2,2,2,2,2
15804:  c 3 0 3 1,2,2,2
15804:  b 3 0 3 1,2,2
15804:  a 4 0 4 1,2
NO CLASH, using fixed ground order
15805: Facts:
15805:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15805:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15805:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15805:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15805:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15805:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15805:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15805:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15805:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
15805: Goal:
15805:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
15805: Order:
15805:   lpo
15805: Leaf order:
15805:  meet 21 2 5 0,2
15805:  join 17 2 5 0,2,2
15805:  d 2 0 2 2,2,2,2,2
15805:  c 3 0 3 1,2,2,2
15805:  b 3 0 3 1,2,2
15805:  a 4 0 4 1,2
% SZS status Timeout for LAT108-1.p
NO CLASH, using fixed ground order
17324: Facts:
17324:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17324:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17324:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17324:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17324:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17324:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17324:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17324:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17324:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
17324: Goal:
17324:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
17324: Order:
17324:   lpo
17324: Leaf order:
17324:  meet 19 2 5 0,2
17324:  join 19 2 5 0,2,2
17324:  d 2 0 2 2,2,2,2,2
17324:  c 3 0 3 1,2,2,2
17324:  b 3 0 3 1,2,2
17324:  a 4 0 4 1,2
NO CLASH, using fixed ground order
17322: Facts:
17322:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17322:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17322:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17322:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17322:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17322:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17322:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17322:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17322:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
17322: Goal:
17322:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
17322: Order:
17322:   nrkbo
17322: Leaf order:
17322:  meet 19 2 5 0,2
17322:  join 19 2 5 0,2,2
17322:  d 2 0 2 2,2,2,2,2
17322:  c 3 0 3 1,2,2,2
17322:  b 3 0 3 1,2,2
17322:  a 4 0 4 1,2
NO CLASH, using fixed ground order
17323: Facts:
17323:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17323:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17323:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17323:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17323:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17323:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17323:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17323:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17323:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
17323: Goal:
17323:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
17323: Order:
17323:   kbo
17323: Leaf order:
17323:  meet 19 2 5 0,2
17323:  join 19 2 5 0,2,2
17323:  d 2 0 2 2,2,2,2,2
17323:  c 3 0 3 1,2,2,2
17323:  b 3 0 3 1,2,2
17323:  a 4 0 4 1,2
% SZS status Timeout for LAT109-1.p
NO CLASH, using fixed ground order
19002: Facts:
19002:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19002:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19002:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19002:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19002:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19002:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19002:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19002:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19002:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
19002: Goal:
19002:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19002: Order:
19002:   nrkbo
19002: Leaf order:
19002:  meet 21 2 5 0,2
19002:  join 17 2 5 0,2,2
19002:  d 2 0 2 2,2,2,2,2
19002:  c 3 0 3 1,2,2,2
19002:  b 3 0 3 1,2,2
19002:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19008: Facts:
19008:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19008:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19008:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19008:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19008:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19008:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19008:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19008:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19008:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
19008: Goal:
19008:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19008: Order:
19008:   kbo
19008: Leaf order:
19008:  meet 21 2 5 0,2
19008:  join 17 2 5 0,2,2
19008:  d 2 0 2 2,2,2,2,2
19008:  c 3 0 3 1,2,2,2
19008:  b 3 0 3 1,2,2
19008:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19009: Facts:
19009:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19009:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19009:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19009:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19009:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19009:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19009:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19009:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19009:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
19009: Goal:
19009:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19009: Order:
19009:   lpo
19009: Leaf order:
19009:  meet 21 2 5 0,2
19009:  join 17 2 5 0,2,2
19009:  d 2 0 2 2,2,2,2,2
19009:  c 3 0 3 1,2,2,2
19009:  b 3 0 3 1,2,2
19009:  a 4 0 4 1,2
% SZS status Timeout for LAT111-1.p
NO CLASH, using fixed ground order
19496: Facts:
19496:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19496:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19496:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19496:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19496:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19496:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19496:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19496:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19496:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
19496: Goal:
19496:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
19496: Order:
19496:   nrkbo
19496: Leaf order:
19496:  meet 21 2 5 0,2
19496:  join 17 2 5 0,2,2
19496:  d 2 0 2 2,2,2,2,2
19496:  c 3 0 3 1,2,2,2
19496:  b 3 0 3 1,2,2
19496:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19497: Facts:
19497:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19497:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19497:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19497:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19497:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19497:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19497:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19497:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19497:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
19497: Goal:
19497:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
19497: Order:
19497:   kbo
19497: Leaf order:
19497:  meet 21 2 5 0,2
19497:  join 17 2 5 0,2,2
19497:  d 2 0 2 2,2,2,2,2
19497:  c 3 0 3 1,2,2,2
19497:  b 3 0 3 1,2,2
19497:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19498: Facts:
19498:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19498:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19498:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19498:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19498:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19498:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19498:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19498:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19498:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
19498: Goal:
19498:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
19498: Order:
19498:   lpo
19498: Leaf order:
19498:  meet 21 2 5 0,2
19498:  join 17 2 5 0,2,2
19498:  d 2 0 2 2,2,2,2,2
19498:  c 3 0 3 1,2,2,2
19498:  b 3 0 3 1,2,2
19498:  a 4 0 4 1,2
% SZS status Timeout for LAT112-1.p
NO CLASH, using fixed ground order
19529: Facts:
19529:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19529:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19529:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19529:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19529:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19529:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19529:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19529:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19529:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
19529: Goal:
19529:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19529: Order:
19529:   nrkbo
19529: Leaf order:
19529:  meet 19 2 5 0,2
19529:  join 19 2 5 0,2,2
19529:  d 2 0 2 2,2,2,2,2
19529:  c 3 0 3 1,2,2,2
19529:  b 3 0 3 1,2,2
19529:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19530: Facts:
19530:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19530:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19530:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19530:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19530:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19530:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19530:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19530:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19530:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
19530: Goal:
19530:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19530: Order:
19530:   kbo
19530: Leaf order:
19530:  meet 19 2 5 0,2
19530:  join 19 2 5 0,2,2
19530:  d 2 0 2 2,2,2,2,2
19530:  c 3 0 3 1,2,2,2
19530:  b 3 0 3 1,2,2
19530:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19531: Facts:
19531:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19531:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19531:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19531:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19531:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19531:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19531:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19531:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19531:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
19531: Goal:
19531:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
19531: Order:
19531:   lpo
19531: Leaf order:
19531:  meet 19 2 5 0,2
19531:  join 19 2 5 0,2,2
19531:  d 2 0 2 2,2,2,2,2
19531:  c 3 0 3 1,2,2,2
19531:  b 3 0 3 1,2,2
19531:  a 4 0 4 1,2
% SZS status Timeout for LAT113-1.p
NO CLASH, using fixed ground order
19568: Facts:
19568:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19568:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19568:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19568:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19568:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19568:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19568:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19568:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19568:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19568: Goal:
19568:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
19568: Order:
19568:   kbo
19568: Leaf order:
19568:  join 19 2 5 0,2
19568:  c 2 0 2 2,2,2,2
19568:  meet 17 2 5 0,1,2
19568:  b 5 0 5 2,1,2
19568:  a 5 0 5 1,1,2
NO CLASH, using fixed ground order
19567: Facts:
19567:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19567:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19567:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19567:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19567:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19567:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19567:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19567:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19567:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19567: Goal:
19567:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
19567: Order:
19567:   nrkbo
19567: Leaf order:
19567:  join 19 2 5 0,2
19567:  c 2 0 2 2,2,2,2
19567:  meet 17 2 5 0,1,2
19567:  b 5 0 5 2,1,2
19567:  a 5 0 5 1,1,2
NO CLASH, using fixed ground order
19569: Facts:
19569:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19569:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19569:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19569:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19569:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19569:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19569:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19569:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19569:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19569: Goal:
19569:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
19569: Order:
19569:   lpo
19569: Leaf order:
19569:  join 19 2 5 0,2
19569:  c 2 0 2 2,2,2,2
19569:  meet 17 2 5 0,1,2
19569:  b 5 0 5 2,1,2
19569:  a 5 0 5 1,1,2
% SZS status Timeout for LAT114-1.p
NO CLASH, using fixed ground order
19631: Facts:
19631:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19631:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19631:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19631:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19631:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19631:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19631:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19631:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19631:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19631: Goal:
19631:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
19631: Order:
19631:   nrkbo
19631: Leaf order:
19631:  meet 17 2 5 0,2
19631:  d 2 0 2 2,2,2,2
19631:  join 19 2 5 0,1,2,2
19631:  c 2 0 2 2,1,2,2
19631:  b 5 0 5 1,1,2,2
19631:  a 3 0 3 1,2
NO CLASH, using fixed ground order
19632: Facts:
19632:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19632:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19632:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19632:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19632:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19632:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19632:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19632:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19632:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19632: Goal:
19632:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
19632: Order:
19632:   kbo
19632: Leaf order:
19632:  meet 17 2 5 0,2
19632:  d 2 0 2 2,2,2,2
19632:  join 19 2 5 0,1,2,2
19632:  c 2 0 2 2,1,2,2
19632:  b 5 0 5 1,1,2,2
19632:  a 3 0 3 1,2
NO CLASH, using fixed ground order
19633: Facts:
19633:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19633:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19633:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19633:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19633:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19633:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19633:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19633:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19633:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19633: Goal:
19633:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
19633: Order:
19633:   lpo
19633: Leaf order:
19633:  meet 17 2 5 0,2
19633:  d 2 0 2 2,2,2,2
19633:  join 19 2 5 0,1,2,2
19633:  c 2 0 2 2,1,2,2
19633:  b 5 0 5 1,1,2,2
19633:  a 3 0 3 1,2
% SZS status Timeout for LAT115-1.p
NO CLASH, using fixed ground order
19650: Facts:
19650:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19650:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19650:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19650:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19650:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19650:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
NO CLASH, using fixed ground order
19651: Facts:
19651:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19651:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19651:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19651:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19651:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19651:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19651:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19651:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19651:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19651: Goal:
19651:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
19651: Order:
19651:   kbo
19651: Leaf order:
19651:  meet 17 2 5 0,2
19651:  d 2 0 2 2,2,2,2
19651:  join 19 2 5 0,1,2,2
19651:  c 2 0 2 2,1,2,2
19651:  b 5 0 5 1,1,2,2
19651:  a 3 0 3 1,2
19650:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19650:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19650:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19650: Goal:
19650:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
19650: Order:
19650:   nrkbo
19650: Leaf order:
19650:  meet 17 2 5 0,2
19650:  d 2 0 2 2,2,2,2
19650:  join 19 2 5 0,1,2,2
19650:  c 2 0 2 2,1,2,2
19650:  b 5 0 5 1,1,2,2
19650:  a 3 0 3 1,2
NO CLASH, using fixed ground order
19652: Facts:
19652:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19652:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19652:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19652:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19652:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19652:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19652:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19652:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19652:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
19652: Goal:
19652:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
19652: Order:
19652:   lpo
19652: Leaf order:
19652:  meet 17 2 5 0,2
19652:  d 2 0 2 2,2,2,2
19652:  join 19 2 5 0,1,2,2
19652:  c 2 0 2 2,1,2,2
19652:  b 5 0 5 1,1,2,2
19652:  a 3 0 3 1,2
% SZS status Timeout for LAT116-1.p
NO CLASH, using fixed ground order
19680: Facts:
19680:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19680:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19680:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19680:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19680:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19680:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19680:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19680:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19680:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
19680: Goal:
19680:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19680: Order:
19680:   nrkbo
19680: Leaf order:
19680:  meet 20 2 5 0,2
19680:  join 16 2 4 0,2,2
19680:  c 3 0 3 2,2,2
19680:  b 3 0 3 1,2,2
19680:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19681: Facts:
19681:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19681:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19681:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19681:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19681:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19681:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19681:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19681:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19681:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
19681: Goal:
19681:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19681: Order:
19681:   kbo
19681: Leaf order:
19681:  meet 20 2 5 0,2
19681:  join 16 2 4 0,2,2
19681:  c 3 0 3 2,2,2
19681:  b 3 0 3 1,2,2
19681:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19682: Facts:
19682:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19682:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19682:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19682:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19682:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19682:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19682:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19682:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19682:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
19682: Goal:
19682:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19682: Order:
19682:   lpo
19682: Leaf order:
19682:  meet 20 2 5 0,2
19682:  join 16 2 4 0,2,2
19682:  c 3 0 3 2,2,2
19682:  b 3 0 3 1,2,2
19682:  a 5 0 5 1,2
% SZS status Timeout for LAT117-1.p
NO CLASH, using fixed ground order
19698: Facts:
19698:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19698:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19698:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19698:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19698:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19698:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19698:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19698:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19698:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
19698: Goal:
19698:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
19698: Order:
19698:   nrkbo
19698: Leaf order:
19698:  join 17 2 4 0,2,2
19698:  meet 20 2 6 0,2
19698:  c 3 0 3 2,2,2,2
19698:  b 4 0 4 1,2,2
19698:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19699: Facts:
19699:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19699:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19699:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19699:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19699:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19699:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19699:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19699:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19699:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
19699: Goal:
19699:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
19699: Order:
19699:   kbo
19699: Leaf order:
19699:  join 17 2 4 0,2,2
19699:  meet 20 2 6 0,2
19699:  c 3 0 3 2,2,2,2
19699:  b 4 0 4 1,2,2
19699:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19700: Facts:
19700:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19700:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19700:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19700:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19700:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19700:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19700:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19700:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19700:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
19700: Goal:
19700:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
19700: Order:
19700:   lpo
19700: Leaf order:
19700:  join 17 2 4 0,2,2
19700:  meet 20 2 6 0,2
19700:  c 3 0 3 2,2,2,2
19700:  b 4 0 4 1,2,2
19700:  a 5 0 5 1,2
% SZS status Timeout for LAT119-1.p
NO CLASH, using fixed ground order
19732: Facts:
19732:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19732:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19732:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19732:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19732:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19732:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19732:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19732:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19732:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
19732: Goal:
19732:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
19732: Order:
19732:   nrkbo
19732: Leaf order:
19732:  meet 16 2 4 0,2
19732:  join 18 2 4 0,2,2
19732:  c 2 0 2 2,2,2
19732:  b 4 0 4 1,2,2
19732:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19733: Facts:
19733:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19733:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19733:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19733:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19733:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19733:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19733:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19733:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19733:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
19733: Goal:
19733:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
19733: Order:
19733:   kbo
19733: Leaf order:
19733:  meet 16 2 4 0,2
19733:  join 18 2 4 0,2,2
19733:  c 2 0 2 2,2,2
19733:  b 4 0 4 1,2,2
19733:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19734: Facts:
19734:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19734:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19734:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19734:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19734:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19734:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19734:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19734:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19734:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
19734: Goal:
19734:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
19734: Order:
19734:   lpo
19734: Leaf order:
19734:  meet 16 2 4 0,2
19734:  join 18 2 4 0,2,2
19734:  c 2 0 2 2,2,2
19734:  b 4 0 4 1,2,2
19734:  a 4 0 4 1,2
% SZS status Timeout for LAT120-1.p
NO CLASH, using fixed ground order
19750: Facts:
19750:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19750:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19750:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19750:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19750:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19750:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19750:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19750:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19750:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
19750: Goal:
19750:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19750: Order:
19750:   nrkbo
19750: Leaf order:
19750:  meet 16 2 3 0,2,2
19750:  join 20 2 5 0,2
19750:  c 3 0 3 2,2,2,2
19750:  b 3 0 3 1,2,2
19750:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19751: Facts:
19751:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19751:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19751:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19751:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19751:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19751:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19751:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19751:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19751:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
19751: Goal:
19751:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19751: Order:
19751:   kbo
19751: Leaf order:
19751:  meet 16 2 3 0,2,2
19751:  join 20 2 5 0,2
19751:  c 3 0 3 2,2,2,2
19751:  b 3 0 3 1,2,2
19751:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19752: Facts:
19752:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19752:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19752:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19752:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19752:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19752:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19752:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19752:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19752:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
19752: Goal:
19752:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19752: Order:
19752:   lpo
19752: Leaf order:
19752:  meet 16 2 3 0,2,2
19752:  join 20 2 5 0,2
19752:  c 3 0 3 2,2,2,2
19752:  b 3 0 3 1,2,2
19752:  a 4 0 4 1,2
% SZS status Timeout for LAT121-1.p
NO CLASH, using fixed ground order
19779: Facts:
19779:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19779:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19779:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19779:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19779:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19779:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19779:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19779:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19779:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
19779: Goal:
19779:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19779: Order:
19779:   nrkbo
19779: Leaf order:
19779:  meet 16 2 3 0,2,2
19779:  join 20 2 5 0,2
19779:  c 3 0 3 2,2,2,2
19779:  b 3 0 3 1,2,2
19779:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19780: Facts:
19780:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19780:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19780:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19780:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19780:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19780:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19780:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19780:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19780:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
19780: Goal:
19780:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19780: Order:
19780:   kbo
19780: Leaf order:
19780:  meet 16 2 3 0,2,2
19780:  join 20 2 5 0,2
19780:  c 3 0 3 2,2,2,2
19780:  b 3 0 3 1,2,2
19780:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19781: Facts:
19781:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19781:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19781:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19781:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19781:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19781:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19781:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19781:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19781:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
19781: Goal:
19781:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19781: Order:
19781:   lpo
19781: Leaf order:
19781:  meet 16 2 3 0,2,2
19781:  join 20 2 5 0,2
19781:  c 3 0 3 2,2,2,2
19781:  b 3 0 3 1,2,2
19781:  a 4 0 4 1,2
% SZS status Timeout for LAT122-1.p
NO CLASH, using fixed ground order
19798: Facts:
19798:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19798:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19798:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19798:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19798:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19798:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19798:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19798:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19798:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
19798: Goal:
19798:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19798: Order:
19798:   nrkbo
19798: Leaf order:
19798:  meet 16 2 3 0,2,2
19798:  join 20 2 5 0,2
19798:  c 3 0 3 2,2,2,2
19798:  b 3 0 3 1,2,2
19798:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19799: Facts:
19799:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19799:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19799:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19799:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19799:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19799:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19799:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19799:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19799:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
19799: Goal:
19799:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19799: Order:
19799:   kbo
19799: Leaf order:
19799:  meet 16 2 3 0,2,2
19799:  join 20 2 5 0,2
19799:  c 3 0 3 2,2,2,2
19799:  b 3 0 3 1,2,2
19799:  a 4 0 4 1,2
NO CLASH, using fixed ground order
19800: Facts:
19800:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19800:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19800:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19800:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19800:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19800:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19800:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19800:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19800:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
19800: Goal:
19800:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
19800: Order:
19800:   lpo
19800: Leaf order:
19800:  meet 16 2 3 0,2,2
19800:  join 20 2 5 0,2
19800:  c 3 0 3 2,2,2,2
19800:  b 3 0 3 1,2,2
19800:  a 4 0 4 1,2
% SZS status Timeout for LAT123-1.p
NO CLASH, using fixed ground order
19842: Facts:
19842:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19842:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19842:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19842:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19842:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19842:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19842:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19842:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19842:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
19842: Goal:
19842:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19842: Order:
19842:   nrkbo
19842: Leaf order:
19842:  meet 17 2 5 0,2
19842:  join 20 2 4 0,2,2
19842:  c 3 0 3 2,2,2
19842:  b 3 0 3 1,2,2
19842:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19843: Facts:
19843:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19843:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19843:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19843:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19843:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19843:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19843:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19843:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19843:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
19843: Goal:
19843:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19843: Order:
19843:   kbo
19843: Leaf order:
19843:  meet 17 2 5 0,2
19843:  join 20 2 4 0,2,2
19843:  c 3 0 3 2,2,2
19843:  b 3 0 3 1,2,2
19843:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19844: Facts:
19844:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19844:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19844:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19844:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19844:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19844:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19844:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19844:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19844:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
19844: Goal:
19844:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19844: Order:
19844:   lpo
19844: Leaf order:
19844:  meet 17 2 5 0,2
19844:  join 20 2 4 0,2,2
19844:  c 3 0 3 2,2,2
19844:  b 3 0 3 1,2,2
19844:  a 5 0 5 1,2
% SZS status Timeout for LAT124-1.p
NO CLASH, using fixed ground order
19863: Facts:
19863:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19863:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19863:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19863:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19863:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19863:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19863:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19863:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19863:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
19863: Goal:
19863:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19863: Order:
19863:   nrkbo
19863: Leaf order:
19863:  meet 18 2 5 0,2
19863:  join 18 2 4 0,2,2
19863:  c 3 0 3 2,2,2
19863:  b 3 0 3 1,2,2
19863:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19864: Facts:
19864:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19864:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19864:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19864:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19864:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19864:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19864:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19864:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19864:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
19864: Goal:
19864:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19864: Order:
19864:   kbo
19864: Leaf order:
19864:  meet 18 2 5 0,2
19864:  join 18 2 4 0,2,2
19864:  c 3 0 3 2,2,2
19864:  b 3 0 3 1,2,2
19864:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19865: Facts:
19865:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19865:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19865:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19865:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19865:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19865:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19865:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19865:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19865:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
19865: Goal:
19865:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19865: Order:
19865:   lpo
19865: Leaf order:
19865:  meet 18 2 5 0,2
19865:  join 18 2 4 0,2,2
19865:  c 3 0 3 2,2,2
19865:  b 3 0 3 1,2,2
19865:  a 5 0 5 1,2
% SZS status Timeout for LAT125-1.p
NO CLASH, using fixed ground order
19895: Facts:
19895:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19895:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19895:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19895:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19895:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19895:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19895:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19895:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19895:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
19895: Goal:
19895:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19895: Order:
19895:   kbo
19895: Leaf order:
19895:  meet 18 2 5 0,2
19895:  join 18 2 4 0,2,2
19895:  c 3 0 3 2,2,2
19895:  b 3 0 3 1,2,2
19895:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19894: Facts:
19894:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19894:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19894:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19894:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19894:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19894:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19894:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19894:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19894:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
19894: Goal:
19894:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19894: Order:
19894:   nrkbo
19894: Leaf order:
19894:  meet 18 2 5 0,2
19894:  join 18 2 4 0,2,2
19894:  c 3 0 3 2,2,2
19894:  b 3 0 3 1,2,2
19894:  a 5 0 5 1,2
NO CLASH, using fixed ground order
19896: Facts:
19896:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19896:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19896:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19896:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19896:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19896:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19896:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19896:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19896:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
19896: Goal:
19896:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
19896: Order:
19896:   lpo
19896: Leaf order:
19896:  meet 18 2 5 0,2
19896:  join 18 2 4 0,2,2
19896:  c 3 0 3 2,2,2
19896:  b 3 0 3 1,2,2
19896:  a 5 0 5 1,2
% SZS status Timeout for LAT126-1.p
NO CLASH, using fixed ground order
19924: Facts:
19924:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19924:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19924:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19924:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19924:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19924:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19924:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19924:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19924:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
19924: Goal:
19924:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
19924: Order:
19924:   nrkbo
19924: Leaf order:
19924:  join 16 2 4 0,2,2
19924:  meet 20 2 6 0,2
19924:  c 3 0 3 2,2,2,2
19924:  b 3 0 3 1,2,2
19924:  a 6 0 6 1,2
NO CLASH, using fixed ground order
19925: Facts:
19925:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19925:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19925:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19925:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19925:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19925:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19925:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19925:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19925:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
19925: Goal:
19925:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
19925: Order:
19925:   kbo
19925: Leaf order:
19925:  join 16 2 4 0,2,2
19925:  meet 20 2 6 0,2
19925:  c 3 0 3 2,2,2,2
19925:  b 3 0 3 1,2,2
19925:  a 6 0 6 1,2
NO CLASH, using fixed ground order
19926: Facts:
19926:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19926:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19926:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19926:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19926:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19926:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19926:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19926:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19926:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
19926: Goal:
19926:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
19926: Order:
19926:   lpo
19926: Leaf order:
19926:  join 16 2 4 0,2,2
19926:  meet 20 2 6 0,2
19926:  c 3 0 3 2,2,2,2
19926:  b 3 0 3 1,2,2
19926:  a 6 0 6 1,2
% SZS status Timeout for LAT127-1.p
NO CLASH, using fixed ground order
20053: Facts:
20053:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20053:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20053:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20053:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20053:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20053:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20053:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20053:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20053:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20053: Goal:
20053:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
20053: Order:
20053:   nrkbo
20053: Leaf order:
20053:  join 17 2 4 0,2,2
20053:  meet 19 2 6 0,2
20053:  c 3 0 3 2,2,2,2
20053:  b 4 0 4 1,2,2
20053:  a 5 0 5 1,2
NO CLASH, using fixed ground order
20054: Facts:
20054:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20054:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20054:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20054:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20054:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20054:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20054:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20054:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20054:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20054: Goal:
20054:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
20054: Order:
20054:   kbo
20054: Leaf order:
20054:  join 17 2 4 0,2,2
20054:  meet 19 2 6 0,2
20054:  c 3 0 3 2,2,2,2
20054:  b 4 0 4 1,2,2
20054:  a 5 0 5 1,2
NO CLASH, using fixed ground order
20055: Facts:
20055:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20055:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20055:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20055:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20055:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20055:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20055:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20055:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20055:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20055: Goal:
20055:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
20055: Order:
20055:   lpo
20055: Leaf order:
20055:  join 17 2 4 0,2,2
20055:  meet 19 2 6 0,2
20055:  c 3 0 3 2,2,2,2
20055:  b 4 0 4 1,2,2
20055:  a 5 0 5 1,2
% SZS status Timeout for LAT128-1.p
NO CLASH, using fixed ground order
20071: Facts:
20071:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20071:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20071:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20071:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20071:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20071:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20071:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20071:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20071:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20071: Goal:
20071:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
20071: Order:
20071:   nrkbo
20071: Leaf order:
20071:  join 16 2 3 0,2,2
20071:  meet 18 2 5 0,2
20071:  c 3 0 3 2,2,2,2
20071:  b 3 0 3 1,2,2
20071:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20072: Facts:
20072:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20072:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20072:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20072:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20072:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20072:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20072:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20072:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20072:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20072: Goal:
20072:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
20072: Order:
20072:   kbo
20072: Leaf order:
20072:  join 16 2 3 0,2,2
20072:  meet 18 2 5 0,2
20072:  c 3 0 3 2,2,2,2
20072:  b 3 0 3 1,2,2
20072:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20073: Facts:
20073:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20073:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20073:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20073:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20073:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20073:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20073:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20073:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20073:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
20073: Goal:
20073:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
20073: Order:
20073:   lpo
20073: Leaf order:
20073:  join 16 2 3 0,2,2
20073:  meet 18 2 5 0,2
20073:  c 3 0 3 2,2,2,2
20073:  b 3 0 3 1,2,2
20073:  a 4 0 4 1,2
% SZS status Timeout for LAT129-1.p
NO CLASH, using fixed ground order
20105: Facts:
20105:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20105:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20105:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20105:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20105:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20105:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20105:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20105:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20105:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20105: Goal:
20105:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
20105: Order:
20105:   nrkbo
20105: Leaf order:
20105:  meet 17 2 5 0,2
20105:  join 17 2 4 0,2,2
20105:  d 2 0 2 2,2,2,2,2
20105:  c 3 0 3 1,2,2,2
20105:  b 2 0 2 1,2,2
20105:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20106: Facts:
20106:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20106:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20106:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20106:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20106:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20106:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20106:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20106:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20106:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20106: Goal:
20106:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
20106: Order:
20106:   kbo
20106: Leaf order:
20106:  meet 17 2 5 0,2
20106:  join 17 2 4 0,2,2
20106:  d 2 0 2 2,2,2,2,2
20106:  c 3 0 3 1,2,2,2
20106:  b 2 0 2 1,2,2
20106:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20107: Facts:
20107:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20107:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20107:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20107:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20107:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20107:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20107:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20107:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20107:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20107: Goal:
20107:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
20107: Order:
20107:   lpo
20107: Leaf order:
20107:  meet 17 2 5 0,2
20107:  join 17 2 4 0,2,2
20107:  d 2 0 2 2,2,2,2,2
20107:  c 3 0 3 1,2,2,2
20107:  b 2 0 2 1,2,2
20107:  a 4 0 4 1,2
% SZS status Timeout for LAT130-1.p
NO CLASH, using fixed ground order
20123: Facts:
20123:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20123:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20123:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20123:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20123:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20123:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20123:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20123:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20123:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20123: Goal:
20123:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20123: Order:
20123:   nrkbo
20123: Leaf order:
20123:  meet 17 2 5 0,2
20123:  join 18 2 5 0,2,2
20123:  d 2 0 2 2,2,2,2,2
20123:  c 3 0 3 1,2,2,2
20123:  b 3 0 3 1,2,2
20123:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20124: Facts:
20124:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20124:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20124:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20124:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20124:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20124:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20124:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20124:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20124:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20124: Goal:
20124:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20124: Order:
20124:   kbo
20124: Leaf order:
20124:  meet 17 2 5 0,2
20124:  join 18 2 5 0,2,2
20124:  d 2 0 2 2,2,2,2,2
20124:  c 3 0 3 1,2,2,2
20124:  b 3 0 3 1,2,2
20124:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20125: Facts:
20125:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20125:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20125:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20125:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20125:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20125:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20125:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20125:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20125:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
20125: Goal:
20125:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20125: Order:
20125:   lpo
20125: Leaf order:
20125:  meet 17 2 5 0,2
20125:  join 18 2 5 0,2,2
20125:  d 2 0 2 2,2,2,2,2
20125:  c 3 0 3 1,2,2,2
20125:  b 3 0 3 1,2,2
20125:  a 4 0 4 1,2
% SZS status Timeout for LAT131-1.p
NO CLASH, using fixed ground order
20152: Facts:
20152:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20152:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20152:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20152:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20152:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20152:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20152:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20152:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20152:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
20152: Goal:
20152:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20152: Order:
20152:   nrkbo
20152: Leaf order:
20152:  meet 18 2 5 0,2
20152:  join 19 2 5 0,2,2
20152:  d 2 0 2 2,2,2,2,2
20152:  c 3 0 3 1,2,2,2
20152:  b 3 0 3 1,2,2
20152:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20153: Facts:
20153:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20153:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20153:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20153:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20153:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20153:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20153:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20153:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20153:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
20153: Goal:
20153:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20153: Order:
20153:   kbo
20153: Leaf order:
20153:  meet 18 2 5 0,2
20153:  join 19 2 5 0,2,2
20153:  d 2 0 2 2,2,2,2,2
20153:  c 3 0 3 1,2,2,2
20153:  b 3 0 3 1,2,2
20153:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20154: Facts:
20154:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20154:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20154:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20154:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20154:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20154:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20154:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20154:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20154:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
20154: Goal:
20154:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
20154: Order:
20154:   lpo
20154: Leaf order:
20154:  meet 18 2 5 0,2
20154:  join 19 2 5 0,2,2
20154:  d 2 0 2 2,2,2,2,2
20154:  c 3 0 3 1,2,2,2
20154:  b 3 0 3 1,2,2
20154:  a 4 0 4 1,2
% SZS status Timeout for LAT132-1.p
NO CLASH, using fixed ground order
20170: Facts:
20170:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20170:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20170:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20170:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20170:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20170:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20170:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20170:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20170:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
20170: Goal:
20170:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
20170: Order:
20170:   nrkbo
20170: Leaf order:
20170:  meet 16 2 4 0,2,2
20170:  join 20 2 6 0,2
20170:  c 3 0 3 2,2,2,2
20170:  b 3 0 3 1,2,2
20170:  a 6 0 6 1,2
NO CLASH, using fixed ground order
20171: Facts:
20171:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20171:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20171:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20171:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20171:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20171:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20171:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20171:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20171:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
20171: Goal:
20171:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
20171: Order:
20171:   kbo
20171: Leaf order:
20171:  meet 16 2 4 0,2,2
20171:  join 20 2 6 0,2
20171:  c 3 0 3 2,2,2,2
20171:  b 3 0 3 1,2,2
20171:  a 6 0 6 1,2
NO CLASH, using fixed ground order
20172: Facts:
20172:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20172:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20172:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20172:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20172:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20172:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20172:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20172:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20172:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
20172: Goal:
20172:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
20172: Order:
20172:   lpo
20172: Leaf order:
20172:  meet 16 2 4 0,2,2
20172:  join 20 2 6 0,2
20172:  c 3 0 3 2,2,2,2
20172:  b 3 0 3 1,2,2
20172:  a 6 0 6 1,2
% SZS status Timeout for LAT133-1.p
NO CLASH, using fixed ground order
20205: Facts:
20205:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20205:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20205:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20205:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20205:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20205:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20205:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20205:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20205:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
20205: Goal:
20205:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
20205: Order:
20205:   kbo
20205: Leaf order:
20205:  meet 16 2 4 0,2
20205:  c 3 0 3 2,2,2
20205:  join 20 2 6 0,1,2
20205:  b 4 0 4 2,1,2
20205:  a 5 0 5 1,1,2
NO CLASH, using fixed ground order
20204: Facts:
20204:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20204:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20204:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20204:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20204:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20204:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20204:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20204:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20204:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
20204: Goal:
20204:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
20204: Order:
20204:   nrkbo
20204: Leaf order:
20204:  meet 16 2 4 0,2
20204:  c 3 0 3 2,2,2
20204:  join 20 2 6 0,1,2
20204:  b 4 0 4 2,1,2
20204:  a 5 0 5 1,1,2
NO CLASH, using fixed ground order
20206: Facts:
20206:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20206:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20206:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20206:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20206:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20206:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20206:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20206:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20206:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
20206: Goal:
20206:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
20206: Order:
20206:   lpo
20206: Leaf order:
20206:  meet 16 2 4 0,2
20206:  c 3 0 3 2,2,2
20206:  join 20 2 6 0,1,2
20206:  b 4 0 4 2,1,2
20206:  a 5 0 5 1,1,2
% SZS status Timeout for LAT134-1.p
NO CLASH, using fixed ground order
20243: Facts:
20243:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20243:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20243:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20243:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20243:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20243:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20243:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20243:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20243:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
20243: Goal:
20243:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20243: Order:
20243:   nrkbo
20243: Leaf order:
20243:  join 17 2 5 0,2
20243:  meet 17 2 4 0,2,2
20243:  d 2 0 2 2,2,2,2,2
20243:  c 3 0 3 1,2,2,2
20243:  b 2 0 2 1,2,2
20243:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20244: Facts:
20244:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20244:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20244:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20244:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20244:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20244:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20244:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20244:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20244:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
20244: Goal:
20244:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20244: Order:
20244:   kbo
20244: Leaf order:
20244:  join 17 2 5 0,2
20244:  meet 17 2 4 0,2,2
20244:  d 2 0 2 2,2,2,2,2
20244:  c 3 0 3 1,2,2,2
20244:  b 2 0 2 1,2,2
20244:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20245: Facts:
20245:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20245:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20245:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20245:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20245:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20245:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20245:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20245:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20245:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
20245: Goal:
20245:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =>=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20245: Order:
20245:   lpo
20245: Leaf order:
20245:  join 17 2 5 0,2
20245:  meet 17 2 4 0,2,2
20245:  d 2 0 2 2,2,2,2,2
20245:  c 3 0 3 1,2,2,2
20245:  b 2 0 2 1,2,2
20245:  a 4 0 4 1,2
% SZS status Timeout for LAT135-1.p
NO CLASH, using fixed ground order
20272: Facts:
20272:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20272:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20272:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20272:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20272:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20272:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20272:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20272:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20272:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20272: Goal:
20272:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20272: Order:
20272:   nrkbo
20272: Leaf order:
20272:  join 18 2 5 0,2
20272:  meet 18 2 4 0,2,2
20272:  d 2 0 2 2,2,2,2,2
20272:  c 3 0 3 1,2,2,2
20272:  b 2 0 2 1,2,2
20272:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20273: Facts:
20273:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20273:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20273:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20273:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20273:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20273:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20273:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20273:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20273:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20273: Goal:
20273:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20273: Order:
20273:   kbo
20273: Leaf order:
20273:  join 18 2 5 0,2
20273:  meet 18 2 4 0,2,2
20273:  d 2 0 2 2,2,2,2,2
20273:  c 3 0 3 1,2,2,2
20273:  b 2 0 2 1,2,2
20273:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20274: Facts:
20274:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20274:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20274:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20274:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20274:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20274:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20274:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20274:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20274:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20274: Goal:
20274:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =>=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
20274: Order:
20274:   lpo
20274: Leaf order:
20274:  join 18 2 5 0,2
20274:  meet 18 2 4 0,2,2
20274:  d 2 0 2 2,2,2,2,2
20274:  c 3 0 3 1,2,2,2
20274:  b 2 0 2 1,2,2
20274:  a 4 0 4 1,2
% SZS status Timeout for LAT136-1.p
NO CLASH, using fixed ground order
20301: Facts:
20301:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20301:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20301:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20301:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20301:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20301:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20301:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20301:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20301:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20301: Goal:
20301:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
20301: Order:
20301:   nrkbo
20301: Leaf order:
20301:  join 18 2 5 0,2
20301:  meet 19 2 5 0,2,2
20301:  d 2 0 2 2,2,2,2,2
20301:  c 3 0 3 1,2,2,2
20301:  b 3 0 3 1,2,2
20301:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20302: Facts:
20302:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20302:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20302:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20302:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20302:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20302:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20302:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20302:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20302:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20302: Goal:
20302:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
20302: Order:
20302:   kbo
20302: Leaf order:
20302:  join 18 2 5 0,2
20302:  meet 19 2 5 0,2,2
20302:  d 2 0 2 2,2,2,2,2
20302:  c 3 0 3 1,2,2,2
20302:  b 3 0 3 1,2,2
20302:  a 4 0 4 1,2
NO CLASH, using fixed ground order
20303: Facts:
20303:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20303:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20303:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20303:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20303:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20303:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20303:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20303:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20303:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
20303: Goal:
20303:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
20303: Order:
20303:   lpo
20303: Leaf order:
20303:  join 18 2 5 0,2
20303:  meet 19 2 5 0,2,2
20303:  d 2 0 2 2,2,2,2,2
20303:  c 3 0 3 1,2,2,2
20303:  b 3 0 3 1,2,2
20303:  a 4 0 4 1,2
% SZS status Timeout for LAT137-1.p
NO CLASH, using fixed ground order
20331: Facts:
20331:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20331:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20331:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20331:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20331:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20331:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20331:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20331:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20331:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
20331: Goal:
20331:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
20331: Order:
20331:   nrkbo
20331: Leaf order:
20331:  join 16 2 4 0,2,2
20331:  meet 20 2 6 0,2
20331:  c 3 0 3 2,2,2,2
20331:  b 3 0 3 1,2,2
20331:  a 6 0 6 1,2
NO CLASH, using fixed ground order
20332: Facts:
20332:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20332:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20332:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20332:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20332:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20332:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20332:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20332:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20332:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
20332: Goal:
20332:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
20332: Order:
20332:   kbo
20332: Leaf order:
20332:  join 16 2 4 0,2,2
20332:  meet 20 2 6 0,2
20332:  c 3 0 3 2,2,2,2
20332:  b 3 0 3 1,2,2
20332:  a 6 0 6 1,2
NO CLASH, using fixed ground order
20333: Facts:
20333:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
20333:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
20333:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
20333:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
20333:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
20333:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
20333:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
20333:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
20333:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
20333: Goal:
20333:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
20333: Order:
20333:   lpo
20333: Leaf order:
20333:  join 16 2 4 0,2,2
20333:  meet 20 2 6 0,2
20333:  c 3 0 3 2,2,2,2
20333:  b 3 0 3 1,2,2
20333:  a 6 0 6 1,2
% SZS status Timeout for LAT171-1.p
NO CLASH, using fixed ground order
20686: Facts:
20686:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20686:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20686:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20686:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20686:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
20686: Goal:
20686:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
20686: Order:
20686:   nrkbo
20686: Leaf order:
20686:  y 2 0 0 
20686:  not 2 1 0 
20686:  truth 4 0 1 3
20686:  implies 16 2 1 0,2
20686:  z 2 0 1 2,2
20686:  x 2 0 1 1,2
NO CLASH, using fixed ground order
20687: Facts:
20687:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20687:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20687:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20687:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20687:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
20687: Goal:
20687:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
20687: Order:
20687:   kbo
20687: Leaf order:
20687:  y 2 0 0 
20687:  not 2 1 0 
20687:  truth 4 0 1 3
20687:  implies 16 2 1 0,2
20687:  z 2 0 1 2,2
20687:  x 2 0 1 1,2
NO CLASH, using fixed ground order
20688: Facts:
20688:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20688:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20688:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20688:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20688:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
20688: Goal:
20688:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
20688: Order:
20688:   lpo
20688: Leaf order:
20688:  y 2 0 0 
20688:  not 2 1 0 
20688:  truth 4 0 1 3
20688:  implies 16 2 1 0,2
20688:  z 2 0 1 2,2
20688:  x 2 0 1 1,2
% SZS status Timeout for LCL136-1.p
NO CLASH, using fixed ground order
20715: Facts:
20715:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20715:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20715:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20715:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20715: Goal:
20715:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
20715: Order:
20715:   nrkbo
20715: Leaf order:
20715:  not 2 1 0 
20715:  truth 4 0 1 3
20715:  z 2 0 2 2,1,2,2
20715:  implies 19 2 6 0,2
20715:  y 3 0 3 2,1,1,2
20715:  x 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
20716: Facts:
20716:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20716:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20716:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20716:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20716: Goal:
20716:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
20716: Order:
20716:   kbo
20716: Leaf order:
20716:  not 2 1 0 
20716:  truth 4 0 1 3
20716:  z 2 0 2 2,1,2,2
20716:  implies 19 2 6 0,2
20716:  y 3 0 3 2,1,1,2
20716:  x 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
20717: Facts:
20717:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20717:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20717:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20717:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20717: Goal:
20717:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
20717: Order:
20717:   lpo
20717: Leaf order:
20717:  not 2 1 0 
20717:  truth 4 0 1 3
20717:  z 2 0 2 2,1,2,2
20717:  implies 19 2 6 0,2
20717:  y 3 0 3 2,1,1,2
20717:  x 2 0 2 1,1,1,2
% SZS status Timeout for LCL137-1.p
NO CLASH, using fixed ground order
20733: Facts:
20733:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20733:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20733:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20733:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20733:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
20733:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
20733:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
20733:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
20733:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
20733:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
20733: Goal:
20733:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
20733: Order:
20733:   nrkbo
20733: Leaf order:
20733:  implies 14 2 0 
20733:  truth 3 0 0 
20733:  not 12 1 6 0,2
20733:  and 11 2 4 0,1,1,2
20733:  or 12 2 4 0,1,2
20733:  x 10 0 10 1,1,1,2
NO CLASH, using fixed ground order
20734: Facts:
20734:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20734:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20734:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20734:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20734:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
20734:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
20734:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
20734:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
20734:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
20734:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
20734: Goal:
NO CLASH, using fixed ground order
20735: Facts:
20735:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
20735:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
20735:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
20735:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
20735:  Id :   6, {_}:
          or ?14 ?15 =>= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
20735:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
20735:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
20735:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
20735:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
20735:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
20735: Goal:
20735:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
20735: Order:
20735:   lpo
20735: Leaf order:
20735:  implies 14 2 0 
20735:  truth 3 0 0 
20735:  not 12 1 6 0,2
20735:  and 11 2 4 0,1,1,2
20735:  or 12 2 4 0,1,2
20735:  x 10 0 10 1,1,1,2
20734:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
20734: Order:
20734:   kbo
20734: Leaf order:
20734:  implies 14 2 0 
20734:  truth 3 0 0 
20734:  not 12 1 6 0,2
20734:  and 11 2 4 0,1,1,2
20734:  or 12 2 4 0,1,2
20734:  x 10 0 10 1,1,1,2
% SZS status Timeout for LCL165-1.p
NO CLASH, using fixed ground order
20763: Facts:
20763:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20763:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20763:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20763:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20763:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20763:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20763:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20763:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20763:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20763:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20763:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20763:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20763:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20763:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20763:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20763:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20763:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20763:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20763:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20763:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20763:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20763:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20763: Goal:
20763:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
20763: Order:
20763:   kbo
20763: Leaf order:
20763:  commutator 1 2 0 
20763:  additive_inverse 22 1 0 
20763:  multiply 40 2 0 
20763:  additive_identity 8 0 0 
20763:  associator 4 3 3 0,2
20763:  add 26 2 2 0,3,2
20763:  v 2 0 2 2,3,2
20763:  u 2 0 2 1,3,2
20763:  y 3 0 3 2,2
20763:  x 3 0 3 1,2
NO CLASH, using fixed ground order
20762: Facts:
20762:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20762:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20762:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20762:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20762:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20762:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20762:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20762:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20762:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20762:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20762:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20762:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20762:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20762:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20762:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20762:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20762:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20762:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20762:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20762:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20762:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20762:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20762: Goal:
20762:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
20762: Order:
20762:   nrkbo
20762: Leaf order:
20762:  commutator 1 2 0 
20762:  additive_inverse 22 1 0 
20762:  multiply 40 2 0 
20762:  additive_identity 8 0 0 
20762:  associator 4 3 3 0,2
20762:  add 26 2 2 0,3,2
20762:  v 2 0 2 2,3,2
20762:  u 2 0 2 1,3,2
20762:  y 3 0 3 2,2
20762:  x 3 0 3 1,2
NO CLASH, using fixed ground order
20764: Facts:
20764:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20764:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20764:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20764:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20764:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20764:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20764:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20764:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20764:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20764:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20764:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20764:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20764:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20764:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20764:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20764:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20764:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20764:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20764:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20764:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20764:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20764:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20764: Goal:
20764:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
20764: Order:
20764:   lpo
20764: Leaf order:
20764:  commutator 1 2 0 
20764:  additive_inverse 22 1 0 
20764:  multiply 40 2 0 
20764:  additive_identity 8 0 0 
20764:  associator 4 3 3 0,2
20764:  add 26 2 2 0,3,2
20764:  v 2 0 2 2,3,2
20764:  u 2 0 2 1,3,2
20764:  y 3 0 3 2,2
20764:  x 3 0 3 1,2
% SZS status Timeout for RNG019-7.p
NO CLASH, using fixed ground order
20780: Facts:
20780:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20780:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20780:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20780:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20780:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20780:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20780:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20780:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20780:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20780:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20780:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20780:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20780:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20780:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20780:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20780: Goal:
20780:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20780: Order:
20780:   nrkbo
20780: Leaf order:
20780:  commutator 1 2 0 
20780:  additive_inverse 6 1 0 
20780:  multiply 22 2 0 
20780:  additive_identity 8 0 0 
20780:  associator 4 3 3 0,2
20780:  y 3 0 3 3,2
20780:  add 18 2 2 0,2,2
20780:  v 2 0 2 2,2,2
20780:  u 2 0 2 1,2,2
20780:  x 3 0 3 1,2
NO CLASH, using fixed ground order
20781: Facts:
20781:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20781:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20781:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20781:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20781:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20781:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20781:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20781:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20781:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20781:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20781:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20781:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20781:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20781:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20781:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20781: Goal:
20781:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20781: Order:
20781:   kbo
20781: Leaf order:
20781:  commutator 1 2 0 
20781:  additive_inverse 6 1 0 
20781:  multiply 22 2 0 
20781:  additive_identity 8 0 0 
20781:  associator 4 3 3 0,2
20781:  y 3 0 3 3,2
20781:  add 18 2 2 0,2,2
20781:  v 2 0 2 2,2,2
20781:  u 2 0 2 1,2,2
20781:  x 3 0 3 1,2
NO CLASH, using fixed ground order
20782: Facts:
20782:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20782:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20782:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20782:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20782:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20782:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20782:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20782:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20782:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20782:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20782:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20782:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20782:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20782:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20782:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20782: Goal:
20782:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20782: Order:
20782:   lpo
20782: Leaf order:
20782:  commutator 1 2 0 
20782:  additive_inverse 6 1 0 
20782:  multiply 22 2 0 
20782:  additive_identity 8 0 0 
20782:  associator 4 3 3 0,2
20782:  y 3 0 3 3,2
20782:  add 18 2 2 0,2,2
20782:  v 2 0 2 2,2,2
20782:  u 2 0 2 1,2,2
20782:  x 3 0 3 1,2
% SZS status Timeout for RNG020-6.p
NO CLASH, using fixed ground order
20815: Facts:
20815:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20815:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20815:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20815:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20815:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20815:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20815:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20815:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20815:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20815:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20815:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20815:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20815:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
NO CLASH, using fixed ground order
20816: Facts:
20816:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20816:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20816:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20816:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
NO CLASH, using fixed ground order
20817: Facts:
20817:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20817:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20816:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20817:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20816:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20817:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20817:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20816:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20817:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20817:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20816:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20817:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20816:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20815:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20816:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20815:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20816:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20816:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20815:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20816:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20815:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20816:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20815:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20816:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20815:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20816:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20815:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20815:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20815:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20815: Goal:
20815:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20815: Order:
20815:   nrkbo
20815: Leaf order:
20815:  commutator 1 2 0 
20815:  additive_inverse 22 1 0 
20815:  multiply 40 2 0 
20815:  additive_identity 8 0 0 
20815:  associator 4 3 3 0,2
20815:  y 3 0 3 3,2
20815:  add 26 2 2 0,2,2
20815:  v 2 0 2 2,2,2
20815:  u 2 0 2 1,2,2
20815:  x 3 0 3 1,2
20817:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20816:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20816:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20816:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20816:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20816:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20816:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20816: Goal:
20816:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20816: Order:
20816:   kbo
20816: Leaf order:
20816:  commutator 1 2 0 
20816:  additive_inverse 22 1 0 
20816:  multiply 40 2 0 
20816:  additive_identity 8 0 0 
20816:  associator 4 3 3 0,2
20816:  y 3 0 3 3,2
20816:  add 26 2 2 0,2,2
20816:  v 2 0 2 2,2,2
20816:  u 2 0 2 1,2,2
20816:  x 3 0 3 1,2
20817:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20817:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20817:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20817:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20817:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20817:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20817:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20817:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20817:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20817:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20817:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20817:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20817:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20817: Goal:
20817:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
20817: Order:
20817:   lpo
20817: Leaf order:
20817:  commutator 1 2 0 
20817:  additive_inverse 22 1 0 
20817:  multiply 40 2 0 
20817:  additive_identity 8 0 0 
20817:  associator 4 3 3 0,2
20817:  y 3 0 3 3,2
20817:  add 26 2 2 0,2,2
20817:  v 2 0 2 2,2,2
20817:  u 2 0 2 1,2,2
20817:  x 3 0 3 1,2
% SZS status Timeout for RNG020-7.p
NO CLASH, using fixed ground order
20843: Facts:
20843:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20843:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20843:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20843:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20843:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20843:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20843:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20843:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20843:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20843:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20843:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20843:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20843:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20843:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20843:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20843:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20843:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20843:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20843:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20843:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20843:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20843:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20843: Goal:
20843:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
20843: Order:
20843:   kbo
20843: Leaf order:
20843:  commutator 1 2 0 
20843:  additive_inverse 22 1 0 
20843:  multiply 40 2 0 
20843:  additive_identity 8 0 0 
20843:  associator 4 3 3 0,2
20843:  y 3 0 3 3,2
20843:  x 3 0 3 2,2
20843:  add 26 2 2 0,1,2
20843:  v 2 0 2 2,1,2
20843:  u 2 0 2 1,1,2
NO CLASH, using fixed ground order
20842: Facts:
20842:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20842:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20842:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20842:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20842:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20842:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20842:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20842:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20842:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20842:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20842:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20842:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20842:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20842:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20842:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20842:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20842:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20842:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20842:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20842:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20842:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20842:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20842: Goal:
20842:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
20842: Order:
20842:   nrkbo
20842: Leaf order:
20842:  commutator 1 2 0 
20842:  additive_inverse 22 1 0 
20842:  multiply 40 2 0 
20842:  additive_identity 8 0 0 
20842:  associator 4 3 3 0,2
20842:  y 3 0 3 3,2
20842:  x 3 0 3 2,2
20842:  add 26 2 2 0,1,2
20842:  v 2 0 2 2,1,2
20842:  u 2 0 2 1,1,2
NO CLASH, using fixed ground order
20844: Facts:
20844:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20844:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20844:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20844:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20844:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20844:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20844:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20844:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20844:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20844:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20844:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20844:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20844:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20844:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20844:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20844:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
20844:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
20844:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
20844:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
20844:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
20844:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
20844:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
20844: Goal:
20844:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
20844: Order:
20844:   lpo
20844: Leaf order:
20844:  commutator 1 2 0 
20844:  additive_inverse 22 1 0 
20844:  multiply 40 2 0 
20844:  additive_identity 8 0 0 
20844:  associator 4 3 3 0,2
20844:  y 3 0 3 3,2
20844:  x 3 0 3 2,2
20844:  add 26 2 2 0,1,2
20844:  v 2 0 2 2,1,2
20844:  u 2 0 2 1,1,2
% SZS status Timeout for RNG021-7.p
NO CLASH, using fixed ground order
20871: Facts:
20871:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20871:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20871:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20871:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20871:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20871:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20871:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20871:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20871:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20871:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20871:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20871:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20871:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20871:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20871:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20871: Goal:
20871:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
20871: Order:
20871:   nrkbo
20871: Leaf order:
20871:  commutator 1 2 0 
20871:  additive_inverse 6 1 0 
20871:  multiply 22 2 0 
20871:  additive_identity 9 0 1 3
20871:  add 17 2 1 0,2
20871:  associator 3 3 2 0,1,2
20871:  z 2 0 2 3,1,2
20871:  y 2 0 2 2,1,2
20871:  x 2 0 2 1,1,2
NO CLASH, using fixed ground order
20872: Facts:
20872:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20872:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20872:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20872:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20872:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20872:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20872:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20872:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20872:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20872:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20872:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20872:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20872:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20872:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20872:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20872: Goal:
20872:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
20872: Order:
20872:   kbo
20872: Leaf order:
20872:  commutator 1 2 0 
20872:  additive_inverse 6 1 0 
20872:  multiply 22 2 0 
20872:  additive_identity 9 0 1 3
20872:  add 17 2 1 0,2
20872:  associator 3 3 2 0,1,2
20872:  z 2 0 2 3,1,2
20872:  y 2 0 2 2,1,2
20872:  x 2 0 2 1,1,2
NO CLASH, using fixed ground order
20873: Facts:
20873:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20873:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20873:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20873:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20873:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20873:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20873:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20873:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20873:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20873:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20873:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20873:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20873:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20873:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20873:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20873: Goal:
20873:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
20873: Order:
20873:   lpo
20873: Leaf order:
20873:  commutator 1 2 0 
20873:  additive_inverse 6 1 0 
20873:  multiply 22 2 0 
20873:  additive_identity 9 0 1 3
20873:  add 17 2 1 0,2
20873:  associator 3 3 2 0,1,2
20873:  z 2 0 2 3,1,2
20873:  y 2 0 2 2,1,2
20873:  x 2 0 2 1,1,2
% SZS status Timeout for RNG025-4.p
NO CLASH, using fixed ground order
20890: Facts:
20890:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
20890:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
20890:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
20890:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
20890:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
20890:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
20890:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
20890:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
20890:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
20890:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
20890:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
20890:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20890:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20890:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =<=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
20890:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =<=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
20890:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =<=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
NO CLASH, using fixed ground order
20891: Facts:
20891:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
20891:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
20891:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
20891:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
20891:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
20891:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
20891:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
20891:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
NO CLASH, using fixed ground order
20892: Facts:
20892:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
20892:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
20892:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
20892:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
20892:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
20892:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
20892:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
20892:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
20892:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
20891:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
20890:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
20890: Goal:
20892:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
20890:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20890: Order:
20890:   nrkbo
20890: Leaf order:
20892:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
20892:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20892:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20892:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =>=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
20892:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =>=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
20892:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =>=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
20892:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
20892: Goal:
20892:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20892: Order:
20892:   lpo
20892: Leaf order:
20892:  commutator 1 2 0 
20892:  additive_inverse 5 1 0 
20892:  multiply 18 2 0 
20892:  additive_identity 9 0 1 3
20892:  add 22 2 1 0,2
20892:  associator 11 3 2 0,1,2
20892:  c 2 0 2 3,1,2
20892:  b 2 0 2 2,1,2
20892:  a 2 0 2 1,1,2
20891:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
20890:  commutator 1 2 0 
20890:  additive_inverse 5 1 0 
20890:  multiply 18 2 0 
20890:  additive_identity 9 0 1 3
20890:  add 22 2 1 0,2
20890:  associator 11 3 2 0,1,2
20890:  c 2 0 2 3,1,2
20890:  b 2 0 2 2,1,2
20890:  a 2 0 2 1,1,2
20891:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
20891:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20891:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20891:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =<=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
20891:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =<=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
20891:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =<=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
20891:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
20891: Goal:
20891:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20891: Order:
20891:   kbo
20891: Leaf order:
20891:  commutator 1 2 0 
20891:  additive_inverse 5 1 0 
20891:  multiply 18 2 0 
20891:  additive_identity 9 0 1 3
20891:  add 22 2 1 0,2
20891:  associator 11 3 2 0,1,2
20891:  c 2 0 2 3,1,2
20891:  b 2 0 2 2,1,2
20891:  a 2 0 2 1,1,2
% SZS status Timeout for RNG025-8.p
NO CLASH, using fixed ground order
20920: Facts:
20920:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
20920:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =<=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
20920:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =<=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
20920:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
20920:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
20920:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
20920:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
20920:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
20920:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
20920:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
20920:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
20920:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
20920:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
20920:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
20920:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
20920:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
20920:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
20920:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
20920:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
20920:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =?= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
20920:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =<=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
20920:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =<=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
20920:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =<=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
20920:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
20920: Goal:
20920:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20920: Order:
20920:   nrkbo
20920: Leaf order:
20920:  commutator 1 2 0 
20920:  multiply 36 2 0 add
20920:  additive_inverse 21 1 0 
20920:  additive_identity 9 0 1 3
20920:  add 30 2 1 0,2
20920:  associator 11 3 2 0,1,2
20920:  c 2 0 2 3,1,2
20920:  b 2 0 2 2,1,2
20920:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
20921: Facts:
20921:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
20921:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =<=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
20921:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =<=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
20921:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
20921:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
20921:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
20921:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
20921:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
20921:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
20921:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
20921:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
20921:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
20921:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
20921:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
20921:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
20921:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
20921:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
20921:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
20921:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
20921:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =>= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
20921:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =<=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
20921:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =<=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
20921:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =<=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
20921:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
20921: Goal:
20921:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20921: Order:
20921:   kbo
20921: Leaf order:
20921:  commutator 1 2 0 
20921:  multiply 36 2 0 add
20921:  additive_inverse 21 1 0 
20921:  additive_identity 9 0 1 3
20921:  add 30 2 1 0,2
20921:  associator 11 3 2 0,1,2
20921:  c 2 0 2 3,1,2
20921:  b 2 0 2 2,1,2
20921:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
20922: Facts:
20922:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
20922:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =<=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
20922:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =<=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
20922:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
20922:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
20922:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
20922:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
20922:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
20922:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
20922:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
20922:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
20922:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
20922:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
20922:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
20922:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
20922:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
20922:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
20922:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
20922:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
20922:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =>= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
20922:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =>=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
20922:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =>=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
20922:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =>=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
20922:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
20922: Goal:
20922:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
20922: Order:
20922:   lpo
20922: Leaf order:
20922:  commutator 1 2 0 
20922:  multiply 36 2 0 add
20922:  additive_inverse 21 1 0 
20922:  additive_identity 9 0 1 3
20922:  add 30 2 1 0,2
20922:  associator 11 3 2 0,1,2
20922:  c 2 0 2 3,1,2
20922:  b 2 0 2 2,1,2
20922:  a 2 0 2 1,1,2
% SZS status Timeout for RNG025-9.p
NO CLASH, using fixed ground order
20954: Facts:
20954:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
20954:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
20954:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
20954:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =<=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
20954:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
20954:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
20954:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
20954: Goal:
20954:  Id :   1, {_}:
          add a (multiply b c) =<= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
20954: Order:
20954:   nrkbo
20954: Leaf order:
20954:  pixley 4 3 0 
20954:  n1 1 0 0 
20954:  inverse 3 1 0 
20954:  add 9 2 3 0,2
20954:  multiply 9 2 2 0,2,2
20954:  c 2 0 2 2,2,2
20954:  b 2 0 2 1,2,2
20954:  a 3 0 3 1,2
NO CLASH, using fixed ground order
20955: Facts:
20955:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
20955:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
20955:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
20955:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =<=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
20955:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
20955:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
20955:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
20955: Goal:
20955:  Id :   1, {_}:
          add a (multiply b c) =<= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
20955: Order:
20955:   kbo
20955: Leaf order:
20955:  pixley 4 3 0 
20955:  n1 1 0 0 
20955:  inverse 3 1 0 
20955:  add 9 2 3 0,2
20955:  multiply 9 2 2 0,2,2
20955:  c 2 0 2 2,2,2
20955:  b 2 0 2 1,2,2
20955:  a 3 0 3 1,2
NO CLASH, using fixed ground order
20956: Facts:
20956:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
20956:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =?= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
20956:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
20956:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =<=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
20956:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
20956:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
20956:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
20956: Goal:
20956:  Id :   1, {_}:
          add a (multiply b c) =<= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
20956: Order:
20956:   lpo
20956: Leaf order:
20956:  pixley 4 3 0 
20956:  n1 1 0 0 
20956:  inverse 3 1 0 
20956:  add 9 2 3 0,2
20956:  multiply 9 2 2 0,2,2
20956:  c 2 0 2 2,2,2
20956:  b 2 0 2 1,2,2
20956:  a 3 0 3 1,2
Statistics :
Max weight : 22
Found proof, 38.942991s
% SZS status Unsatisfiable for BOO023-1.p
% SZS output start CNFRefutation for BOO023-1.p
Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
Id :  12, {_}: multiply ?33 (add ?34 ?35) =<= add (multiply ?34 ?33) (multiply ?35 ?33) [35, 34, 33] by multiply_add_property ?33 ?34 ?35
Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
Id :   5, {_}: pixley ?11 ?12 ?13 =<= add (multiply ?11 (inverse ?12)) (add (multiply ?11 ?13) (multiply (inverse ?12) ?13)) [13, 12, 11] by pixley_defn ?11 ?12 ?13
Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
Id :   3, {_}: multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5) [7, 6, 5] by multiply_add_property ?5 ?6 ?7
Id :  19, {_}: pixley ?11 ?12 ?13 =<= add (multiply ?11 (inverse ?12)) (multiply ?13 (add ?11 (inverse ?12))) [13, 12, 11] by Demod 5 with 3 at 2,3
Id : 485, {_}: multiply (pixley ?939 ?940 ?941) (multiply ?941 (add ?939 (inverse ?940))) =>= multiply ?941 (add ?939 (inverse ?940)) [941, 940, 939] by Super 2 with 19 at 1,2
Id : 505, {_}: multiply ?1017 (multiply ?1018 (add ?1017 (inverse ?1018))) =>= multiply ?1018 (add ?1017 (inverse ?1018)) [1018, 1017] by Super 485 with 7 at 1,2
Id :  21, {_}: pixley ?58 ?59 ?60 =<= add (multiply ?58 (inverse ?59)) (multiply ?60 (add ?58 (inverse ?59))) [60, 59, 58] by Demod 5 with 3 at 2,3
Id :  22, {_}: pixley ?62 ?62 ?63 =<= add (multiply ?62 (inverse ?62)) (multiply ?63 n1) [63, 62] by Super 21 with 4 at 2,2,3
Id : 413, {_}: ?825 =<= add (multiply ?826 (inverse ?826)) (multiply ?825 n1) [826, 825] by Demod 22 with 6 at 2
Id :  16, {_}: multiply n1 (inverse ?49) =>= inverse ?49 [49] by Super 2 with 4 at 1,2
Id : 428, {_}: ?870 =<= add (inverse n1) (multiply ?870 n1) [870] by Super 413 with 16 at 1,3
Id :  14, {_}: multiply ?41 (add (add ?42 ?41) ?43) =>= add ?41 (multiply ?43 ?41) [43, 42, 41] by Super 12 with 2 at 1,3
Id : 548, {_}: ?1062 =<= add (inverse n1) (multiply ?1062 n1) [1062] by Super 413 with 16 at 1,3
Id : 593, {_}: add ?1120 n1 =?= add (inverse n1) n1 [1120] by Super 548 with 2 at 2,3
Id : 553, {_}: add ?1072 n1 =?= add (inverse n1) n1 [1072] by Super 548 with 2 at 2,3
Id : 607, {_}: add ?1148 n1 =?= add ?1149 n1 [1149, 1148] by Super 593 with 553 at 3
Id :  13, {_}: multiply ?37 (add ?38 (add ?39 ?37)) =>= add (multiply ?38 ?37) ?37 [39, 38, 37] by Super 12 with 2 at 2,3
Id : 408, {_}: ?63 =<= add (multiply ?62 (inverse ?62)) (multiply ?63 n1) [62, 63] by Demod 22 with 6 at 2
Id : 412, {_}: multiply (multiply ?822 n1) (add ?823 ?822) =<= add (multiply ?823 (multiply ?822 n1)) (multiply ?822 n1) [823, 822] by Super 13 with 408 at 2,2,2
Id : 274, {_}: multiply (multiply ?502 (add ?503 ?504)) (multiply ?504 ?502) =>= multiply ?504 ?502 [504, 503, 502] by Super 2 with 3 at 1,2
Id : 284, {_}: multiply (multiply ?542 n1) (multiply (inverse ?543) ?542) =>= multiply (inverse ?543) ?542 [543, 542] by Super 274 with 4 at 2,1,2
Id : 173, {_}: multiply (inverse ?334) (add ?335 n1) =<= add (multiply ?335 (inverse ?334)) (inverse ?334) [335, 334] by Super 3 with 16 at 2,3
Id : 1514, {_}: multiply ?2669 (multiply ?2670 (add ?2669 (inverse ?2670))) =>= multiply ?2670 (add ?2669 (inverse ?2670)) [2670, 2669] by Super 485 with 7 at 1,2
Id : 672, {_}: multiply (multiply ?1271 n1) (multiply (inverse ?1272) ?1271) =>= multiply (inverse ?1272) ?1271 [1272, 1271] by Super 274 with 4 at 2,1,2
Id : 688, {_}: multiply n1 (multiply (inverse ?1320) (add ?1321 n1)) =>= multiply (inverse ?1320) (add ?1321 n1) [1321, 1320] by Super 672 with 2 at 1,2
Id : 199, {_}: multiply (inverse ?371) (add ?372 n1) =<= add (multiply ?372 (inverse ?371)) (inverse ?371) [372, 371] by Super 3 with 16 at 2,3
Id : 210, {_}: multiply (inverse ?404) (add (add ?405 (inverse ?404)) n1) =>= add (inverse ?404) (inverse ?404) [405, 404] by Super 199 with 2 at 1,3
Id : 966, {_}: add (inverse ?404) (multiply n1 (inverse ?404)) =>= add (inverse ?404) (inverse ?404) [404] by Demod 210 with 14 at 2
Id : 174, {_}: multiply (inverse ?337) (add n1 ?338) =<= add (inverse ?337) (multiply ?338 (inverse ?337)) [338, 337] by Super 3 with 16 at 1,3
Id : 967, {_}: multiply (inverse ?404) (add n1 n1) =?= add (inverse ?404) (inverse ?404) [404] by Demod 966 with 174 at 2
Id : 982, {_}: multiply n1 (add (inverse ?1904) (inverse ?1904)) =>= multiply (inverse ?1904) (add n1 n1) [1904] by Super 688 with 967 at 2,2
Id : 1530, {_}: multiply (inverse n1) (multiply (inverse n1) (add n1 n1)) =>= multiply n1 (add (inverse n1) (inverse n1)) [] by Super 1514 with 982 at 2,2
Id : 1554, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= multiply n1 (add (inverse n1) (inverse n1)) [] by Demod 1530 with 967 at 2,2
Id : 1555, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= multiply (inverse n1) (add n1 n1) [] by Demod 1554 with 982 at 3
Id : 1556, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= add (inverse n1) (inverse n1) [] by Demod 1555 with 967 at 3
Id : 1568, {_}: pixley (inverse n1) n1 (inverse n1) =<= add (multiply (inverse n1) (inverse n1)) (add (inverse n1) (inverse n1)) [] by Super 19 with 1556 at 2,3
Id : 1597, {_}: inverse n1 =<= add (multiply (inverse n1) (inverse n1)) (add (inverse n1) (inverse n1)) [] by Demod 1568 with 8 at 2
Id : 1814, {_}: multiply (inverse n1) (inverse n1) =<= add (multiply (multiply (inverse n1) (inverse n1)) (inverse n1)) (inverse n1) [] by Super 13 with 1597 at 2,2
Id : 1906, {_}: multiply (inverse n1) (inverse n1) =<= multiply (inverse n1) (add (multiply (inverse n1) (inverse n1)) n1) [] by Demod 1814 with 173 at 3
Id : 1990, {_}: multiply (inverse n1) (inverse n1) =<= multiply (inverse n1) (add ?3163 n1) [3163] by Super 1906 with 607 at 2,3
Id : 2009, {_}: multiply (inverse n1) (inverse n1) =>= add (inverse n1) (inverse n1) [] by Super 1990 with 967 at 3
Id : 2048, {_}: multiply (inverse n1) (add (inverse n1) n1) =<= add (add (inverse n1) (inverse n1)) (inverse n1) [] by Super 173 with 2009 at 1,3
Id : 1928, {_}: multiply (inverse n1) (inverse n1) =<= multiply (inverse n1) (add ?3128 n1) [3128] by Super 1906 with 607 at 2,3
Id : 2040, {_}: add (inverse n1) (inverse n1) =<= multiply (inverse n1) (add ?3128 n1) [3128] by Demod 1928 with 2009 at 2
Id : 2082, {_}: add (inverse n1) (inverse n1) =<= add (add (inverse n1) (inverse n1)) (inverse n1) [] by Demod 2048 with 2040 at 2
Id : 2135, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= add (inverse n1) (multiply (inverse n1) (inverse n1)) [] by Super 14 with 2082 at 2,2
Id : 2186, {_}: add (inverse n1) (inverse n1) =<= add (inverse n1) (multiply (inverse n1) (inverse n1)) [] by Demod 2135 with 1556 at 2
Id : 2187, {_}: add (inverse n1) (inverse n1) =<= multiply (inverse n1) (add n1 (inverse n1)) [] by Demod 2186 with 174 at 3
Id : 2188, {_}: add (inverse n1) (inverse n1) =>= multiply (inverse n1) n1 [] by Demod 2187 with 4 at 2,3
Id : 2041, {_}: inverse n1 =<= add (add (inverse n1) (inverse n1)) (add (inverse n1) (inverse n1)) [] by Demod 1597 with 2009 at 1,3
Id : 2225, {_}: inverse n1 =<= add (multiply (inverse n1) n1) (add (inverse n1) (inverse n1)) [] by Demod 2041 with 2188 at 1,3
Id : 2226, {_}: inverse n1 =<= add (multiply (inverse n1) n1) (multiply (inverse n1) n1) [] by Demod 2225 with 2188 at 2,3
Id : 2235, {_}: inverse n1 =<= multiply n1 (add (inverse n1) (inverse n1)) [] by Demod 2226 with 3 at 3
Id : 2236, {_}: inverse n1 =<= multiply (inverse n1) (add n1 n1) [] by Demod 2235 with 982 at 3
Id : 2237, {_}: inverse n1 =<= add (inverse n1) (inverse n1) [] by Demod 2236 with 967 at 3
Id : 2238, {_}: inverse n1 =<= multiply (inverse n1) n1 [] by Demod 2237 with 2188 at 3
Id : 2244, {_}: add (inverse n1) (inverse n1) =>= inverse n1 [] by Demod 2188 with 2238 at 3
Id : 2259, {_}: multiply (inverse n1) (add ?3306 (inverse n1)) =>= add (multiply ?3306 (inverse n1)) (inverse n1) [3306] by Super 13 with 2244 at 2,2,2
Id : 2294, {_}: multiply (inverse n1) (add ?3306 (inverse n1)) =>= multiply (inverse n1) (add ?3306 n1) [3306] by Demod 2259 with 173 at 3
Id : 2232, {_}: multiply (inverse n1) n1 =<= multiply (inverse n1) (add ?3128 n1) [3128] by Demod 2040 with 2188 at 2
Id : 2243, {_}: inverse n1 =<= multiply (inverse n1) (add ?3128 n1) [3128] by Demod 2232 with 2238 at 2
Id : 2295, {_}: multiply (inverse n1) (add ?3306 (inverse n1)) =>= inverse n1 [3306] by Demod 2294 with 2243 at 3
Id : 2419, {_}: multiply (multiply (add ?3405 (inverse n1)) n1) (inverse n1) =>= multiply (inverse n1) (add ?3405 (inverse n1)) [3405] by Super 284 with 2295 at 2,2
Id : 3205, {_}: multiply (multiply (add ?4259 (inverse n1)) n1) (inverse n1) =>= inverse n1 [4259] by Demod 2419 with 2295 at 3
Id : 3222, {_}: multiply (multiply n1 n1) (inverse n1) =>= inverse n1 [] by Super 3205 with 4 at 1,1,2
Id : 3294, {_}: multiply (inverse n1) (add (multiply n1 n1) ?4332) =>= add (inverse n1) (multiply ?4332 (inverse n1)) [4332] by Super 3 with 3222 at 1,3
Id : 3323, {_}: multiply (inverse n1) (add (multiply n1 n1) ?4332) =>= multiply (inverse n1) (add n1 ?4332) [4332] by Demod 3294 with 174 at 3
Id :  24, {_}: pixley (add ?69 (inverse ?70)) ?70 ?71 =<= add (inverse ?70) (multiply ?71 (add (add ?69 (inverse ?70)) (inverse ?70))) [71, 70, 69] by Super 21 with 2 at 1,3
Id : 2249, {_}: pixley (add (inverse n1) (inverse n1)) n1 ?3289 =<= add (inverse n1) (multiply ?3289 (add (inverse n1) (inverse n1))) [3289] by Super 24 with 2244 at 1,2,2,3
Id : 2310, {_}: pixley (inverse n1) n1 ?3289 =<= add (inverse n1) (multiply ?3289 (add (inverse n1) (inverse n1))) [3289] by Demod 2249 with 2244 at 1,2
Id : 2311, {_}: pixley (inverse n1) n1 ?3289 =<= add (inverse n1) (multiply ?3289 (inverse n1)) [3289] by Demod 2310 with 2244 at 2,2,3
Id : 2312, {_}: pixley (inverse n1) n1 ?3289 =<= multiply (inverse n1) (add n1 ?3289) [3289] by Demod 2311 with 174 at 3
Id : 3528, {_}: multiply (inverse n1) (add (multiply n1 n1) ?4508) =>= pixley (inverse n1) n1 ?4508 [4508] by Demod 3323 with 2312 at 3
Id : 3542, {_}: multiply (inverse n1) (multiply n1 (add n1 ?4535)) =>= pixley (inverse n1) n1 (multiply ?4535 n1) [4535] by Super 3528 with 3 at 2,2
Id : 2258, {_}: pixley (inverse n1) n1 ?3304 =<= add (multiply (inverse n1) (inverse n1)) (multiply ?3304 (inverse n1)) [3304] by Super 19 with 2244 at 2,2,3
Id : 2766, {_}: pixley (inverse n1) n1 ?3924 =<= multiply (inverse n1) (add (inverse n1) ?3924) [3924] by Demod 2258 with 3 at 3
Id : 2784, {_}: pixley (inverse n1) n1 (multiply ?3959 n1) =>= multiply (inverse n1) ?3959 [3959] by Super 2766 with 428 at 2,3
Id : 4047, {_}: multiply (inverse n1) (multiply n1 (add n1 ?5164)) =>= multiply (inverse n1) ?5164 [5164] by Demod 3542 with 2784 at 3
Id : 4052, {_}: multiply (inverse n1) (multiply n1 n1) =>= multiply (inverse n1) (inverse n1) [] by Super 4047 with 4 at 2,2,2
Id : 2233, {_}: multiply (inverse n1) (inverse n1) =>= multiply (inverse n1) n1 [] by Demod 2009 with 2188 at 3
Id : 2242, {_}: multiply (inverse n1) (inverse n1) =>= inverse n1 [] by Demod 2233 with 2238 at 3
Id : 4088, {_}: multiply (inverse n1) (multiply n1 n1) =>= inverse n1 [] by Demod 4052 with 2242 at 3
Id : 4118, {_}: multiply (multiply n1 n1) (add (inverse n1) n1) =>= add (inverse n1) (multiply n1 n1) [] by Super 412 with 4088 at 1,3
Id : 1137, {_}: multiply (multiply ?2152 n1) (add ?2152 ?2153) =<= add (multiply ?2152 n1) (multiply ?2153 (multiply ?2152 n1)) [2153, 2152] by Super 14 with 408 at 1,2,2
Id : 411, {_}: multiply ?820 (multiply ?820 n1) =>= multiply ?820 n1 [820] by Super 2 with 408 at 1,2
Id : 1151, {_}: multiply (multiply ?2193 n1) (add ?2193 ?2193) =>= add (multiply ?2193 n1) (multiply ?2193 n1) [2193] by Super 1137 with 411 at 2,3
Id : 1282, {_}: multiply (multiply ?2412 n1) (add ?2412 ?2412) =>= multiply n1 (add ?2412 ?2412) [2412] by Demod 1151 with 3 at 3
Id : 1286, {_}: multiply (multiply n1 n1) (add ?2420 n1) =>= multiply n1 (add n1 n1) [2420] by Super 1282 with 607 at 2,2
Id : 4147, {_}: multiply n1 (add n1 n1) =<= add (inverse n1) (multiply n1 n1) [] by Demod 4118 with 1286 at 2
Id : 4148, {_}: multiply n1 (add n1 n1) =>= n1 [] by Demod 4147 with 428 at 3
Id : 4590, {_}: multiply (add n1 n1) (add n1 ?5598) =>= add n1 (multiply ?5598 (add n1 n1)) [5598] by Super 3 with 4148 at 1,3
Id : 4186, {_}: multiply n1 (add n1 n1) =>= n1 [] by Demod 4147 with 428 at 3
Id : 4194, {_}: multiply n1 (add ?5284 n1) =>= n1 [5284] by Super 4186 with 607 at 2,2
Id : 4313, {_}: n1 =<= add n1 (multiply n1 n1) [] by Super 14 with 4194 at 2
Id : 4601, {_}: multiply (add n1 n1) n1 =<= add n1 (multiply (multiply n1 n1) (add n1 n1)) [] by Super 4590 with 4313 at 2,2
Id : 4648, {_}: n1 =<= add n1 (multiply (multiply n1 n1) (add n1 n1)) [] by Demod 4601 with 2 at 2
Id : 1187, {_}: multiply (multiply ?2193 n1) (add ?2193 ?2193) =>= multiply n1 (add ?2193 ?2193) [2193] by Demod 1151 with 3 at 3
Id : 4649, {_}: n1 =<= add n1 (multiply n1 (add n1 n1)) [] by Demod 4648 with 1187 at 2,3
Id : 4650, {_}: n1 =<= add n1 n1 [] by Demod 4649 with 4194 at 2,3
Id : 4692, {_}: add ?5677 n1 =>= n1 [5677] by Super 607 with 4650 at 3
Id : 5124, {_}: multiply ?6342 n1 =<= add ?6342 (multiply n1 ?6342) [6342] by Super 14 with 4692 at 2,2
Id : 4670, {_}: multiply n1 (add (inverse ?1904) (inverse ?1904)) =>= multiply (inverse ?1904) n1 [1904] by Demod 982 with 4650 at 2,3
Id : 4669, {_}: multiply (inverse ?404) n1 =<= add (inverse ?404) (inverse ?404) [404] by Demod 967 with 4650 at 2,2
Id : 4674, {_}: multiply n1 (multiply (inverse ?1904) n1) =>= multiply (inverse ?1904) n1 [1904] by Demod 4670 with 4669 at 2,2
Id : 5136, {_}: multiply (multiply (inverse ?6367) n1) n1 =<= add (multiply (inverse ?6367) n1) (multiply (inverse ?6367) n1) [6367] by Super 5124 with 4674 at 2,3
Id : 5182, {_}: multiply (multiply (inverse ?6367) n1) n1 =<= multiply n1 (add (inverse ?6367) (inverse ?6367)) [6367] by Demod 5136 with 3 at 3
Id : 5183, {_}: multiply (multiply (inverse ?6367) n1) n1 =>= multiply n1 (multiply (inverse ?6367) n1) [6367] by Demod 5182 with 4669 at 2,3
Id : 5184, {_}: multiply (multiply (inverse ?6367) n1) n1 =>= multiply (inverse ?6367) n1 [6367] by Demod 5183 with 4674 at 3
Id : 5206, {_}: multiply (inverse ?6424) n1 =<= add (inverse n1) (multiply (inverse ?6424) n1) [6424] by Super 428 with 5184 at 2,3
Id : 5244, {_}: multiply (inverse ?6424) n1 =>= inverse ?6424 [6424] by Demod 5206 with 428 at 3
Id : 5308, {_}: inverse ?6512 =<= add (inverse n1) (inverse ?6512) [6512] by Super 428 with 5244 at 2,3
Id : 5370, {_}: pixley (inverse n1) ?6557 ?6558 =<= add (multiply (inverse n1) (inverse ?6557)) (multiply ?6558 (inverse ?6557)) [6558, 6557] by Super 19 with 5308 at 2,2,3
Id : 7459, {_}: pixley (inverse n1) ?8766 ?8767 =<= multiply (inverse ?8766) (add (inverse n1) ?8767) [8767, 8766] by Demod 5370 with 3 at 3
Id : 5371, {_}: inverse (inverse n1) =>= n1 [] by Super 4 with 5308 at 2
Id : 7482, {_}: pixley (inverse n1) (inverse n1) ?8832 =<= multiply n1 (add (inverse n1) ?8832) [8832] by Super 7459 with 5371 at 1,3
Id : 7542, {_}: ?8832 =<= multiply n1 (add (inverse n1) ?8832) [8832] by Demod 7482 with 6 at 2
Id : 5466, {_}: pixley ?6672 (inverse n1) ?6673 =<= add (multiply ?6672 (inverse (inverse n1))) (multiply ?6673 (add ?6672 n1)) [6673, 6672] by Super 19 with 5371 at 2,2,2,3
Id : 5516, {_}: pixley ?6672 (inverse n1) ?6673 =<= add (multiply ?6672 n1) (multiply ?6673 (add ?6672 n1)) [6673, 6672] by Demod 5466 with 5371 at 2,1,3
Id : 5517, {_}: pixley ?6672 (inverse n1) ?6673 =<= add (multiply ?6672 n1) (multiply ?6673 n1) [6673, 6672] by Demod 5516 with 4692 at 2,2,3
Id : 5854, {_}: pixley ?6987 (inverse n1) ?6988 =<= multiply n1 (add ?6987 ?6988) [6988, 6987] by Demod 5517 with 3 at 3
Id : 5871, {_}: pixley (inverse n1) (inverse n1) (multiply ?7040 n1) =>= multiply n1 ?7040 [7040] by Super 5854 with 428 at 2,3
Id : 5916, {_}: multiply ?7040 n1 =?= multiply n1 ?7040 [7040] by Demod 5871 with 6 at 2
Id : 5518, {_}: pixley ?6672 (inverse n1) ?6673 =<= multiply n1 (add ?6672 ?6673) [6673, 6672] by Demod 5517 with 3 at 3
Id : 5837, {_}: multiply ?6926 (pixley ?6926 (inverse n1) (inverse n1)) =>= multiply n1 (add ?6926 (inverse n1)) [6926] by Super 505 with 5518 at 2,2
Id : 5906, {_}: multiply ?6926 ?6926 =?= multiply n1 (add ?6926 (inverse n1)) [6926] by Demod 5837 with 7 at 2,2
Id : 5907, {_}: multiply ?6926 ?6926 =?= pixley ?6926 (inverse n1) (inverse n1) [6926] by Demod 5906 with 5518 at 3
Id : 5908, {_}: multiply ?6926 ?6926 =>= ?6926 [6926] by Demod 5907 with 7 at 3
Id : 7131, {_}: multiply ?8481 (add ?8482 ?8481) =>= add (multiply ?8482 ?8481) ?8481 [8482, 8481] by Super 3 with 5908 at 2,3
Id : 5066, {_}: multiply ?6275 n1 =<= add ?6275 (multiply n1 ?6275) [6275] by Super 14 with 4692 at 2,2
Id : 6609, {_}: multiply ?7988 n1 =<= add ?7988 (multiply ?7988 n1) [7988] by Super 5066 with 5916 at 2,3
Id : 7156, {_}: multiply (multiply ?8553 n1) (multiply ?8553 n1) =<= add (multiply ?8553 (multiply ?8553 n1)) (multiply ?8553 n1) [8553] by Super 7131 with 6609 at 2,2
Id : 7254, {_}: multiply ?8553 n1 =<= add (multiply ?8553 (multiply ?8553 n1)) (multiply ?8553 n1) [8553] by Demod 7156 with 5908 at 2
Id : 7255, {_}: multiply ?8553 n1 =<= multiply (multiply ?8553 n1) (add ?8553 ?8553) [8553] by Demod 7254 with 412 at 3
Id : 5833, {_}: multiply (multiply ?2193 n1) (add ?2193 ?2193) =>= pixley ?2193 (inverse n1) ?2193 [2193] by Demod 1187 with 5518 at 3
Id : 5835, {_}: multiply (multiply ?2193 n1) (add ?2193 ?2193) =>= ?2193 [2193] by Demod 5833 with 8 at 3
Id : 7256, {_}: multiply ?8553 n1 =>= ?8553 [8553] by Demod 7255 with 5835 at 3
Id : 7273, {_}: ?7040 =<= multiply n1 ?7040 [7040] by Demod 5916 with 7256 at 2
Id : 7543, {_}: ?8832 =<= add (inverse n1) ?8832 [8832] by Demod 7542 with 7273 at 3
Id : 7582, {_}: multiply (inverse n1) (multiply ?8919 (inverse ?8919)) =?= multiply ?8919 (add (inverse n1) (inverse ?8919)) [8919] by Super 505 with 7543 at 2,2,2
Id : 5473, {_}: multiply ?6687 (multiply (inverse n1) (add ?6687 n1)) =?= multiply (inverse n1) (add ?6687 (inverse (inverse n1))) [6687] by Super 505 with 5371 at 2,2,2,2
Id : 5499, {_}: multiply ?6687 (multiply (inverse n1) n1) =<= multiply (inverse n1) (add ?6687 (inverse (inverse n1))) [6687] by Demod 5473 with 4692 at 2,2,2
Id : 5500, {_}: multiply ?6687 (multiply (inverse n1) n1) =?= multiply (inverse n1) (add ?6687 n1) [6687] by Demod 5499 with 5371 at 2,2,3
Id : 5501, {_}: multiply ?6687 (inverse n1) =<= multiply (inverse n1) (add ?6687 n1) [6687] by Demod 5500 with 5244 at 2,2
Id : 5502, {_}: multiply ?6687 (inverse n1) =?= multiply (inverse n1) n1 [6687] by Demod 5501 with 4692 at 2,3
Id : 5503, {_}: multiply ?6687 (inverse n1) =>= inverse n1 [6687] by Demod 5502 with 5244 at 3
Id : 5615, {_}: multiply (inverse n1) (add n1 ?6752) =>= add (inverse n1) (inverse n1) [6752] by Super 174 with 5503 at 2,3
Id : 5636, {_}: pixley (inverse n1) n1 ?6752 =?= add (inverse n1) (inverse n1) [6752] by Demod 5615 with 2312 at 2
Id : 5285, {_}: inverse ?404 =<= add (inverse ?404) (inverse ?404) [404] by Demod 4669 with 5244 at 2
Id : 5637, {_}: pixley (inverse n1) n1 ?6752 =>= inverse n1 [6752] by Demod 5636 with 5285 at 3
Id : 5782, {_}: inverse n1 =<= multiply (inverse n1) ?3959 [3959] by Demod 2784 with 5637 at 2
Id : 7613, {_}: inverse n1 =<= multiply ?8919 (add (inverse n1) (inverse ?8919)) [8919] by Demod 7582 with 5782 at 2
Id : 7614, {_}: inverse n1 =<= multiply ?8919 (inverse ?8919) [8919] by Demod 7613 with 7543 at 2,3
Id : 7674, {_}: multiply (inverse ?8984) (add ?8984 ?8985) =?= add (inverse n1) (multiply ?8985 (inverse ?8984)) [8985, 8984] by Super 3 with 7614 at 1,3
Id : 7731, {_}: multiply (inverse ?8984) (add ?8984 ?8985) =>= multiply ?8985 (inverse ?8984) [8985, 8984] by Demod 7674 with 7543 at 3
Id : 289, {_}: multiply (multiply ?563 (multiply (inverse ?564) (add ?565 n1))) (multiply (inverse ?564) ?563) =>= multiply (inverse ?564) ?563 [565, 564, 563] by Super 274 with 173 at 2,1,2
Id : 8394, {_}: multiply (multiply ?563 (multiply (inverse ?564) n1)) (multiply (inverse ?564) ?563) =>= multiply (inverse ?564) ?563 [564, 563] by Demod 289 with 4692 at 2,2,1,2
Id : 8406, {_}: multiply (multiply ?9773 (inverse ?9774)) (multiply (inverse ?9774) ?9773) =>= multiply (inverse ?9774) ?9773 [9774, 9773] by Demod 8394 with 7256 at 2,1,2
Id : 8444, {_}: multiply (inverse n1) (multiply (inverse ?9877) ?9877) =>= multiply (inverse ?9877) ?9877 [9877] by Super 8406 with 7614 at 1,2
Id : 8534, {_}: inverse n1 =<= multiply (inverse ?9877) ?9877 [9877] by Demod 8444 with 5782 at 2
Id : 8551, {_}: multiply ?9925 (add ?9926 (inverse ?9925)) =>= add (multiply ?9926 ?9925) (inverse n1) [9926, 9925] by Super 3 with 8534 at 2,3
Id : 367, {_}: multiply ?731 (add (add ?732 ?731) ?733) =>= add ?731 (multiply ?733 ?731) [733, 732, 731] by Super 12 with 2 at 1,3
Id : 379, {_}: multiply ?780 n1 =<= add ?780 (multiply (inverse (add ?781 ?780)) ?780) [781, 780] by Super 367 with 4 at 2,2
Id : 7285, {_}: ?780 =<= add ?780 (multiply (inverse (add ?781 ?780)) ?780) [781, 780] by Demod 379 with 7256 at 2
Id : 7585, {_}: ?8927 =<= add ?8927 (multiply (inverse ?8927) ?8927) [8927] by Super 7285 with 7543 at 1,1,2,3
Id : 8670, {_}: ?8927 =<= add ?8927 (inverse n1) [8927] by Demod 7585 with 8534 at 2,3
Id : 9041, {_}: multiply ?9925 (add ?9926 (inverse ?9925)) =>= multiply ?9926 ?9925 [9926, 9925] by Demod 8551 with 8670 at 3
Id : 172, {_}: pixley n1 ?331 ?332 =<= add (inverse ?331) (multiply ?332 (add n1 (inverse ?331))) [332, 331] by Super 19 with 16 at 1,3
Id : 9053, {_}: pixley n1 ?10412 ?10412 =<= add (inverse ?10412) (multiply n1 ?10412) [10412] by Super 172 with 9041 at 2,3
Id : 9135, {_}: n1 =<= add (inverse ?10412) (multiply n1 ?10412) [10412] by Demod 9053 with 7 at 2
Id : 9136, {_}: n1 =<= add (inverse ?10412) ?10412 [10412] by Demod 9135 with 7273 at 2,3
Id : 9201, {_}: pixley (inverse (inverse ?10589)) ?10589 ?10590 =<= add (multiply (inverse (inverse ?10589)) (inverse ?10589)) (multiply ?10590 n1) [10590, 10589] by Super 19 with 9136 at 2,2,3
Id : 9238, {_}: pixley (inverse (inverse ?10589)) ?10589 ?10590 =?= add (inverse n1) (multiply ?10590 n1) [10590, 10589] by Demod 9201 with 8534 at 1,3
Id : 9239, {_}: pixley (inverse (inverse ?10589)) ?10589 ?10590 =>= add (inverse n1) ?10590 [10590, 10589] by Demod 9238 with 7256 at 2,3
Id : 9240, {_}: pixley (inverse (inverse ?10589)) ?10589 ?10590 =>= ?10590 [10590, 10589] by Demod 9239 with 7543 at 3
Id : 10446, {_}: ?12102 =<= inverse (inverse ?12102) [12102] by Super 7 with 9240 at 2
Id : 10555, {_}: multiply (inverse ?12273) (add ?12274 ?12273) =>= multiply ?12274 (inverse ?12273) [12274, 12273] by Super 9041 with 10446 at 2,2,2
Id : 11456, {_}: pixley (add ?13531 (inverse ?13532)) ?13532 (inverse (inverse ?13532)) =<= add (inverse ?13532) (multiply (add ?13531 (inverse ?13532)) (inverse (inverse ?13532))) [13532, 13531] by Super 24 with 10555 at 2,3
Id : 11548, {_}: pixley (add ?13531 (inverse ?13532)) ?13532 ?13532 =<= add (inverse ?13532) (multiply (add ?13531 (inverse ?13532)) (inverse (inverse ?13532))) [13532, 13531] by Demod 11456 with 10446 at 3,2
Id : 8892, {_}: multiply (inverse ?10244) (add ?10244 ?10245) =>= multiply ?10245 (inverse ?10244) [10245, 10244] by Demod 7674 with 7543 at 3
Id : 7580, {_}: multiply ?8914 (add ?8915 ?8914) =?= add (multiply (inverse n1) ?8914) ?8914 [8915, 8914] by Super 13 with 7543 at 2,2
Id : 5958, {_}: multiply ?7147 (add ?7148 ?7147) =>= add (multiply ?7148 ?7147) ?7147 [7148, 7147] by Super 3 with 5908 at 2,3
Id : 7619, {_}: add (multiply ?8915 ?8914) ?8914 =?= add (multiply (inverse n1) ?8914) ?8914 [8914, 8915] by Demod 7580 with 5958 at 2
Id : 7620, {_}: add (multiply ?8915 ?8914) ?8914 =>= add (inverse n1) ?8914 [8914, 8915] by Demod 7619 with 5782 at 1,3
Id : 7775, {_}: add (multiply ?9114 ?9115) ?9115 =>= ?9115 [9115, 9114] by Demod 7620 with 7543 at 3
Id : 7621, {_}: add (multiply ?8915 ?8914) ?8914 =>= ?8914 [8914, 8915] by Demod 7620 with 7543 at 3
Id : 7749, {_}: multiply ?7147 (add ?7148 ?7147) =>= ?7147 [7148, 7147] by Demod 5958 with 7621 at 3
Id : 7792, {_}: add ?9167 (add ?9168 ?9167) =>= add ?9168 ?9167 [9168, 9167] by Super 7775 with 7749 at 1,2
Id : 8900, {_}: multiply (inverse ?10265) (add ?10266 ?10265) =<= multiply (add ?10266 ?10265) (inverse ?10265) [10266, 10265] by Super 8892 with 7792 at 2,2
Id : 11444, {_}: multiply ?10266 (inverse ?10265) =<= multiply (add ?10266 ?10265) (inverse ?10265) [10265, 10266] by Demod 8900 with 10555 at 2
Id : 11549, {_}: pixley (add ?13531 (inverse ?13532)) ?13532 ?13532 =?= add (inverse ?13532) (multiply ?13531 (inverse (inverse ?13532))) [13532, 13531] by Demod 11548 with 11444 at 2,3
Id : 11550, {_}: add ?13531 (inverse ?13532) =<= add (inverse ?13532) (multiply ?13531 (inverse (inverse ?13532))) [13532, 13531] by Demod 11549 with 7 at 2
Id : 11551, {_}: add ?13531 (inverse ?13532) =<= add (inverse ?13532) (multiply ?13531 ?13532) [13532, 13531] by Demod 11550 with 10446 at 2,2,3
Id : 11841, {_}: multiply (inverse (inverse ?13951)) (add ?13952 (inverse ?13951)) =>= multiply (multiply ?13952 ?13951) (inverse (inverse ?13951)) [13952, 13951] by Super 7731 with 11551 at 2,2
Id : 11918, {_}: multiply ?13952 (inverse (inverse ?13951)) =<= multiply (multiply ?13952 ?13951) (inverse (inverse ?13951)) [13951, 13952] by Demod 11841 with 10555 at 2
Id : 11919, {_}: multiply ?13952 (inverse (inverse ?13951)) =<= multiply (multiply ?13952 ?13951) ?13951 [13951, 13952] by Demod 11918 with 10446 at 2,3
Id : 11920, {_}: multiply ?13952 ?13951 =<= multiply (multiply ?13952 ?13951) ?13951 [13951, 13952] by Demod 11919 with 10446 at 2,2
Id : 12244, {_}: multiply ?14434 (add ?14435 (multiply ?14436 ?14434)) =>= add (multiply ?14435 ?14434) (multiply ?14436 ?14434) [14436, 14435, 14434] by Super 3 with 11920 at 2,3
Id : 29011, {_}: multiply ?35505 (add ?35506 (multiply ?35507 ?35505)) =>= multiply ?35505 (add ?35506 ?35507) [35507, 35506, 35505] by Demod 12244 with 3 at 3
Id : 29060, {_}: multiply ?35715 (add ?35716 (inverse n1)) =?= multiply ?35715 (add ?35716 (inverse ?35715)) [35716, 35715] by Super 29011 with 8534 at 2,2,2
Id : 11860, {_}: add ?14021 (inverse ?14022) =<= add (inverse ?14022) (multiply ?14021 ?14022) [14022, 14021] by Demod 11550 with 10446 at 2,2,3
Id : 11890, {_}: add n1 (inverse ?14122) =<= add (inverse ?14122) ?14122 [14122] by Super 11860 with 7273 at 2,3
Id : 11943, {_}: add n1 (inverse ?14122) =>= n1 [14122] by Demod 11890 with 9136 at 3
Id : 11977, {_}: pixley n1 ?331 ?332 =<= add (inverse ?331) (multiply ?332 n1) [332, 331] by Demod 172 with 11943 at 2,2,3
Id : 11984, {_}: pixley n1 ?331 ?332 =<= add (inverse ?331) ?332 [332, 331] by Demod 11977 with 7256 at 2,3
Id : 11991, {_}: add ?13531 (inverse ?13532) =<= pixley n1 ?13532 (multiply ?13531 ?13532) [13532, 13531] by Demod 11551 with 11984 at 3
Id : 12023, {_}: add n1 (inverse ?14257) =>= n1 [14257] by Demod 11890 with 9136 at 3
Id : 12028, {_}: add n1 ?14267 =>= n1 [14267] by Super 12023 with 10446 at 2,2
Id : 12137, {_}: multiply ?14331 (add n1 ?14332) =?= add ?14331 (multiply ?14332 ?14331) [14332, 14331] by Super 14 with 12028 at 1,2,2
Id : 12188, {_}: multiply ?14331 n1 =<= add ?14331 (multiply ?14332 ?14331) [14332, 14331] by Demod 12137 with 12028 at 2,2
Id : 12598, {_}: ?14940 =<= add ?14940 (multiply ?14941 ?14940) [14941, 14940] by Demod 12188 with 7256 at 2
Id : 409, {_}: multiply (multiply ?814 n1) (add ?814 ?815) =<= add (multiply ?814 n1) (multiply ?815 (multiply ?814 n1)) [815, 814] by Super 14 with 408 at 1,2,2
Id : 7278, {_}: multiply ?814 (add ?814 ?815) =<= add (multiply ?814 n1) (multiply ?815 (multiply ?814 n1)) [815, 814] by Demod 409 with 7256 at 1,2
Id : 7279, {_}: multiply ?814 (add ?814 ?815) =<= add ?814 (multiply ?815 (multiply ?814 n1)) [815, 814] by Demod 7278 with 7256 at 1,3
Id : 7280, {_}: multiply ?814 (add ?814 ?815) =>= add ?814 (multiply ?815 ?814) [815, 814] by Demod 7279 with 7256 at 2,2,3
Id : 12189, {_}: ?14331 =<= add ?14331 (multiply ?14332 ?14331) [14332, 14331] by Demod 12188 with 7256 at 2
Id : 12573, {_}: multiply ?814 (add ?814 ?815) =>= ?814 [815, 814] by Demod 7280 with 12189 at 3
Id : 12624, {_}: add ?15025 ?15026 =<= add (add ?15025 ?15026) ?15025 [15026, 15025] by Super 12598 with 12573 at 2,3
Id : 12720, {_}: multiply ?15175 (add (inverse ?15175) ?15176) =<= multiply (add (inverse ?15175) ?15176) ?15175 [15176, 15175] by Super 9041 with 12624 at 2,2
Id : 12767, {_}: multiply ?15175 (pixley n1 ?15175 ?15176) =<= multiply (add (inverse ?15175) ?15176) ?15175 [15176, 15175] by Demod 12720 with 11984 at 2,2
Id : 12768, {_}: multiply ?15175 (pixley n1 ?15175 ?15176) =<= multiply (pixley n1 ?15175 ?15176) ?15175 [15176, 15175] by Demod 12767 with 11984 at 1,3
Id : 8552, {_}: multiply ?9928 (add (inverse ?9928) ?9929) =>= add (inverse n1) (multiply ?9929 ?9928) [9929, 9928] by Super 3 with 8534 at 1,3
Id : 8614, {_}: multiply ?9928 (add (inverse ?9928) ?9929) =>= multiply ?9929 ?9928 [9929, 9928] by Demod 8552 with 7543 at 3
Id : 11985, {_}: multiply ?9928 (pixley n1 ?9928 ?9929) =>= multiply ?9929 ?9928 [9929, 9928] by Demod 8614 with 11984 at 2,2
Id : 12769, {_}: multiply ?15176 ?15175 =<= multiply (pixley n1 ?15175 ?15176) ?15175 [15175, 15176] by Demod 12768 with 11985 at 2
Id : 15132, {_}: add (pixley n1 ?18424 ?18425) (inverse ?18424) =>= pixley n1 ?18424 (multiply ?18425 ?18424) [18425, 18424] by Super 11991 with 12769 at 3,3
Id : 15170, {_}: add (pixley n1 ?18424 ?18425) (inverse ?18424) =>= add ?18425 (inverse ?18424) [18425, 18424] by Demod 15132 with 11991 at 3
Id : 12729, {_}: add ?15203 ?15204 =<= add (add ?15203 ?15204) ?15203 [15204, 15203] by Super 12598 with 12573 at 2,3
Id : 12745, {_}: add (inverse ?15249) ?15250 =<= add (pixley n1 ?15249 ?15250) (inverse ?15249) [15250, 15249] by Super 12729 with 11984 at 1,3
Id : 12826, {_}: pixley n1 ?15249 ?15250 =<= add (pixley n1 ?15249 ?15250) (inverse ?15249) [15250, 15249] by Demod 12745 with 11984 at 2
Id : 23185, {_}: pixley n1 ?18424 ?18425 =<= add ?18425 (inverse ?18424) [18425, 18424] by Demod 15170 with 12826 at 2
Id : 29209, {_}: multiply ?35715 (pixley n1 n1 ?35716) =?= multiply ?35715 (add ?35716 (inverse ?35715)) [35716, 35715] by Demod 29060 with 23185 at 2,2
Id : 29210, {_}: multiply ?35715 (pixley n1 n1 ?35716) =?= multiply ?35715 (pixley n1 ?35715 ?35716) [35716, 35715] by Demod 29209 with 23185 at 2,3
Id : 29211, {_}: multiply ?35715 ?35716 =<= multiply ?35715 (pixley n1 ?35715 ?35716) [35716, 35715] by Demod 29210 with 6 at 2,2
Id : 29212, {_}: multiply ?35715 ?35716 =?= multiply ?35716 ?35715 [35716, 35715] by Demod 29211 with 11985 at 3
Id : 11904, {_}: add ?14161 (inverse (inverse ?14162)) =<= add ?14162 (multiply ?14161 (inverse ?14162)) [14162, 14161] by Super 11860 with 10446 at 1,3
Id : 11970, {_}: add ?14161 ?14162 =<= add ?14162 (multiply ?14161 (inverse ?14162)) [14162, 14161] by Demod 11904 with 10446 at 2,2
Id : 15099, {_}: add (pixley n1 (inverse ?18302) ?18303) ?18302 =>= add ?18302 (multiply ?18303 (inverse ?18302)) [18303, 18302] by Super 11970 with 12769 at 2,3
Id : 15201, {_}: add (pixley n1 (inverse ?18302) ?18303) ?18302 =>= add ?18303 ?18302 [18303, 18302] by Demod 15099 with 11970 at 3
Id : 10547, {_}: pixley n1 (inverse ?12250) ?12251 =<= add (inverse (inverse ?12250)) (multiply ?12251 (add n1 ?12250)) [12251, 12250] by Super 172 with 10446 at 2,2,2,3
Id : 10574, {_}: pixley n1 (inverse ?12250) ?12251 =<= add ?12250 (multiply ?12251 (add n1 ?12250)) [12251, 12250] by Demod 10547 with 10446 at 1,3
Id : 17614, {_}: pixley n1 (inverse ?12250) ?12251 =<= add ?12250 (multiply ?12251 n1) [12251, 12250] by Demod 10574 with 12028 at 2,2,3
Id : 17615, {_}: pixley n1 (inverse ?12250) ?12251 =>= add ?12250 ?12251 [12251, 12250] by Demod 17614 with 7256 at 2,3
Id : 23377, {_}: add (add ?18302 ?18303) ?18302 =>= add ?18303 ?18302 [18303, 18302] by Demod 15201 with 17615 at 1,2
Id : 23378, {_}: add ?18302 ?18303 =?= add ?18303 ?18302 [18303, 18302] by Demod 23377 with 12624 at 2
Id : 363, {_}: multiply (add (add ?713 ?714) ?715) (add ?716 ?714) =<= add (multiply ?716 (add (add ?713 ?714) ?715)) (add ?714 (multiply ?715 ?714)) [716, 715, 714, 713] by Super 3 with 14 at 2,3
Id : 33202, {_}: multiply (add (add ?713 ?714) ?715) (add ?716 ?714) =>= add (multiply ?716 (add (add ?713 ?714) ?715)) ?714 [716, 715, 714, 713] by Demod 363 with 12189 at 2,3
Id : 33249, {_}: multiply (add (add ?41120 ?41121) ?41122) (add ?41123 ?41121) =>= add ?41121 (multiply ?41123 (add (add ?41120 ?41121) ?41122)) [41123, 41122, 41121, 41120] by Demod 33202 with 23378 at 3
Id : 7276, {_}: multiply ?2193 (add ?2193 ?2193) =>= ?2193 [2193] by Demod 5835 with 7256 at 1,2
Id : 7300, {_}: add (multiply ?2193 ?2193) ?2193 =>= ?2193 [2193] by Demod 7276 with 5958 at 2
Id : 7301, {_}: add ?2193 ?2193 =>= ?2193 [2193] by Demod 7300 with 5908 at 1,2
Id : 33300, {_}: multiply (add ?41374 ?41375) (add ?41376 ?41375) =<= add ?41375 (multiply ?41376 (add (add ?41374 ?41375) (add ?41374 ?41375))) [41376, 41375, 41374] by Super 33249 with 7301 at 1,2
Id : 33433, {_}: multiply (add ?41374 ?41375) (add ?41376 ?41375) =>= add ?41375 (multiply ?41376 (add ?41374 ?41375)) [41376, 41375, 41374] by Demod 33300 with 7301 at 2,2,3
Id : 42671, {_}: multiply ?52830 (add ?52831 ?52832) =<= add (multiply ?52830 ?52831) (multiply ?52832 ?52830) [52832, 52831, 52830] by Super 3 with 29212 at 1,3
Id : 42679, {_}: multiply (add ?52859 ?52860) (add ?52861 ?52860) =>= add (multiply (add ?52859 ?52860) ?52861) ?52860 [52861, 52860, 52859] by Super 42671 with 7749 at 2,3
Id : 42859, {_}: multiply (add ?52859 ?52860) (add ?52861 ?52860) =>= add ?52860 (multiply (add ?52859 ?52860) ?52861) [52861, 52860, 52859] by Demod 42679 with 23378 at 3
Id : 58778, {_}: add ?52860 (multiply ?52861 (add ?52859 ?52860)) =?= add ?52860 (multiply (add ?52859 ?52860) ?52861) [52859, 52861, 52860] by Demod 42859 with 33433 at 2
Id : 42225, {_}: multiply ?51978 (add ?51979 ?51980) =<= add (multiply ?51979 ?51978) (multiply ?51978 ?51980) [51980, 51979, 51978] by Super 3 with 29212 at 2,3
Id : 56980, {_}: multiply (add ?78761 ?78762) (add ?78762 ?78763) =>= add ?78762 (multiply (add ?78761 ?78762) ?78763) [78763, 78762, 78761] by Super 42225 with 7749 at 1,3
Id : 57032, {_}: multiply (add ?78985 ?78986) (add ?78985 ?78987) =>= add ?78985 (multiply (add ?78986 ?78985) ?78987) [78987, 78986, 78985] by Super 56980 with 23378 at 1,2
Id : 42307, {_}: multiply (add ?52335 ?52336) (add ?52335 ?52337) =>= add ?52335 (multiply (add ?52335 ?52336) ?52337) [52337, 52336, 52335] by Super 42225 with 12573 at 1,3
Id : 69246, {_}: add ?78985 (multiply (add ?78985 ?78986) ?78987) =?= add ?78985 (multiply (add ?78986 ?78985) ?78987) [78987, 78986, 78985] by Demod 57032 with 42307 at 2
Id : 42691, {_}: multiply (add ?52915 ?52916) (add ?52917 ?52915) =>= add (multiply (add ?52915 ?52916) ?52917) ?52915 [52917, 52916, 52915] by Super 42671 with 12573 at 2,3
Id : 42878, {_}: multiply (add ?52915 ?52916) (add ?52917 ?52915) =>= add ?52915 (multiply (add ?52915 ?52916) ?52917) [52917, 52916, 52915] by Demod 42691 with 23378 at 3
Id : 33277, {_}: multiply (add ?41259 ?41260) (add ?41261 ?41259) =<= add ?41259 (multiply ?41261 (add (add ?41259 ?41259) ?41260)) [41261, 41260, 41259] by Super 33249 with 7301 at 1,1,2
Id : 33397, {_}: multiply (add ?41259 ?41260) (add ?41261 ?41259) =>= add ?41259 (multiply ?41261 (add ?41259 ?41260)) [41261, 41260, 41259] by Demod 33277 with 7301 at 1,2,2,3
Id : 59822, {_}: add ?52915 (multiply ?52917 (add ?52915 ?52916)) =?= add ?52915 (multiply (add ?52915 ?52916) ?52917) [52916, 52917, 52915] by Demod 42878 with 33397 at 2
Id : 49363, {_}: multiply (add ?63432 ?63433) (add ?63433 ?63434) =>= add ?63433 (multiply ?63432 (add ?63433 ?63434)) [63434, 63433, 63432] by Super 29212 with 33397 at 3
Id : 42295, {_}: multiply (add ?52279 ?52280) (add ?52280 ?52281) =>= add ?52280 (multiply (add ?52279 ?52280) ?52281) [52281, 52280, 52279] by Super 42225 with 7749 at 1,3
Id : 65944, {_}: add ?95703 (multiply (add ?95704 ?95703) ?95705) =?= add ?95703 (multiply ?95704 (add ?95703 ?95705)) [95705, 95704, 95703] by Demod 49363 with 42295 at 2
Id : 12345, {_}: multiply ?14434 (add ?14435 (multiply ?14436 ?14434)) =>= multiply ?14434 (add ?14435 ?14436) [14436, 14435, 14434] by Demod 12244 with 3 at 3
Id : 66007, {_}: add ?95981 (multiply (add ?95982 ?95981) (multiply ?95983 ?95982)) =>= add ?95981 (multiply ?95982 (add ?95981 ?95983)) [95983, 95982, 95981] by Super 65944 with 12345 at 2,3
Id : 12571, {_}: multiply ?41 (add (add ?42 ?41) ?43) =>= ?41 [43, 42, 41] by Demod 14 with 12189 at 3
Id : 12574, {_}: multiply (multiply ?14855 ?14856) (add ?14856 ?14857) =>= multiply ?14855 ?14856 [14857, 14856, 14855] by Super 12571 with 12189 at 1,2,2
Id : 32599, {_}: multiply (add ?39770 ?39771) (multiply ?39772 ?39770) =>= multiply ?39772 ?39770 [39772, 39771, 39770] by Super 29212 with 12574 at 3
Id : 66421, {_}: add ?95981 (multiply ?95983 ?95982) =<= add ?95981 (multiply ?95982 (add ?95981 ?95983)) [95982, 95983, 95981] by Demod 66007 with 32599 at 2,2
Id : 74546, {_}: add ?52915 (multiply ?52916 ?52917) =<= add ?52915 (multiply (add ?52915 ?52916) ?52917) [52917, 52916, 52915] by Demod 59822 with 66421 at 2
Id : 74547, {_}: add ?78985 (multiply ?78986 ?78987) =<= add ?78985 (multiply (add ?78986 ?78985) ?78987) [78987, 78986, 78985] by Demod 69246 with 74546 at 2
Id : 74549, {_}: add ?52860 (multiply ?52861 (add ?52859 ?52860)) =>= add ?52860 (multiply ?52859 ?52861) [52859, 52861, 52860] by Demod 58778 with 74547 at 3
Id : 75087, {_}: add a (multiply c b) =?= add a (multiply c b) [] by Demod 57307 with 74549 at 3
Id : 57307, {_}: add a (multiply c b) =<= add a (multiply b (add c a)) [] by Demod 57306 with 33433 at 3
Id : 57306, {_}: add a (multiply c b) =<= multiply (add c a) (add b a) [] by Demod 57305 with 29212 at 3
Id : 57305, {_}: add a (multiply c b) =<= multiply (add b a) (add c a) [] by Demod 57304 with 23378 at 2,3
Id : 57304, {_}: add a (multiply c b) =<= multiply (add b a) (add a c) [] by Demod 57303 with 23378 at 1,3
Id : 57303, {_}: add a (multiply c b) =<= multiply (add a b) (add a c) [] by Demod 1 with 29212 at 2,2
Id :   1, {_}: add a (multiply b c) =<= multiply (add a b) (add a c) [] by prove_add_multiply_property
% SZS output end CNFRefutation for BOO023-1.p
20955: solved BOO023-1.p in 19.273203 using kbo
20955: status Unsatisfiable for BOO023-1.p
NO CLASH, using fixed ground order
21165: Facts:
NO CLASH, using fixed ground order
21166: Facts:
21166:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
21166:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
21166:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
21166:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
21166:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
21166: Goal:
21166:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
21166: Order:
21166:   kbo
21166: Leaf order:
21166:  g 2 0 2 3,3,1,2,2
21166:  f 2 0 2 2,1,2,2
21166:  e 2 0 2 3,1,1,2,2
21166:  d 3 0 3 2,1,1,2,2
21166:  c 3 0 3 1,1,1,2,2
21166:  multiply 16 3 7 0,2
21166:  b 2 0 2 3,1,2
21166:  inverse 4 1 2 0,2,1,2
21166:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21167: Facts:
21167:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
21167:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
21167:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
21167:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
21167:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
21167: Goal:
21167:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
21167: Order:
21167:   lpo
21167: Leaf order:
21167:  g 2 0 2 3,3,1,2,2
21167:  f 2 0 2 2,1,2,2
21167:  e 2 0 2 3,1,1,2,2
21167:  d 3 0 3 2,1,1,2,2
21167:  c 3 0 3 1,1,1,2,2
21167:  multiply 16 3 7 0,2
21167:  b 2 0 2 3,1,2
21167:  inverse 4 1 2 0,2,1,2
21167:  a 2 0 2 1,1,2
21165:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
21165:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
21165:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
21165:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
21165:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
21165: Goal:
21165:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
21165: Order:
21165:   nrkbo
21165: Leaf order:
21165:  g 2 0 2 3,3,1,2,2
21165:  f 2 0 2 2,1,2,2
21165:  e 2 0 2 3,1,1,2,2
21165:  d 3 0 3 2,1,1,2,2
21165:  c 3 0 3 1,1,1,2,2
21165:  multiply 16 3 7 0,2
21165:  b 2 0 2 3,1,2
21165:  inverse 4 1 2 0,2,1,2
21165:  a 2 0 2 1,1,2
Statistics :
Max weight : 24
Found proof, 10.936664s
% SZS status Unsatisfiable for BOO034-1.p
% SZS output start CNFRefutation for BOO034-1.p
Id :   5, {_}: multiply (inverse ?14) ?14 ?15 =>= ?15 [15, 14] by left_inverse ?14 ?15
Id :   4, {_}: multiply ?11 ?11 ?12 =>= ?11 [12, 11] by ternary_multiply_2 ?11 ?12
Id :   6, {_}: multiply ?17 ?18 (inverse ?18) =>= ?17 [18, 17] by right_inverse ?17 ?18
Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
Id :   2, {_}: multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6) =>= multiply ?2 ?3 (multiply ?4 ?5 ?6) [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
Id :  12, {_}: multiply (multiply ?48 ?49 ?50) ?51 ?49 =?= multiply ?48 ?49 (multiply ?50 ?51 ?49) [51, 50, 49, 48] by Super 2 with 3 at 3,2
Id :  13, {_}: multiply ?53 ?54 (multiply ?55 ?53 ?56) =?= multiply ?55 ?53 (multiply ?53 ?54 ?56) [56, 55, 54, 53] by Super 2 with 3 at 1,2
Id : 920, {_}: multiply (multiply ?2937 ?2938 ?2939) ?2937 ?2938 =?= multiply ?2939 ?2937 (multiply ?2937 ?2938 ?2938) [2939, 2938, 2937] by Super 12 with 13 at 3
Id : 1359, {_}: multiply (multiply ?4051 ?4052 ?4053) ?4051 ?4052 =>= multiply ?4053 ?4051 ?4052 [4053, 4052, 4051] by Demod 920 with 3 at 3,3
Id : 1364, {_}: multiply ?4070 ?4070 ?4071 =?= multiply (inverse ?4071) ?4070 ?4071 [4071, 4070] by Super 1359 with 6 at 1,2
Id : 1413, {_}: ?4070 =<= multiply (inverse ?4071) ?4070 ?4071 [4071, 4070] by Demod 1364 with 4 at 2
Id : 1453, {_}: multiply (multiply ?4288 ?4289 (inverse ?4289)) ?4290 ?4289 =>= multiply ?4288 ?4289 ?4290 [4290, 4289, 4288] by Super 12 with 1413 at 3,3
Id : 1476, {_}: multiply ?4288 ?4290 ?4289 =?= multiply ?4288 ?4289 ?4290 [4289, 4290, 4288] by Demod 1453 with 6 at 1,2
Id : 519, {_}: multiply (multiply ?1786 ?1787 ?1788) ?1789 ?1787 =?= multiply ?1786 ?1787 (multiply ?1788 ?1789 ?1787) [1789, 1788, 1787, 1786] by Super 2 with 3 at 3,2
Id : 659, {_}: multiply (multiply ?2172 ?2173 ?2174) ?2174 ?2173 =>= multiply ?2172 ?2173 ?2174 [2174, 2173, 2172] by Super 519 with 4 at 3,3
Id : 664, {_}: multiply ?2191 (inverse ?2192) ?2192 =?= multiply ?2191 ?2192 (inverse ?2192) [2192, 2191] by Super 659 with 6 at 1,2
Id : 701, {_}: multiply ?2191 (inverse ?2192) ?2192 =>= ?2191 [2192, 2191] by Demod 664 with 6 at 3
Id : 1371, {_}: multiply ?4106 ?4106 (inverse ?4107) =?= multiply ?4107 ?4106 (inverse ?4107) [4107, 4106] by Super 1359 with 701 at 1,2
Id : 1415, {_}: ?4106 =<= multiply ?4107 ?4106 (inverse ?4107) [4107, 4106] by Demod 1371 with 4 at 2
Id : 1522, {_}: multiply ?4441 ?4442 (multiply ?4443 ?4441 (inverse ?4441)) =>= multiply ?4443 ?4441 ?4442 [4443, 4442, 4441] by Super 13 with 1415 at 3,3
Id : 1536, {_}: multiply ?4441 ?4442 ?4443 =?= multiply ?4443 ?4441 ?4442 [4443, 4442, 4441] by Demod 1522 with 6 at 3,2
Id : 727, {_}: inverse (inverse ?2329) =>= ?2329 [2329] by Super 5 with 701 at 2
Id : 761, {_}: multiply ?2420 (inverse ?2420) ?2421 =>= ?2421 [2421, 2420] by Super 5 with 727 at 1,2
Id : 40424, {_}: b === b [] by Demod 40423 with 6 at 2
Id : 40423, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply g f e))) =>= b [] by Demod 40422 with 1476 at 3,1,3,2
Id : 40422, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply g e f))) =>= b [] by Demod 40421 with 1536 at 3,1,3,2
Id : 40421, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply f g e))) =>= b [] by Demod 40420 with 1476 at 3,1,3,2
Id : 40420, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply f e g))) =>= b [] by Demod 40419 with 1536 at 3,1,3,2
Id : 40419, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply e g f))) =>= b [] by Demod 40418 with 1476 at 3,1,3,2
Id : 40418, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d c (multiply e f g))) =>= b [] by Demod 40417 with 1476 at 1,3,2
Id : 40417, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply d (multiply e f g) c)) =>= b [] by Demod 40416 with 1476 at 2
Id : 40416, {_}: multiply b (inverse (multiply d (multiply e f g) c)) (multiply d c (multiply g f e)) =>= b [] by Demod 40415 with 1536 at 2
Id : 40415, {_}: multiply (multiply d c (multiply g f e)) b (inverse (multiply d (multiply e f g) c)) =>= b [] by Demod 40414 with 1536 at 1,3,2
Id : 40414, {_}: multiply (multiply d c (multiply g f e)) b (inverse (multiply c d (multiply e f g))) =>= b [] by Demod 40413 with 761 at 2,2
Id : 40413, {_}: multiply (multiply d c (multiply g f e)) (multiply a (inverse a) b) (inverse (multiply c d (multiply e f g))) =>= b [] by Demod 40412 with 1476 at 1,2
Id : 40412, {_}: multiply (multiply d (multiply g f e) c) (multiply a (inverse a) b) (inverse (multiply c d (multiply e f g))) =>= b [] by Demod 40411 with 1476 at 2
Id : 40411, {_}: multiply (multiply d (multiply g f e) c) (inverse (multiply c d (multiply e f g))) (multiply a (inverse a) b) =>= b [] by Demod 40410 with 1536 at 2
Id : 40410, {_}: multiply (multiply a (inverse a) b) (multiply d (multiply g f e) c) (inverse (multiply c d (multiply e f g))) =>= b [] by Demod 11 with 1476 at 2
Id :  11, {_}: multiply (multiply a (inverse a) b) (inverse (multiply c d (multiply e f g))) (multiply d (multiply g f e) c) =>= b [] by Demod 1 with 2 at 1,2,2
Id :   1, {_}: multiply (multiply a (inverse a) b) (inverse (multiply (multiply c d e) f (multiply c d g))) (multiply d (multiply g f e) c) =>= b [] by prove_single_axiom
% SZS output end CNFRefutation for BOO034-1.p
21165: solved BOO034-1.p in 10.220638 using nrkbo
21165: status Unsatisfiable for BOO034-1.p
CLASH, statistics insufficient
21378: Facts:
21378:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21378:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
21378: Goal:
21378:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
21378: Order:
21378:   nrkbo
21378: Leaf order:
21378:  k 1 0 0 
21378:  s 1 0 0 
21378:  g 3 1 3 0,2,2
21378:  apply 13 2 5 0,2
21378:  f 3 1 3 0,2,1,2
CLASH, statistics insufficient
21379: Facts:
21379:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21379:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
21379: Goal:
21379:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
21379: Order:
21379:   kbo
21379: Leaf order:
21379:  k 1 0 0 
21379:  s 1 0 0 
21379:  g 3 1 3 0,2,2
21379:  apply 13 2 5 0,2
21379:  f 3 1 3 0,2,1,2
CLASH, statistics insufficient
21380: Facts:
21380:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21380:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
21380: Goal:
21380:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
21380: Order:
21380:   lpo
21380: Leaf order:
21380:  k 1 0 0 
21380:  s 1 0 0 
21380:  g 3 1 3 0,2,2
21380:  apply 13 2 5 0,2
21380:  f 3 1 3 0,2,1,2
% SZS status Timeout for COL004-1.p
NO CLASH, using fixed ground order
21607: Facts:
21607:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
21607:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
21607:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
21607: Goal:
21607:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
21607: Order:
21607:   nrkbo
21607: Leaf order:
21607:  k 13 0 0 
21607:  s 11 0 0 
21607:  apply 32 2 3 0,2
21607:  fixed_pt 3 0 3 2,2
21607:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
21608: Facts:
21608:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
21608:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
21608:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
21608: Goal:
21608:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
21608: Order:
21608:   kbo
21608: Leaf order:
21608:  k 13 0 0 
21608:  s 11 0 0 
21608:  apply 32 2 3 0,2
21608:  fixed_pt 3 0 3 2,2
21608:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
21609: Facts:
21609:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
21609:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
21609:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
21609: Goal:
21609:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
21609: Order:
21609:   lpo
21609: Leaf order:
21609:  k 13 0 0 
21609:  s 11 0 0 
21609:  apply 32 2 3 0,2
21609:  fixed_pt 3 0 3 2,2
21609:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL006-6.p
CLASH, statistics insufficient
21625: Facts:
21625:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21625:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
21625:  Id :   4, {_}:
          apply (apply t ?11) ?12 =>= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
21625: Goal:
21625:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
21625: Order:
21625:   nrkbo
21625: Leaf order:
21625:  t 1 0 0 
21625:  b 1 0 0 
21625:  s 1 0 0 
21625:  apply 17 2 3 0,2
21625:  f 3 1 3 0,2,2
CLASH, statistics insufficient
21626: Facts:
21626:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21626:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
21626:  Id :   4, {_}:
          apply (apply t ?11) ?12 =>= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
21626: Goal:
21626:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
21626: Order:
21626:   kbo
21626: Leaf order:
21626:  t 1 0 0 
21626:  b 1 0 0 
21626:  s 1 0 0 
21626:  apply 17 2 3 0,2
21626:  f 3 1 3 0,2,2
CLASH, statistics insufficient
21627: Facts:
21627:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
21627:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
21627:  Id :   4, {_}:
          apply (apply t ?11) ?12 =?= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
21627: Goal:
21627:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
21627: Order:
21627:   lpo
21627: Leaf order:
21627:  t 1 0 0 
21627:  b 1 0 0 
21627:  s 1 0 0 
21627:  apply 17 2 3 0,2
21627:  f 3 1 3 0,2,2
% SZS status Timeout for COL036-1.p
CLASH, statistics insufficient
21654: Facts:
21654:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
CLASH, statistics insufficient
21655: Facts:
21655:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
21655:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
21655: Goal:
21655:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
21655: Order:
21655:   kbo
21655: Leaf order:
21655:  t 1 0 0 
21655:  b 1 0 0 
21655:  h 2 1 2 0,2,2
21655:  g 2 1 2 0,2,1,2
21655:  apply 13 2 5 0,2
21655:  f 2 1 2 0,2,1,1,2
21654:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
21654: Goal:
21654:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
21654: Order:
21654:   nrkbo
21654: Leaf order:
21654:  t 1 0 0 
21654:  b 1 0 0 
21654:  h 2 1 2 0,2,2
21654:  g 2 1 2 0,2,1,2
21654:  apply 13 2 5 0,2
21654:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
21656: Facts:
21656:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
21656:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
21656: Goal:
21656:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
21656: Order:
21656:   lpo
21656: Leaf order:
21656:  t 1 0 0 
21656:  b 1 0 0 
21656:  h 2 1 2 0,2,2
21656:  g 2 1 2 0,2,1,2
21656:  apply 13 2 5 0,2
21656:  f 2 1 2 0,2,1,1,2
Goal subsumed
Statistics :
Max weight : 100
Found proof, 5.123186s
% SZS status Unsatisfiable for COL063-1.p
% SZS output start CNFRefutation for COL063-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 3189, {_}: apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) === apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) [] by Super 3184 with 3 at 2
Id : 3184, {_}: apply (apply ?10590 (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) =>= apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) [10590] by Super 3164 with 3 at 2,2
Id : 3164, {_}: apply (apply ?10539 (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (apply (apply ?10540 (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) =>= apply (apply (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) [10540, 10539] by Super 442 with 2 at 2
Id : 442, {_}: apply (apply (apply ?1394 (apply ?1395 (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (apply ?1396 (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) =>= apply (apply (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395))))) (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) [1396, 1395, 1394] by Super 277 with 2 at 1,1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (f (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (h (apply (apply b ?18) ?19)) (g (apply (apply b ?18) ?19))) (f (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (h ?1) (g ?1)) (f ?1) [1] by prove_f_combinator ?1
% SZS output end CNFRefutation for COL063-1.p
21654: solved COL063-1.p in 5.12832 using nrkbo
21654: status Unsatisfiable for COL063-1.p
NO CLASH, using fixed ground order
21661: Facts:
21661:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21661:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21661:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21661:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21661:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21661:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21661:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21661:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21661:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21661:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21661:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21661:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21661:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21661:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21661:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21661: Goal:
21661:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
21661: Order:
21661:   nrkbo
21661: Leaf order:
21661:  inverse 1 1 0 
21661:  multiply 19 2 1 0,3
21661:  greatest_lower_bound 14 2 1 0,2,3
21661:  least_upper_bound 14 2 1 0,1,3
21661:  identity 4 0 2 2,1,3
21661:  a 3 0 3 2
NO CLASH, using fixed ground order
21662: Facts:
21662:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21662:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21662:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21662:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21662:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21662:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21662:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21662:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21662:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21662:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21662:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21662:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21662:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21662:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21662:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21662: Goal:
21662:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
21662: Order:
21662:   kbo
21662: Leaf order:
21662:  inverse 1 1 0 
21662:  multiply 19 2 1 0,3
21662:  greatest_lower_bound 14 2 1 0,2,3
21662:  least_upper_bound 14 2 1 0,1,3
21662:  identity 4 0 2 2,1,3
21662:  a 3 0 3 2
NO CLASH, using fixed ground order
21663: Facts:
21663:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21663:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21663:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21663:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21663:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21663:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21663:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21663:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21663:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21663:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21663:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21663:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21663:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21663:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21663:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21663: Goal:
21663:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
21663: Order:
21663:   lpo
21663: Leaf order:
21663:  inverse 1 1 0 
21663:  multiply 19 2 1 0,3
21663:  greatest_lower_bound 14 2 1 0,2,3
21663:  least_upper_bound 14 2 1 0,1,3
21663:  identity 4 0 2 2,1,3
21663:  a 3 0 3 2
% SZS status Timeout for GRP167-3.p
NO CLASH, using fixed ground order
21683: Facts:
21683:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21683:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21683:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21683:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21683:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21683:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21683:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21683:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21683:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21683:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21683:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21683:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21683:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21683:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21683:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21683: Goal:
21683:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =<=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
21683: Order:
21683:   nrkbo
21683: Leaf order:
21683:  multiply 18 2 0 
21683:  identity 2 0 0 
21683:  greatest_lower_bound 14 2 1 0,3
21683:  inverse 4 1 3 0,2
21683:  least_upper_bound 14 2 1 0,1,2
21683:  b 2 0 2 2,1,2
21683:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21684: Facts:
21684:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21684:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21684:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21684:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21684:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21684:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21684:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21684:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21684:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21684:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21684:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21684:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
NO CLASH, using fixed ground order
21685: Facts:
21685:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21685:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21685:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21685:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21685:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21685:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21685:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21685:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21685:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21685:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21685:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21685:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21685:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21685:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21685:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21685: Goal:
21685:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =>=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
21685: Order:
21685:   lpo
21685: Leaf order:
21685:  multiply 18 2 0 
21685:  identity 2 0 0 
21685:  greatest_lower_bound 14 2 1 0,3
21685:  inverse 4 1 3 0,2
21685:  least_upper_bound 14 2 1 0,1,2
21685:  b 2 0 2 2,1,2
21685:  a 2 0 2 1,1,2
21684:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21684:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21684:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21684: Goal:
21684:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =<=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
21684: Order:
21684:   kbo
21684: Leaf order:
21684:  multiply 18 2 0 
21684:  identity 2 0 0 
21684:  greatest_lower_bound 14 2 1 0,3
21684:  inverse 4 1 3 0,2
21684:  least_upper_bound 14 2 1 0,1,2
21684:  b 2 0 2 2,1,2
21684:  a 2 0 2 1,1,2
% SZS status Timeout for GRP179-1.p
NO CLASH, using fixed ground order
21733: Facts:
21733:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21733:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21733:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21733:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21733:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21733:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21733:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21733:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21733:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21733:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21733:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21733:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21733:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21733:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21733:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21733: Goal:
21733:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
21733: Order:
21733:   kbo
21733: Leaf order:
21733:  multiply 18 2 0 
21733:  greatest_lower_bound 14 2 1 0,1,3
21733:  least_upper_bound 14 2 1 0,2
21733:  identity 4 0 2 2,2
21733:  inverse 3 1 2 0,1,2
21733:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21732: Facts:
21732:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21732:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21732:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21732:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21732:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21732:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21732:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21732:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21732:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21732:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21732:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21732:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21732:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21732:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21732:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21732: Goal:
21732:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
21732: Order:
21732:   nrkbo
21732: Leaf order:
21732:  multiply 18 2 0 
21732:  greatest_lower_bound 14 2 1 0,1,3
21732:  least_upper_bound 14 2 1 0,2
21732:  identity 4 0 2 2,2
21732:  inverse 3 1 2 0,1,2
21732:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21734: Facts:
21734:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21734:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21734:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21734:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21734:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21734:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21734:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21734:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21734:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21734:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21734:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21734:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21734:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21734:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21734:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21734: Goal:
21734:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =<=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
21734: Order:
21734:   lpo
21734: Leaf order:
21734:  multiply 18 2 0 
21734:  greatest_lower_bound 14 2 1 0,1,3
21734:  least_upper_bound 14 2 1 0,2
21734:  identity 4 0 2 2,2
21734:  inverse 3 1 2 0,1,2
21734:  a 2 0 2 1,1,2
% SZS status Timeout for GRP179-2.p
NO CLASH, using fixed ground order
21751: Facts:
21751:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21751:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21751:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21751:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21751:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21751:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21751:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21751:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21751:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21751:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21751:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21751:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21751:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21751:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21751:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21751: Goal:
21751:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
21751: Order:
21751:   nrkbo
21751: Leaf order:
21751:  identity 2 0 0 
21751:  least_upper_bound 14 2 1 0,3
21751:  multiply 20 2 2 0,2
21751:  inverse 2 1 1 0,1,2,2
21751:  greatest_lower_bound 14 2 1 0,1,1,2,2
21751:  b 3 0 3 2,1,1,2,2
21751:  a 3 0 3 1,2
NO CLASH, using fixed ground order
21752: Facts:
21752:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21752:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21752:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21752:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21752:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21752:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21752:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21752:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21752:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21752:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21752:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21752:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21752:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21752:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21752:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21752: Goal:
21752:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
21752: Order:
21752:   kbo
21752: Leaf order:
21752:  identity 2 0 0 
21752:  least_upper_bound 14 2 1 0,3
21752:  multiply 20 2 2 0,2
21752:  inverse 2 1 1 0,1,2,2
21752:  greatest_lower_bound 14 2 1 0,1,1,2,2
21752:  b 3 0 3 2,1,1,2,2
21752:  a 3 0 3 1,2
NO CLASH, using fixed ground order
21753: Facts:
21753:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21753:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21753:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21753:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21753:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21753:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21753:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21753:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21753:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21753:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21753:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21753:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21753:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21753:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21753:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21753: Goal:
21753:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
21753: Order:
21753:   lpo
21753: Leaf order:
21753:  identity 2 0 0 
21753:  least_upper_bound 14 2 1 0,3
21753:  multiply 20 2 2 0,2
21753:  inverse 2 1 1 0,1,2,2
21753:  greatest_lower_bound 14 2 1 0,1,1,2,2
21753:  b 3 0 3 2,1,1,2,2
21753:  a 3 0 3 1,2
% SZS status Timeout for GRP180-1.p
NO CLASH, using fixed ground order
21783: Facts:
21783:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21783:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21783:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21783:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21783:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21783:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21783:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21783:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21783:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21783:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21783:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21783:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21783:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21783:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21783:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21783:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
21783:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
21783:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
21783: Goal:
21783:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
21783: Order:
21783:   nrkbo
21783: Leaf order:
21783:  multiply 20 2 0 
21783:  inverse 8 1 1 0,2,2
21783:  greatest_lower_bound 15 2 2 0,2
21783:  least_upper_bound 14 2 1 0,1,2
21783:  identity 7 0 3 2,1,2
21783:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21785: Facts:
21785:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21785:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21785:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21785:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21785:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21785:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21785:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21785:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21785:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21785:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21785:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21785:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21785:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21785:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21785:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21785:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
21785:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
21785:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =>= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
21785: Goal:
21785:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
21785: Order:
21785:   lpo
21785: Leaf order:
21785:  multiply 20 2 0 
21785:  inverse 8 1 1 0,2,2
21785:  greatest_lower_bound 15 2 2 0,2
21785:  least_upper_bound 14 2 1 0,1,2
21785:  identity 7 0 3 2,1,2
21785:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
21784: Facts:
21784:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21784:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21784:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21784:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21784:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21784:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21784:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21784:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21784:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21784:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21784:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21784:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21784:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21784:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21784:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21784:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
21784:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
21784:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
21784: Goal:
21784:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
21784: Order:
21784:   kbo
21784: Leaf order:
21784:  multiply 20 2 0 
21784:  inverse 8 1 1 0,2,2
21784:  greatest_lower_bound 15 2 2 0,2
21784:  least_upper_bound 14 2 1 0,1,2
21784:  identity 7 0 3 2,1,2
21784:  a 2 0 2 1,1,2
% SZS status Timeout for GRP183-2.p
NO CLASH, using fixed ground order
21802: Facts:
21802:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21802:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21802:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21802:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21802:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21802:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21802:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21802:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21802:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21802:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21802:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21802:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21802:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21802:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21802:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21802: Goal:
21802:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
21802: Order:
21802:   nrkbo
21802: Leaf order:
21802:  greatest_lower_bound 14 2 1 0,1,2,3
21802:  inverse 3 1 2 0,2,3
21802:  least_upper_bound 14 2 1 0,2
21802:  identity 3 0 1 2,2
21802:  multiply 20 2 2 0,1,2
21802:  b 2 0 2 2,1,2
21802:  a 3 0 3 1,1,2
NO CLASH, using fixed ground order
21803: Facts:
21803:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21803:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21803:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21803:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21803:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21803:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21803:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21803:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21803:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21803:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21803:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21803:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21803:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21803:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21803:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21803: Goal:
21803:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
21803: Order:
21803:   kbo
21803: Leaf order:
21803:  greatest_lower_bound 14 2 1 0,1,2,3
21803:  inverse 3 1 2 0,2,3
21803:  least_upper_bound 14 2 1 0,2
21803:  identity 3 0 1 2,2
21803:  multiply 20 2 2 0,1,2
21803:  b 2 0 2 2,1,2
21803:  a 3 0 3 1,1,2
NO CLASH, using fixed ground order
21804: Facts:
21804:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
21804:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
21804:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
21804:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
21804:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
21804:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
21804:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
21804:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
21804:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
21804:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
21804:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
21804:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
21804:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
21804:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
21804:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
21804: Goal:
21804:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
21804: Order:
21804:   lpo
21804: Leaf order:
21804:  greatest_lower_bound 14 2 1 0,1,2,3
21804:  inverse 3 1 2 0,2,3
21804:  least_upper_bound 14 2 1 0,2
21804:  identity 3 0 1 2,2
21804:  multiply 20 2 2 0,1,2
21804:  b 2 0 2 2,1,2
21804:  a 3 0 3 1,1,2
% SZS status Timeout for GRP186-1.p
NO CLASH, using fixed ground order
21831: Facts:
21831:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
21831:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
21831:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
21831:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
21831:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
21831:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
21831:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
21831:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
21831:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
21831:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
21831: Goal:
21831:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
21831: Order:
21831:   nrkbo
21831: Leaf order:
21831:  n0 1 0 0 
21831:  n1 2 0 1 3
21831:  meet 14 2 5 0,1,2,2
21831:  join 17 2 5 0,2
21831:  b 4 0 4 1,2,1,2,1,2,2
21831:  complement 15 1 6 0,1,1,2,2
21831:  a 7 0 7 1,2
NO CLASH, using fixed ground order
21832: Facts:
21832:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
21832:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
21832:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
21832:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
21832:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
21832:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
21832:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
21832:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
21832:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
21832:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
21832: Goal:
21832:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
21832: Order:
21832:   kbo
21832: Leaf order:
21832:  n0 1 0 0 
21832:  n1 2 0 1 3
21832:  meet 14 2 5 0,1,2,2
21832:  join 17 2 5 0,2
21832:  b 4 0 4 1,2,1,2,1,2,2
21832:  complement 15 1 6 0,1,1,2,2
21832:  a 7 0 7 1,2
NO CLASH, using fixed ground order
21833: Facts:
21833:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
21833:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
21833:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
21833:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
21833:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
21833:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
21833:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
21833:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
21833:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
21833:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
21833: Goal:
21833:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
21833: Order:
21833:   lpo
21833: Leaf order:
21833:  n0 1 0 0 
21833:  n1 2 0 1 3
21833:  meet 14 2 5 0,1,2,2
21833:  join 17 2 5 0,2
21833:  b 4 0 4 1,2,1,2,1,2,2
21833:  complement 15 1 6 0,1,1,2,2
21833:  a 7 0 7 1,2
% SZS status Timeout for LAT017-1.p
NO CLASH, using fixed ground order
21853: Facts:
21853:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21853:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21853:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
21853:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
21853:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =?= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
21853:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =?= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
21853:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
21853:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
21853:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =>=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
21853: Goal:
21853:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
21853: Order:
21853:   nrkbo
21853: Leaf order:
21853:  meet 21 2 3 0,2
21853:  join 20 2 2 0,2,2
21853:  c 2 0 2 2,2,2
21853:  b 2 0 2 1,2,2
21853:  a 3 0 3 1,2
NO CLASH, using fixed ground order
21854: Facts:
21854:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21854:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21854:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
21854:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
21854:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
21854:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
21854:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
21854:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
21854:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =>=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
21854: Goal:
21854:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
21854: Order:
21854:   kbo
21854: Leaf order:
21854:  meet 21 2 3 0,2
21854:  join 20 2 2 0,2,2
21854:  c 2 0 2 2,2,2
21854:  b 2 0 2 1,2,2
21854:  a 3 0 3 1,2
NO CLASH, using fixed ground order
21855: Facts:
21855:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21855:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21855:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
21855:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
21855:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
21855:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
21855:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
21855:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
21855:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =>=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
21855: Goal:
21855:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
21855: Order:
21855:   lpo
21855: Leaf order:
21855:  meet 21 2 3 0,2
21855:  join 20 2 2 0,2,2
21855:  c 2 0 2 2,2,2
21855:  b 2 0 2 1,2,2
21855:  a 3 0 3 1,2
% SZS status Timeout for LAT020-1.p
NO CLASH, using fixed ground order
21955: Facts:
21955:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21955:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21955:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21955:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21955:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21955:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21955:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21955:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21955:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21955:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21955:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21955:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21955:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21955:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21955:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21955:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21955:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21955:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21955:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21955:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21955:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21955:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21955: Goal:
21955:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
21955: Order:
21955:   nrkbo
21955: Leaf order:
21955:  commutator 1 2 0 
21955:  additive_inverse 22 1 0 
21955:  multiply 40 2 0 
21955:  additive_identity 9 0 1 3
21955:  add 25 2 1 0,2
21955:  associator 3 3 2 0,1,2
21955:  z 2 0 2 3,1,2
21955:  y 2 0 2 2,1,2
21955:  x 2 0 2 1,1,2
NO CLASH, using fixed ground order
21956: Facts:
21956:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21956:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21956:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21956:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21956:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21956:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21956:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21956:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21956:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21956:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21956:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21956:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21956:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21956:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21956:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21956:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21956:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21956:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21956:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21956:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21956:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21956:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21956: Goal:
21956:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
21956: Order:
21956:   kbo
21956: Leaf order:
21956:  commutator 1 2 0 
21956:  additive_inverse 22 1 0 
21956:  multiply 40 2 0 
21956:  additive_identity 9 0 1 3
21956:  add 25 2 1 0,2
21956:  associator 3 3 2 0,1,2
21956:  z 2 0 2 3,1,2
21956:  y 2 0 2 2,1,2
21956:  x 2 0 2 1,1,2
NO CLASH, using fixed ground order
21957: Facts:
21957:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21957:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21957:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21957:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21957:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21957:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21957:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21957:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21957:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21957:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21957:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21957:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21957:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21957:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21957:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21957:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21957:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21957:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21957:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21957:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21957:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21957:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21957: Goal:
21957:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
21957: Order:
21957:   lpo
21957: Leaf order:
21957:  commutator 1 2 0 
21957:  additive_inverse 22 1 0 
21957:  multiply 40 2 0 
21957:  additive_identity 9 0 1 3
21957:  add 25 2 1 0,2
21957:  associator 3 3 2 0,1,2
21957:  z 2 0 2 3,1,2
21957:  y 2 0 2 2,1,2
21957:  x 2 0 2 1,1,2
% SZS status Timeout for RNG025-5.p
NO CLASH, using fixed ground order
21975: Facts:
21975:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21975:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21975:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21975:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21975:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21975:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21975:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21975:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21975:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21975:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21975:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21975:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21975:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21975:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21975:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21975:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21975:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21975:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21975:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21975:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21975:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21975:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21975: Goal:
21975:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
21975: Order:
21975:   nrkbo
21975: Leaf order:
21975:  commutator 1 2 0 
21975:  additive_inverse 22 1 0 
21975:  multiply 40 2 0 
21975:  add 24 2 0 
21975:  additive_identity 9 0 1 3
21975:  associator 2 3 1 0,2
21975:  y 1 0 1 2,2
21975:  x 2 0 2 1,2
NO CLASH, using fixed ground order
21976: Facts:
21976:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21976:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21976:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21976:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21976:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21976:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21976:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21976:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21976:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21976:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21976:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21976:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21976:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21976:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21976:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21976:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21976:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21976:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21976:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21976:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21976:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21976:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21976: Goal:
21976:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
21976: Order:
21976:   kbo
21976: Leaf order:
21976:  commutator 1 2 0 
21976:  additive_inverse 22 1 0 
21976:  multiply 40 2 0 
21976:  add 24 2 0 
21976:  additive_identity 9 0 1 3
21976:  associator 2 3 1 0,2
21976:  y 1 0 1 2,2
21976:  x 2 0 2 1,2
NO CLASH, using fixed ground order
21977: Facts:
21977:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
21977:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
21977:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
21977:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
21977:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
21977:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
21977:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
21977:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
21977:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
21977:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
21977:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
21977:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
21977:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
21977:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
21977:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
21977:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
21977:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
21977:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
21977:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
21977:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
21977:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
21977:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
21977: Goal:
21977:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
21977: Order:
21977:   lpo
21977: Leaf order:
21977:  commutator 1 2 0 
21977:  additive_inverse 22 1 0 
21977:  multiply 40 2 0 
21977:  add 24 2 0 
21977:  additive_identity 9 0 1 3
21977:  associator 2 3 1 0,2
21977:  y 1 0 1 2,2
21977:  x 2 0 2 1,2
% SZS status Timeout for RNG025-7.p
CLASH, statistics insufficient
22004: Facts:
22004:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
CLASH, statistics insufficient
22005: Facts:
22005:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22005:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
22005: Goal:
22005:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22005: Order:
22005:   kbo
22005: Leaf order:
22005:  k 1 0 0 
22005:  s 1 0 0 
22005:  apply 11 2 3 0,2
22005:  f 3 1 3 0,2,2
22004:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
22004: Goal:
22004:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22004: Order:
22004:   nrkbo
22004: Leaf order:
22004:  k 1 0 0 
22004:  s 1 0 0 
22004:  apply 11 2 3 0,2
22004:  f 3 1 3 0,2,2
CLASH, statistics insufficient
22006: Facts:
22006:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22006:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
22006: Goal:
22006:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22006: Order:
22006:   lpo
22006: Leaf order:
22006:  k 1 0 0 
22006:  s 1 0 0 
22006:  apply 11 2 3 0,2
22006:  f 3 1 3 0,2,2
% SZS status Timeout for COL006-1.p
NO CLASH, using fixed ground order
22027: Facts:
22027:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22027:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
NO CLASH, using fixed ground order
22028: Facts:
22028:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22028:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
22028:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
22028: Goal:
22028:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22028: Order:
22028:   kbo
22028: Leaf order:
22028:  k 10 0 0 
22028:  s 11 0 0 
22028:  apply 29 2 3 0,2
22028:  fixed_pt 3 0 3 2,2
22028:  strong_fixed_point 3 0 2 1,2
22027:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
22027: Goal:
22027:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22027: Order:
22027:   nrkbo
22027: Leaf order:
22027:  k 10 0 0 
22027:  s 11 0 0 
22027:  apply 29 2 3 0,2
22027:  fixed_pt 3 0 3 2,2
22027:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22029: Facts:
22029:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22029:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
22029:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
22029: Goal:
22029:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22029: Order:
22029:   lpo
22029: Leaf order:
22029:  k 10 0 0 
22029:  s 11 0 0 
22029:  apply 29 2 3 0,2
22029:  fixed_pt 3 0 3 2,2
22029:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL006-5.p
NO CLASH, using fixed ground order
22056: Facts:
22056:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22056:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
22056:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
22056: Goal:
22056:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22056: Order:
22056:   nrkbo
22056: Leaf order:
22056:  k 7 0 0 
22056:  s 10 0 0 
22056:  apply 25 2 3 0,2
22056:  fixed_pt 3 0 3 2,2
22056:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22057: Facts:
22057:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22057:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
22057:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
22057: Goal:
22057:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22057: Order:
22057:   kbo
22057: Leaf order:
22057:  k 7 0 0 
22057:  s 10 0 0 
22057:  apply 25 2 3 0,2
22057:  fixed_pt 3 0 3 2,2
22057:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22058: Facts:
22058:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
22058:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
22058:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
22058: Goal:
22058:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22058: Order:
22058:   lpo
22058: Leaf order:
22058:  k 7 0 0 
22058:  s 10 0 0 
22058:  apply 25 2 3 0,2
22058:  fixed_pt 3 0 3 2,2
22058:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL006-7.p
NO CLASH, using fixed ground order
22074: Facts:
22074:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22074:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22074:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
22074: Goal:
22074:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22074: Order:
22074:   nrkbo
22074: Leaf order:
22074:  n 6 0 0 
22074:  b 9 0 0 
22074:  apply 26 2 3 0,2
22074:  fixed_pt 3 0 3 2,2
22074:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22075: Facts:
22075:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22075:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22075:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
22075: Goal:
22075:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22075: Order:
22075:   kbo
22075: Leaf order:
22075:  n 6 0 0 
22075:  b 9 0 0 
22075:  apply 26 2 3 0,2
22075:  fixed_pt 3 0 3 2,2
22075:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22076: Facts:
22076:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22076:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22076:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
22076: Goal:
22076:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22076: Order:
22076:   lpo
22076: Leaf order:
22076:  n 6 0 0 
22076:  b 9 0 0 
22076:  apply 26 2 3 0,2
22076:  fixed_pt 3 0 3 2,2
22076:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL044-6.p
NO CLASH, using fixed ground order
22116: Facts:
22116:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22116:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22116:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
22116: Goal:
22116:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22116: Order:
22116:   nrkbo
22116: Leaf order:
22116:  n 6 0 0 
22116:  b 9 0 0 
22116:  apply 26 2 3 0,2
22116:  fixed_pt 3 0 3 2,2
22116:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22117: Facts:
22117:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22117:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22117:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
22117: Goal:
22117:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22117: Order:
22117:   kbo
22117: Leaf order:
22117:  n 6 0 0 
22117:  b 9 0 0 
22117:  apply 26 2 3 0,2
22117:  fixed_pt 3 0 3 2,2
22117:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
22118: Facts:
22118:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22118:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
22118:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
22118: Goal:
22118:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22118: Order:
22118:   lpo
22118: Leaf order:
22118:  n 6 0 0 
22118:  b 9 0 0 
22118:  apply 26 2 3 0,2
22118:  fixed_pt 3 0 3 2,2
22118:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL044-7.p
CLASH, statistics insufficient
22135: Facts:
22135:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22135:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22135: Goal:
22135:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
22135: Order:
22135:   nrkbo
22135: Leaf order:
22135:  t 1 0 0 
22135:  b 1 0 0 
22135:  h 2 1 2 0,2,2
22135:  g 2 1 2 0,2,1,2
22135:  apply 13 2 5 0,2
22135:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
22136: Facts:
22136:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22136:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22136: Goal:
22136:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
22136: Order:
22136:   kbo
22136: Leaf order:
22136:  t 1 0 0 
22136:  b 1 0 0 
22136:  h 2 1 2 0,2,2
22136:  g 2 1 2 0,2,1,2
22136:  apply 13 2 5 0,2
22136:  f 2 1 2 0,2,1,1,2
CLASH, statistics insufficient
22137: Facts:
22137:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22137:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22137: Goal:
22137:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
22137: Order:
22137:   lpo
22137: Leaf order:
22137:  t 1 0 0 
22137:  b 1 0 0 
22137:  h 2 1 2 0,2,2
22137:  g 2 1 2 0,2,1,2
22137:  apply 13 2 5 0,2
22137:  f 2 1 2 0,2,1,1,2
Goal subsumed
Statistics :
Max weight : 124
Found proof, 35.273110s
% SZS status Unsatisfiable for COL064-1.p
% SZS output start CNFRefutation for COL064-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 10997, {_}: apply (apply (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) === apply (apply (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) [] by Super 10996 with 3 at 2
Id : 10996, {_}: apply (apply ?37685 (g (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) (apply (h (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) =>= apply (apply (h (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) [37685] by Super 3193 with 2 at 2
Id : 3193, {_}: apply (apply (apply ?10612 (apply ?10613 (g (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))))) (h (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) =>= apply (apply (h (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) [10613, 10612] by Super 3188 with 2 at 1,1,2
Id : 3188, {_}: apply (apply (apply ?10602 (g (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (h (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) =>= apply (apply (h (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) [10602] by Super 3164 with 3 at 2
Id : 3164, {_}: apply (apply ?10539 (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (apply (apply ?10540 (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) =>= apply (apply (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) [10540, 10539] by Super 442 with 2 at 2
Id : 442, {_}: apply (apply (apply ?1394 (apply ?1395 (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (apply ?1396 (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) =>= apply (apply (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395))))) (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) [1396, 1395, 1394] by Super 277 with 2 at 1,1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (f (apply (apply b ?33) (apply (apply b ?34) ?35)))) (g (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (h (apply (apply b ?18) ?19)) (f (apply (apply b ?18) ?19))) (g (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (h ?1) (f ?1)) (g ?1) [1] by prove_v_combinator ?1
% SZS output end CNFRefutation for COL064-1.p
22135: solved COL064-1.p in 35.146196 using nrkbo
22135: status Unsatisfiable for COL064-1.p
CLASH, statistics insufficient
22153: Facts:
22153:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22153:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22153: Goal:
22153:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
22153: Order:
22153:   nrkbo
22153: Leaf order:
22153:  t 1 0 0 
22153:  b 1 0 0 
22153:  i 2 1 2 0,2,2
22153:  h 2 1 2 0,2,1,2
22153:  g 2 1 2 0,2,1,1,2
22153:  apply 15 2 7 0,2
22153:  f 2 1 2 0,2,1,1,1,2
CLASH, statistics insufficient
22154: Facts:
22154:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22154:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22154: Goal:
22154:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
22154: Order:
22154:   kbo
22154: Leaf order:
22154:  t 1 0 0 
22154:  b 1 0 0 
22154:  i 2 1 2 0,2,2
22154:  h 2 1 2 0,2,1,2
22154:  g 2 1 2 0,2,1,1,2
22154:  apply 15 2 7 0,2
22154:  f 2 1 2 0,2,1,1,1,2
CLASH, statistics insufficient
22155: Facts:
22155:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22155:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
22155: Goal:
22155:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
22155: Order:
22155:   lpo
22155: Leaf order:
22155:  t 1 0 0 
22155:  b 1 0 0 
22155:  i 2 1 2 0,2,2
22155:  h 2 1 2 0,2,1,2
22155:  g 2 1 2 0,2,1,1,2
22155:  apply 15 2 7 0,2
22155:  f 2 1 2 0,2,1,1,1,2
% SZS status Timeout for COL065-1.p
CLASH, statistics insufficient
22171: Facts:
22171:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22171:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22171:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22171:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22171:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22171:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22171:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22171:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22171:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22171:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22171:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22171:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22171:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22171:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22171:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22171:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
22171:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
22171: Goal:
22171:  Id :   1, {_}: a =>= b [] by prove_p12
22171: Order:
22171:   nrkbo
22171: Leaf order:
22171:  c 4 0 0 
22171:  least_upper_bound 15 2 0 
22171:  greatest_lower_bound 15 2 0 
22171:  inverse 1 1 0 
22171:  multiply 18 2 0 
22171:  identity 2 0 0 
22171:  b 3 0 1 3
22171:  a 3 0 1 2
CLASH, statistics insufficient
22172: Facts:
22172:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22172:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22172:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22172:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22172:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22172:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22172:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22172:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22172:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22172:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22172:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22172:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22172:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22172:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22172:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22172:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
22172:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
22172: Goal:
22172:  Id :   1, {_}: a =>= b [] by prove_p12
22172: Order:
22172:   kbo
22172: Leaf order:
22172:  c 4 0 0 
22172:  least_upper_bound 15 2 0 
22172:  greatest_lower_bound 15 2 0 
22172:  inverse 1 1 0 
22172:  multiply 18 2 0 
22172:  identity 2 0 0 
22172:  b 3 0 1 3
22172:  a 3 0 1 2
CLASH, statistics insufficient
22173: Facts:
22173:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22173:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22173:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22173:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22173:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22173:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22173:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22173:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22173:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22173:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22173:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22173:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22173:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22173:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22173:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22173:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
22173:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
22173: Goal:
22173:  Id :   1, {_}: a =>= b [] by prove_p12
22173: Order:
22173:   lpo
22173: Leaf order:
22173:  c 4 0 0 
22173:  least_upper_bound 15 2 0 
22173:  greatest_lower_bound 15 2 0 
22173:  inverse 1 1 0 
22173:  multiply 18 2 0 
22173:  identity 2 0 0 
22173:  b 3 0 1 3
22173:  a 3 0 1 2
% SZS status Timeout for GRP181-1.p
CLASH, statistics insufficient
22201: Facts:
22201:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22201:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22201:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22201:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22201:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22201:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22201:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22201:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22201:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22201:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22201:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22201:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22201:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22201:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22201:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22201:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
22201:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
22201:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
22201:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
22201:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
22201: Goal:
22201:  Id :   1, {_}: a =>= b [] by prove_p12
22201: Order:
22201:   kbo
22201: Leaf order:
22201:  c 4 0 0 
22201:  least_upper_bound 15 2 0 
22201:  greatest_lower_bound 15 2 0 
22201:  inverse 7 1 0 
22201:  multiply 20 2 0 
22201:  identity 4 0 0 
22201:  b 3 0 1 3
22201:  a 3 0 1 2
CLASH, statistics insufficient
22202: Facts:
22202:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22202:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22202:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22202:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22202:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22202:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22202:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22202:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22202:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22202:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22202:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22202:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22202:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22202:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22202:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22202:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
22202:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
22202:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
22202:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
22202:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
22202: Goal:
22202:  Id :   1, {_}: a =>= b [] by prove_p12
22202: Order:
22202:   lpo
22202: Leaf order:
22202:  c 4 0 0 
22202:  least_upper_bound 15 2 0 
22202:  greatest_lower_bound 15 2 0 
22202:  inverse 7 1 0 
22202:  multiply 20 2 0 
22202:  identity 4 0 0 
22202:  b 3 0 1 3
22202:  a 3 0 1 2
CLASH, statistics insufficient
22200: Facts:
22200:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22200:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22200:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22200:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22200:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22200:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22200:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22200:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22200:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22200:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22200:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22200:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22200:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22200:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22200:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22200:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
22200:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
22200:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
22200:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
22200:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
22200: Goal:
22200:  Id :   1, {_}: a =>= b [] by prove_p12
22200: Order:
22200:   nrkbo
22200: Leaf order:
22200:  c 4 0 0 
22200:  least_upper_bound 15 2 0 
22200:  greatest_lower_bound 15 2 0 
22200:  inverse 7 1 0 
22200:  multiply 20 2 0 
22200:  identity 4 0 0 
22200:  b 3 0 1 3
22200:  a 3 0 1 2
% SZS status Timeout for GRP181-2.p
NO CLASH, using fixed ground order
22218: Facts:
22218:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22218:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22218:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22218:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22218:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22218:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22218:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22218:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22218:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22218:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22218:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22218:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22218:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22218:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22218:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22218:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
22218: Goal:
22218:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_p33
22218: Order:
22218:   nrkbo
22218: Leaf order:
22218:  least_upper_bound 15 2 0 
22218:  greatest_lower_bound 14 2 0 
22218:  inverse 3 1 0 
22218:  identity 3 0 0 
22218:  multiply 20 2 2 0,2
22218:  b 4 0 2 2,2
22218:  a 4 0 2 1,2
NO CLASH, using fixed ground order
22219: Facts:
22219:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22219:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22219:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22219:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22219:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22219:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22219:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22219:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22219:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22219:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22219:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22219:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22219:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22219:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22219:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22219:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
22219: Goal:
22219:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_p33
22219: Order:
22219:   kbo
22219: Leaf order:
22219:  least_upper_bound 15 2 0 
22219:  greatest_lower_bound 14 2 0 
22219:  inverse 3 1 0 
22219:  identity 3 0 0 
22219:  multiply 20 2 2 0,2
22219:  b 4 0 2 2,2
22219:  a 4 0 2 1,2
NO CLASH, using fixed ground order
22220: Facts:
22220:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22220:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22220:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22220:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22220:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22220:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22220:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22220:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22220:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22220:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22220:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22220:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22220:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22220:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22220:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22220:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
22220: Goal:
22220:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_p33
22220: Order:
22220:   lpo
22220: Leaf order:
22220:  least_upper_bound 15 2 0 
22220:  greatest_lower_bound 14 2 0 
22220:  inverse 3 1 0 
22220:  identity 3 0 0 
22220:  multiply 20 2 2 0,2
22220:  b 4 0 2 2,2
22220:  a 4 0 2 1,2
% SZS status Timeout for GRP187-1.p
NO CLASH, using fixed ground order
22280: Facts:
22280:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22280: Goal:
22280:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
22280: Order:
22280:   nrkbo
22280: Leaf order:
22280:  b1 2 0 2 1,1,3
22280:  multiply 12 2 2 0,2
22280:  inverse 9 1 2 0,1,2
22280:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
22281: Facts:
22281:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22281: Goal:
22281:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
22281: Order:
22281:   kbo
22281: Leaf order:
22281:  b1 2 0 2 1,1,3
22281:  multiply 12 2 2 0,2
22281:  inverse 9 1 2 0,1,2
22281:  a1 2 0 2 1,1,2
NO CLASH, using fixed ground order
22282: Facts:
22282:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22282: Goal:
22282:  Id :   1, {_}:
          multiply (inverse a1) a1 =>= multiply (inverse b1) b1
          [] by prove_these_axioms_1
22282: Order:
22282:   lpo
22282: Leaf order:
22282:  b1 2 0 2 1,1,3
22282:  multiply 12 2 2 0,2
22282:  inverse 9 1 2 0,1,2
22282:  a1 2 0 2 1,1,2
% SZS status Timeout for GRP505-1.p
NO CLASH, using fixed ground order
22298: Facts:
22298:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22298: Goal:
22298:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
22298: Order:
22298:   nrkbo
22298: Leaf order:
22298:  inverse 7 1 0 
22298:  c3 2 0 2 2,2
22298:  multiply 14 2 4 0,2
22298:  b3 2 0 2 2,1,2
22298:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
22299: Facts:
22299:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22299: Goal:
22299:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
22299: Order:
22299:   kbo
22299: Leaf order:
22299:  inverse 7 1 0 
22299:  c3 2 0 2 2,2
22299:  multiply 14 2 4 0,2
22299:  b3 2 0 2 2,1,2
22299:  a3 2 0 2 1,1,2
NO CLASH, using fixed ground order
22300: Facts:
22300:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22300: Goal:
22300:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
22300: Order:
22300:   lpo
22300: Leaf order:
22300:  inverse 7 1 0 
22300:  c3 2 0 2 2,2
22300:  multiply 14 2 4 0,2
22300:  b3 2 0 2 2,1,2
22300:  a3 2 0 2 1,1,2
% SZS status Timeout for GRP507-1.p
NO CLASH, using fixed ground order
22343: Facts:
22343:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22343: Goal:
22343:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_these_axioms_4
22343: Order:
22343:   nrkbo
22343: Leaf order:
22343:  inverse 7 1 0 
22343:  multiply 12 2 2 0,2
22343:  b 2 0 2 2,2
22343:  a 2 0 2 1,2
NO CLASH, using fixed ground order
22344: Facts:
22344:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22344: Goal:
22344:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_these_axioms_4
22344: Order:
22344:   kbo
22344: Leaf order:
22344:  inverse 7 1 0 
22344:  multiply 12 2 2 0,2
22344:  b 2 0 2 2,2
22344:  a 2 0 2 1,2
NO CLASH, using fixed ground order
22345: Facts:
22345:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22345: Goal:
22345:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_these_axioms_4
22345: Order:
22345:   lpo
22345: Leaf order:
22345:  inverse 7 1 0 
22345:  multiply 12 2 2 0,2
22345:  b 2 0 2 2,2
22345:  a 2 0 2 1,2
% SZS status Timeout for GRP508-1.p
NO CLASH, using fixed ground order
22381: Facts:
22381:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22381: Goal:
22381:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
22381: Order:
22381:   nrkbo
22381: Leaf order:
22381:  join 20 2 0 
22381:  meet 19 2 1 0,2
22381:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22382: Facts:
22382:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22382: Goal:
22382:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
22382: Order:
22382:   kbo
22382: Leaf order:
22382:  join 20 2 0 
22382:  meet 19 2 1 0,2
22382:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22383: Facts:
22383:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22383: Goal:
22383:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
22383: Order:
22383:   lpo
22383: Leaf order:
22383:  join 20 2 0 
22383:  meet 19 2 1 0,2
22383:  a 3 0 3 1,2
% SZS status Timeout for LAT080-1.p
NO CLASH, using fixed ground order
22413: Facts:
22413:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22413: Goal:
22413:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
22413: Order:
22413:   nrkbo
22413: Leaf order:
22413:  meet 18 2 0 
22413:  join 21 2 1 0,2
22413:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22414: Facts:
22414:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22414: Goal:
22414:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
22414: Order:
22414:   kbo
22414: Leaf order:
22414:  meet 18 2 0 
22414:  join 21 2 1 0,2
22414:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22415: Facts:
22415:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
22415: Goal:
22415:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
22415: Order:
22415:   lpo
22415: Leaf order:
22415:  meet 18 2 0 
22415:  join 21 2 1 0,2
22415:  a 3 0 3 1,2
% SZS status Timeout for LAT083-1.p
NO CLASH, using fixed ground order
22432: Facts:
22432:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22432: Goal:
22432:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
22432: Order:
22432:   nrkbo
22432: Leaf order:
22432:  join 18 2 0 
22432:  meet 19 2 1 0,2
22432:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22434: Facts:
22434:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22434: Goal:
22434:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
22434: Order:
22434:   lpo
22434: Leaf order:
22434:  join 18 2 0 
22434:  meet 19 2 1 0,2
22434:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22433: Facts:
22433:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22433: Goal:
22433:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
22433: Order:
22433:   kbo
22433: Leaf order:
22433:  join 18 2 0 
22433:  meet 19 2 1 0,2
22433:  a 3 0 3 1,2
% SZS status Timeout for LAT092-1.p
NO CLASH, using fixed ground order
22466: Facts:
22466:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22466: Goal:
22466:  Id :   1, {_}: meet b a =>= meet a b [] by prove_wal_axioms_2
22466: Order:
22466:   nrkbo
22466: Leaf order:
22466:  join 18 2 0 
22466:  meet 20 2 2 0,2
22466:  a 2 0 2 2,2
22466:  b 2 0 2 1,2
NO CLASH, using fixed ground order
22467: Facts:
22467:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22467: Goal:
22467:  Id :   1, {_}: meet b a =>= meet a b [] by prove_wal_axioms_2
22467: Order:
22467:   kbo
22467: Leaf order:
22467:  join 18 2 0 
22467:  meet 20 2 2 0,2
22467:  a 2 0 2 2,2
22467:  b 2 0 2 1,2
NO CLASH, using fixed ground order
22468: Facts:
22468:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22468: Goal:
22468:  Id :   1, {_}: meet b a =>= meet a b [] by prove_wal_axioms_2
22468: Order:
22468:   lpo
22468: Leaf order:
22468:  join 18 2 0 
22468:  meet 20 2 2 0,2
22468:  a 2 0 2 2,2
22468:  b 2 0 2 1,2
% SZS status Timeout for LAT093-1.p
NO CLASH, using fixed ground order
22493: Facts:
22493:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22493: Goal:
22493:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
22493: Order:
22493:   nrkbo
22493: Leaf order:
22493:  meet 18 2 0 
22493:  join 19 2 1 0,2
22493:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22494: Facts:
22494:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22494: Goal:
22494:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
22494: Order:
22494:   kbo
22494: Leaf order:
22494:  meet 18 2 0 
22494:  join 19 2 1 0,2
22494:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22495: Facts:
22495:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22495: Goal:
22495:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
22495: Order:
22495:   lpo
22495: Leaf order:
22495:  meet 18 2 0 
22495:  join 19 2 1 0,2
22495:  a 3 0 3 1,2
% SZS status Timeout for LAT094-1.p
NO CLASH, using fixed ground order
22522: Facts:
22522:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22522: Goal:
22522:  Id :   1, {_}: join b a =>= join a b [] by prove_wal_axioms_4
22522: Order:
22522:   nrkbo
22522: Leaf order:
22522:  meet 18 2 0 
22522:  join 20 2 2 0,2
22522:  a 2 0 2 2,2
22522:  b 2 0 2 1,2
NO CLASH, using fixed ground order
22523: Facts:
22523:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22523: Goal:
22523:  Id :   1, {_}: join b a =>= join a b [] by prove_wal_axioms_4
22523: Order:
22523:   kbo
22523: Leaf order:
22523:  meet 18 2 0 
22523:  join 20 2 2 0,2
22523:  a 2 0 2 2,2
22523:  b 2 0 2 1,2
NO CLASH, using fixed ground order
22524: Facts:
22524:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22524: Goal:
22524:  Id :   1, {_}: join b a =>= join a b [] by prove_wal_axioms_4
22524: Order:
22524:   lpo
22524: Leaf order:
22524:  meet 18 2 0 
22524:  join 20 2 2 0,2
22524:  a 2 0 2 2,2
22524:  b 2 0 2 1,2
% SZS status Timeout for LAT095-1.p
NO CLASH, using fixed ground order
22540: Facts:
22540:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22540: Goal:
22540:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
22540: Order:
22540:   nrkbo
22540: Leaf order:
22540:  meet 20 2 2 0,2
22540:  c 1 0 1 1,2,1,2
22540:  join 20 2 2 0,1,1,2
22540:  b 4 0 4 2,1,1,2
22540:  a 1 0 1 1,1,1,2
NO CLASH, using fixed ground order
22541: Facts:
22541:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22541: Goal:
22541:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
22541: Order:
22541:   kbo
22541: Leaf order:
22541:  meet 20 2 2 0,2
22541:  c 1 0 1 1,2,1,2
22541:  join 20 2 2 0,1,1,2
22541:  b 4 0 4 2,1,1,2
22541:  a 1 0 1 1,1,1,2
NO CLASH, using fixed ground order
22542: Facts:
22542:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22542: Goal:
22542:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
22542: Order:
22542:   lpo
22542: Leaf order:
22542:  meet 20 2 2 0,2
22542:  c 1 0 1 1,2,1,2
22542:  join 20 2 2 0,1,1,2
22542:  b 4 0 4 2,1,1,2
22542:  a 1 0 1 1,1,1,2
% SZS status Timeout for LAT096-1.p
NO CLASH, using fixed ground order
22569: Facts:
22569:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22569: Goal:
22569:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
22569: Order:
22569:   nrkbo
22569: Leaf order:
22569:  join 20 2 2 0,2
22569:  c 1 0 1 1,2,1,2
22569:  meet 20 2 2 0,1,1,2
22569:  b 4 0 4 2,1,1,2
22569:  a 1 0 1 1,1,1,2
NO CLASH, using fixed ground order
22570: Facts:
22570:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22570: Goal:
22570:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
22570: Order:
22570:   kbo
22570: Leaf order:
22570:  join 20 2 2 0,2
22570:  c 1 0 1 1,2,1,2
22570:  meet 20 2 2 0,1,1,2
22570:  b 4 0 4 2,1,1,2
22570:  a 1 0 1 1,1,1,2
NO CLASH, using fixed ground order
22571: Facts:
22571:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
22571: Goal:
22571:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
22571: Order:
22571:   lpo
22571: Leaf order:
22571:  join 20 2 2 0,2
22571:  c 1 0 1 1,2,1,2
22571:  meet 20 2 2 0,1,1,2
22571:  b 4 0 4 2,1,1,2
22571:  a 1 0 1 1,1,1,2
% SZS status Timeout for LAT097-1.p
NO CLASH, using fixed ground order
22740: Facts:
22740:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22740:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22740:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22740:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22740:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22740:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22740:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22740:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22740:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22740: Goal:
22740:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
22740: Order:
22740:   nrkbo
22740: Leaf order:
22740:  join 16 2 3 0,2,2
22740:  meet 21 2 7 0,2
22740:  d 3 0 3 2,2,2,2,2
22740:  c 2 0 2 1,2,2,2,2
22740:  b 3 0 3 1,2,2
22740:  a 4 0 4 1,2
NO CLASH, using fixed ground order
22742: Facts:
22742:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22742:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22742:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22742:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22742:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22742:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22742:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22742:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22742:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22742: Goal:
22742:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
22742: Order:
22742:   lpo
22742: Leaf order:
22742:  join 16 2 3 0,2,2
22742:  meet 21 2 7 0,2
22742:  d 3 0 3 2,2,2,2,2
22742:  c 2 0 2 1,2,2,2,2
22742:  b 3 0 3 1,2,2
22742:  a 4 0 4 1,2
NO CLASH, using fixed ground order
22741: Facts:
22741:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22741:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22741:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22741:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22741:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22741:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22741:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22741:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22741:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22741: Goal:
22741:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
22741: Order:
22741:   kbo
22741: Leaf order:
22741:  join 16 2 3 0,2,2
22741:  meet 21 2 7 0,2
22741:  d 3 0 3 2,2,2,2,2
22741:  c 2 0 2 1,2,2,2,2
22741:  b 3 0 3 1,2,2
22741:  a 4 0 4 1,2
% SZS status Timeout for LAT146-1.p
NO CLASH, using fixed ground order
22773: Facts:
22773:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22773:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22773:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22773:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22773:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22773:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22773:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22773:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22773:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22773: Goal:
22773:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
22773: Order:
22773:   nrkbo
22773: Leaf order:
22773:  join 17 2 4 0,2,2
22773:  meet 20 2 6 0,2
22773:  c 2 0 2 2,2,2,2
22773:  b 4 0 4 1,2,2
22773:  a 6 0 6 1,2
NO CLASH, using fixed ground order
22774: Facts:
22774:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22774:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22774:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22774:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22774:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22774:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22774:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22774:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22774:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22774: Goal:
22774:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
22774: Order:
22774:   kbo
22774: Leaf order:
22774:  join 17 2 4 0,2,2
22774:  meet 20 2 6 0,2
22774:  c 2 0 2 2,2,2,2
22774:  b 4 0 4 1,2,2
22774:  a 6 0 6 1,2
NO CLASH, using fixed ground order
22775: Facts:
22775:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22775:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22775:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22775:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22775:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22775:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22775:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22775:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22775:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
22775: Goal:
22775:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
22775: Order:
22775:   lpo
22775: Leaf order:
22775:  join 17 2 4 0,2,2
22775:  meet 20 2 6 0,2
22775:  c 2 0 2 2,2,2,2
22775:  b 4 0 4 1,2,2
22775:  a 6 0 6 1,2
% SZS status Timeout for LAT148-1.p
NO CLASH, using fixed ground order
22791: Facts:
22791:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22791:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22791:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22791:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22791:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22791:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22791:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22791:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22791:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
22791: Goal:
22791:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
22791: Order:
22791:   nrkbo
22791: Leaf order:
22791:  join 18 2 4 0,2,2
22791:  meet 20 2 6 0,2
22791:  c 3 0 3 2,2,2,2
22791:  b 3 0 3 1,2,2
22791:  a 6 0 6 1,2
NO CLASH, using fixed ground order
22792: Facts:
22792:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22792:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22792:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22792:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22792:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22792:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22792:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22792:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22792:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
22792: Goal:
22792:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
22792: Order:
22792:   kbo
22792: Leaf order:
22792:  join 18 2 4 0,2,2
22792:  meet 20 2 6 0,2
22792:  c 3 0 3 2,2,2,2
22792:  b 3 0 3 1,2,2
22792:  a 6 0 6 1,2
NO CLASH, using fixed ground order
22793: Facts:
22793:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22793:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22793:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22793:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22793:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22793:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22793:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22793:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22793:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
22793: Goal:
22793:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
22793: Order:
22793:   lpo
22793: Leaf order:
22793:  join 18 2 4 0,2,2
22793:  meet 20 2 6 0,2
22793:  c 3 0 3 2,2,2,2
22793:  b 3 0 3 1,2,2
22793:  a 6 0 6 1,2
% SZS status Timeout for LAT156-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
22830: Facts:
22830:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22830:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22830:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22830:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22830:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22830:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22830:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22830:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22830:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
22830: Goal:
22830:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
22830: Order:
22830:   kbo
22830: Leaf order:
22830:  meet 19 2 5 0,2
22830:  join 18 2 4 0,2,2
22830:  d 2 0 2 2,2,2,2,2
22830:  c 3 0 3 1,2,2,2
22830:  b 2 0 2 1,2,2
22830:  a 4 0 4 1,2
NO CLASH, using fixed ground order
22831: Facts:
22831:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22831:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22831:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22831:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22831:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22831:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22831:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22831:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22831:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
22831: Goal:
22831:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
22831: Order:
22831:   lpo
22831: Leaf order:
22831:  meet 19 2 5 0,2
22831:  join 18 2 4 0,2,2
22831:  d 2 0 2 2,2,2,2,2
22831:  c 3 0 3 1,2,2,2
22831:  b 2 0 2 1,2,2
22831:  a 4 0 4 1,2
22829: Facts:
22829:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
22829:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
22829:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
22829:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
22829:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
22829:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
22829:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
22829:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
22829:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
22829: Goal:
22829:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
22829: Order:
22829:   nrkbo
22829: Leaf order:
22829:  meet 19 2 5 0,2
22829:  join 18 2 4 0,2,2
22829:  d 2 0 2 2,2,2,2,2
22829:  c 3 0 3 1,2,2,2
22829:  b 2 0 2 1,2,2
22829:  a 4 0 4 1,2
% SZS status Timeout for LAT160-1.p
NO CLASH, using fixed ground order
22849: Facts:
22849:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
22849:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
22849:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
22849:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
22849:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
22849:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
22849:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
22849:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
22849:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
22849:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
22849:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
22849:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
22849:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
22849:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =?= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
22849:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
22849:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
22849: Goal:
22849:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =>=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
22849: Order:
22849:   nrkbo
22849: Leaf order:
22849:  falsehood 1 0 0 
22849:  and 9 2 0 
22849:  or 10 2 0 
22849:  not 12 1 0 
22849:  implies 14 2 0 
22849:  and_star 11 2 4 0,2
22849:  y 3 0 3 2,1,1,2
22849:  xor 7 2 4 0,1,2
22849:  x 3 0 3 2,1,1,1,2
22849:  truth 8 0 4 1,1,1,1,2
NO CLASH, using fixed ground order
22850: Facts:
22850:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
22850:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
22850:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
22850:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
22850:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
22850:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
22850:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
22850:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
22850:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
22850:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
22850:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
22850:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
22850:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
22850:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
22850:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
22850:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
22850: Goal:
22850:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =?=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
22850: Order:
22850:   kbo
22850: Leaf order:
22850:  falsehood 1 0 0 
22850:  and 9 2 0 
22850:  or 10 2 0 
22850:  not 12 1 0 
22850:  implies 14 2 0 
22850:  and_star 11 2 4 0,2
22850:  y 3 0 3 2,1,1,2
22850:  xor 7 2 4 0,1,2
22850:  x 3 0 3 2,1,1,1,2
22850:  truth 8 0 4 1,1,1,1,2
NO CLASH, using fixed ground order
22851: Facts:
22851:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
22851:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
22851:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
22851:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
22851:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
22851:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
22851:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
22851:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
22851:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
22851:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
22851:  Id :  12, {_}:
          xor ?34 ?35 =>= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
22851:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
22851:  Id :  14, {_}:
          and_star ?40 ?41 =>= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
22851:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
22851:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
22851:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
22851: Goal:
22851:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =>=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
22851: Order:
22851:   lpo
22851: Leaf order:
22851:  falsehood 1 0 0 
22851:  and 9 2 0 
22851:  or 10 2 0 
22851:  not 12 1 0 
22851:  implies 14 2 0 
22851:  and_star 11 2 4 0,2
22851:  y 3 0 3 2,1,1,2
22851:  xor 7 2 4 0,1,2
22851:  x 3 0 3 2,1,1,1,2
22851:  truth 8 0 4 1,1,1,1,2
% SZS status Timeout for LCL160-1.p
NO CLASH, using fixed ground order
22879: Facts:
22879:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
22879:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
22879:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =<= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
22879:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =<=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
22879:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =?= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
22879:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
22879:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =?= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
22879:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
22879: Goal:
22879:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_commutativity
22879: Order:
22879:   nrkbo
22879: Leaf order:
22879:  additive_inverse 1 1 0 
22879:  add 12 2 0 
22879:  additive_identity 2 0 0 
22879:  multiply 14 2 2 0,2
22879:  b 2 0 2 2,2
22879:  a 2 0 2 1,2
NO CLASH, using fixed ground order
22880: Facts:
22880:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
22880:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
22880:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =<= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
22880:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =<=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
22880:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =>= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
22880:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
22880:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =>= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
22880:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
22880: Goal:
22880:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_commutativity
22880: Order:
22880:   kbo
22880: Leaf order:
22880:  additive_inverse 1 1 0 
22880:  add 12 2 0 
22880:  additive_identity 2 0 0 
22880:  multiply 14 2 2 0,2
22880:  b 2 0 2 2,2
22880:  a 2 0 2 1,2
NO CLASH, using fixed ground order
22881: Facts:
22881:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
22881:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
22881:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =>= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
22881:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =>=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
22881:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =>= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
22881:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
22881:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =>= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
22881:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
22881: Goal:
22881:  Id :   1, {_}: multiply a b =>= multiply b a [] by prove_commutativity
22881: Order:
22881:   lpo
22881: Leaf order:
22881:  additive_inverse 1 1 0 
22881:  add 12 2 0 
22881:  additive_identity 2 0 0 
22881:  multiply 14 2 2 0,2
22881:  b 2 0 2 2,2
22881:  a 2 0 2 1,2
% SZS status Timeout for RNG009-5.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
22919: Facts:
22919:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22919:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22919:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
22919:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
22919:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
22919:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
22919:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
22919:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
22919:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
22919:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
22919:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
22919: Goal:
22919:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
22919: Order:
22919:   kbo
22919: Leaf order:
22919:  additive_inverse 2 1 0 
22919:  add 14 2 0 
22919:  additive_identity 4 0 0 
22919:  c 2 0 1 3
22919:  multiply 14 2 1 0,2
22919:  a 2 0 1 2,2
22919:  b 2 0 1 1,2
22918: Facts:
22918:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22918:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22918:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
22918:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
22918:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
22918:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
22918:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
22918:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
22918:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
22918:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
22918:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
22918: Goal:
22918:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
22918: Order:
22918:   nrkbo
22918: Leaf order:
22918:  additive_inverse 2 1 0 
22918:  add 14 2 0 
22918:  additive_identity 4 0 0 
22918:  c 2 0 1 3
22918:  multiply 14 2 1 0,2
22918:  a 2 0 1 2,2
22918:  b 2 0 1 1,2
NO CLASH, using fixed ground order
22920: Facts:
22920:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22920:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22920:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
22920:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
22920:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
22920:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
22920:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
22920:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
22920:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
22920:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
22920:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
22920: Goal:
22920:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
22920: Order:
22920:   lpo
22920: Leaf order:
22920:  additive_inverse 2 1 0 
22920:  add 14 2 0 
22920:  additive_identity 4 0 0 
22920:  c 2 0 1 3
22920:  multiply 14 2 1 0,2
22920:  a 2 0 1 2,2
22920:  b 2 0 1 1,2
% SZS status Timeout for RNG009-7.p
NO CLASH, using fixed ground order
22947: Facts:
22947:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22947:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22947:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22947:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22947:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22947:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22947:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22947:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22947:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22947:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22947:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22947:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22947:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22947:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22947:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22947: Goal:
22947:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22947: Order:
22947:   nrkbo
22947: Leaf order:
22947:  commutator 1 2 0 
22947:  additive_identity 9 0 1 3
22947:  additive_inverse 7 1 1 0,2,2
22947:  add 20 2 4 0,2
22947:  associator 6 3 5 0,1,1,2
22947:  d 5 0 5 3,1,1,2
22947:  c 5 0 5 2,1,1,2
22947:  multiply 27 2 5 0,1,1,1,2
22947:  b 5 0 5 2,1,1,1,2
22947:  a 5 0 5 1,1,1,1,2
NO CLASH, using fixed ground order
22948: Facts:
22948:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22948:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22948:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22948:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22948:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22948:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22948:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22948:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22948:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22948:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22948:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22948:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22948:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22948:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22948:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22948: Goal:
22948:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22948: Order:
22948:   kbo
22948: Leaf order:
22948:  commutator 1 2 0 
22948:  additive_identity 9 0 1 3
22948:  additive_inverse 7 1 1 0,2,2
22948:  add 20 2 4 0,2
22948:  associator 6 3 5 0,1,1,2
22948:  d 5 0 5 3,1,1,2
22948:  c 5 0 5 2,1,1,2
22948:  multiply 27 2 5 0,1,1,1,2
22948:  b 5 0 5 2,1,1,1,2
22948:  a 5 0 5 1,1,1,1,2
NO CLASH, using fixed ground order
22949: Facts:
22949:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22949:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22949:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22949:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22949:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22949:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22949:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22949:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22949:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22949:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22949:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22949:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22949:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22949:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22949:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22949: Goal:
22949:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22949: Order:
22949:   lpo
22949: Leaf order:
22949:  commutator 1 2 0 
22949:  additive_identity 9 0 1 3
22949:  additive_inverse 7 1 1 0,2,2
22949:  add 20 2 4 0,2
22949:  associator 6 3 5 0,1,1,2
22949:  d 5 0 5 3,1,1,2
22949:  c 5 0 5 2,1,1,2
22949:  multiply 27 2 5 0,1,1,1,2
22949:  b 5 0 5 2,1,1,1,2
22949:  a 5 0 5 1,1,1,1,2
% SZS status Timeout for RNG026-6.p
NO CLASH, using fixed ground order
22966: Facts:
NO CLASH, using fixed ground order
22967: Facts:
22967:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22967:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22967:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
NO CLASH, using fixed ground order
22966:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22966:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22966:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22966:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22966:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22966:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22966:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22965: Facts:
22966:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22966:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22966:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22965:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22965:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22965:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22965:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22965:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22965:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22965:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22965:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22965:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22965:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22965:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22965:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22965:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22965:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22965:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22965:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22965:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22965:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22965:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22965:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22965:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22965:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22965: Goal:
22965:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22965: Order:
22965:   nrkbo
22965: Leaf order:
22965:  commutator 1 2 0 
22965:  additive_identity 9 0 1 3
22965:  additive_inverse 23 1 1 0,2,2
22965:  add 28 2 4 0,2
22965:  associator 6 3 5 0,1,1,2
22965:  d 5 0 5 3,1,1,2
22965:  c 5 0 5 2,1,1,2
22965:  multiply 45 2 5 0,1,1,1,2
22965:  b 5 0 5 2,1,1,1,2
22965:  a 5 0 5 1,1,1,1,2
22967:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22966:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22966:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22966:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22966:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22966:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22966:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22966:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22966:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22966:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22966:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22966:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22966:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22966: Goal:
22966:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22966: Order:
22966:   kbo
22966: Leaf order:
22966:  commutator 1 2 0 
22966:  additive_identity 9 0 1 3
22966:  additive_inverse 23 1 1 0,2,2
22966:  add 28 2 4 0,2
22966:  associator 6 3 5 0,1,1,2
22966:  d 5 0 5 3,1,1,2
22966:  c 5 0 5 2,1,1,2
22966:  multiply 45 2 5 0,1,1,1,2
22966:  b 5 0 5 2,1,1,1,2
22966:  a 5 0 5 1,1,1,1,2
22967:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22967:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22967:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22967:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22967:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22967:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22967:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22967:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22967:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22967:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22967:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22967:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22967:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22967:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22967:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22967:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22967:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22967:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22967: Goal:
22967:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
22967: Order:
22967:   lpo
22967: Leaf order:
22967:  commutator 1 2 0 
22967:  additive_identity 9 0 1 3
22967:  additive_inverse 23 1 1 0,2,2
22967:  add 28 2 4 0,2
22967:  associator 6 3 5 0,1,1,2
22967:  d 5 0 5 3,1,1,2
22967:  c 5 0 5 2,1,1,2
22967:  multiply 45 2 5 0,1,1,1,2
22967:  b 5 0 5 2,1,1,1,2
22967:  a 5 0 5 1,1,1,1,2
% SZS status Timeout for RNG026-7.p
NO CLASH, using fixed ground order
22994: Facts:
22994:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
22994: Goal:
22994:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
22994: Order:
22994:   nrkbo
22994: Leaf order:
22994:  nand 12 2 6 0,2
22994:  c 2 0 2 2,2,2,2
22994:  b 3 0 3 1,2,2
22994:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22995: Facts:
22995:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
22995: Goal:
22995:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
22995: Order:
22995:   kbo
22995: Leaf order:
22995:  nand 12 2 6 0,2
22995:  c 2 0 2 2,2,2,2
22995:  b 3 0 3 1,2,2
22995:  a 3 0 3 1,2
NO CLASH, using fixed ground order
22996: Facts:
22996:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
22996: Goal:
22996:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
22996: Order:
22996:   lpo
22996: Leaf order:
22996:  nand 12 2 6 0,2
22996:  c 2 0 2 2,2,2,2
22996:  b 3 0 3 1,2,2
22996:  a 3 0 3 1,2
% SZS status Timeout for BOO076-1.p
CLASH, statistics insufficient
23012: Facts:
23012:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23012:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
23012: Goal:
23012:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
23012: Order:
23012:   nrkbo
23012: Leaf order:
23012:  w 1 0 0 
23012:  b 1 0 0 
23012:  apply 12 2 3 0,2
23012:  f 3 1 3 0,2,2
CLASH, statistics insufficient
23013: Facts:
23013:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23013:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
23013: Goal:
23013:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
23013: Order:
23013:   kbo
23013: Leaf order:
23013:  w 1 0 0 
23013:  b 1 0 0 
23013:  apply 12 2 3 0,2
23013:  f 3 1 3 0,2,2
CLASH, statistics insufficient
23014: Facts:
23014:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23014:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
23014: Goal:
23014:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
23014: Order:
23014:   lpo
23014: Leaf order:
23014:  w 1 0 0 
23014:  b 1 0 0 
23014:  apply 12 2 3 0,2
23014:  f 3 1 3 0,2,2
% SZS status Timeout for COL003-1.p
CLASH, statistics insufficient
23460: Facts:
23460:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23460:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
23460: Goal:
23460:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
23460: Order:
23460:   nrkbo
23460: Leaf order:
23460:  w1 1 0 0 
23460:  b 1 0 0 
23460:  apply 12 2 3 0,2
23460:  f 3 1 3 0,2,2
CLASH, statistics insufficient
23462: Facts:
23462:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23462:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
23462: Goal:
23462:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
23462: Order:
23462:   lpo
23462: Leaf order:
23462:  w1 1 0 0 
23462:  b 1 0 0 
23462:  apply 12 2 3 0,2
23462:  f 3 1 3 0,2,2
CLASH, statistics insufficient
23461: Facts:
23461:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
23461:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
23461: Goal:
23461:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
23461: Order:
23461:   kbo
23461: Leaf order:
23461:  w1 1 0 0 
23461:  b 1 0 0 
23461:  apply 12 2 3 0,2
23461:  f 3 1 3 0,2,2
% SZS status Timeout for COL042-1.p
NO CLASH, using fixed ground order
23502: Facts:
23502:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23502:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
23502:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
23502: Goal:
23502:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23502: Order:
23502:   nrkbo
23502: Leaf order:
23502:  h 6 0 0 
23502:  b 12 0 0 
23502:  apply 29 2 3 0,2
23502:  fixed_pt 3 0 3 2,2
23502:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
23503: Facts:
23503:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23503:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
23503:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
23503: Goal:
23503:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23503: Order:
23503:   kbo
23503: Leaf order:
23503:  h 6 0 0 
23503:  b 12 0 0 
23503:  apply 29 2 3 0,2
23503:  fixed_pt 3 0 3 2,2
23503:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
23504: Facts:
23504:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23504:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
23504:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
23504: Goal:
23504:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23504: Order:
23504:   lpo
23504: Leaf order:
23504:  h 6 0 0 
23504:  b 12 0 0 
23504:  apply 29 2 3 0,2
23504:  fixed_pt 3 0 3 2,2
23504:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL043-3.p
NO CLASH, using fixed ground order
23537: Facts:
23537:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23537:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23537:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
23537: Goal:
23537:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23537: Order:
23537:   nrkbo
23537: Leaf order:
23537:  n 6 0 0 
23537:  b 10 0 0 
23537:  apply 27 2 3 0,2
23537:  fixed_pt 3 0 3 2,2
23537:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
23538: Facts:
23538:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23538:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23538:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
23538: Goal:
23538:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23538: Order:
23538:   kbo
23538: Leaf order:
23538:  n 6 0 0 
23538:  b 10 0 0 
23538:  apply 27 2 3 0,2
23538:  fixed_pt 3 0 3 2,2
23538:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
23539: Facts:
23539:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23539:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23539:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
23539: Goal:
23539:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23539: Order:
23539:   lpo
23539: Leaf order:
23539:  n 6 0 0 
23539:  b 10 0 0 
23539:  apply 27 2 3 0,2
23539:  fixed_pt 3 0 3 2,2
23539:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL044-8.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
23557: Facts:
23557:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23557:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23557:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
23557: Goal:
23557:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23557: Order:
23557:   kbo
23557: Leaf order:
23557:  n 6 0 0 
23557:  b 10 0 0 
23557:  apply 27 2 3 0,2
23557:  fixed_pt 3 0 3 2,2
23557:  strong_fixed_point 3 0 2 1,2
NO CLASH, using fixed ground order
23558: Facts:
23558:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23558:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23558:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
23558: Goal:
23558:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23558: Order:
23558:   lpo
23558: Leaf order:
23558:  n 6 0 0 
23558:  b 10 0 0 
23558:  apply 27 2 3 0,2
23558:  fixed_pt 3 0 3 2,2
23558:  strong_fixed_point 3 0 2 1,2
23556: Facts:
23556:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
23556:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
23556:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
23556: Goal:
23556:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
23556: Order:
23556:   nrkbo
23556: Leaf order:
23556:  n 6 0 0 
23556:  b 10 0 0 
23556:  apply 27 2 3 0,2
23556:  fixed_pt 3 0 3 2,2
23556:  strong_fixed_point 3 0 2 1,2
% SZS status Timeout for COL044-9.p
NO CLASH, using fixed ground order
23710: Facts:
23710:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
23710: Goal:
23710:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23710: Order:
23710:   nrkbo
23710: Leaf order:
23710:  a2 2 0 2 2,2
23710:  multiply 12 2 2 0,2
23710:  inverse 8 1 1 0,1,1,2
23710:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
23711: Facts:
23711:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
23711: Goal:
23711:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23711: Order:
23711:   kbo
23711: Leaf order:
23711:  a2 2 0 2 2,2
23711:  multiply 12 2 2 0,2
23711:  inverse 8 1 1 0,1,1,2
23711:  b2 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
23712: Facts:
23712:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
23712: Goal:
23712:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23712: Order:
23712:   lpo
23712: Leaf order:
23712:  a2 2 0 2 2,2
23712:  multiply 12 2 2 0,2
23712:  inverse 8 1 1 0,1,1,2
23712:  b2 2 0 2 1,1,1,2
% SZS status Timeout for GRP506-1.p
NO CLASH, using fixed ground order
23731: Facts:
23731:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23731:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23731:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23731:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23731:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23731:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23731:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23731:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23731:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
23731:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
23731:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
23731:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
23731:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
23731:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
23731: Goal:
23731:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
23731: Order:
23731:   nrkbo
23731: Leaf order:
23731:  n0 1 0 0 
23731:  n1 2 0 0 
23731:  join 18 2 3 0,2,2
23731:  meet 19 2 5 0,2
23731:  complement 14 1 2 0,1,2,2,2,2
23731:  b 3 0 3 1,2,2
23731:  a 7 0 7 1,2
NO CLASH, using fixed ground order
23732: Facts:
23732:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23732:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23732:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23732:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23732:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23732:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23732:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23732:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23732:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
23732:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
23732:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
23732:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
23732:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
23732:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
23732: Goal:
23732:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
23732: Order:
23732:   kbo
23732: Leaf order:
23732:  n0 1 0 0 
23732:  n1 2 0 0 
23732:  join 18 2 3 0,2,2
23732:  meet 19 2 5 0,2
23732:  complement 14 1 2 0,1,2,2,2,2
23732:  b 3 0 3 1,2,2
23732:  a 7 0 7 1,2
NO CLASH, using fixed ground order
23733: Facts:
23733:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23733:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23733:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23733:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23733:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23733:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23733:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23733:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23733:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
23733:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
23733:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
23733:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
23733:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
23733:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
23733: Goal:
23733:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
23733: Order:
23733:   lpo
23733: Leaf order:
23733:  n0 1 0 0 
23733:  n1 2 0 0 
23733:  join 18 2 3 0,2,2
23733:  meet 19 2 5 0,2
23733:  complement 14 1 2 0,1,2,2,2,2
23733:  b 3 0 3 1,2,2
23733:  a 7 0 7 1,2
% SZS status Timeout for LAT053-1.p
NO CLASH, using fixed ground order
23764: Facts:
NO CLASH, using fixed ground order
23765: Facts:
23764:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23764: Goal:
23764:  Id :   1, {_}: meet a b =>= meet b a [] by prove_normal_axioms_2
23764: Order:
23764:   nrkbo
23764: Leaf order:
23764:  join 20 2 0 
23764:  meet 20 2 2 0,2
23764:  b 2 0 2 2,2
23764:  a 2 0 2 1,2
23765:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23765: Goal:
23765:  Id :   1, {_}: meet a b =>= meet b a [] by prove_normal_axioms_2
23765: Order:
23765:   kbo
23765: Leaf order:
23765:  join 20 2 0 
23765:  meet 20 2 2 0,2
23765:  b 2 0 2 2,2
23765:  a 2 0 2 1,2
NO CLASH, using fixed ground order
23766: Facts:
23766:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23766: Goal:
23766:  Id :   1, {_}: meet a b =>= meet b a [] by prove_normal_axioms_2
23766: Order:
23766:   lpo
23766: Leaf order:
23766:  join 20 2 0 
23766:  meet 20 2 2 0,2
23766:  b 2 0 2 2,2
23766:  a 2 0 2 1,2
% SZS status Timeout for LAT081-1.p
NO CLASH, using fixed ground order
23787: Facts:
23787:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23787: Goal:
23787:  Id :   1, {_}: join a b =>= join b a [] by prove_normal_axioms_5
23787: Order:
23787:   nrkbo
23787: Leaf order:
23787:  meet 18 2 0 
23787:  join 22 2 2 0,2
23787:  b 2 0 2 2,2
23787:  a 2 0 2 1,2
NO CLASH, using fixed ground order
23788: Facts:
23788:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23788: Goal:
23788:  Id :   1, {_}: join a b =>= join b a [] by prove_normal_axioms_5
23788: Order:
23788:   kbo
23788: Leaf order:
23788:  meet 18 2 0 
23788:  join 22 2 2 0,2
23788:  b 2 0 2 2,2
23788:  a 2 0 2 1,2
NO CLASH, using fixed ground order
23789: Facts:
23789:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23789: Goal:
23789:  Id :   1, {_}: join a b =>= join b a [] by prove_normal_axioms_5
23789: Order:
23789:   lpo
23789: Leaf order:
23789:  meet 18 2 0 
23789:  join 22 2 2 0,2
23789:  b 2 0 2 2,2
23789:  a 2 0 2 1,2
% SZS status Timeout for LAT084-1.p
NO CLASH, using fixed ground order
23816: Facts:
23816:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23816: Goal:
23816:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
23816: Order:
23816:   nrkbo
23816: Leaf order:
23816:  meet 19 2 1 0,2
23816:  join 21 2 1 0,2,2
23816:  b 1 0 1 2,2,2
23816:  a 3 0 3 1,2
NO CLASH, using fixed ground order
23817: Facts:
23817:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23817: Goal:
23817:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
23817: Order:
23817:   kbo
23817: Leaf order:
23817:  meet 19 2 1 0,2
23817:  join 21 2 1 0,2,2
23817:  b 1 0 1 2,2,2
23817:  a 3 0 3 1,2
NO CLASH, using fixed ground order
23818: Facts:
23818:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23818: Goal:
23818:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
23818: Order:
23818:   lpo
23818: Leaf order:
23818:  meet 19 2 1 0,2
23818:  join 21 2 1 0,2,2
23818:  b 1 0 1 2,2,2
23818:  a 3 0 3 1,2
% SZS status Timeout for LAT086-1.p
NO CLASH, using fixed ground order
23840: Facts:
23840:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23840: Goal:
23840:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
23840: Order:
23840:   nrkbo
23840: Leaf order:
23840:  join 21 2 1 0,2
23840:  meet 19 2 1 0,2,2
23840:  b 1 0 1 2,2,2
23840:  a 3 0 3 1,2
NO CLASH, using fixed ground order
23842: Facts:
23842:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23842: Goal:
23842:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
23842: Order:
23842:   lpo
23842: Leaf order:
23842:  join 21 2 1 0,2
23842:  meet 19 2 1 0,2,2
23842:  b 1 0 1 2,2,2
23842:  a 3 0 3 1,2
NO CLASH, using fixed ground order
23841: Facts:
23841:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
23841: Goal:
23841:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
23841: Order:
23841:   kbo
23841: Leaf order:
23841:  join 21 2 1 0,2
23841:  meet 19 2 1 0,2,2
23841:  b 1 0 1 2,2,2
23841:  a 3 0 3 1,2
% SZS status Timeout for LAT087-1.p
NO CLASH, using fixed ground order
23873: Facts:
23873:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23873:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23873:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23873:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23873:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23873:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23873:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23873:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23873:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
23873: Goal:
23873:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
23873: Order:
23873:   nrkbo
23873: Leaf order:
23873:  join 17 2 4 0,2,2
23873:  meet 21 2 6 0,2
23873:  c 4 0 4 2,2,2,2
23873:  b 4 0 4 1,2,2
23873:  a 4 0 4 1,2
NO CLASH, using fixed ground order
23874: Facts:
23874:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23874:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23874:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23874:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23874:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23874:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23874:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23874:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23874:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
23874: Goal:
23874:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
23874: Order:
23874:   kbo
23874: Leaf order:
23874:  join 17 2 4 0,2,2
23874:  meet 21 2 6 0,2
23874:  c 4 0 4 2,2,2,2
23874:  b 4 0 4 1,2,2
23874:  a 4 0 4 1,2
NO CLASH, using fixed ground order
23875: Facts:
23875:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
23875:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
23875:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
23875:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
23875:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
23875:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
23875:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
23875:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
23875:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
23875: Goal:
23875:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
23875: Order:
23875:   lpo
23875: Leaf order:
23875:  join 17 2 4 0,2,2
23875:  meet 21 2 6 0,2
23875:  c 4 0 4 2,2,2,2
23875:  b 4 0 4 1,2,2
23875:  a 4 0 4 1,2
% SZS status Timeout for LAT099-1.p
NO CLASH, using fixed ground order
24259: Facts:
24259:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24259:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24259:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24259:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24259:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24259:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24259:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24259:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24259:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
24259: Goal:
24259:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24259: Order:
24259:   nrkbo
24259: Leaf order:
24259:  meet 19 2 5 0,2
24259:  join 19 2 5 0,2,2
24259:  d 2 0 2 2,2,2,2,2
24259:  c 3 0 3 1,2,2,2
24259:  b 3 0 3 1,2,2
24259:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24260: Facts:
24260:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24260:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24260:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24260:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24260:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24260:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24260:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24260:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24260:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
24260: Goal:
24260:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24260: Order:
24260:   kbo
24260: Leaf order:
24260:  meet 19 2 5 0,2
24260:  join 19 2 5 0,2,2
24260:  d 2 0 2 2,2,2,2,2
24260:  c 3 0 3 1,2,2,2
24260:  b 3 0 3 1,2,2
24260:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24261: Facts:
24261:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24261:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24261:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24261:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24261:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24261:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24261:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24261:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24261:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
24261: Goal:
24261:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24261: Order:
24261:   lpo
24261: Leaf order:
24261:  meet 19 2 5 0,2
24261:  join 19 2 5 0,2,2
24261:  d 2 0 2 2,2,2,2,2
24261:  c 3 0 3 1,2,2,2
24261:  b 3 0 3 1,2,2
24261:  a 4 0 4 1,2
% SZS status Timeout for LAT110-1.p
NO CLASH, using fixed ground order
24393: Facts:
24393:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24393:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24393:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24393:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24393:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24393:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24393:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24393:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24393:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
24393: Goal:
24393:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
24393: Order:
24393:   nrkbo
24393: Leaf order:
24393:  meet 20 2 5 0,2
24393:  join 17 2 4 0,2,2
24393:  c 3 0 3 2,2,2
24393:  b 3 0 3 1,2,2
24393:  a 5 0 5 1,2
NO CLASH, using fixed ground order
24394: Facts:
24394:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24394:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24394:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24394:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24394:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24394:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24394:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24394:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24394:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
24394: Goal:
24394:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
24394: Order:
24394:   kbo
24394: Leaf order:
24394:  meet 20 2 5 0,2
24394:  join 17 2 4 0,2,2
24394:  c 3 0 3 2,2,2
24394:  b 3 0 3 1,2,2
24394:  a 5 0 5 1,2
NO CLASH, using fixed ground order
24395: Facts:
24395:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24395:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24395:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24395:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24395:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24395:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24395:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24395:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24395:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
24395: Goal:
24395:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
24395: Order:
24395:   lpo
24395: Leaf order:
24395:  meet 20 2 5 0,2
24395:  join 17 2 4 0,2,2
24395:  c 3 0 3 2,2,2
24395:  b 3 0 3 1,2,2
24395:  a 5 0 5 1,2
% SZS status Timeout for LAT118-1.p
NO CLASH, using fixed ground order
24412: Facts:
24412:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24412:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24412:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24412:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24412:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24412:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24412:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24412:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24412:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
24412: Goal:
24412:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24412: Order:
24412:   nrkbo
24412: Leaf order:
24412:  join 17 2 4 0,2,2
24412:  meet 21 2 6 0,2
24412:  c 3 0 3 2,2,2,2
24412:  b 3 0 3 1,2,2
24412:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24413: Facts:
24413:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24413:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24413:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24413:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24413:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24413:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24413:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24413:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24413:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
24413: Goal:
24413:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24413: Order:
24413:   kbo
24413: Leaf order:
24413:  join 17 2 4 0,2,2
24413:  meet 21 2 6 0,2
24413:  c 3 0 3 2,2,2,2
24413:  b 3 0 3 1,2,2
24413:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24414: Facts:
24414:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24414:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24414:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24414:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24414:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24414:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24414:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24414:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24414:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
24414: Goal:
24414:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24414: Order:
24414:   lpo
24414: Leaf order:
24414:  join 17 2 4 0,2,2
24414:  meet 21 2 6 0,2
24414:  c 3 0 3 2,2,2,2
24414:  b 3 0 3 1,2,2
24414:  a 6 0 6 1,2
% SZS status Timeout for LAT142-1.p
NO CLASH, using fixed ground order
24444: Facts:
24444:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24444:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24444:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24444:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24444:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24444:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24444:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24444:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24444:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
24444: Goal:
24444:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =<=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
24444: Order:
24444:   nrkbo
24444: Leaf order:
24444:  join 16 2 3 0,2,2,2
24444:  meet 21 2 7 0,2
24444:  d 2 0 2 2,2,2,2,2
24444:  c 3 0 3 1,2,2,2
24444:  b 3 0 3 1,2,2
24444:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24445: Facts:
24445:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24445:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24445:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24445:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24445:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24445:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24445:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24445:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24445:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
24445: Goal:
24445:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =<=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
24445: Order:
24445:   kbo
24445: Leaf order:
24445:  join 16 2 3 0,2,2,2
24445:  meet 21 2 7 0,2
24445:  d 2 0 2 2,2,2,2,2
24445:  c 3 0 3 1,2,2,2
24445:  b 3 0 3 1,2,2
24445:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24446: Facts:
24446:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24446:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24446:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24446:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24446:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24446:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24446:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24446:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24446:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
24446: Goal:
24446:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =>=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
24446: Order:
24446:   lpo
24446: Leaf order:
24446:  join 16 2 3 0,2,2,2
24446:  meet 21 2 7 0,2
24446:  d 2 0 2 2,2,2,2,2
24446:  c 3 0 3 1,2,2,2
24446:  b 3 0 3 1,2,2
24446:  a 4 0 4 1,2
% SZS status Timeout for LAT147-1.p
NO CLASH, using fixed ground order
24463: Facts:
24463:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24463:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24463:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24463:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24463:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24463:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24463:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24463:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24463:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
24463: Goal:
24463:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24463: Order:
24463:   kbo
24463: Leaf order:
24463:  join 18 2 4 0,2,2
24463:  meet 20 2 6 0,2
24463:  c 3 0 3 2,2,2,2
24463:  b 3 0 3 1,2,2
24463:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24464: Facts:
24464:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24464:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24464:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24464:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24464:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24464:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24464:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24464:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24464:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
24464: Goal:
24464:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24464: Order:
24464:   lpo
24464: Leaf order:
24464:  join 18 2 4 0,2,2
24464:  meet 20 2 6 0,2
24464:  c 3 0 3 2,2,2,2
24464:  b 3 0 3 1,2,2
24464:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24462: Facts:
24462:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24462:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24462:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24462:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24462:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24462:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24462:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24462:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24462:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
24462: Goal:
24462:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24462: Order:
24462:   nrkbo
24462: Leaf order:
24462:  join 18 2 4 0,2,2
24462:  meet 20 2 6 0,2
24462:  c 3 0 3 2,2,2,2
24462:  b 3 0 3 1,2,2
24462:  a 6 0 6 1,2
% SZS status Timeout for LAT154-1.p
NO CLASH, using fixed ground order
24500: Facts:
24500:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24500:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24500:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24500:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24500:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24500:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24500:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24500:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24500:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
24500: Goal:
24500:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24500: Order:
24500:   nrkbo
24500: Leaf order:
24500:  join 18 2 4 0,2,2
24500:  meet 20 2 6 0,2
24500:  c 4 0 4 2,2,2,2
24500:  b 4 0 4 1,2,2
24500:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24501: Facts:
24501:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24501:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24501:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24501:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24501:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24501:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24501:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24501:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24501:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
24501: Goal:
24501:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24501: Order:
24501:   kbo
24501: Leaf order:
24501:  join 18 2 4 0,2,2
24501:  meet 20 2 6 0,2
24501:  c 4 0 4 2,2,2,2
24501:  b 4 0 4 1,2,2
24501:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24502: Facts:
24502:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24502:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24502:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24502:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24502:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24502:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24502:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24502:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24502:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
24502: Goal:
24502:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24502: Order:
24502:   lpo
24502: Leaf order:
24502:  join 18 2 4 0,2,2
24502:  meet 20 2 6 0,2
24502:  c 4 0 4 2,2,2,2
24502:  b 4 0 4 1,2,2
24502:  a 4 0 4 1,2
% SZS status Timeout for LAT155-1.p
NO CLASH, using fixed ground order
24518: Facts:
24518:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24518:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24518:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24518:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24518:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24518:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24518:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24518:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24518:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
24518: Goal:
24518:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24518: Order:
24518:   nrkbo
24518: Leaf order:
24518:  meet 18 2 4 0,2
24518:  join 18 2 4 0,2,2
24518:  c 2 0 2 2,2,2
24518:  b 4 0 4 1,2,2
24518:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24519: Facts:
24519:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24519:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24519:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24519:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24519:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24519:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24519:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24519:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24519:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
24519: Goal:
24519:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24519: Order:
24519:   kbo
24519: Leaf order:
24519:  meet 18 2 4 0,2
24519:  join 18 2 4 0,2,2
24519:  c 2 0 2 2,2,2
24519:  b 4 0 4 1,2,2
24519:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24520: Facts:
24520:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24520:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24520:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24520:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24520:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24520:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24520:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24520:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24520:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
24520: Goal:
24520:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24520: Order:
24520:   lpo
24520: Leaf order:
24520:  meet 18 2 4 0,2
24520:  join 18 2 4 0,2,2
24520:  c 2 0 2 2,2,2
24520:  b 4 0 4 1,2,2
24520:  a 4 0 4 1,2
% SZS status Timeout for LAT170-1.p
NO CLASH, using fixed ground order
24547: Facts:
24547:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
24547:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
24547:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
24547:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
24547:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
24547:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
24547:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
24547:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
24547:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
24547:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
24547:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
24547:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24547:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
24547:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
24547: Goal:
24547:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24547: Order:
24547:   nrkbo
24547: Leaf order:
24547:  commutator 1 2 0 
24547:  additive_inverse 6 1 0 
24547:  add 16 2 0 
24547:  additive_identity 9 0 1 3
24547:  multiply 22 2 4 0,2
24547:  associator 5 3 4 0,1,1,1,2
24547:  y 4 0 4 3,1,1,1,2
24547:  x 9 0 9 1,1,1,1,2
NO CLASH, using fixed ground order
24548: Facts:
24548:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
24548:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
24548:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
24548:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
24548:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
24548:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
24548:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
24548:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
24548:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
24548:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
24548:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
24548:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24548:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
24548:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
24548: Goal:
24548:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24548: Order:
24548:   kbo
24548: Leaf order:
24548:  commutator 1 2 0 
24548:  additive_inverse 6 1 0 
24548:  add 16 2 0 
24548:  additive_identity 9 0 1 3
24548:  multiply 22 2 4 0,2
24548:  associator 5 3 4 0,1,1,1,2
24548:  y 4 0 4 3,1,1,1,2
24548:  x 9 0 9 1,1,1,1,2
NO CLASH, using fixed ground order
24549: Facts:
24549:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
24549:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
24549:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
24549:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
24549:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
24549:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
24549:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
24549:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
24549:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
24549:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
24549:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
24549:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24549:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
24549:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
24549: Goal:
24549:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24549: Order:
24549:   lpo
24549: Leaf order:
24549:  commutator 1 2 0 
24549:  additive_inverse 6 1 0 
24549:  add 16 2 0 
24549:  additive_identity 9 0 1 3
24549:  multiply 22 2 4 0,2
24549:  associator 5 3 4 0,1,1,1,2
24549:  y 4 0 4 3,1,1,1,2
24549:  x 9 0 9 1,1,1,1,2
% SZS status Timeout for RNG031-6.p
NO CLASH, using fixed ground order
24576: Facts:
24576:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
24576:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
24576:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
24576:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
24576:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
24576:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
24576:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
24576:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
24576:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
24576:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
24576:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
24576:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
24576:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
24576:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
24576:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
24576:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
24576:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
24576:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
24576:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
24576:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
24576:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
24576: Goal:
24576:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24576: Order:
24576:   nrkbo
24576: Leaf order:
24576:  commutator 1 2 0 
24576:  add 24 2 0 
24576:  additive_inverse 22 1 0 
24576:  additive_identity 9 0 1 3
24576:  multiply 40 2 4 0,2add
24576:  associator 5 3 4 0,1,1,1,2
24576:  y 4 0 4 3,1,1,1,2
24576:  x 9 0 9 1,1,1,1,2
NO CLASH, using fixed ground order
24577: Facts:
24577:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
NO CLASH, using fixed ground order
24578: Facts:
24578:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
24578:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
24578:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
24578:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
24578:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
24578:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
24578:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
24578:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
24578:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
24578:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
24578:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
24578:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
24578:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
24578:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
24578:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
24578:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
24578:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
24578:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
24578:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
24578:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
24578:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
24578: Goal:
24578:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24578: Order:
24578:   lpo
24578: Leaf order:
24578:  commutator 1 2 0 
24578:  add 24 2 0 
24578:  additive_inverse 22 1 0 
24578:  additive_identity 9 0 1 3
24578:  multiply 40 2 4 0,2add
24578:  associator 5 3 4 0,1,1,1,2
24578:  y 4 0 4 3,1,1,1,2
24578:  x 9 0 9 1,1,1,1,2
24577:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
24577:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
24577:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
24577:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
24577:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
24577:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
24577:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
24577:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
24577:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
24577:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
24577:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
24577:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
24577:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
24577:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
24577:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
24577:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
24577:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
24577:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
24577:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
24577:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
24577: Goal:
24577:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
24577: Order:
24577:   kbo
24577: Leaf order:
24577:  commutator 1 2 0 
24577:  add 24 2 0 
24577:  additive_inverse 22 1 0 
24577:  additive_identity 9 0 1 3
24577:  multiply 40 2 4 0,2add
24577:  associator 5 3 4 0,1,1,1,2
24577:  y 4 0 4 3,1,1,1,2
24577:  x 9 0 9 1,1,1,1,2
% SZS status Timeout for RNG031-7.p
NO CLASH, using fixed ground order
24609: Facts:
24609:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
24609:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
24609: Goal:
24609:  Id :   1, {_}: g1 ?1 =>= g2 ?1 [1] by clause3 ?1
24609: Order:
24609:   nrkbo
24609: Leaf order:
24609:  f 2 1 0 
24609:  g2 2 1 1 0,3
24609:  g1 2 1 1 0,2
NO CLASH, using fixed ground order
24610: Facts:
24610:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
24610:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
24610: Goal:
24610:  Id :   1, {_}: g1 ?1 =>= g2 ?1 [1] by clause3 ?1
24610: Order:
24610:   kbo
24610: Leaf order:
24610:  f 2 1 0 
24610:  g2 2 1 1 0,3
24610:  g1 2 1 1 0,2
NO CLASH, using fixed ground order
24611: Facts:
24611:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
24611:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
24611: Goal:
24611:  Id :   1, {_}: g1 ?1 =>= g2 ?1 [1] by clause3 ?1
24611: Order:
24611:   lpo
24611: Leaf order:
24611:  f 2 1 0 
24611:  g2 2 1 1 0,3
24611:  g1 2 1 1 0,2
24609: status GaveUp for SYN305-1.p
24610: status GaveUp for SYN305-1.p
24611: status GaveUp for SYN305-1.p
% SZS status Timeout for SYN305-1.p
CLASH, statistics insufficient
24616: Facts:
24616:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24616:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
24616: Goal:
24616:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
24616: Order:
24616:   nrkbo
24616: Leaf order:
24616:  h 1 0 0 
24616:  b 1 0 0 
24616:  apply 14 2 3 0,2
24616:  f 3 1 3 0,2,2
CLASH, statistics insufficient
24617: Facts:
24617:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24617:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
24617: Goal:
24617:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
24617: Order:
24617:   kbo
24617: Leaf order:
24617:  h 1 0 0 
24617:  b 1 0 0 
24617:  apply 14 2 3 0,2
24617:  f 3 1 3 0,2,2
CLASH, statistics insufficient
24618: Facts:
24618:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24618:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
24618: Goal:
24618:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
24618: Order:
24618:   lpo
24618: Leaf order:
24618:  h 1 0 0 
24618:  b 1 0 0 
24618:  apply 14 2 3 0,2
24618:  f 3 1 3 0,2,2
% SZS status Timeout for COL043-1.p
CLASH, statistics insufficient
24654: Facts:
CLASH, statistics insufficient
24655: Facts:
24655:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24655:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
24655:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
24655: Goal:
24655:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =<=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
24655: Order:
24655:   kbo
24655: Leaf order:
24655:  w 1 0 0 
24655:  q 1 0 0 
24655:  b 1 0 0 
24655:  h 2 1 2 0,2,2
24655:  g 4 1 4 0,2,1,1,2
24655:  apply 22 2 8 0,2
24655:  f 3 1 3 0,2,1,1,1,2
CLASH, statistics insufficient
24656: Facts:
24656:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24656:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
24656:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
24656: Goal:
24656:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
24656: Order:
24656:   lpo
24656: Leaf order:
24656:  w 1 0 0 
24656:  q 1 0 0 
24656:  b 1 0 0 
24656:  h 2 1 2 0,2,2
24656:  g 4 1 4 0,2,1,1,2
24656:  apply 22 2 8 0,2
24656:  f 3 1 3 0,2,1,1,1,2
24654:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
24654:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
24654:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
24654: Goal:
24654:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =<=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
24654: Order:
24654:   nrkbo
24654: Leaf order:
24654:  w 1 0 0 
24654:  q 1 0 0 
24654:  b 1 0 0 
24654:  h 2 1 2 0,2,2
24654:  g 4 1 4 0,2,1,1,2
24654:  apply 22 2 8 0,2
24654:  f 3 1 3 0,2,1,1,1,2
% SZS status Timeout for COL066-1.p
NO CLASH, using fixed ground order
24759: Facts:
24759:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
24759:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
24759:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
24759:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
24759:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
24759:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
24759:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
24759:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
24759:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
24759:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
24759: Goal:
24759:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
24759: Order:
24759:   nrkbo
24759: Leaf order:
24759:  n0 1 0 0 
24759:  n1 2 0 1 3
24759:  join 17 2 5 0,2
24759:  meet 12 2 3 0,1,1,1,1,2
24759:  b 4 0 4 2,1,1,1,1,2
24759:  complement 15 1 6 0,1,2
24759:  a 5 0 5 1,1,1,1,1,1,2
NO CLASH, using fixed ground order
24760: Facts:
24760:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
24760:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
24760:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
24760:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
24760:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
24760:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
24760:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
24760:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
24760:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
24760:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
24760: Goal:
24760:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
24760: Order:
24760:   kbo
24760: Leaf order:
24760:  n0 1 0 0 
24760:  n1 2 0 1 3
24760:  join 17 2 5 0,2
24760:  meet 12 2 3 0,1,1,1,1,2
24760:  b 4 0 4 2,1,1,1,1,2
24760:  complement 15 1 6 0,1,2
24760:  a 5 0 5 1,1,1,1,1,1,2
NO CLASH, using fixed ground order
24761: Facts:
24761:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
24761:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
24761:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
24761:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
24761:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
24761:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
24761:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
24761:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
24761:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
24761:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
24761: Goal:
24761:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
24761: Order:
24761:   lpo
24761: Leaf order:
24761:  n0 1 0 0 
24761:  n1 2 0 1 3
24761:  join 17 2 5 0,2
24761:  meet 12 2 3 0,1,1,1,1,2
24761:  b 4 0 4 2,1,1,1,1,2
24761:  complement 15 1 6 0,1,2
24761:  a 5 0 5 1,1,1,1,1,1,2
% SZS status Timeout for LAT018-1.p
NO CLASH, using fixed ground order
24778: Facts:
24778:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24778: Goal:
24778:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
24778: Order:
24778:   nrkbo
24778: Leaf order:
24778:  join 20 2 0 
24778:  c 2 0 2 2,2
24778:  meet 22 2 4 0,2
24778:  b 2 0 2 2,1,2
24778:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
24779: Facts:
24779:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24779: Goal:
24779:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
24779: Order:
24779:   kbo
24779: Leaf order:
24779:  join 20 2 0 
24779:  c 2 0 2 2,2
24779:  meet 22 2 4 0,2
24779:  b 2 0 2 2,1,2
24779:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
24780: Facts:
24780:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24780: Goal:
24780:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
24780: Order:
24780:   lpo
24780: Leaf order:
24780:  join 20 2 0 
24780:  c 2 0 2 2,2
24780:  meet 22 2 4 0,2
24780:  b 2 0 2 2,1,2
24780:  a 2 0 2 1,1,2
% SZS status Timeout for LAT082-1.p
NO CLASH, using fixed ground order
24809: Facts:
24809:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24809: Goal:
24809:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
24809: Order:
24809:   kbo
24809: Leaf order:
24809:  meet 18 2 0 
24809:  c 2 0 2 2,2
24809:  join 24 2 4 0,2
24809:  b 2 0 2 2,1,2
24809:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
24810: Facts:
24810:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24810: Goal:
24810:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
24810: Order:
24810:   lpo
24810: Leaf order:
24810:  meet 18 2 0 
24810:  c 2 0 2 2,2
24810:  join 24 2 4 0,2
24810:  b 2 0 2 2,1,2
24810:  a 2 0 2 1,1,2
NO CLASH, using fixed ground order
24808: Facts:
24808:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
24808: Goal:
24808:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
24808: Order:
24808:   nrkbo
24808: Leaf order:
24808:  meet 18 2 0 
24808:  c 2 0 2 2,2
24808:  join 24 2 4 0,2
24808:  b 2 0 2 2,1,2
24808:  a 2 0 2 1,1,2
% SZS status Timeout for LAT085-1.p
NO CLASH, using fixed ground order
24831: Facts:
24831:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24831:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24831:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24831:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24831:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24831:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24831:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24831:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24831:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
24831: Goal:
24831:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24831: Order:
24831:   nrkbo
24831: Leaf order:
24831:  join 16 2 4 0,2,2
24831:  meet 22 2 6 0,2
24831:  c 4 0 4 2,2,2,2
24831:  b 4 0 4 1,2,2
24831:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24832: Facts:
24832:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24832:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24832:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24832:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24832:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24832:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24832:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24832:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24832:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
24832: Goal:
24832:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24832: Order:
24832:   kbo
24832: Leaf order:
24832:  join 16 2 4 0,2,2
24832:  meet 22 2 6 0,2
24832:  c 4 0 4 2,2,2,2
24832:  b 4 0 4 1,2,2
24832:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24833: Facts:
24833:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24833:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24833:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24833:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24833:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24833:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24833:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24833:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24833:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
24833: Goal:
24833:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
24833: Order:
24833:   lpo
24833: Leaf order:
24833:  join 16 2 4 0,2,2
24833:  meet 22 2 6 0,2
24833:  c 4 0 4 2,2,2,2
24833:  b 4 0 4 1,2,2
24833:  a 4 0 4 1,2
% SZS status Timeout for LAT144-1.p
NO CLASH, using fixed ground order
24860: Facts:
24860:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24860:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24860:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24860:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24860:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24860:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24860:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24860:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24860:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24860: Goal:
24860:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
24860: Order:
24860:   nrkbo
24860: Leaf order:
24860:  meet 19 2 5 0,2
24860:  join 18 2 5 0,2,2
24860:  d 2 0 2 2,2,2,2,2
24860:  c 3 0 3 1,2,2,2
24860:  b 3 0 3 1,2,2
24860:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24861: Facts:
24861:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24861:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24861:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24861:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24861:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24861:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24861:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24861:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24861:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24861: Goal:
24861:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
24861: Order:
24861:   kbo
24861: Leaf order:
24861:  meet 19 2 5 0,2
24861:  join 18 2 5 0,2,2
24861:  d 2 0 2 2,2,2,2,2
24861:  c 3 0 3 1,2,2,2
24861:  b 3 0 3 1,2,2
24861:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24862: Facts:
24862:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24862:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24862:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24862:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24862:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24862:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24862:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24862:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24862:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24862: Goal:
24862:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
24862: Order:
24862:   lpo
24862: Leaf order:
24862:  meet 19 2 5 0,2
24862:  join 18 2 5 0,2,2
24862:  d 2 0 2 2,2,2,2,2
24862:  c 3 0 3 1,2,2,2
24862:  b 3 0 3 1,2,2
24862:  a 4 0 4 1,2
% SZS status Timeout for LAT150-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
24889: Facts:
24889:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24889:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24889:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24889:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24889:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24889:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24889:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24889:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24889:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24889: Goal:
24889:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24889: Order:
24889:   kbo
24889: Leaf order:
24889:  meet 19 2 5 0,2
24889:  join 18 2 5 0,2,2
24889:  d 2 0 2 2,2,2,2,2
24889:  c 3 0 3 1,2,2,2
24889:  b 3 0 3 1,2,2
24889:  a 4 0 4 1,2
24888: Facts:
24888:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24888:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24888:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24888:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24888:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24888:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24888:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24888:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24888:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24888: Goal:
24888:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24888: Order:
24888:   nrkbo
24888: Leaf order:
24888:  meet 19 2 5 0,2
24888:  join 18 2 5 0,2,2
24888:  d 2 0 2 2,2,2,2,2
24888:  c 3 0 3 1,2,2,2
24888:  b 3 0 3 1,2,2
24888:  a 4 0 4 1,2
NO CLASH, using fixed ground order
24890: Facts:
24890:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24890:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24890:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24890:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24890:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24890:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24890:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24890:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24890:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
24890: Goal:
24890:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
24890: Order:
24890:   lpo
24890: Leaf order:
24890:  meet 19 2 5 0,2
24890:  join 18 2 5 0,2,2
24890:  d 2 0 2 2,2,2,2,2
24890:  c 3 0 3 1,2,2,2
24890:  b 3 0 3 1,2,2
24890:  a 4 0 4 1,2
% SZS status Timeout for LAT151-1.p
NO CLASH, using fixed ground order
24921: Facts:
24921:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24921:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24921:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24921:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24921:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24921:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24921:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24921:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24921:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
24921: Goal:
24921:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24921: Order:
24921:   nrkbo
24921: Leaf order:
24921:  join 18 2 4 0,2,2
24921:  meet 20 2 6 0,2
24921:  c 3 0 3 2,2,2,2
24921:  b 3 0 3 1,2,2
24921:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24922: Facts:
24922:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24922:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24922:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24922:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24922:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24922:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24922:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24922:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24922:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
24922: Goal:
24922:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24922: Order:
24922:   kbo
24922: Leaf order:
24922:  join 18 2 4 0,2,2
24922:  meet 20 2 6 0,2
24922:  c 3 0 3 2,2,2,2
24922:  b 3 0 3 1,2,2
24922:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24923: Facts:
24923:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24923:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24923:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24923:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24923:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24923:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24923:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24923:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24923:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
24923: Goal:
24923:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24923: Order:
24923:   lpo
24923: Leaf order:
24923:  join 18 2 4 0,2,2
24923:  meet 20 2 6 0,2
24923:  c 3 0 3 2,2,2,2
24923:  b 3 0 3 1,2,2
24923:  a 6 0 6 1,2
% SZS status Timeout for LAT152-1.p
NO CLASH, using fixed ground order
24939: Facts:
24939:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24939:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24939:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24939:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24939:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24939:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24939:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24939:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24939:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
24939: Goal:
24939:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
24939: Order:
24939:   nrkbo
24939: Leaf order:
24939:  join 18 2 4 0,2,2
24939:  meet 20 2 6 0,2
24939:  c 2 0 2 2,2,2,2
24939:  b 4 0 4 1,2,2
24939:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24940: Facts:
24940:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24940:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24940:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24940:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24940:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24940:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24940:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24940:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24940:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
24940: Goal:
24940:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
24940: Order:
24940:   kbo
24940: Leaf order:
24940:  join 18 2 4 0,2,2
24940:  meet 20 2 6 0,2
24940:  c 2 0 2 2,2,2,2
24940:  b 4 0 4 1,2,2
24940:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24941: Facts:
24941:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24941:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24941:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24941:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24941:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24941:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24941:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24941:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24941:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
24941: Goal:
24941:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
24941: Order:
24941:   lpo
24941: Leaf order:
24941:  join 18 2 4 0,2,2
24941:  meet 20 2 6 0,2
24941:  c 2 0 2 2,2,2,2
24941:  b 4 0 4 1,2,2
24941:  a 6 0 6 1,2
% SZS status Timeout for LAT159-1.p
NO CLASH, using fixed ground order
24972: Facts:
24972:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24972:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24972:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
NO CLASH, using fixed ground order
24972:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24972:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24972:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24972:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24972:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24972:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
24972: Goal:
24972:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
24972: Order:
24972:   nrkbo
24972: Leaf order:
24972:  meet 19 2 6 0,2
24972:  join 15 2 3 0,2,2,2
24972:  d 2 0 2 2,2,2,2
24972:  c 3 0 3 1,2,2,2
24972:  b 3 0 3 1,2,2
24972:  a 3 0 3 1,2
24973: Facts:
24973:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24973:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24973:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24973:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24973:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24973:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24973:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24973:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24973:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
24973: Goal:
24973:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
24973: Order:
24973:   kbo
24973: Leaf order:
24973:  meet 19 2 6 0,2
24973:  join 15 2 3 0,2,2,2
24973:  d 2 0 2 2,2,2,2
24973:  c 3 0 3 1,2,2,2
24973:  b 3 0 3 1,2,2
24973:  a 3 0 3 1,2
NO CLASH, using fixed ground order
24974: Facts:
24974:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24974:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24974:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24974:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24974:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24974:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24974:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24974:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24974:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
24974: Goal:
24974:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
24974: Order:
24974:   lpo
24974: Leaf order:
24974:  meet 19 2 6 0,2
24974:  join 15 2 3 0,2,2,2
24974:  d 2 0 2 2,2,2,2
24974:  c 3 0 3 1,2,2,2
24974:  b 3 0 3 1,2,2
24974:  a 3 0 3 1,2
% SZS status Timeout for LAT162-1.p
NO CLASH, using fixed ground order
24990: Facts:
24990:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24990:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24990:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24990:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24990:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24990:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24990:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24990:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24990:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
24990: Goal:
24990:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24990: Order:
24990:   nrkbo
24990: Leaf order:
24990:  join 17 2 4 0,2,2
24990:  meet 20 2 6 0,2
24990:  c 3 0 3 2,2,2,2
24990:  b 3 0 3 1,2,2
24990:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24991: Facts:
24991:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24991:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24991:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24991:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24991:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24991:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24991:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24991:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24991:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
24991: Goal:
24991:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24991: Order:
24991:   kbo
24991: Leaf order:
24991:  join 17 2 4 0,2,2
24991:  meet 20 2 6 0,2
24991:  c 3 0 3 2,2,2,2
24991:  b 3 0 3 1,2,2
24991:  a 6 0 6 1,2
NO CLASH, using fixed ground order
24992: Facts:
24992:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24992:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24992:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24992:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24992:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24992:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24992:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24992:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24992:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
24992: Goal:
24992:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
24992: Order:
24992:   lpo
24992: Leaf order:
24992:  join 17 2 4 0,2,2
24992:  meet 20 2 6 0,2
24992:  c 3 0 3 2,2,2,2
24992:  b 3 0 3 1,2,2
24992:  a 6 0 6 1,2
% SZS status Timeout for LAT164-1.p
NO CLASH, using fixed ground order
25019: Facts:
NO CLASH, using fixed ground order
25020: Facts:
25020:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25020:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25020:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25020:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25020:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25020:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25020:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25020:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25020:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
25020: Goal:
25020:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
25020: Order:
25020:   kbo
25020: Leaf order:
25020:  meet 17 2 4 0,2
25020:  join 19 2 4 0,2,2
25020:  c 2 0 2 2,2,2
25020:  b 4 0 4 1,2,2
25020:  a 4 0 4 1,2
25019:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25019:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25019:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25019:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25019:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25019:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25019:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
NO CLASH, using fixed ground order
25019:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25019:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
25019: Goal:
25019:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
25019: Order:
25019:   nrkbo
25019: Leaf order:
25019:  meet 17 2 4 0,2
25019:  join 19 2 4 0,2,2
25019:  c 2 0 2 2,2,2
25019:  b 4 0 4 1,2,2
25019:  a 4 0 4 1,2
25021: Facts:
25021:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25021:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25021:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25021:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25021:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25021:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25021:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25021:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25021:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
25021: Goal:
25021:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
25021: Order:
25021:   lpo
25021: Leaf order:
25021:  meet 17 2 4 0,2
25021:  join 19 2 4 0,2,2
25021:  c 2 0 2 2,2,2
25021:  b 4 0 4 1,2,2
25021:  a 4 0 4 1,2
% SZS status Timeout for LAT169-1.p
NO CLASH, using fixed ground order
25071: Facts:
25071:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25071:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25071:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25071:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25071:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25071:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25071:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25071:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25071:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
25071: Goal:
25071:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25071: Order:
25071:   nrkbo
25071: Leaf order:
25071:  join 18 2 4 0,2,2
25071:  meet 19 2 6 0,2
25071:  c 3 0 3 2,2,2,2
25071:  b 3 0 3 1,2,2
25071:  a 6 0 6 1,2
NO CLASH, using fixed ground order
25072: Facts:
25072:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25072:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25072:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25072:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25072:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25072:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25072:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25072:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25072:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
25072: Goal:
25072:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25072: Order:
25072:   kbo
25072: Leaf order:
25072:  join 18 2 4 0,2,2
25072:  meet 19 2 6 0,2
25072:  c 3 0 3 2,2,2,2
25072:  b 3 0 3 1,2,2
25072:  a 6 0 6 1,2
NO CLASH, using fixed ground order
25073: Facts:
25073:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25073:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25073:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25073:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25073:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25073:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25073:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25073:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25073:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
25073: Goal:
25073:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25073: Order:
25073:   lpo
25073: Leaf order:
25073:  join 18 2 4 0,2,2
25073:  meet 19 2 6 0,2
25073:  c 3 0 3 2,2,2,2
25073:  b 3 0 3 1,2,2
25073:  a 6 0 6 1,2
% SZS status Timeout for LAT174-1.p
NO CLASH, using fixed ground order
25101: Facts:
25101:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25101:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25101:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25101:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25101:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25101:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25101:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25101:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25101:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25101:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25101:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25101:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25101:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25101:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25101:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25101: Goal:
25101:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25101: Order:
25101:   nrkbo
25101: Leaf order:
25101:  commutator 1 2 0 
25101:  associator 1 3 0 
25101:  additive_inverse 6 1 0 
25101:  add 16 2 0 
25101:  additive_identity 8 0 0 
25101:  multiply 28 2 6 0,2
25101:  cy 2 0 2 1,2,2,2
25101:  cx 4 0 4 1,2,2
25101:  cz 2 0 2 1,2
NO CLASH, using fixed ground order
25102: Facts:
25102:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25102:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25102:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25102:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25102:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25102:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25102:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25102:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25102:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25102:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
NO CLASH, using fixed ground order
25103: Facts:
25103:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25103:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25103:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25103:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25103:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25103:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25103:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25103:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25103:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25102:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25102:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25102:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25102:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25102:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25102: Goal:
25102:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25102: Order:
25102:   kbo
25102: Leaf order:
25102:  commutator 1 2 0 
25102:  associator 1 3 0 
25102:  additive_inverse 6 1 0 
25102:  add 16 2 0 
25102:  additive_identity 8 0 0 
25102:  multiply 28 2 6 0,2
25102:  cy 2 0 2 1,2,2,2
25102:  cx 4 0 4 1,2,2
25102:  cz 2 0 2 1,2
25103:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25103:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25103:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25103:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25103:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25103:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25103: Goal:
25103:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25103: Order:
25103:   lpo
25103: Leaf order:
25103:  commutator 1 2 0 
25103:  associator 1 3 0 
25103:  additive_inverse 6 1 0 
25103:  add 16 2 0 
25103:  additive_identity 8 0 0 
25103:  multiply 28 2 6 0,2
25103:  cy 2 0 2 1,2,2,2
25103:  cx 4 0 4 1,2,2
25103:  cz 2 0 2 1,2
% SZS status Timeout for RNG027-5.p
NO CLASH, using fixed ground order
25119: Facts:
25119:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25119:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25119:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25119:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25119:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25119:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25119:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25119:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25119:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25119:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25119:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25119:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25119:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25119:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25119:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25119:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25119:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25119:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25119:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25119:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25119:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25119:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25119: Goal:
25119:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25119: Order:
25119:   nrkbo
25119: Leaf order:
25119:  commutator 1 2 0 
25119:  associator 1 3 0 
25119:  additive_inverse 22 1 0 
25119:  add 24 2 0 
25119:  additive_identity 8 0 0 
25119:  multiply 46 2 6 0,2
25119:  cy 2 0 2 1,2,2,2
25119:  cx 4 0 4 1,2,2
25119:  cz 2 0 2 1,2
NO CLASH, using fixed ground order
25120: Facts:
25120:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25120:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25120:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25120:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25120:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25120:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25120:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25120:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25120:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25120:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25120:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25120:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25120:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25120:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25120:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25120:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25120:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25120:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25120:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25120:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25120:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25120:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25120: Goal:
25120:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25120: Order:
25120:   kbo
25120: Leaf order:
25120:  commutator 1 2 0 
25120:  associator 1 3 0 
25120:  additive_inverse 22 1 0 
25120:  add 24 2 0 
25120:  additive_identity 8 0 0 
25120:  multiply 46 2 6 0,2
25120:  cy 2 0 2 1,2,2,2
25120:  cx 4 0 4 1,2,2
25120:  cz 2 0 2 1,2
NO CLASH, using fixed ground order
25121: Facts:
25121:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25121:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25121:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25121:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25121:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25121:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25121:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25121:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25121:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25121:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25121:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25121:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25121:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25121:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25121:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25121:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25121:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25121:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25121:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25121:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25121:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25121:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25121: Goal:
25121:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
25121: Order:
25121:   lpo
25121: Leaf order:
25121:  commutator 1 2 0 
25121:  associator 1 3 0 
25121:  additive_inverse 22 1 0 
25121:  add 24 2 0 
25121:  additive_identity 8 0 0 
25121:  multiply 46 2 6 0,2
25121:  cy 2 0 2 1,2,2,2
25121:  cx 4 0 4 1,2,2
25121:  cz 2 0 2 1,2
% SZS status Timeout for RNG027-7.p
NO CLASH, using fixed ground order
25148: Facts:
25148:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25148:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25148:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25148:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25148:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25148:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25148:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25148:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25148:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25148:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25148:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25148:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25148:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25148:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25148:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25148: Goal:
25148:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25148: Order:
25148:   nrkbo
25148: Leaf order:
25148:  commutator 1 2 0 
25148:  additive_inverse 6 1 0 
25148:  add 16 2 0 
25148:  additive_identity 8 0 0 
25148:  associator 3 3 2 0,2
25148:  z 2 0 2 3,2
25148:  multiply 24 2 2 0,2,2
25148:  y 2 0 2 2,2,2
25148:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25149: Facts:
25149:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25149:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25149:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25149:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25149:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25149:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25149:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25149:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25149:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25149:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25149:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25149:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25149:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25149:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25149:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25149: Goal:
25149:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25149: Order:
25149:   kbo
25149: Leaf order:
25149:  commutator 1 2 0 
25149:  additive_inverse 6 1 0 
25149:  add 16 2 0 
25149:  additive_identity 8 0 0 
25149:  associator 3 3 2 0,2
25149:  z 2 0 2 3,2
25149:  multiply 24 2 2 0,2,2
25149:  y 2 0 2 2,2,2
25149:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25150: Facts:
25150:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25150:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25150:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25150:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25150:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25150:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25150:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25150:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25150:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25150:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25150:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25150:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25150:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25150:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25150:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25150: Goal:
25150:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25150: Order:
25150:   lpo
25150: Leaf order:
25150:  commutator 1 2 0 
25150:  additive_inverse 6 1 0 
25150:  add 16 2 0 
25150:  additive_identity 8 0 0 
25150:  associator 3 3 2 0,2
25150:  z 2 0 2 3,2
25150:  multiply 24 2 2 0,2,2
25150:  y 2 0 2 2,2,2
25150:  x 4 0 4 1,2
% SZS status Timeout for RNG027-8.p
NO CLASH, using fixed ground order
25166: Facts:
25166:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25166:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25166:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25166:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25166:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25166:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25166:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25166:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25166:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25166:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25166:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25166:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25166:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25166:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25166:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25166:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25166:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25166:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25166:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25166:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25166:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25166:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25166: Goal:
25166:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25166: Order:
25166:   nrkbo
25166: Leaf order:
25166:  commutator 1 2 0 
25166:  additive_inverse 22 1 0 
25166:  add 24 2 0 
25166:  additive_identity 8 0 0 
25166:  associator 3 3 2 0,2
25166:  z 2 0 2 3,2
25166:  multiply 42 2 2 0,2,2
25166:  y 2 0 2 2,2,2
25166:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25168: Facts:
25168:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25168:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25168:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25168:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25168:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25168:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25168:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25168:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25168:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25168:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25168:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25168:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25168:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25168:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25168:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25168:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25168:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25168:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25168:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25168:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25168:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25168:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25168: Goal:
25168:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25168: Order:
25168:   lpo
25168: Leaf order:
25168:  commutator 1 2 0 
25168:  additive_inverse 22 1 0 
25168:  add 24 2 0 
25168:  additive_identity 8 0 0 
25168:  associator 3 3 2 0,2
25168:  z 2 0 2 3,2
25168:  multiply 42 2 2 0,2,2
25168:  y 2 0 2 2,2,2
25168:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25167: Facts:
25167:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25167:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25167:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25167:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25167:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25167:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25167:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25167:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25167:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25167:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25167:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25167:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25167:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25167:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25167:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25167:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25167:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25167:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25167:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25167:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25167:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25167:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25167: Goal:
25167:  Id :   1, {_}:
          associator x (multiply x y) z =<= multiply (associator x y z) x
          [] by prove_right_moufang
25167: Order:
25167:   kbo
25167: Leaf order:
25167:  commutator 1 2 0 
25167:  additive_inverse 22 1 0 
25167:  add 24 2 0 
25167:  additive_identity 8 0 0 
25167:  associator 3 3 2 0,2
25167:  z 2 0 2 3,2
25167:  multiply 42 2 2 0,2,2
25167:  y 2 0 2 2,2,2
25167:  x 4 0 4 1,2
% SZS status Timeout for RNG027-9.p
NO CLASH, using fixed ground order
25195: Facts:
25195:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25195:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25195:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25195:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25195:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25195:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25195:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25195:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25195:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25195:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25195:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25195:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25195:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25195:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25195:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25195: Goal:
25195:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25195: Order:
25195:   nrkbo
25195: Leaf order:
25195:  commutator 1 2 0 
25195:  associator 1 3 0 
25195:  additive_inverse 6 1 0 
25195:  add 16 2 0 
25195:  additive_identity 8 0 0 
25195:  cz 2 0 2 2,2
25195:  multiply 28 2 6 0,2
25195:  cy 2 0 2 1,2,1,2
25195:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25196: Facts:
25196:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25196:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25196:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25196:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25196:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25196:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25196:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25196:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25196:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25196:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25196:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25196:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25196:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25196:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25196:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25196: Goal:
25196:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25196: Order:
25196:   kbo
25196: Leaf order:
25196:  commutator 1 2 0 
25196:  associator 1 3 0 
25196:  additive_inverse 6 1 0 
25196:  add 16 2 0 
25196:  additive_identity 8 0 0 
25196:  cz 2 0 2 2,2
25196:  multiply 28 2 6 0,2
25196:  cy 2 0 2 1,2,1,2
25196:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25197: Facts:
25197:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25197:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25197:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25197:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25197:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25197:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25197:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25197:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25197:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25197:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25197:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25197:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25197:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25197:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25197:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25197: Goal:
25197:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25197: Order:
25197:   lpo
25197: Leaf order:
25197:  commutator 1 2 0 
25197:  associator 1 3 0 
25197:  additive_inverse 6 1 0 
25197:  add 16 2 0 
25197:  additive_identity 8 0 0 
25197:  cz 2 0 2 2,2
25197:  multiply 28 2 6 0,2
25197:  cy 2 0 2 1,2,1,2
25197:  cx 4 0 4 1,1,2
% SZS status Timeout for RNG028-5.p
NO CLASH, using fixed ground order
25213: Facts:
25213:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25213:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25213:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25213:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25213:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25213:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25213:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25213:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25213:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25213:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25213:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25213:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25213:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25213:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25213:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25213:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25213:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25213:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25213:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25213:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25213:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25213:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25213: Goal:
25213:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25213: Order:
25213:   nrkbo
25213: Leaf order:
25213:  commutator 1 2 0 
25213:  associator 1 3 0 
25213:  additive_inverse 22 1 0 
25213:  add 24 2 0 
25213:  additive_identity 8 0 0 
25213:  cz 2 0 2 2,2
25213:  multiply 46 2 6 0,2
25213:  cy 2 0 2 1,2,1,2
25213:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25214: Facts:
25214:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25214:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25214:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25214:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25214:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25214:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25214:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25214:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25214:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25214:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25214:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25214:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25214:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25214:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25214:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25214:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25214:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25214:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25214:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25214:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25214:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25214:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25214: Goal:
25214:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25214: Order:
25214:   kbo
25214: Leaf order:
25214:  commutator 1 2 0 
25214:  associator 1 3 0 
25214:  additive_inverse 22 1 0 
25214:  add 24 2 0 
25214:  additive_identity 8 0 0 
25214:  cz 2 0 2 2,2
25214:  multiply 46 2 6 0,2
25214:  cy 2 0 2 1,2,1,2
25214:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25215: Facts:
25215:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25215:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25215:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25215:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25215:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25215:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25215:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25215:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25215:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25215:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25215:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25215:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25215:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25215:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25215:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25215:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25215:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25215:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25215:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25215:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25215:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25215:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25215: Goal:
25215:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
25215: Order:
25215:   lpo
25215: Leaf order:
25215:  commutator 1 2 0 
25215:  associator 1 3 0 
25215:  additive_inverse 22 1 0 
25215:  add 24 2 0 
25215:  additive_identity 8 0 0 
25215:  cz 2 0 2 2,2
25215:  multiply 46 2 6 0,2
25215:  cy 2 0 2 1,2,1,2
25215:  cx 4 0 4 1,1,2
% SZS status Timeout for RNG028-7.p
NO CLASH, using fixed ground order
25251: Facts:
25251:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25251:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25251:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25251:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25251:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25251:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25251:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25251:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25251:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25251:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25251:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25251:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25251:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25251:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25251:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25251: Goal:
25251:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25251: Order:
25251:   nrkbo
25251: Leaf order:
25251:  commutator 1 2 0 
25251:  additive_inverse 6 1 0 
25251:  add 16 2 0 
25251:  additive_identity 8 0 0 
25251:  associator 3 3 2 0,2
25251:  z 2 0 2 3,2
25251:  multiply 24 2 2 0,2,2
25251:  y 2 0 2 1,2,2
25251:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25252: Facts:
25252:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25252:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25252:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25252:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25252:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25252:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25252:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25252:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25252:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25252:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25252:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25252:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25252:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25252:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25252:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25252: Goal:
25252:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25252: Order:
25252:   kbo
25252: Leaf order:
25252:  commutator 1 2 0 
25252:  additive_inverse 6 1 0 
25252:  add 16 2 0 
25252:  additive_identity 8 0 0 
25252:  associator 3 3 2 0,2
25252:  z 2 0 2 3,2
25252:  multiply 24 2 2 0,2,2
25252:  y 2 0 2 1,2,2
25252:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25253: Facts:
25253:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25253:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25253:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25253:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25253:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25253:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25253:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25253:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25253:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25253:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25253:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25253:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25253:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25253:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25253:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25253: Goal:
25253:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25253: Order:
25253:   lpo
25253: Leaf order:
25253:  commutator 1 2 0 
25253:  additive_inverse 6 1 0 
25253:  add 16 2 0 
25253:  additive_identity 8 0 0 
25253:  associator 3 3 2 0,2
25253:  z 2 0 2 3,2
25253:  multiply 24 2 2 0,2,2
25253:  y 2 0 2 1,2,2
25253:  x 4 0 4 1,2
% SZS status Timeout for RNG028-8.p
NO CLASH, using fixed ground order
25289: Facts:
25289:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25289:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25289:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25289:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25289:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25289:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25289:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25289:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25289:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25289:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25289:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25289:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25289:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25289:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25289:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25289:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25289:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25289:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25289:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25289:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25289:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25289:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25289: Goal:
25289:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25289: Order:
25289:   nrkbo
25289: Leaf order:
25289:  commutator 1 2 0 
25289:  additive_inverse 22 1 0 
25289:  add 24 2 0 
25289:  additive_identity 8 0 0 
25289:  associator 3 3 2 0,2
25289:  z 2 0 2 3,2
25289:  multiply 42 2 2 0,2,2
25289:  y 2 0 2 1,2,2
25289:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25290: Facts:
25290:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25290:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25290:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25290:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25290:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25290:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25290:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25290:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25290:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25290:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25290:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25290:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25290:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25290:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25290:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25290:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25290:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25290:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25290:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25290:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25290:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25290:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25290: Goal:
25290:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25290: Order:
25290:   kbo
25290: Leaf order:
25290:  commutator 1 2 0 
25290:  additive_inverse 22 1 0 
25290:  add 24 2 0 
25290:  additive_identity 8 0 0 
25290:  associator 3 3 2 0,2
25290:  z 2 0 2 3,2
25290:  multiply 42 2 2 0,2,2
25290:  y 2 0 2 1,2,2
25290:  x 4 0 4 1,2
NO CLASH, using fixed ground order
25291: Facts:
25291:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25291:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25291:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25291:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25291:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25291:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25291:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25291:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25291:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25291:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25291:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25291:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25291:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25291:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25291:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25291:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25291:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25291:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25291:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25291:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25291:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25291:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25291: Goal:
25291:  Id :   1, {_}:
          associator x (multiply y x) z =<= multiply x (associator x y z)
          [] by prove_left_moufang
25291: Order:
25291:   lpo
25291: Leaf order:
25291:  commutator 1 2 0 
25291:  additive_inverse 22 1 0 
25291:  add 24 2 0 
25291:  additive_identity 8 0 0 
25291:  associator 3 3 2 0,2
25291:  z 2 0 2 3,2
25291:  multiply 42 2 2 0,2,2
25291:  y 2 0 2 1,2,2
25291:  x 4 0 4 1,2
% SZS status Timeout for RNG028-9.p
NO CLASH, using fixed ground order
25318: Facts:
25318:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25318:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25318:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25318:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25318:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25318:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25318:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25318:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25318:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25318:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25318:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25318:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25318:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25318:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25318:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25318: Goal:
25318:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
25318: Order:
25318:   nrkbo
25318: Leaf order:
25318:  commutator 1 2 0 
25318:  associator 1 3 0 
25318:  additive_inverse 6 1 0 
25318:  add 16 2 0 
25318:  additive_identity 8 0 0 
25318:  cz 2 0 2 1,2,2
25318:  multiply 28 2 6 0,2
25318:  cy 2 0 2 2,1,2
25318:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25320: Facts:
25320:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25320:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25320:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25320:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25320:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25320:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25320:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25320:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25320:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25320:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25320:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25320:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25320:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25320:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25320:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25320: Goal:
25320:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
25320: Order:
25320:   lpo
25320: Leaf order:
25320:  commutator 1 2 0 
25320:  associator 1 3 0 
25320:  additive_inverse 6 1 0 
25320:  add 16 2 0 
25320:  additive_identity 8 0 0 
25320:  cz 2 0 2 1,2,2
25320:  multiply 28 2 6 0,2
25320:  cy 2 0 2 2,1,2
25320:  cx 4 0 4 1,1,2
NO CLASH, using fixed ground order
25319: Facts:
25319:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25319:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25319:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25319:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25319:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25319:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25319:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25319:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25319:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25319:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25319:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25319:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25319:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25319:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25319:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25319: Goal:
25319:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
25319: Order:
25319:   kbo
25319: Leaf order:
25319:  commutator 1 2 0 
25319:  associator 1 3 0 
25319:  additive_inverse 6 1 0 
25319:  add 16 2 0 
25319:  additive_identity 8 0 0 
25319:  cz 2 0 2 1,2,2
25319:  multiply 28 2 6 0,2
25319:  cy 2 0 2 2,1,2
25319:  cx 4 0 4 1,1,2
% SZS status Timeout for RNG029-5.p
NO CLASH, using fixed ground order
25337: Facts:
25337:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25337:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25337:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25337:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25337:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25337:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25337:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25337:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25337:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25337:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25337:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25337:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25337:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25337:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25337:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25337: Goal:
25337:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25337: Order:
25337:   nrkbo
25337: Leaf order:
25337:  commutator 1 2 0 
25337:  associator 1 3 0 
25337:  additive_inverse 6 1 0 
25337:  add 16 2 0 
25337:  additive_identity 8 0 0 
25337:  z 2 0 2 1,2,2
25337:  multiply 28 2 6 0,2
25337:  y 2 0 2 2,1,2
25337:  x 4 0 4 1,1,2
NO CLASH, using fixed ground order
25338: Facts:
25338:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25338:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25338:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25338:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25338:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25338:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25338:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25338:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25338:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25338:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25338:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25338:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25338:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25338:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25338:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25338: Goal:
25338:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25338: Order:
25338:   kbo
25338: Leaf order:
25338:  commutator 1 2 0 
25338:  associator 1 3 0 
25338:  additive_inverse 6 1 0 
25338:  add 16 2 0 
25338:  additive_identity 8 0 0 
25338:  z 2 0 2 1,2,2
25338:  multiply 28 2 6 0,2
25338:  y 2 0 2 2,1,2
25338:  x 4 0 4 1,1,2
NO CLASH, using fixed ground order
25339: Facts:
25339:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25339:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25339:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25339:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25339:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25339:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25339:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25339:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25339:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25339:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25339:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25339:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25339:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25339:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25339:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25339: Goal:
25339:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25339: Order:
25339:   lpo
25339: Leaf order:
25339:  commutator 1 2 0 
25339:  associator 1 3 0 
25339:  additive_inverse 6 1 0 
25339:  add 16 2 0 
25339:  additive_identity 8 0 0 
25339:  z 2 0 2 1,2,2
25339:  multiply 28 2 6 0,2
25339:  y 2 0 2 2,1,2
25339:  x 4 0 4 1,1,2
% SZS status Timeout for RNG029-6.p
NO CLASH, using fixed ground order
25367: Facts:
25367:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25367:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25367:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25367:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25367:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25367:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25367:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25367:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25367:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25367:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25367:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25367:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25367:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25367:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25367:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25367:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25367:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25367:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25367:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25367:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25367:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25367:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25367: Goal:
25367:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25367: Order:
25367:   nrkbo
25367: Leaf order:
25367:  commutator 1 2 0 
25367:  associator 1 3 0 
25367:  additive_inverse 22 1 0 
25367:  add 24 2 0 
25367:  additive_identity 8 0 0 
25367:  z 2 0 2 1,2,2
25367:  multiply 46 2 6 0,2
25367:  y 2 0 2 2,1,2
25367:  x 4 0 4 1,1,2
NO CLASH, using fixed ground order
25368: Facts:
25368:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25368:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25368:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
NO CLASH, using fixed ground order
25369: Facts:
25369:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25369:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25369:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25369:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25369:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25369:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25369:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25369:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25369:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25369:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25369:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25369:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25369:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25369:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25369:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25369:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25369:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25369:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25369:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25369:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25369:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25369:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25369: Goal:
25369:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25369: Order:
25369:   lpo
25369: Leaf order:
25369:  commutator 1 2 0 
25369:  associator 1 3 0 
25369:  additive_inverse 22 1 0 
25369:  add 24 2 0 
25369:  additive_identity 8 0 0 
25369:  z 2 0 2 1,2,2
25369:  multiply 46 2 6 0,2
25369:  y 2 0 2 2,1,2
25369:  x 4 0 4 1,1,2
25368:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25368:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25368:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25368:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25368:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25368:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25368:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25368:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25368:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25368:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25368:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25368:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25368:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25368:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25368:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25368:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25368:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25368:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25368:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25368: Goal:
25368:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
25368: Order:
25368:   kbo
25368: Leaf order:
25368:  commutator 1 2 0 
25368:  associator 1 3 0 
25368:  additive_inverse 22 1 0 
25368:  add 24 2 0 
25368:  additive_identity 8 0 0 
25368:  z 2 0 2 1,2,2
25368:  multiply 46 2 6 0,2
25368:  y 2 0 2 2,1,2
25368:  x 4 0 4 1,1,2
% SZS status Timeout for RNG029-7.p
NO CLASH, using fixed ground order
25651: Facts:
25651:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25651:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25651:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25651:  Id :   5, {_}: add c d =>= d [] by absorbtion
25651: Goal:
NO CLASH, using fixed ground order
25652: Facts:
25652:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25652:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25652:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25652:  Id :   5, {_}: add c d =>= d [] by absorbtion
25652: Goal:
25652:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25652: Order:
25652:   kbo
25652: Leaf order:
25652:  d 2 0 0 
25652:  c 1 0 0 
25652:  add 13 2 3 0,2
25652:  negate 9 1 5 0,1,2
25652:  b 3 0 3 1,2,1,1,2
25652:  a 2 0 2 1,1,1,2
25651:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25651: Order:
25651:   nrkbo
25651: Leaf order:
25651:  d 2 0 0 
25651:  c 1 0 0 
25651:  add 13 2 3 0,2
25651:  negate 9 1 5 0,1,2
25651:  b 3 0 3 1,2,1,1,2
25651:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
25653: Facts:
25653:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25653:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25653:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25653:  Id :   5, {_}: add c d =>= d [] by absorbtion
25653: Goal:
25653:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25653: Order:
25653:   lpo
25653: Leaf order:
25653:  d 2 0 0 
25653:  c 1 0 0 
25653:  add 13 2 3 0,2
25653:  negate 9 1 5 0,1,2
25653:  b 3 0 3 1,2,1,1,2
25653:  a 2 0 2 1,1,1,2
% SZS status Timeout for ROB006-1.p
NO CLASH, using fixed ground order
25684: Facts:
25684:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
25684:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
25684:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
25684:  Id :   5, {_}: add c d =>= d [] by absorbtion
25684: Goal:
25684:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
25684: Order:
25684:   nrkbo
25684: Leaf order:
25684:  d 2 0 0 
25684:  c 1 0 0 
25684:  negate 4 1 0 
25684:  add 11 2 1 0,2
NO CLASH, using fixed ground order
25685: Facts:
25685:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
25685:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
25685:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
25685:  Id :   5, {_}: add c d =>= d [] by absorbtion
25685: Goal:
25685:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
25685: Order:
25685:   kbo
25685: Leaf order:
25685:  d 2 0 0 
25685:  c 1 0 0 
25685:  negate 4 1 0 
25685:  add 11 2 1 0,2
NO CLASH, using fixed ground order
25686: Facts:
25686:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
25686:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
25686:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
25686:  Id :   5, {_}: add c d =>= d [] by absorbtion
25686: Goal:
25686:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
25686: Order:
25686:   lpo
25686: Leaf order:
25686:  d 2 0 0 
25686:  c 1 0 0 
25686:  negate 4 1 0 
25686:  add 11 2 1 0,2
% SZS status Timeout for ROB006-2.p
NO CLASH, using fixed ground order
25702: Facts:
25702:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25702:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25702:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25702:  Id :   5, {_}: add c d =>= c [] by identity_constant
25702: Goal:
25702:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25702: Order:
25702:   nrkbo
25702: Leaf order:
25702:  d 1 0 0 
25702:  c 2 0 0 
25702:  add 13 2 3 0,2
25702:  negate 9 1 5 0,1,2
25702:  b 3 0 3 1,2,1,1,2
25702:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
25704: Facts:
25704:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25704:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25704:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25704:  Id :   5, {_}: add c d =>= c [] by identity_constant
25704: Goal:
25704:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25704: Order:
25704:   lpo
25704: Leaf order:
25704:  d 1 0 0 
25704:  c 2 0 0 
25704:  add 13 2 3 0,2
25704:  negate 9 1 5 0,1,2
25704:  b 3 0 3 1,2,1,1,2
25704:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
25703: Facts:
25703:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
25703:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
25703:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
25703:  Id :   5, {_}: add c d =>= c [] by identity_constant
25703: Goal:
25703:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
25703: Order:
25703:   kbo
25703: Leaf order:
25703:  d 1 0 0 
25703:  c 2 0 0 
25703:  add 13 2 3 0,2
25703:  negate 9 1 5 0,1,2
25703:  b 3 0 3 1,2,1,1,2
25703:  a 2 0 2 1,1,1,2
% SZS status Timeout for ROB026-1.p
NO CLASH, using fixed ground order
25731: Facts:
25731:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25731:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25731:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25731:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25731:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25731:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25731:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25731:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25731:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25731:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25731:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25731:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25731:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25731:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25731:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25731: Goal:
25731:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =<=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
25731: Order:
25731:   nrkbo
25731: Leaf order:
25731:  inverse 1 1 0 
25731:  multiply 18 2 0 
25731:  identity 2 0 0 
25731:  least_upper_bound 16 2 3 0,2
25731:  greatest_lower_bound 15 2 2 0,2,2
25731:  c 2 0 2 2,2,2
25731:  b 2 0 2 1,2,2
25731:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25732: Facts:
25732:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25732:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25732:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25732:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25732:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25732:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25732:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25732:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25732:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25732:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25732:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25732:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25732:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25732:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25732:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25732: Goal:
25732:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =<=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
25732: Order:
25732:   kbo
25732: Leaf order:
25732:  inverse 1 1 0 
25732:  multiply 18 2 0 
25732:  identity 2 0 0 
25732:  least_upper_bound 16 2 3 0,2
25732:  greatest_lower_bound 15 2 2 0,2,2
25732:  c 2 0 2 2,2,2
25732:  b 2 0 2 1,2,2
25732:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25733: Facts:
25733:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25733:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25733:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25733:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25733:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25733:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25733:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25733:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25733:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25733:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25733:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25733:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25733:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25733:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25733:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25733: Goal:
25733:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =<=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
25733: Order:
25733:   lpo
25733: Leaf order:
25733:  inverse 1 1 0 
25733:  multiply 18 2 0 
25733:  identity 2 0 0 
25733:  least_upper_bound 16 2 3 0,2
25733:  greatest_lower_bound 15 2 2 0,2,2
25733:  c 2 0 2 2,2,2
25733:  b 2 0 2 1,2,2
25733:  a 3 0 3 1,2
% SZS status Timeout for GRP164-1.p
NO CLASH, using fixed ground order
25749: Facts:
25749:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25749:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25749:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25749:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25749:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25749:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25749:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25749:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25749:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25749:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25749:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25749:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25749:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25749:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25749:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25749: Goal:
25749:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =<=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
25749: Order:
25749:   nrkbo
25749: Leaf order:
25749:  inverse 1 1 0 
25749:  multiply 18 2 0 
25749:  identity 2 0 0 
25749:  greatest_lower_bound 16 2 3 0,2
25749:  least_upper_bound 15 2 2 0,2,2
25749:  c 2 0 2 2,2,2
25749:  b 2 0 2 1,2,2
25749:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25750: Facts:
25750:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25750:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25750:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25750:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25750:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25750:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25750:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25750:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25750:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25750:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25750:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
NO CLASH, using fixed ground order
25751: Facts:
25751:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25751:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25751:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25751:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25751:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25751:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25751:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25751:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25751:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25751:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25751:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25751:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25751:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25751:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25751:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25751: Goal:
25751:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =<=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
25751: Order:
25751:   lpo
25751: Leaf order:
25751:  inverse 1 1 0 
25751:  multiply 18 2 0 
25751:  identity 2 0 0 
25751:  greatest_lower_bound 16 2 3 0,2
25751:  least_upper_bound 15 2 2 0,2,2
25751:  c 2 0 2 2,2,2
25751:  b 2 0 2 1,2,2
25751:  a 3 0 3 1,2
25750:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25750:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25750:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25750:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25750: Goal:
25750:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =<=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
25750: Order:
25750:   kbo
25750: Leaf order:
25750:  inverse 1 1 0 
25750:  multiply 18 2 0 
25750:  identity 2 0 0 
25750:  greatest_lower_bound 16 2 3 0,2
25750:  least_upper_bound 15 2 2 0,2,2
25750:  c 2 0 2 2,2,2
25750:  b 2 0 2 1,2,2
25750:  a 3 0 3 1,2
% SZS status Timeout for GRP164-2.p
NO CLASH, using fixed ground order
25782: Facts:
25782:  Id :   2, {_}:
          multiply (multiply ?2 ?3) ?4 =?= multiply ?2 (multiply ?3 ?4)
          [4, 3, 2] by associativity_of_multiply ?2 ?3 ?4
25782:  Id :   3, {_}:
          multiply ?6 (multiply ?7 (multiply ?7 ?7))
          =?=
          multiply ?7 (multiply ?7 (multiply ?7 ?6))
          [7, 6] by condition ?6 ?7
25782: Goal:
25782:  Id :   1, {_}:
          multiply a
            (multiply b
              (multiply a
                (multiply b
                  (multiply a
                    (multiply b
                      (multiply a
                        (multiply b
                          (multiply a
                            (multiply b
                              (multiply a
                                (multiply b
                                  (multiply a
                                    (multiply b
                                      (multiply a (multiply b (multiply a b))))))))))))))))
          =<=
          multiply a
            (multiply a
              (multiply a
                (multiply a
                  (multiply a
                    (multiply a
                      (multiply a
                        (multiply a
                          (multiply a
                            (multiply b
                              (multiply b
                                (multiply b
                                  (multiply b
                                    (multiply b
                                      (multiply b (multiply b (multiply b b))))))))))))))))
          [] by prove_this
25782: Order:
25782:   nrkbo
25782: Leaf order:
25782:  multiply 44 2 34 0,2
25782:  b 18 0 18 1,2,2
25782:  a 18 0 18 1,2
NO CLASH, using fixed ground order
25783: Facts:
25783:  Id :   2, {_}:
          multiply (multiply ?2 ?3) ?4 =>= multiply ?2 (multiply ?3 ?4)
          [4, 3, 2] by associativity_of_multiply ?2 ?3 ?4
25783:  Id :   3, {_}:
          multiply ?6 (multiply ?7 (multiply ?7 ?7))
          =?=
          multiply ?7 (multiply ?7 (multiply ?7 ?6))
          [7, 6] by condition ?6 ?7
25783: Goal:
25783:  Id :   1, {_}:
          multiply a
            (multiply b
              (multiply a
                (multiply b
                  (multiply a
                    (multiply b
                      (multiply a
                        (multiply b
                          (multiply a
                            (multiply b
                              (multiply a
                                (multiply b
                                  (multiply a
                                    (multiply b
                                      (multiply a (multiply b (multiply a b))))))))))))))))
          =?=
          multiply a
            (multiply a
              (multiply a
                (multiply a
                  (multiply a
                    (multiply a
                      (multiply a
                        (multiply a
                          (multiply a
                            (multiply b
                              (multiply b
                                (multiply b
                                  (multiply b
                                    (multiply b
                                      (multiply b (multiply b (multiply b b))))))))))))))))
          [] by prove_this
25783: Order:
25783:   kbo
25783: Leaf order:
25783:  multiply 44 2 34 0,2
25783:  b 18 0 18 1,2,2
25783:  a 18 0 18 1,2
NO CLASH, using fixed ground order
% SZS status Timeout for GRP196-1.p
NO CLASH, using fixed ground order
25809: Facts:
25809:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
25809: Goal:
25809:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25809: Order:
25809:   nrkbo
25809: Leaf order:
25809:  f 18 2 8 0,2
25809:  c 3 0 3 2,1,2,2
25809:  b 4 0 4 1,1,2,2
25809:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25810: Facts:
25810:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
25810: Goal:
25810:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25810: Order:
25810:   kbo
25810: Leaf order:
25810:  f 18 2 8 0,2
25810:  c 3 0 3 2,1,2,2
25810:  b 4 0 4 1,1,2,2
25810:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25811: Facts:
25811:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
25811: Goal:
25811:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25811: Order:
25811:   lpo
25811: Leaf order:
25811:  f 18 2 8 0,2
25811:  c 3 0 3 2,1,2,2
25811:  b 4 0 4 1,1,2,2
25811:  a 3 0 3 1,2
% SZS status Timeout for LAT070-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
25843: Facts:
25843:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25843:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25843:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25843:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25843:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25843:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25843:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25843:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25843:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
25843: Goal:
25843:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25843: Order:
25843:   kbo
25843: Leaf order:
25843:  join 17 2 4 0,2,2
25843:  meet 21 2 6 0,2
25843:  c 3 0 3 2,2,2,2
25843:  b 3 0 3 1,2,2
25843:  a 6 0 6 1,2
NO CLASH, using fixed ground order
25844: Facts:
25844:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25844:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25844:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25844:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25844:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25844:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25844:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25844:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25844:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
25844: Goal:
25844:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25844: Order:
25844:   lpo
25844: Leaf order:
25844:  join 17 2 4 0,2,2
25844:  meet 21 2 6 0,2
25844:  c 3 0 3 2,2,2,2
25844:  b 3 0 3 1,2,2
25844:  a 6 0 6 1,2
25842: Facts:
25842:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25842:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25842:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25842:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25842:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25842:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25842:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25842:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25842:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
25842: Goal:
25842:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25842: Order:
25842:   nrkbo
25842: Leaf order:
25842:  join 17 2 4 0,2,2
25842:  meet 21 2 6 0,2
25842:  c 3 0 3 2,2,2,2
25842:  b 3 0 3 1,2,2
25842:  a 6 0 6 1,2
% SZS status Timeout for LAT138-1.p
NO CLASH, using fixed ground order
25866: Facts:
25866:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25866:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25866:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25866:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25866:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25866:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25866:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25866:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25866:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25866: Goal:
25866:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
25866: Order:
25866:   nrkbo
25866: Leaf order:
25866:  join 17 2 4 0,2,2
25866:  meet 21 2 6 0,2
25866:  c 4 0 4 2,2,2,2
25866:  b 4 0 4 1,2,2
25866:  a 4 0 4 1,2
NO CLASH, using fixed ground order
25867: Facts:
25867:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25867:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25867:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25867:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25867:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25867:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25867:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25867:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25867:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25867: Goal:
25867:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
25867: Order:
25867:   kbo
25867: Leaf order:
25867:  join 17 2 4 0,2,2
25867:  meet 21 2 6 0,2
25867:  c 4 0 4 2,2,2,2
25867:  b 4 0 4 1,2,2
25867:  a 4 0 4 1,2
NO CLASH, using fixed ground order
25868: Facts:
25868:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25868:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25868:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25868:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25868:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25868:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25868:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25868:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25868:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25868: Goal:
25868:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
25868: Order:
25868:   lpo
25868: Leaf order:
25868:  join 17 2 4 0,2,2
25868:  meet 21 2 6 0,2
25868:  c 4 0 4 2,2,2,2
25868:  b 4 0 4 1,2,2
25868:  a 4 0 4 1,2
% SZS status Timeout for LAT140-1.p
NO CLASH, using fixed ground order
25928: Facts:
25928:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25928:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25928:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25928:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25928:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25928:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25928:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25928:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25928:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
25928: Goal:
NO CLASH, using fixed ground order
25929: Facts:
25929:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25929:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25929:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25929:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25929:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25929:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25929:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25929:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25929:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
25929: Goal:
25929:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25929: Order:
25929:   kbo
25929: Leaf order:
25929:  join 16 2 4 0,2,2
25929:  meet 22 2 6 0,2
25929:  c 3 0 3 2,2,2,2
25929:  b 3 0 3 1,2,2
25929:  a 6 0 6 1,2
25928:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25928: Order:
25928:   nrkbo
25928: Leaf order:
25928:  join 16 2 4 0,2,2
25928:  meet 22 2 6 0,2
25928:  c 3 0 3 2,2,2,2
25928:  b 3 0 3 1,2,2
25928:  a 6 0 6 1,2
NO CLASH, using fixed ground order
25930: Facts:
25930:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25930:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25930:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25930:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25930:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25930:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25930:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25930:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25930:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
25930: Goal:
25930:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25930: Order:
25930:   lpo
25930: Leaf order:
25930:  join 16 2 4 0,2,2
25930:  meet 22 2 6 0,2
25930:  c 3 0 3 2,2,2,2
25930:  b 3 0 3 1,2,2
25930:  a 6 0 6 1,2
% SZS status Timeout for LAT145-1.p
NO CLASH, using fixed ground order
25948: Facts:
25948:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25948:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25948:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25948:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25948:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25948:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25948:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25948:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25948:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
25948: Goal:
25948:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
25948: Order:
25948:   nrkbo
25948: Leaf order:
25948:  meet 19 2 5 0,2
25948:  join 19 2 5 0,2,2
25948:  d 3 0 3 2,2,2,2,2
25948:  c 2 0 2 1,2,2,2
25948:  b 4 0 4 1,2,2
25948:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25949: Facts:
25949:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25949:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25949:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25949:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25949:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25949:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25949:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25949:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25949:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
25949: Goal:
25949:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
25949: Order:
25949:   kbo
25949: Leaf order:
25949:  meet 19 2 5 0,2
25949:  join 19 2 5 0,2,2
25949:  d 3 0 3 2,2,2,2,2
25949:  c 2 0 2 1,2,2,2
25949:  b 4 0 4 1,2,2
25949:  a 3 0 3 1,2
NO CLASH, using fixed ground order
25950: Facts:
25950:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25950:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25950:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25950:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25950:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25950:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25950:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25950:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25950:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
25950: Goal:
25950:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
25950: Order:
25950:   lpo
25950: Leaf order:
25950:  meet 19 2 5 0,2
25950:  join 19 2 5 0,2,2
25950:  d 3 0 3 2,2,2,2,2
25950:  c 2 0 2 1,2,2,2
25950:  b 4 0 4 1,2,2
25950:  a 3 0 3 1,2
% SZS status Timeout for LAT149-1.p
NO CLASH, using fixed ground order
26495: Facts:
26495:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26495:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26495:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26495:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26495:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26495:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26495:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26495:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26495:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
26495: Goal:
26495:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
26495: Order:
26495:   nrkbo
26495: Leaf order:
26495:  join 18 2 4 0,2,2
26495:  meet 20 2 6 0,2
26495:  c 2 0 2 2,2,2,2
26495:  b 4 0 4 1,2,2
26495:  a 6 0 6 1,2
NO CLASH, using fixed ground order
26496: Facts:
26496:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26496:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26496:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26496:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26496:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26496:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26496:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26496:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26496:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
26496: Goal:
26496:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
26496: Order:
26496:   kbo
26496: Leaf order:
26496:  join 18 2 4 0,2,2
26496:  meet 20 2 6 0,2
26496:  c 2 0 2 2,2,2,2
26496:  b 4 0 4 1,2,2
26496:  a 6 0 6 1,2
NO CLASH, using fixed ground order
26497: Facts:
26497:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26497:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26497:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26497:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26497:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26497:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26497:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26497:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26497:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
26497: Goal:
26497:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
26497: Order:
26497:   lpo
26497: Leaf order:
26497:  join 18 2 4 0,2,2
26497:  meet 20 2 6 0,2
26497:  c 2 0 2 2,2,2,2
26497:  b 4 0 4 1,2,2
26497:  a 6 0 6 1,2
% SZS status Timeout for LAT153-1.p
NO CLASH, using fixed ground order
26513: Facts:
26513:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26513:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26513:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26513:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26513:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26513:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26513:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26513:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26513:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26513: Goal:
26513:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
26513: Order:
26513:   nrkbo
26513: Leaf order:
26513:  join 18 2 4 0,2,2
26513:  meet 20 2 6 0,2
26513:  c 4 0 4 2,2,2,2
26513:  b 4 0 4 1,2,2
26513:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26514: Facts:
26514:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26514:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26514:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26514:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26514:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26514:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26514:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26514:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26514:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26514: Goal:
26514:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
26514: Order:
26514:   kbo
26514: Leaf order:
26514:  join 18 2 4 0,2,2
26514:  meet 20 2 6 0,2
26514:  c 4 0 4 2,2,2,2
26514:  b 4 0 4 1,2,2
26514:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26515: Facts:
26515:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26515:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26515:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26515:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26515:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26515:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26515:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26515:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26515:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26515: Goal:
26515:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
26515: Order:
26515:   lpo
26515: Leaf order:
26515:  join 18 2 4 0,2,2
26515:  meet 20 2 6 0,2
26515:  c 4 0 4 2,2,2,2
26515:  b 4 0 4 1,2,2
26515:  a 4 0 4 1,2
% SZS status Timeout for LAT157-1.p
NO CLASH, using fixed ground order
26542: Facts:
26542:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26542:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26542:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26542:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26542:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26542:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26542:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26542:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26542:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26542: Goal:
26542:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
26542: Order:
26542:   nrkbo
26542: Leaf order:
26542:  meet 19 2 5 0,2
26542:  join 19 2 5 0,2,2
26542:  d 2 0 2 2,2,2,2,2
26542:  c 3 0 3 1,2,2,2
26542:  b 3 0 3 1,2,2
26542:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26543: Facts:
26543:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26543:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26543:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26543:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26543:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26543:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26543:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26543:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26543:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26543: Goal:
26543:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
26543: Order:
26543:   kbo
26543: Leaf order:
26543:  meet 19 2 5 0,2
26543:  join 19 2 5 0,2,2
26543:  d 2 0 2 2,2,2,2,2
26543:  c 3 0 3 1,2,2,2
26543:  b 3 0 3 1,2,2
26543:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26544: Facts:
26544:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26544:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26544:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26544:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26544:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26544:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26544:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26544:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26544:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
26544: Goal:
26544:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
26544: Order:
26544:   lpo
26544: Leaf order:
26544:  meet 19 2 5 0,2
26544:  join 19 2 5 0,2,2
26544:  d 2 0 2 2,2,2,2,2
26544:  c 3 0 3 1,2,2,2
26544:  b 3 0 3 1,2,2
26544:  a 4 0 4 1,2
% SZS status Timeout for LAT158-1.p
NO CLASH, using fixed ground order
26561: Facts:
26561:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26561:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26561:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26561:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26561:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26561:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26561:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26561:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26561:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26561: Goal:
26561:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26561: Order:
26561:   nrkbo
26561: Leaf order:
26561:  join 16 2 3 0,2,2
26561:  meet 21 2 7 0,2
26561:  d 3 0 3 2,2,2,2,2
26561:  c 2 0 2 1,2,2,2,2
26561:  b 3 0 3 1,2,2
26561:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26562: Facts:
26562:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26562:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26562:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26562:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26562:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26562:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26562:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26562:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26562:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26562: Goal:
26562:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26562: Order:
26562:   kbo
26562: Leaf order:
26562:  join 16 2 3 0,2,2
26562:  meet 21 2 7 0,2
26562:  d 3 0 3 2,2,2,2,2
26562:  c 2 0 2 1,2,2,2,2
26562:  b 3 0 3 1,2,2
26562:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26563: Facts:
26563:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26563:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26563:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26563:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26563:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26563:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26563:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26563:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26563:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26563: Goal:
26563:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26563: Order:
26563:   lpo
26563: Leaf order:
26563:  join 16 2 3 0,2,2
26563:  meet 21 2 7 0,2
26563:  d 3 0 3 2,2,2,2,2
26563:  c 2 0 2 1,2,2,2,2
26563:  b 3 0 3 1,2,2
26563:  a 4 0 4 1,2
% SZS status Timeout for LAT163-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
26595: Facts:
26595:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26595:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26595:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26595:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26595:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26595:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26595:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26595:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26595:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26595: Goal:
26595:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26595: Order:
26595:   kbo
26595: Leaf order:
26595:  meet 20 2 6 0,2
26595:  join 17 2 4 0,2,2
26595:  d 2 0 2 2,2,2,2,2
26595:  c 3 0 3 1,2,2,2
26595:  b 4 0 4 1,2,2
26595:  a 3 0 3 1,2
26594: Facts:
26594:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26594:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26594:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26594:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26594:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26594:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26594:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26594:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26594:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26594: Goal:
26594:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26594: Order:
26594:   nrkbo
26594: Leaf order:
26594:  meet 20 2 6 0,2
26594:  join 17 2 4 0,2,2
26594:  d 2 0 2 2,2,2,2,2
26594:  c 3 0 3 1,2,2,2
26594:  b 4 0 4 1,2,2
26594:  a 3 0 3 1,2
NO CLASH, using fixed ground order
26596: Facts:
26596:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26596:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26596:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26596:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26596:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26596:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26596:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26596:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26596:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
26596: Goal:
26596:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =>=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26596: Order:
26596:   lpo
26596: Leaf order:
26596:  meet 20 2 6 0,2
26596:  join 17 2 4 0,2,2
26596:  d 2 0 2 2,2,2,2,2
26596:  c 3 0 3 1,2,2,2
26596:  b 4 0 4 1,2,2
26596:  a 3 0 3 1,2
% SZS status Timeout for LAT165-1.p
NO CLASH, using fixed ground order
26645: Facts:
26645:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26645:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26645:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26645:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26645:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26645:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26645:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26645:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26645:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
26645: Goal:
26645:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
26645: Order:
26645:   nrkbo
26645: Leaf order:
26645:  meet 20 2 5 0,2
26645:  join 18 2 5 0,2,2
26645:  d 3 0 3 2,2,2,2,2
26645:  c 2 0 2 1,2,2,2
26645:  b 4 0 4 1,2,2
26645:  a 3 0 3 1,2
NO CLASH, using fixed ground order
26646: Facts:
26646:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26646:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26646:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26646:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26646:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26646:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26646:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26646:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26646:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
26646: Goal:
26646:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
26646: Order:
26646:   kbo
26646: Leaf order:
26646:  meet 20 2 5 0,2
26646:  join 18 2 5 0,2,2
26646:  d 3 0 3 2,2,2,2,2
26646:  c 2 0 2 1,2,2,2
26646:  b 4 0 4 1,2,2
26646:  a 3 0 3 1,2
NO CLASH, using fixed ground order
26647: Facts:
26647:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26647:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26647:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26647:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26647:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26647:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26647:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26647:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26647:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
26647: Goal:
26647:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
26647: Order:
26647:   lpo
26647: Leaf order:
26647:  meet 20 2 5 0,2
26647:  join 18 2 5 0,2,2
26647:  d 3 0 3 2,2,2,2,2
26647:  c 2 0 2 1,2,2,2
26647:  b 4 0 4 1,2,2
26647:  a 3 0 3 1,2
% SZS status Timeout for LAT166-1.p
NO CLASH, using fixed ground order
26677: Facts:
26677:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26677:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26677:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26677:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26677:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26677:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26677:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26677:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26677:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
26677: Goal:
26677:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26677: Order:
26677:   kbo
26677: Leaf order:
26677:  meet 20 2 6 0,2
26677:  join 18 2 4 0,2,2
26677:  d 2 0 2 2,2,2,2,2
26677:  c 3 0 3 1,2,2,2
26677:  b 4 0 4 1,2,2
26677:  a 3 0 3 1,2
NO CLASH, using fixed ground order
26676: Facts:
26676:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26676:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26676:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26676:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26676:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26676:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26676:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26676:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26676:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
26676: Goal:
26676:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26676: Order:
26676:   nrkbo
26676: Leaf order:
26676:  meet 20 2 6 0,2
26676:  join 18 2 4 0,2,2
26676:  d 2 0 2 2,2,2,2,2
26676:  c 3 0 3 1,2,2,2
26676:  b 4 0 4 1,2,2
26676:  a 3 0 3 1,2
NO CLASH, using fixed ground order
26678: Facts:
26678:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26678:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26678:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26678:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26678:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26678:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26678:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26678:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26678:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
26678: Goal:
26678:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =>=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
26678: Order:
26678:   lpo
26678: Leaf order:
26678:  meet 20 2 6 0,2
26678:  join 18 2 4 0,2,2
26678:  d 2 0 2 2,2,2,2,2
26678:  c 3 0 3 1,2,2,2
26678:  b 4 0 4 1,2,2
26678:  a 3 0 3 1,2
% SZS status Timeout for LAT167-1.p
NO CLASH, using fixed ground order
26697: Facts:
26697:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26697:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26697:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26697:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26697:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26697:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26697:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26697:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26697:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26697: Goal:
26697:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26697: Order:
26697:   nrkbo
26697: Leaf order:
26697:  join 17 2 3 0,2,2
26697:  meet 20 2 7 0,2
26697:  d 3 0 3 2,2,2,2,2
26697:  c 2 0 2 1,2,2,2,2
26697:  b 3 0 3 1,2,2
26697:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26698: Facts:
26698:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26698:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26698:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26698:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26698:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26698:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26698:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26698:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26698:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26698: Goal:
26698:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26698: Order:
26698:   kbo
26698: Leaf order:
26698:  join 17 2 3 0,2,2
26698:  meet 20 2 7 0,2
26698:  d 3 0 3 2,2,2,2,2
26698:  c 2 0 2 1,2,2,2,2
26698:  b 3 0 3 1,2,2
26698:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26699: Facts:
26699:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26699:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26699:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26699:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26699:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26699:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26699:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26699:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26699:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26699: Goal:
26699:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26699: Order:
26699:   lpo
26699: Leaf order:
26699:  join 17 2 3 0,2,2
26699:  meet 20 2 7 0,2
26699:  d 3 0 3 2,2,2,2,2
26699:  c 2 0 2 1,2,2,2,2
26699:  b 3 0 3 1,2,2
26699:  a 4 0 4 1,2
% SZS status Timeout for LAT172-1.p
NO CLASH, using fixed ground order
26727: Facts:
26727:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26727:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26727:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26727:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26727:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26727:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26727:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26727:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26727:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26727: Goal:
26727:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
26727: Order:
26727:   nrkbo
26727: Leaf order:
26727:  meet 18 2 5 0,2
26727:  join 19 2 5 0,2,2
26727:  d 2 0 2 2,2,2,2,2
26727:  c 3 0 3 1,2,2,2
26727:  b 3 0 3 1,2,2
26727:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26728: Facts:
26728:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26728:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26728:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26728:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26728:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26728:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26728:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26728:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26728:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26728: Goal:
26728:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
26728: Order:
26728:   kbo
26728: Leaf order:
26728:  meet 18 2 5 0,2
26728:  join 19 2 5 0,2,2
26728:  d 2 0 2 2,2,2,2,2
26728:  c 3 0 3 1,2,2,2
26728:  b 3 0 3 1,2,2
26728:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26729: Facts:
26729:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26729:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26729:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26729:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26729:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26729:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26729:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26729:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26729:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
26729: Goal:
26729:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
26729: Order:
26729:   lpo
26729: Leaf order:
26729:  meet 18 2 5 0,2
26729:  join 19 2 5 0,2,2
26729:  d 2 0 2 2,2,2,2,2
26729:  c 3 0 3 1,2,2,2
26729:  b 3 0 3 1,2,2
26729:  a 4 0 4 1,2
% SZS status Timeout for LAT173-1.p
NO CLASH, using fixed ground order
26747: Facts:
26747:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26747:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26747:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26747:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26747:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26747:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26747:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26747:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26747:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26747: Goal:
26747:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26747: Order:
26747:   kbo
26747: Leaf order:
26747:  join 18 2 3 0,2,2
26747:  meet 20 2 7 0,2
26747:  d 3 0 3 2,2,2,2,2
26747:  c 2 0 2 1,2,2,2,2
26747:  b 3 0 3 1,2,2
26747:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26746: Facts:
26746:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26746:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26746:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26746:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26746:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26746:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26746:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26746:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26746:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26746: Goal:
26746:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26746: Order:
26746:   nrkbo
26746: Leaf order:
26746:  join 18 2 3 0,2,2
26746:  meet 20 2 7 0,2
26746:  d 3 0 3 2,2,2,2,2
26746:  c 2 0 2 1,2,2,2,2
26746:  b 3 0 3 1,2,2
26746:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26748: Facts:
26748:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26748:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26748:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26748:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26748:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26748:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26748:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26748:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26748:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26748: Goal:
26748:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
26748: Order:
26748:   lpo
26748: Leaf order:
26748:  join 18 2 3 0,2,2
26748:  meet 20 2 7 0,2
26748:  d 3 0 3 2,2,2,2,2
26748:  c 2 0 2 1,2,2,2,2
26748:  b 3 0 3 1,2,2
26748:  a 4 0 4 1,2
% SZS status Timeout for LAT175-1.p
NO CLASH, using fixed ground order
26789: Facts:
26789:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26789:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26789:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26789:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26789:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26789:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26789:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26789:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26789:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26789: Goal:
26789:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
26789: Order:
26789:   nrkbo
26789: Leaf order:
26789:  meet 18 2 5 0,2
26789:  join 20 2 5 0,2,2
26789:  d 2 0 2 2,2,2,2,2
26789:  c 3 0 3 1,2,2,2
26789:  b 3 0 3 1,2,2
26789:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26790: Facts:
26790:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26790:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26790:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26790:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26790:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26790:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26790:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26790:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26790:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26790: Goal:
26790:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
26790: Order:
26790:   kbo
26790: Leaf order:
26790:  meet 18 2 5 0,2
26790:  join 20 2 5 0,2,2
26790:  d 2 0 2 2,2,2,2,2
26790:  c 3 0 3 1,2,2,2
26790:  b 3 0 3 1,2,2
26790:  a 4 0 4 1,2
NO CLASH, using fixed ground order
26791: Facts:
26791:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26791:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26791:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26791:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26791:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26791:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26791:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26791:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26791:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
26791: Goal:
26791:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
26791: Order:
26791:   lpo
26791: Leaf order:
26791:  meet 18 2 5 0,2
26791:  join 20 2 5 0,2,2
26791:  d 2 0 2 2,2,2,2,2
26791:  c 3 0 3 1,2,2,2
26791:  b 3 0 3 1,2,2
26791:  a 4 0 4 1,2
% SZS status Timeout for LAT176-1.p
NO CLASH, using fixed ground order
27075: Facts:
27075:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
27075:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
27075:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
27075:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
27075:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
27075:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
27075:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
27075:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
27075:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
27075:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
27075:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
27075: Goal:
27075:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
27075: Order:
27075:   nrkbo
27075: Leaf order:
27075:  additive_inverse 2 1 0 
27075:  add 14 2 0 
27075:  additive_identity 4 0 0 
27075:  c 2 0 1 3
27075:  multiply 15 2 1 0,2
27075:  a 2 0 1 2,2
27075:  b 2 0 1 1,2
NO CLASH, using fixed ground order
27077: Facts:
27077:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
27077:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
27077:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
27077:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
27077:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
27077:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
27077:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
27077:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
27077:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
27077:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
27077:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
27077: Goal:
27077:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
27077: Order:
27077:   lpo
27077: Leaf order:
27077:  additive_inverse 2 1 0 
27077:  add 14 2 0 
27077:  additive_identity 4 0 0 
27077:  c 2 0 1 3
27077:  multiply 15 2 1 0,2
27077:  a 2 0 1 2,2
27077:  b 2 0 1 1,2
NO CLASH, using fixed ground order
27076: Facts:
27076:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
27076:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
27076:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
27076:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
27076:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
27076:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
27076:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
27076:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
27076:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
27076:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
27076:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
27076: Goal:
27076:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
27076: Order:
27076:   kbo
27076: Leaf order:
27076:  additive_inverse 2 1 0 
27076:  add 14 2 0 
27076:  additive_identity 4 0 0 
27076:  c 2 0 1 3
27076:  multiply 15 2 1 0,2
27076:  a 2 0 1 2,2
27076:  b 2 0 1 1,2
% SZS status Timeout for RNG035-7.p
NO CLASH, using fixed ground order
27109: Facts:
27109:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27109: Goal:
27109:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27109: Order:
27109:   nrkbo
27109: Leaf order:
27109:  b 1 0 1 1,2,2
27109:  nand 9 2 3 0,2
27109:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27110: Facts:
27110:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27110: Goal:
27110:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27110: Order:
27110:   kbo
27110: Leaf order:
27110:  b 1 0 1 1,2,2
27110:  nand 9 2 3 0,2
27110:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27111: Facts:
27111:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27111: Goal:
27111:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27111: Order:
27111:   lpo
27111: Leaf order:
27111:  b 1 0 1 1,2,2
27111:  nand 9 2 3 0,2
27111:  a 4 0 4 1,1,2
% SZS status Timeout for BOO077-1.p
NO CLASH, using fixed ground order
27127: Facts:
27127:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27127: Goal:
27127:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27127: Order:
27127:   nrkbo
27127: Leaf order:
27127:  nand 12 2 6 0,2
27127:  c 2 0 2 2,2,2,2
27127:  b 3 0 3 1,2,2
27127:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27128: Facts:
27128:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27128: Goal:
27128:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27128: Order:
27128:   kbo
27128: Leaf order:
27128:  nand 12 2 6 0,2
27128:  c 2 0 2 2,2,2,2
27128:  b 3 0 3 1,2,2
27128:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27129: Facts:
27129:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
27129: Goal:
27129:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27129: Order:
27129:   lpo
27129: Leaf order:
27129:  nand 12 2 6 0,2
27129:  c 2 0 2 2,2,2,2
27129:  b 3 0 3 1,2,2
27129:  a 3 0 3 1,2
% SZS status Timeout for BOO078-1.p
NO CLASH, using fixed ground order
27161: Facts:
27161:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27161: Goal:
27161:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27161: Order:
27161:   kbo
27161: Leaf order:
27161:  b 1 0 1 1,2,2
27161:  nand 9 2 3 0,2
27161:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27162: Facts:
27162:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27162: Goal:
27162:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27162: Order:
27162:   lpo
27162: Leaf order:
27162:  b 1 0 1 1,2,2
27162:  nand 9 2 3 0,2
27162:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27160: Facts:
27160:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27160: Goal:
27160:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27160: Order:
27160:   nrkbo
27160: Leaf order:
27160:  b 1 0 1 1,2,2
27160:  nand 9 2 3 0,2
27160:  a 4 0 4 1,1,2
% SZS status Timeout for BOO079-1.p
NO CLASH, using fixed ground order
27178: Facts:
27178:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27178: Goal:
27178:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27178: Order:
27178:   nrkbo
27178: Leaf order:
27178:  nand 12 2 6 0,2
27178:  c 2 0 2 2,2,2,2
27178:  b 3 0 3 1,2,2
27178:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27179: Facts:
27179:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27179: Goal:
27179:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27179: Order:
27179:   kbo
27179: Leaf order:
27179:  nand 12 2 6 0,2
27179:  c 2 0 2 2,2,2,2
27179:  b 3 0 3 1,2,2
27179:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27180: Facts:
27180:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
27180: Goal:
27180:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27180: Order:
27180:   lpo
27180: Leaf order:
27180:  nand 12 2 6 0,2
27180:  c 2 0 2 2,2,2,2
27180:  b 3 0 3 1,2,2
27180:  a 3 0 3 1,2
% SZS status Timeout for BOO080-1.p
NO CLASH, using fixed ground order
27207: Facts:
27207:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27207: Goal:
27207:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27207: Order:
27207:   nrkbo
27207: Leaf order:
27207:  b 1 0 1 1,2,2
27207:  nand 9 2 3 0,2
27207:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27208: Facts:
27208:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27208: Goal:
27208:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27208: Order:
27208:   kbo
27208: Leaf order:
27208:  b 1 0 1 1,2,2
27208:  nand 9 2 3 0,2
27208:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27209: Facts:
27209:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27209: Goal:
27209:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27209: Order:
27209:   lpo
27209: Leaf order:
27209:  b 1 0 1 1,2,2
27209:  nand 9 2 3 0,2
27209:  a 4 0 4 1,1,2
% SZS status Timeout for BOO081-1.p
NO CLASH, using fixed ground order
27227: Facts:
27227:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27227: Goal:
27227:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27227: Order:
27227:   nrkbo
27227: Leaf order:
27227:  nand 12 2 6 0,2
27227:  c 2 0 2 2,2,2,2
27227:  b 3 0 3 1,2,2
27227:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27228: Facts:
27228:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27228: Goal:
27228:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27228: Order:
27228:   kbo
27228: Leaf order:
27228:  nand 12 2 6 0,2
27228:  c 2 0 2 2,2,2,2
27228:  b 3 0 3 1,2,2
27228:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27229: Facts:
27229:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
27229: Goal:
27229:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27229: Order:
27229:   lpo
27229: Leaf order:
27229:  nand 12 2 6 0,2
27229:  c 2 0 2 2,2,2,2
27229:  b 3 0 3 1,2,2
27229:  a 3 0 3 1,2
% SZS status Timeout for BOO082-1.p
NO CLASH, using fixed ground order
27257: Facts:
27257:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27257: Goal:
27257:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27257: Order:
27257:   nrkbo
27257: Leaf order:
27257:  b 1 0 1 1,2,2
27257:  nand 9 2 3 0,2
27257:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27258: Facts:
27258:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27258: Goal:
27258:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27258: Order:
27258:   kbo
27258: Leaf order:
27258:  b 1 0 1 1,2,2
27258:  nand 9 2 3 0,2
27258:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27259: Facts:
27259:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27259: Goal:
27259:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27259: Order:
27259:   lpo
27259: Leaf order:
27259:  b 1 0 1 1,2,2
27259:  nand 9 2 3 0,2
27259:  a 4 0 4 1,1,2
% SZS status Timeout for BOO083-1.p
NO CLASH, using fixed ground order
27275: Facts:
27275:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27275: Goal:
27275:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27275: Order:
27275:   nrkbo
27275: Leaf order:
27275:  nand 12 2 6 0,2
27275:  c 2 0 2 2,2,2,2
27275:  b 3 0 3 1,2,2
27275:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27276: Facts:
27276:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27276: Goal:
27276:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27276: Order:
27276:   kbo
27276: Leaf order:
27276:  nand 12 2 6 0,2
27276:  c 2 0 2 2,2,2,2
27276:  b 3 0 3 1,2,2
27276:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27277: Facts:
27277:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
27277: Goal:
27277:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27277: Order:
27277:   lpo
27277: Leaf order:
27277:  nand 12 2 6 0,2
27277:  c 2 0 2 2,2,2,2
27277:  b 3 0 3 1,2,2
27277:  a 3 0 3 1,2
% SZS status Timeout for BOO084-1.p
NO CLASH, using fixed ground order
27304: Facts:
27304:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27304: Goal:
27304:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27304: Order:
27304:   nrkbo
27304: Leaf order:
27304:  b 1 0 1 1,2,2
27304:  nand 9 2 3 0,2
27304:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27305: Facts:
27305:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27305: Goal:
27305:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27305: Order:
27305:   kbo
27305: Leaf order:
27305:  b 1 0 1 1,2,2
27305:  nand 9 2 3 0,2
27305:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27306: Facts:
27306:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27306: Goal:
27306:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27306: Order:
27306:   lpo
27306: Leaf order:
27306:  b 1 0 1 1,2,2
27306:  nand 9 2 3 0,2
27306:  a 4 0 4 1,1,2
% SZS status Timeout for BOO085-1.p
NO CLASH, using fixed ground order
27328: Facts:
27328:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27328: Goal:
27328:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27328: Order:
27328:   nrkbo
27328: Leaf order:
27328:  nand 12 2 6 0,2
27328:  c 2 0 2 2,2,2,2
27328:  b 3 0 3 1,2,2
27328:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27331: Facts:
27331:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27331: Goal:
27331:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27331: Order:
27331:   lpo
27331: Leaf order:
27331:  nand 12 2 6 0,2
27331:  c 2 0 2 2,2,2,2
27331:  b 3 0 3 1,2,2
27331:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27329: Facts:
27329:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
27329: Goal:
27329:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27329: Order:
27329:   kbo
27329: Leaf order:
27329:  nand 12 2 6 0,2
27329:  c 2 0 2 2,2,2,2
27329:  b 3 0 3 1,2,2
27329:  a 3 0 3 1,2
% SZS status Timeout for BOO086-1.p
NO CLASH, using fixed ground order
27408: Facts:
27408:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27408: Goal:
27408:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27408: Order:
27408:   kbo
27408: Leaf order:
27408:  b 1 0 1 1,2,2
27408:  nand 9 2 3 0,2
27408:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27407: Facts:
27407:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27407: Goal:
27407:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27407: Order:
27407:   nrkbo
27407: Leaf order:
27407:  b 1 0 1 1,2,2
27407:  nand 9 2 3 0,2
27407:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27409: Facts:
27409:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27409: Goal:
27409:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27409: Order:
27409:   lpo
27409: Leaf order:
27409:  b 1 0 1 1,2,2
27409:  nand 9 2 3 0,2
27409:  a 4 0 4 1,1,2
% SZS status Timeout for BOO087-1.p
NO CLASH, using fixed ground order
27425: Facts:
27425:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27425: Goal:
27425:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27425: Order:
27425:   nrkbo
27425: Leaf order:
27425:  nand 12 2 6 0,2
27425:  c 2 0 2 2,2,2,2
27425:  b 3 0 3 1,2,2
27425:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27426: Facts:
27426:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27426: Goal:
27426:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27426: Order:
27426:   kbo
27426: Leaf order:
27426:  nand 12 2 6 0,2
27426:  c 2 0 2 2,2,2,2
27426:  b 3 0 3 1,2,2
27426:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27427: Facts:
27427:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
27427: Goal:
27427:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27427: Order:
27427:   lpo
27427: Leaf order:
27427:  nand 12 2 6 0,2
27427:  c 2 0 2 2,2,2,2
27427:  b 3 0 3 1,2,2
27427:  a 3 0 3 1,2
% SZS status Timeout for BOO088-1.p
NO CLASH, using fixed ground order
27458: Facts:
27458:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27458: Goal:
27458:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27458: Order:
27458:   nrkbo
27458: Leaf order:
27458:  b 1 0 1 1,2,2
27458:  nand 9 2 3 0,2
27458:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27459: Facts:
27459:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27459: Goal:
27459:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27459: Order:
27459:   kbo
27459: Leaf order:
27459:  b 1 0 1 1,2,2
27459:  nand 9 2 3 0,2
27459:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27460: Facts:
27460:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27460: Goal:
27460:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27460: Order:
27460:   lpo
27460: Leaf order:
27460:  b 1 0 1 1,2,2
27460:  nand 9 2 3 0,2
27460:  a 4 0 4 1,1,2
% SZS status Timeout for BOO089-1.p
NO CLASH, using fixed ground order
27496: Facts:
27496:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27496: Goal:
27496:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27496: Order:
27496:   nrkbo
27496: Leaf order:
27496:  nand 12 2 6 0,2
27496:  c 2 0 2 2,2,2,2
27496:  b 3 0 3 1,2,2
27496:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27497: Facts:
27497:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27497: Goal:
27497:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27497: Order:
27497:   kbo
27497: Leaf order:
27497:  nand 12 2 6 0,2
27497:  c 2 0 2 2,2,2,2
27497:  b 3 0 3 1,2,2
27497:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27498: Facts:
27498:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
27498: Goal:
27498:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27498: Order:
27498:   lpo
27498: Leaf order:
27498:  nand 12 2 6 0,2
27498:  c 2 0 2 2,2,2,2
27498:  b 3 0 3 1,2,2
27498:  a 3 0 3 1,2
% SZS status Timeout for BOO090-1.p
NO CLASH, using fixed ground order
27534: Facts:
27534:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27534: Goal:
27534:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27534: Order:
27534:   nrkbo
27534: Leaf order:
27534:  b 1 0 1 1,2,2
27534:  nand 9 2 3 0,2
27534:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27535: Facts:
27535:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27535: Goal:
27535:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27535: Order:
27535:   kbo
27535: Leaf order:
27535:  b 1 0 1 1,2,2
27535:  nand 9 2 3 0,2
27535:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27536: Facts:
27536:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27536: Goal:
27536:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27536: Order:
27536:   lpo
27536: Leaf order:
27536:  b 1 0 1 1,2,2
27536:  nand 9 2 3 0,2
27536:  a 4 0 4 1,1,2
% SZS status Timeout for BOO091-1.p
NO CLASH, using fixed ground order
27553: Facts:
27553:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27553: Goal:
27553:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27553: Order:
27553:   nrkbo
27553: Leaf order:
27553:  nand 12 2 6 0,2
27553:  c 2 0 2 2,2,2,2
27553:  b 3 0 3 1,2,2
27553:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27554: Facts:
27554:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27554: Goal:
27554:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27554: Order:
27554:   kbo
27554: Leaf order:
27554:  nand 12 2 6 0,2
27554:  c 2 0 2 2,2,2,2
27554:  b 3 0 3 1,2,2
27554:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27555: Facts:
27555:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
27555: Goal:
27555:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27555: Order:
27555:   lpo
27555: Leaf order:
27555:  nand 12 2 6 0,2
27555:  c 2 0 2 2,2,2,2
27555:  b 3 0 3 1,2,2
27555:  a 3 0 3 1,2
% SZS status Timeout for BOO092-1.p
NO CLASH, using fixed ground order
27585: Facts:
27585:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27585: Goal:
27585:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27585: Order:
27585:   kbo
27585: Leaf order:
27585:  b 1 0 1 1,2,2
27585:  nand 9 2 3 0,2
27585:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27584: Facts:
27584:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27584: Goal:
27584:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27584: Order:
27584:   nrkbo
27584: Leaf order:
27584:  b 1 0 1 1,2,2
27584:  nand 9 2 3 0,2
27584:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27586: Facts:
27586:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27586: Goal:
27586:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27586: Order:
27586:   lpo
27586: Leaf order:
27586:  b 1 0 1 1,2,2
27586:  nand 9 2 3 0,2
27586:  a 4 0 4 1,1,2
% SZS status Timeout for BOO093-1.p
NO CLASH, using fixed ground order
27602: Facts:
27602:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27602: Goal:
27602:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27602: Order:
27602:   nrkbo
27602: Leaf order:
27602:  nand 12 2 6 0,2
27602:  c 2 0 2 2,2,2,2
27602:  b 3 0 3 1,2,2
27602:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27603: Facts:
27603:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27603: Goal:
27603:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27603: Order:
27603:   kbo
27603: Leaf order:
27603:  nand 12 2 6 0,2
27603:  c 2 0 2 2,2,2,2
27603:  b 3 0 3 1,2,2
27603:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27604: Facts:
27604:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
27604: Goal:
27604:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27604: Order:
27604:   lpo
27604: Leaf order:
27604:  nand 12 2 6 0,2
27604:  c 2 0 2 2,2,2,2
27604:  b 3 0 3 1,2,2
27604:  a 3 0 3 1,2
% SZS status Timeout for BOO094-1.p
NO CLASH, using fixed ground order
27635: Facts:
27635:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27635: Goal:
27635:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27635: Order:
27635:   nrkbo
27635: Leaf order:
27635:  b 1 0 1 1,2,2
27635:  nand 9 2 3 0,2
27635:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27636: Facts:
27636:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27636: Goal:
27636:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27636: Order:
27636:   kbo
27636: Leaf order:
27636:  b 1 0 1 1,2,2
27636:  nand 9 2 3 0,2
27636:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27637: Facts:
27637:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27637: Goal:
27637:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27637: Order:
27637:   lpo
27637: Leaf order:
27637:  b 1 0 1 1,2,2
27637:  nand 9 2 3 0,2
27637:  a 4 0 4 1,1,2
% SZS status Timeout for BOO095-1.p
NO CLASH, using fixed ground order
27662: Facts:
27662:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27662: Goal:
27662:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27662: Order:
27662:   nrkbo
27662: Leaf order:
27662:  nand 12 2 6 0,2
27662:  c 2 0 2 2,2,2,2
27662:  b 3 0 3 1,2,2
27662:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27663: Facts:
27663:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27663: Goal:
27663:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27663: Order:
27663:   kbo
27663: Leaf order:
27663:  nand 12 2 6 0,2
27663:  c 2 0 2 2,2,2,2
27663:  b 3 0 3 1,2,2
27663:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27664: Facts:
27664:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
27664: Goal:
27664:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27664: Order:
27664:   lpo
27664: Leaf order:
27664:  nand 12 2 6 0,2
27664:  c 2 0 2 2,2,2,2
27664:  b 3 0 3 1,2,2
27664:  a 3 0 3 1,2
% SZS status Timeout for BOO096-1.p
NO CLASH, using fixed ground order
27691: Facts:
27691:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27691: Goal:
27691:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27691: Order:
27691:   nrkbo
27691: Leaf order:
27691:  b 1 0 1 1,2,2
27691:  nand 9 2 3 0,2
27691:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27692: Facts:
27692:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27692: Goal:
27692:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27692: Order:
27692:   kbo
27692: Leaf order:
27692:  b 1 0 1 1,2,2
27692:  nand 9 2 3 0,2
27692:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27693: Facts:
27693:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27693: Goal:
27693:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27693: Order:
27693:   lpo
27693: Leaf order:
27693:  b 1 0 1 1,2,2
27693:  nand 9 2 3 0,2
27693:  a 4 0 4 1,1,2
% SZS status Timeout for BOO097-1.p
NO CLASH, using fixed ground order
27766: Facts:
27766:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27766: Goal:
27766:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27766: Order:
27766:   nrkbo
27766: Leaf order:
27766:  nand 12 2 6 0,2
27766:  c 2 0 2 2,2,2,2
27766:  b 3 0 3 1,2,2
27766:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27767: Facts:
27767:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27767: Goal:
27767:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27767: Order:
27767:   kbo
27767: Leaf order:
27767:  nand 12 2 6 0,2
27767:  c 2 0 2 2,2,2,2
27767:  b 3 0 3 1,2,2
27767:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27768: Facts:
27768:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
27768: Goal:
27768:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27768: Order:
27768:   lpo
27768: Leaf order:
27768:  nand 12 2 6 0,2
27768:  c 2 0 2 2,2,2,2
27768:  b 3 0 3 1,2,2
27768:  a 3 0 3 1,2
% SZS status Timeout for BOO098-1.p
NO CLASH, using fixed ground order
27800: Facts:
27800:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27800: Goal:
27800:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27800: Order:
27800:   nrkbo
27800: Leaf order:
27800:  b 1 0 1 1,2,2
27800:  nand 9 2 3 0,2
27800:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27801: Facts:
27801:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27801: Goal:
27801:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27801: Order:
27801:   kbo
27801: Leaf order:
27801:  b 1 0 1 1,2,2
27801:  nand 9 2 3 0,2
27801:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27802: Facts:
27802:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27802: Goal:
27802:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27802: Order:
27802:   lpo
27802: Leaf order:
27802:  b 1 0 1 1,2,2
27802:  nand 9 2 3 0,2
27802:  a 4 0 4 1,1,2
% SZS status Timeout for BOO099-1.p
NO CLASH, using fixed ground order
27864: Facts:
27864:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27864: Goal:
27864:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27864: Order:
27864:   nrkbo
27864: Leaf order:
27864:  nand 12 2 6 0,2
27864:  c 2 0 2 2,2,2,2
27864:  b 3 0 3 1,2,2
27864:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27865: Facts:
27865:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27865: Goal:
27865:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27865: Order:
27865:   kbo
27865: Leaf order:
27865:  nand 12 2 6 0,2
27865:  c 2 0 2 2,2,2,2
27865:  b 3 0 3 1,2,2
27865:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27866: Facts:
27866:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
27866: Goal:
27866:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27866: Order:
27866:   lpo
27866: Leaf order:
27866:  nand 12 2 6 0,2
27866:  c 2 0 2 2,2,2,2
27866:  b 3 0 3 1,2,2
27866:  a 3 0 3 1,2
% SZS status Timeout for BOO100-1.p
NO CLASH, using fixed ground order
27893: Facts:
27893:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27893: Goal:
27893:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27893: Order:
27893:   nrkbo
27893: Leaf order:
27893:  b 1 0 1 1,2,2
27893:  nand 9 2 3 0,2
27893:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27894: Facts:
27894:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27894: Goal:
27894:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27894: Order:
27894:   kbo
27894: Leaf order:
27894:  b 1 0 1 1,2,2
27894:  nand 9 2 3 0,2
27894:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27895: Facts:
27895:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27895: Goal:
27895:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27895: Order:
27895:   lpo
27895: Leaf order:
27895:  b 1 0 1 1,2,2
27895:  nand 9 2 3 0,2
27895:  a 4 0 4 1,1,2
% SZS status Timeout for BOO101-1.p
NO CLASH, using fixed ground order
27912: Facts:
27912:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27912: Goal:
27912:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27912: Order:
27912:   nrkbo
27912: Leaf order:
27912:  nand 12 2 6 0,2
27912:  c 2 0 2 2,2,2,2
27912:  b 3 0 3 1,2,2
27912:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27913: Facts:
27913:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27913: Goal:
27913:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27913: Order:
27913:   kbo
27913: Leaf order:
27913:  nand 12 2 6 0,2
27913:  c 2 0 2 2,2,2,2
27913:  b 3 0 3 1,2,2
27913:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27914: Facts:
27914:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
27914: Goal:
27914:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27914: Order:
27914:   lpo
27914: Leaf order:
27914:  nand 12 2 6 0,2
27914:  c 2 0 2 2,2,2,2
27914:  b 3 0 3 1,2,2
27914:  a 3 0 3 1,2
% SZS status Timeout for BOO102-1.p
NO CLASH, using fixed ground order
27942: Facts:
27942:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27942: Goal:
27942:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27942: Order:
27942:   nrkbo
27942: Leaf order:
27942:  b 1 0 1 1,2,2
27942:  nand 9 2 3 0,2
27942:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27943: Facts:
27943:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27943: Goal:
27943:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27943: Order:
27943:   kbo
27943: Leaf order:
27943:  b 1 0 1 1,2,2
27943:  nand 9 2 3 0,2
27943:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27944: Facts:
27944:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27944: Goal:
27944:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27944: Order:
27944:   lpo
27944: Leaf order:
27944:  b 1 0 1 1,2,2
27944:  nand 9 2 3 0,2
27944:  a 4 0 4 1,1,2
% SZS status Timeout for BOO103-1.p
NO CLASH, using fixed ground order
27963: Facts:
27963:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27963: Goal:
27963:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27963: Order:
27963:   nrkbo
27963: Leaf order:
27963:  nand 12 2 6 0,2
27963:  c 2 0 2 2,2,2,2
27963:  b 3 0 3 1,2,2
27963:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27964: Facts:
27964:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27964: Goal:
27964:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27964: Order:
27964:   kbo
27964: Leaf order:
27964:  nand 12 2 6 0,2
27964:  c 2 0 2 2,2,2,2
27964:  b 3 0 3 1,2,2
27964:  a 3 0 3 1,2
NO CLASH, using fixed ground order
27965: Facts:
27965:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
27965: Goal:
27965:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
27965: Order:
27965:   lpo
27965: Leaf order:
27965:  nand 12 2 6 0,2
27965:  c 2 0 2 2,2,2,2
27965:  b 3 0 3 1,2,2
27965:  a 3 0 3 1,2
% SZS status Timeout for BOO104-1.p
NO CLASH, using fixed ground order
27992: Facts:
27992:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
27992: Goal:
27992:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27992: Order:
27992:   nrkbo
27992: Leaf order:
27992:  b 1 0 1 1,2,2
27992:  nand 9 2 3 0,2
27992:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27993: Facts:
27993:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
27993: Goal:
27993:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27993: Order:
27993:   kbo
27993: Leaf order:
27993:  b 1 0 1 1,2,2
27993:  nand 9 2 3 0,2
27993:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
27994: Facts:
27994:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
27994: Goal:
27994:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
27994: Order:
27994:   lpo
27994: Leaf order:
27994:  b 1 0 1 1,2,2
27994:  nand 9 2 3 0,2
27994:  a 4 0 4 1,1,2
% SZS status Timeout for BOO105-1.p
NO CLASH, using fixed ground order
28010: Facts:
28010:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
28010: Goal:
28010:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28010: Order:
28010:   nrkbo
28010: Leaf order:
28010:  nand 12 2 6 0,2
28010:  c 2 0 2 2,2,2,2
28010:  b 3 0 3 1,2,2
28010:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28011: Facts:
28011:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
28011: Goal:
28011:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28011: Order:
28011:   kbo
28011: Leaf order:
28011:  nand 12 2 6 0,2
28011:  c 2 0 2 2,2,2,2
28011:  b 3 0 3 1,2,2
28011:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28012: Facts:
28012:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
28012: Goal:
28012:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28012: Order:
28012:   lpo
28012: Leaf order:
28012:  nand 12 2 6 0,2
28012:  c 2 0 2 2,2,2,2
28012:  b 3 0 3 1,2,2
28012:  a 3 0 3 1,2
% SZS status Timeout for BOO106-1.p
NO CLASH, using fixed ground order
28046: Facts:
28046:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28046: Goal:
28046:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
28046: Order:
28046:   nrkbo
28046: Leaf order:
28046:  b 1 0 1 1,2,2
28046:  nand 9 2 3 0,2
28046:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
28047: Facts:
28047:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28047: Goal:
28047:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
28047: Order:
28047:   kbo
28047: Leaf order:
28047:  b 1 0 1 1,2,2
28047:  nand 9 2 3 0,2
28047:  a 4 0 4 1,1,2
NO CLASH, using fixed ground order
28048: Facts:
28048:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28048: Goal:
28048:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
28048: Order:
28048:   lpo
28048: Leaf order:
28048:  b 1 0 1 1,2,2
28048:  nand 9 2 3 0,2
28048:  a 4 0 4 1,1,2
% SZS status Timeout for BOO107-1.p
NO CLASH, using fixed ground order
28069: Facts:
28069:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28069: Goal:
28069:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28069: Order:
28069:   nrkbo
28069: Leaf order:
28069:  nand 12 2 6 0,2
28069:  c 2 0 2 2,2,2,2
28069:  b 3 0 3 1,2,2
28069:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28070: Facts:
28070:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28070: Goal:
28070:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28070: Order:
28070:   kbo
28070: Leaf order:
28070:  nand 12 2 6 0,2
28070:  c 2 0 2 2,2,2,2
28070:  b 3 0 3 1,2,2
28070:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28071: Facts:
28071:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
28071: Goal:
28071:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
28071: Order:
28071:   lpo
28071: Leaf order:
28071:  nand 12 2 6 0,2
28071:  c 2 0 2 2,2,2,2
28071:  b 3 0 3 1,2,2
28071:  a 3 0 3 1,2
% SZS status Timeout for BOO108-1.p
CLASH, statistics insufficient
28456: Facts:
28456:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28456:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28456: Goal:
28456:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28456: Order:
28456:   nrkbo
28456: Leaf order:
28456:  b 1 0 0 
28456:  s 1 0 0 
28456:  apply 14 2 3 0,2
28456:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28457: Facts:
28457:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28457:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28457: Goal:
28457:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28457: Order:
28457:   kbo
28457: Leaf order:
28457:  b 1 0 0 
28457:  s 1 0 0 
28457:  apply 14 2 3 0,2
28457:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28458: Facts:
28458:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28458:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28458: Goal:
28458:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28458: Order:
28458:   lpo
28458: Leaf order:
28458:  b 1 0 0 
28458:  s 1 0 0 
28458:  apply 14 2 3 0,2
28458:  f 3 1 3 0,2,2
% SZS status Timeout for COL067-1.p
CLASH, statistics insufficient
28873: Facts:
28873:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28873:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28873: Goal:
28873:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
28873: Order:
28873:   nrkbo
28873: Leaf order:
28873:  b 1 0 0 
28873:  s 1 0 0 
28873:  apply 12 2 1 0,3
28873:  combinator 1 0 1 1,3
CLASH, statistics insufficient
28874: Facts:
28874:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28874:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28874: Goal:
28874:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
28874: Order:
28874:   kbo
28874: Leaf order:
28874:  b 1 0 0 
28874:  s 1 0 0 
28874:  apply 12 2 1 0,3
28874:  combinator 1 0 1 1,3
CLASH, statistics insufficient
28875: Facts:
28875:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
28875:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
28875: Goal:
28875:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
28875: Order:
28875:   lpo
28875: Leaf order:
28875:  b 1 0 0 
28875:  s 1 0 0 
28875:  apply 12 2 1 0,3
28875:  combinator 1 0 1 1,3
% SZS status Timeout for COL068-1.p
CLASH, statistics insufficient
28902: Facts:
28902:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
28902:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
28902: Goal:
28902:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28902: Order:
28902:   nrkbo
28902: Leaf order:
28902:  l 1 0 0 
28902:  b 1 0 0 
28902:  apply 12 2 3 0,2
28902:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28903: Facts:
28903:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
28903:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
28903: Goal:
28903:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28903: Order:
28903:   kbo
28903: Leaf order:
28903:  l 1 0 0 
28903:  b 1 0 0 
28903:  apply 12 2 3 0,2
28903:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28904: Facts:
28904:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
28904:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
28904: Goal:
28904:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
28904: Order:
28904:   lpo
28904: Leaf order:
28904:  l 1 0 0 
28904:  b 1 0 0 
28904:  apply 12 2 3 0,2
28904:  f 3 1 3 0,2,2
% SZS status Timeout for COL069-1.p
CLASH, statistics insufficient
28921: Facts:
28921:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
28921:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
28921: Goal:
28921:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
28921: Order:
28921:   nrkbo
28921: Leaf order:
28921:  m 1 0 0 
28921:  b 1 0 0 
28921:  apply 10 2 3 0,2
28921:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28922: Facts:
28922:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
28922:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
28922: Goal:
28922:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
28922: Order:
28922:   kbo
28922: Leaf order:
28922:  m 1 0 0 
28922:  b 1 0 0 
28922:  apply 10 2 3 0,2
28922:  f 3 1 3 0,2,2
CLASH, statistics insufficient
28923: Facts:
28923:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
28923:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
28923: Goal:
28923:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
28923: Order:
28923:   lpo
28923: Leaf order:
28923:  m 1 0 0 
28923:  b 1 0 0 
28923:  apply 10 2 3 0,2
28923:  f 3 1 3 0,2,2
% SZS status Timeout for COL087-1.p
NO CLASH, using fixed ground order
28951: Facts:
28951:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
28951:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
28951:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
28951:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
28951:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
28951:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
28951:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
28951:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
28951:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
28951:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
28951:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
28951:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
28951:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
28951:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
28951:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
28951:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
28951:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
28951:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
28951: Goal:
28951:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
28951: Order:
28951:   nrkbo
28951: Leaf order:
28951:  inverse 1 1 0 
28951:  identity 5 0 0 
28951:  least_upper_bound 17 2 1 0,2
28951:  greatest_lower_bound 18 2 5 0,1,2
28951:  multiply 21 2 3 0,2,1,2
28951:  c 5 0 3 2,2,1,2
28951:  b 5 0 3 1,2,1,2
28951:  a 7 0 5 1,1,2
NO CLASH, using fixed ground order
28952: Facts:
28952:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
28952:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
28952:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
28952:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
28952:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
28952:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
28952:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
28952:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
28952:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
28952:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
28952:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
28952:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
28952:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
28952:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
28952:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
28952:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
28952:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
28952:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
28952: Goal:
28952:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
28952: Order:
28952:   kbo
28952: Leaf order:
28952:  inverse 1 1 0 
28952:  identity 5 0 0 
28952:  least_upper_bound 17 2 1 0,2
28952:  greatest_lower_bound 18 2 5 0,1,2
28952:  multiply 21 2 3 0,2,1,2
28952:  c 5 0 3 2,2,1,2
28952:  b 5 0 3 1,2,1,2
28952:  a 7 0 5 1,1,2
NO CLASH, using fixed ground order
28953: Facts:
28953:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
28953:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
28953:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
28953:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
28953:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
28953:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
28953:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
28953:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
28953:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
28953:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
28953:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
28953:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
28953:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
28953:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
28953:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
28953:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
28953:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
28953:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
28953: Goal:
28953:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
28953: Order:
28953:   lpo
28953: Leaf order:
28953:  inverse 1 1 0 
28953:  identity 5 0 0 
28953:  least_upper_bound 17 2 1 0,2
28953:  greatest_lower_bound 18 2 5 0,1,2
28953:  multiply 21 2 3 0,2,1,2
28953:  c 5 0 3 2,2,1,2
28953:  b 5 0 3 1,2,1,2
28953:  a 7 0 5 1,1,2
% SZS status Timeout for GRP177-1.p
NO CLASH, using fixed ground order
28970: Facts:
28970:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
28970: Goal:
28970:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
28970: Order:
28970:   nrkbo
28970: Leaf order:
28970:  f 17 2 8 0,2
28970:  c 3 0 3 2,1,2,2
28970:  b 4 0 4 1,1,2,2
28970:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28971: Facts:
28971:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
28971: Goal:
28971:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
28971: Order:
28971:   kbo
28971: Leaf order:
28971:  f 17 2 8 0,2
28971:  c 3 0 3 2,1,2,2
28971:  b 4 0 4 1,1,2,2
28971:  a 3 0 3 1,2
NO CLASH, using fixed ground order
28972: Facts:
28972:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
28972: Goal:
28972:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
28972: Order:
28972:   lpo
28972: Leaf order:
28972:  f 17 2 8 0,2
28972:  c 3 0 3 2,1,2,2
28972:  b 4 0 4 1,1,2,2
28972:  a 3 0 3 1,2
% SZS status Timeout for LAT071-1.p
NO CLASH, using fixed ground order
29000: Facts:
29000:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
29000: Goal:
29000:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29000: Order:
29000:   nrkbo
29000: Leaf order:
29000:  f 18 2 8 0,2
29000:  c 3 0 3 2,1,2,2
29000:  b 4 0 4 1,1,2,2
29000:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29001: Facts:
29001:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
29001: Goal:
29001:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29001: Order:
29001:   kbo
29001: Leaf order:
29001:  f 18 2 8 0,2
29001:  c 3 0 3 2,1,2,2
29001:  b 4 0 4 1,1,2,2
29001:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29002: Facts:
29002:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
29002: Goal:
29002:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
29002: Order:
29002:   lpo
29002: Leaf order:
29002:  f 18 2 8 0,2
29002:  c 3 0 3 2,1,2,2
29002:  b 4 0 4 1,1,2,2
29002:  a 3 0 3 1,2
% SZS status Timeout for LAT072-1.p
NO CLASH, using fixed ground order
29018: Facts:
29018:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
29018: Goal:
29018:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
29018: Order:
29018:   nrkbo
29018: Leaf order:
29018:  f 18 2 8 0,2
29018:  c 3 0 3 1,2,2,2,2
29018:  b 3 0 3 1,2,2
29018:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29019: Facts:
29019:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
29019: Goal:
29019:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
29019: Order:
29019:   kbo
29019: Leaf order:
29019:  f 18 2 8 0,2
29019:  c 3 0 3 1,2,2,2,2
29019:  b 3 0 3 1,2,2
29019:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29020: Facts:
29020:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
29020: Goal:
29020:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
29020: Order:
29020:   lpo
29020: Leaf order:
29020:  f 18 2 8 0,2
29020:  c 3 0 3 1,2,2,2,2
29020:  b 3 0 3 1,2,2
29020:  a 4 0 4 1,2
% SZS status Timeout for LAT073-1.p
NO CLASH, using fixed ground order
29047: Facts:
29047:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29047: Goal:
29047:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29047: Order:
29047:   nrkbo
29047: Leaf order:
29047:  f 19 2 8 0,2
29047:  c 3 0 3 2,1,2,2
29047:  b 4 0 4 1,1,2,2
29047:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29048: Facts:
29048:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29048: Goal:
29048:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29048: Order:
29048:   kbo
29048: Leaf order:
29048:  f 19 2 8 0,2
29048:  c 3 0 3 2,1,2,2
29048:  b 4 0 4 1,1,2,2
29048:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29049: Facts:
29049:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29049: Goal:
29049:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
29049: Order:
29049:   lpo
29049: Leaf order:
29049:  f 19 2 8 0,2
29049:  c 3 0 3 2,1,2,2
29049:  b 4 0 4 1,1,2,2
29049:  a 3 0 3 1,2
% SZS status Timeout for LAT074-1.p
NO CLASH, using fixed ground order
29065: Facts:
29065:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29065: Goal:
29065:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
29065: Order:
29065:   nrkbo
29065: Leaf order:
29065:  f 19 2 8 0,2
29065:  c 3 0 3 1,2,2,2,2
29065:  b 3 0 3 1,2,2
29065:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29066: Facts:
29066:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29066: Goal:
29066:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
29066: Order:
29066:   kbo
29066: Leaf order:
29066:  f 19 2 8 0,2
29066:  c 3 0 3 1,2,2,2,2
29066:  b 3 0 3 1,2,2
29066:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29067: Facts:
29067:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
29067: Goal:
29067:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
29067: Order:
29067:   lpo
29067: Leaf order:
29067:  f 19 2 8 0,2
29067:  c 3 0 3 1,2,2,2,2
29067:  b 3 0 3 1,2,2
29067:  a 4 0 4 1,2
% SZS status Timeout for LAT075-1.p
NO CLASH, using fixed ground order
29098: Facts:
29098:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29098: Goal:
29098:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29098: Order:
29098:   nrkbo
29098: Leaf order:
29098:  f 20 2 8 0,2
29098:  c 3 0 3 2,1,2,2
29098:  b 4 0 4 1,1,2,2
29098:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29099: Facts:
29099:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29099: Goal:
29099:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29099: Order:
29099:   kbo
29099: Leaf order:
29099:  f 20 2 8 0,2
29099:  c 3 0 3 2,1,2,2
29099:  b 4 0 4 1,1,2,2
29099:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29100: Facts:
29100:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29100: Goal:
29100:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
29100: Order:
29100:   lpo
29100: Leaf order:
29100:  f 20 2 8 0,2
29100:  c 3 0 3 2,1,2,2
29100:  b 4 0 4 1,1,2,2
29100:  a 3 0 3 1,2
% SZS status Timeout for LAT076-1.p
NO CLASH, using fixed ground order
29161: Facts:
NO CLASH, using fixed ground order
29162: Facts:
29162:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29162: Goal:
29162:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
29162: Order:
29162:   kbo
29162: Leaf order:
29162:  f 20 2 8 0,2
29162:  c 3 0 3 1,2,2,2,2
29162:  b 3 0 3 1,2,2
29162:  a 4 0 4 1,2
29161:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29161: Goal:
29161:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
29161: Order:
29161:   nrkbo
29161: Leaf order:
29161:  f 20 2 8 0,2
29161:  c 3 0 3 1,2,2,2,2
29161:  b 3 0 3 1,2,2
29161:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29163: Facts:
29163:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
29163: Goal:
29163:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
29163: Order:
29163:   lpo
29163: Leaf order:
29163:  f 20 2 8 0,2
29163:  c 3 0 3 1,2,2,2,2
29163:  b 3 0 3 1,2,2
29163:  a 4 0 4 1,2
% SZS status Timeout for LAT077-1.p
NO CLASH, using fixed ground order
29191: Facts:
29191:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29191: Goal:
29191:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29191: Order:
29191:   nrkbo
29191: Leaf order:
29191:  f 20 2 8 0,2
29191:  c 3 0 3 2,1,2,2
29191:  b 4 0 4 1,1,2,2
29191:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29192: Facts:
29192:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29192: Goal:
29192:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
29192: Order:
29192:   kbo
29192: Leaf order:
29192:  f 20 2 8 0,2
29192:  c 3 0 3 2,1,2,2
29192:  b 4 0 4 1,1,2,2
29192:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29193: Facts:
29193:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29193: Goal:
29193:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
29193: Order:
29193:   lpo
29193: Leaf order:
29193:  f 20 2 8 0,2
29193:  c 3 0 3 2,1,2,2
29193:  b 4 0 4 1,1,2,2
29193:  a 3 0 3 1,2
% SZS status Timeout for LAT078-1.p
NO CLASH, using fixed ground order
29210: Facts:
29210:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29210: Goal:
29210:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
29210: Order:
29210:   nrkbo
29210: Leaf order:
29210:  f 20 2 8 0,2
29210:  c 3 0 3 1,2,2,2,2
29210:  b 3 0 3 1,2,2
29210:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29211: Facts:
29211:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29211: Goal:
29211:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
29211: Order:
29211:   kbo
29211: Leaf order:
29211:  f 20 2 8 0,2
29211:  c 3 0 3 1,2,2,2,2
29211:  b 3 0 3 1,2,2
29211:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29212: Facts:
29212:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
29212: Goal:
29212:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
29212: Order:
29212:   lpo
29212: Leaf order:
29212:  f 20 2 8 0,2
29212:  c 3 0 3 1,2,2,2,2
29212:  b 3 0 3 1,2,2
29212:  a 4 0 4 1,2
% SZS status Timeout for LAT079-1.p
NO CLASH, using fixed ground order
29240: Facts:
29240:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29240:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29240:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29240:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29240:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29240:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29240:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29240:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29240:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
29240: Goal:
29240:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
29240: Order:
29240:   nrkbo
29240: Leaf order:
29240:  join 16 2 3 0,2,2
29240:  meet 20 2 5 0,2
29240:  c 3 0 3 2,2,2,2
29240:  b 3 0 3 1,2,2
29240:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29241: Facts:
29241:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29241:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29241:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29241:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29241:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29241:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29241:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29241:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29241:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
29241: Goal:
29241:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
29241: Order:
29241:   kbo
29241: Leaf order:
29241:  join 16 2 3 0,2,2
29241:  meet 20 2 5 0,2
29241:  c 3 0 3 2,2,2,2
29241:  b 3 0 3 1,2,2
29241:  a 4 0 4 1,2
NO CLASH, using fixed ground order
29242: Facts:
29242:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29242:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29242:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29242:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29242:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29242:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29242:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29242:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29242:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
29242: Goal:
29242:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
29242: Order:
29242:   lpo
29242: Leaf order:
29242:  join 16 2 3 0,2,2
29242:  meet 20 2 5 0,2
29242:  c 3 0 3 2,2,2,2
29242:  b 3 0 3 1,2,2
29242:  a 4 0 4 1,2
% SZS status Timeout for LAT139-1.p
NO CLASH, using fixed ground order
29258: Facts:
29258:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29258:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29258:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29258:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29258:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29258:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29258:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29258:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29258:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
29258: Goal:
29258:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29258: Order:
29258:   nrkbo
29258: Leaf order:
29258:  join 17 2 4 0,2,2
29258:  meet 21 2 6 0,2
29258:  c 3 0 3 2,2,2,2
29258:  b 3 0 3 1,2,2
29258:  a 6 0 6 1,2
NO CLASH, using fixed ground order
29259: Facts:
29259:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29259:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29259:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29259:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29259:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29259:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29259:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29259:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29259:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
29259: Goal:
29259:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29259: Order:
29259:   kbo
29259: Leaf order:
29259:  join 17 2 4 0,2,2
29259:  meet 21 2 6 0,2
29259:  c 3 0 3 2,2,2,2
NO CLASH, using fixed ground order
29260: Facts:
29260:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29260:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29260:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29260:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29260:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29260:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29260:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29260:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29260:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
29260: Goal:
29260:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29260: Order:
29260:   lpo
29260: Leaf order:
29260:  join 17 2 4 0,2,2
29260:  meet 21 2 6 0,2
29260:  c 3 0 3 2,2,2,2
29260:  b 3 0 3 1,2,2
29260:  a 6 0 6 1,2
29259:  b 3 0 3 1,2,2
29259:  a 6 0 6 1,2
% SZS status Timeout for LAT141-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
29297: Facts:
29297:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29297:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29297:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29297:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29297:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29297:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29297:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29297:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29297:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
29297: Goal:
29297:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
29297: Order:
29297:   kbo
29297: Leaf order:
29297:  meet 18 2 5 0,2
29297:  d 2 0 2 2,2,2,2
29297:  join 18 2 5 0,1,2,2
29297:  c 2 0 2 2,1,2,2
29297:  b 5 0 5 1,1,2,2
29297:  a 3 0 3 1,2
29296: Facts:
29296:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29296:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29296:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29296:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29296:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29296:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29296:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29296:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29296:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
29296: Goal:
29296:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
29296: Order:
29296:   nrkbo
29296: Leaf order:
29296:  meet 18 2 5 0,2
29296:  d 2 0 2 2,2,2,2
29296:  join 18 2 5 0,1,2,2
29296:  c 2 0 2 2,1,2,2
29296:  b 5 0 5 1,1,2,2
29296:  a 3 0 3 1,2
NO CLASH, using fixed ground order
29298: Facts:
29298:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29298:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29298:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29298:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29298:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29298:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29298:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29298:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29298:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
29298: Goal:
29298:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
29298: Order:
29298:   lpo
29298: Leaf order:
29298:  meet 18 2 5 0,2
29298:  d 2 0 2 2,2,2,2
29298:  join 18 2 5 0,1,2,2
29298:  c 2 0 2 2,1,2,2
29298:  b 5 0 5 1,1,2,2
29298:  a 3 0 3 1,2
% SZS status Timeout for LAT161-1.p
NO CLASH, using fixed ground order
29316: Facts:
29316:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29316:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29316:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29316:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29316:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29316:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29316:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29316:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29316:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
29316: Goal:
29316:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29316: Order:
29316:   nrkbo
29316: Leaf order:
29316:  join 19 2 4 0,2,2
29316:  meet 19 2 6 0,2
29316:  c 3 0 3 2,2,2,2
29316:  b 3 0 3 1,2,2
29316:  a 6 0 6 1,2
NO CLASH, using fixed ground order
29317: Facts:
29317:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29317:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29317:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29317:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29317:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29317:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29317:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29317:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29317:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
29317: Goal:
29317:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29317: Order:
29317:   kbo
29317: Leaf order:
29317:  join 19 2 4 0,2,2
29317:  meet 19 2 6 0,2
29317:  c 3 0 3 2,2,2,2
29317:  b 3 0 3 1,2,2
29317:  a 6 0 6 1,2
NO CLASH, using fixed ground order
29318: Facts:
29318:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29318:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29318:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29318:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29318:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29318:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29318:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29318:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29318:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
29318: Goal:
29318:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29318: Order:
29318:   lpo
29318: Leaf order:
29318:  join 19 2 4 0,2,2
29318:  meet 19 2 6 0,2
29318:  c 3 0 3 2,2,2,2
29318:  b 3 0 3 1,2,2
29318:  a 6 0 6 1,2
% SZS status Timeout for LAT177-1.p
NO CLASH, using fixed ground order
29346: Facts:
29346:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
29346:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
NO CLASH, using fixed ground order
29347: Facts:
29347:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
29347:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
29347:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
29347:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
29347:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
29347:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
29347:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
29347:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
29347:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =>=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
29347:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
29347:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
29347:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
29347:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
NO CLASH, using fixed ground order
29346:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
29346:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
29346:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
29346:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
29346:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
29345: Facts:
29346:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
29346:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =<=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
29345:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
29345:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
29346:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
29345:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
29346:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
29345:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
29346:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
29346:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
29346:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =<=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
29345:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
29345:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
29345:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
29346:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =<=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
29345:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
29346:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =<=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
29345:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =<=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
29346:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =<=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
29345:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
29345:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
29345:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
29345:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
29345:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =<=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
29345:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =<=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
29345:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =<=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
29345:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =<=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
29345:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =?= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
29347:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =<=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
29345:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =<=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
29345:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
29347:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =<=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
29347:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =<=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
29347:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =<=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
29347:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =>= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
29347:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =<=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
29347:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
29347:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
29347:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =>= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
29347:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =>=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
29347:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =<=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
29347:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =>=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
29347:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =<=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
29347: Goal:
29347:  Id :   1, {_}:
          s a b c d =>= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29347: Order:
29347:   lpo
29347: Leaf order:
29347:  commutator 1 2 0 
29347:  associator 6 3 0 
29347:  multiply 51 2 0 
29347:  additive_identity 11 0 0 
29347:  add 22 2 0 
29347:  additive_inverse 20 1 1 0,3
29347:  s 3 4 2 0,2
29347:  d 2 0 2 4,2
29347:  c 2 0 2 3,2
29347:  b 2 0 2 2,2
29347:  a 2 0 2 1,2
29346:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =>= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
29345:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
29345:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =?= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
29345:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =<=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
29345:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =?=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
29345:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =?=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
29345:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =?=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
29345: Goal:
29345:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29345: Order:
29345:   nrkbo
29345: Leaf order:
29345:  commutator 1 2 0 
29345:  associator 6 3 0 
29345:  multiply 51 2 0 
29345:  additive_identity 11 0 0 
29345:  add 22 2 0 
29345:  additive_inverse 20 1 1 0,3
29345:  s 3 4 2 0,2
29345:  d 2 0 2 4,2
29345:  c 2 0 2 3,2
29345:  b 2 0 2 2,2
29345:  a 2 0 2 1,2
29346:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =<=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
29346:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
29346:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
29346:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =>= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
29346:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =<=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
29346:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =<=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
29346:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =>=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
29346:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =<=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
29346: Goal:
29346:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29346: Order:
29346:   kbo
29346: Leaf order:
29346:  commutator 1 2 0 
29346:  associator 6 3 0 
29346:  multiply 51 2 0 
29346:  additive_identity 11 0 0 
29346:  add 22 2 0 
29346:  additive_inverse 20 1 1 0,3
29346:  s 3 4 2 0,2
29346:  d 2 0 2 4,2
29346:  c 2 0 2 3,2
29346:  b 2 0 2 2,2
29346:  a 2 0 2 1,2
% SZS status Timeout for RNG010-5.p
NO CLASH, using fixed ground order
29364: Facts:
29364:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29364:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29364:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29364:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29364:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29364:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29364:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29364:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29364:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29364:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29364:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29364:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29364:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29364:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29364:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29364:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =<=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
29364:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =<=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
29364:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =>=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
29364:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =<=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
29364: Goal:
29364:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29364: Order:
29364:   kbo
29364: Leaf order:
29364:  commutator 1 2 0 
29364:  associator 4 3 0 
29364:  multiply 43 2 0 
29364:  add 18 2 0 
29364:  additive_identity 8 0 0 
29364:  additive_inverse 9 1 1 0,3
29364:  s 3 4 2 0,2
29364:  d 2 0 2 4,2
29364:  c 2 0 2 3,2
29364:  b 2 0 2 2,2
29364:  a 2 0 2 1,2
NO CLASH, using fixed ground order
29363: Facts:
29363:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29363:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29363:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29363:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29363:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29363:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29363:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29363:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29363:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29363:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29363:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29363:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29363:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29363:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29363:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29363:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =<=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
29363:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =?=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
29363:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =?=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
29363:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =?=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
29363: Goal:
29363:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29363: Order:
29363:   nrkbo
29363: Leaf order:
29363:  commutator 1 2 0 
29363:  associator 4 3 0 
29363:  multiply 43 2 0 
29363:  add 18 2 0 
29363:  additive_identity 8 0 0 
29363:  additive_inverse 9 1 1 0,3
29363:  s 3 4 2 0,2
29363:  d 2 0 2 4,2
29363:  c 2 0 2 3,2
29363:  b 2 0 2 2,2
29363:  a 2 0 2 1,2
NO CLASH, using fixed ground order
29365: Facts:
29365:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29365:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29365:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29365:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29365:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29365:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29365:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29365:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29365:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29365:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29365:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29365:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29365:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29365:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29365:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29365:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =>=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
29365:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =<=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
29365:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =>=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
29365:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =<=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
29365: Goal:
29365:  Id :   1, {_}:
          s a b c d =>= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29365: Order:
29365:   lpo
29365: Leaf order:
29365:  commutator 1 2 0 
29365:  associator 4 3 0 
29365:  multiply 43 2 0 
29365:  add 18 2 0 
29365:  additive_identity 8 0 0 
29365:  additive_inverse 9 1 1 0,3
29365:  s 3 4 2 0,2
29365:  d 2 0 2 4,2
29365:  c 2 0 2 3,2
29365:  b 2 0 2 2,2
29365:  a 2 0 2 1,2
% SZS status Timeout for RNG010-6.p
NO CLASH, using fixed ground order
29396: Facts:
29396:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29396:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29396:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29396:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29396:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29396:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29396:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29396:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29396:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29396:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29396:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29396:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29396:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29396:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29396:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29396:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29396:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =<=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29396:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =<=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29396:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29396:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29396:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29396:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29396:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =<=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
29396:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =?=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
29396:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =?=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
29396:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =?=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
29396: Goal:
29396:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29396: Order:
29396:   nrkbo
29396: Leaf order:
29396:  commutator 1 2 0 
29396:  associator 4 3 0 
29396:  multiply 61 2 0 
29396:  add 26 2 0 
29396:  additive_identity 8 0 0 
29396:  additive_inverse 25 1 1 0,3
29396:  s 3 4 2 0,2
29396:  d 2 0 2 4,2
29396:  c 2 0 2 3,2
29396:  b 2 0 2 2,2
29396:  a 2 0 2 1,2
NO CLASH, using fixed ground order
29397: Facts:
29397:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29397:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29397:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29397:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29397:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29397:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29397:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29397:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29397:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29397:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29397:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29397:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29397:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29397:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29397:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29397:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29397:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =<=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29397:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =<=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29397:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29397:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29397:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29397:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29397:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =<=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
29397:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =<=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
29397:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =>=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
29397:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =<=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
29397: Goal:
29397:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29397: Order:
29397:   kbo
29397: Leaf order:
29397:  commutator 1 2 0 
29397:  associator 4 3 0 
29397:  multiply 61 2 0 
29397:  add 26 2 0 
29397:  additive_identity 8 0 0 
29397:  additive_inverse 25 1 1 0,3
29397:  s 3 4 2 0,2
29397:  d 2 0 2 4,2
29397:  c 2 0 2 3,2
29397:  b 2 0 2 2,2
29397:  a 2 0 2 1,2
NO CLASH, using fixed ground order
29398: Facts:
29398:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29398:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29398:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29398:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29398:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29398:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29398:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29398:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29398:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29398:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29398:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29398:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29398:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29398:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29398:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29398:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29398:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =<=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29398:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =<=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29398:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29398:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29398:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29398:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29398:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =>=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
29398:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =<=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
29398:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =>=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
29398:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =<=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
29398: Goal:
29398:  Id :   1, {_}:
          s a b c d =>= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
29398: Order:
29398:   lpo
29398: Leaf order:
29398:  commutator 1 2 0 
29398:  associator 4 3 0 
29398:  multiply 61 2 0 
29398:  add 26 2 0 
29398:  additive_identity 8 0 0 
29398:  additive_inverse 25 1 1 0,3
29398:  s 3 4 2 0,2
29398:  d 2 0 2 4,2
29398:  c 2 0 2 3,2
29398:  b 2 0 2 2,2
29398:  a 2 0 2 1,2
% SZS status Timeout for RNG010-7.p
NO CLASH, using fixed ground order
29437: Facts:
29437:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29437:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29437:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29437:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29437:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29437:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29437:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29437:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29437:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29437:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29437:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29437:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29437:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29437:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29437: Goal:
29437:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29437: Order:
29437:   nrkbo
29437: Leaf order:
29437:  commutator 1 2 0 
29437:  additive_inverse 6 1 0 
29437:  additive_identity 9 0 1 3
29437:  add 17 2 1 0,2
29437:  multiply 22 2 4 0,1,2
29437:  associator 7 3 6 0,1,1,2
29437:  y 6 0 6 3,1,1,2
29437:  x 12 0 12 1,1,1,2
NO CLASH, using fixed ground order
29438: Facts:
29438:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29438:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29438:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29438:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29438:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29438:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29438:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29438:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29438:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29438:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29438:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29438:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29438:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29438:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29438: Goal:
29438:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29438: Order:
29438:   kbo
29438: Leaf order:
29438:  commutator 1 2 0 
29438:  additive_inverse 6 1 0 
29438:  additive_identity 9 0 1 3
29438:  add 17 2 1 0,2
29438:  multiply 22 2 4 0,1,2
29438:  associator 7 3 6 0,1,1,2
29438:  y 6 0 6 3,1,1,2
29438:  x 12 0 12 1,1,1,2
NO CLASH, using fixed ground order
29439: Facts:
29439:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29439:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29439:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29439:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29439:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29439:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29439:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29439:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29439:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29439:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29439:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29439:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29439:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29439:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29439: Goal:
29439:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29439: Order:
29439:   lpo
29439: Leaf order:
29439:  commutator 1 2 0 
29439:  additive_inverse 6 1 0 
29439:  additive_identity 9 0 1 3
29439:  add 17 2 1 0,2
29439:  multiply 22 2 4 0,1,2
29439:  associator 7 3 6 0,1,1,2
29439:  y 6 0 6 3,1,1,2
29439:  x 12 0 12 1,1,1,2
% SZS status Timeout for RNG030-6.p
NO CLASH, using fixed ground order
29722: Facts:
29722:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29722:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29722:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29722:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29722:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29722:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29722:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29722:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29722:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29722:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29722:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29722:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29722:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29722:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29722:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29722:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29722:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29722:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29722:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29722:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29722:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29722: Goal:
29722:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29722: Order:
29722:   nrkbo
29722: Leaf order:
29722:  commutator 1 2 0 
29722:  additive_inverse 22 1 0 
29722:  additive_identity 9 0 1 3
29722:  add 25 2 1 0,2
29722:  multiply 40 2 4 0,1,2add
29722:  associator 7 3 6 0,1,1,2
29722:  y 6 0 6 3,1,1,2
29722:  x 12 0 12 1,1,1,2
NO CLASH, using fixed ground order
29723: Facts:
29723:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29723:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29723:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29723:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29723:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29723:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29723:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29723:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29723:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29723:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29723:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29723:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29723:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29723:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29723:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29723:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29723:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29723:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29723:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29723:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29723:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29723: Goal:
29723:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29723: Order:
29723:   kbo
29723: Leaf order:
29723:  commutator 1 2 0 
29723:  additive_inverse 22 1 0 
29723:  additive_identity 9 0 1 3
29723:  add 25 2 1 0,2
29723:  multiply 40 2 4 0,1,2add
29723:  associator 7 3 6 0,1,1,2
29723:  y 6 0 6 3,1,1,2
29723:  x 12 0 12 1,1,1,2
NO CLASH, using fixed ground order
29724: Facts:
29724:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29724:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29724:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29724:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29724:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29724:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29724:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29724:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29724:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29724:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29724:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29724:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29724:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29724:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29724:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29724:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29724:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29724:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29724:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29724:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29724:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29724: Goal:
29724:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
29724: Order:
29724:   lpo
29724: Leaf order:
29724:  commutator 1 2 0 
29724:  additive_inverse 22 1 0 
29724:  additive_identity 9 0 1 3
29724:  add 25 2 1 0,2
29724:  multiply 40 2 4 0,1,2add
29724:  associator 7 3 6 0,1,1,2
29724:  y 6 0 6 3,1,1,2
29724:  x 12 0 12 1,1,1,2
% SZS status Timeout for RNG030-7.p
NO CLASH, using fixed ground order
29762: Facts:
29762:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29762:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29762:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29762:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29762:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29762:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29762:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29762:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29762:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29762:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29762:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29762:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29762:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29762:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29762: Goal:
29762:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29762: Order:
29762:   nrkbo
29762: Leaf order:
29762:  commutator 1 2 0 
29762:  additive_inverse 6 1 0 
29762:  additive_identity 9 0 1 3
29762:  add 21 2 5 0,2
29762:  multiply 30 2 12 0,1,1,1,1,1,2
29762:  associator 19 3 18 0,1,1,1,1,1,1,2
29762:  y 18 0 18 3,1,1,1,1,1,1,2
29762:  x 36 0 36 1,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
29763: Facts:
29763:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29763:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29763:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29763:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29763:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29763:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29763:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
NO CLASH, using fixed ground order
29764: Facts:
29764:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29764:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29764:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29764:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29764:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29764:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29764:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29764:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29764:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29764:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29764:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29764:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29764:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29764:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29764: Goal:
29764:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29764: Order:
29764:   lpo
29764: Leaf order:
29764:  commutator 1 2 0 
29764:  additive_inverse 6 1 0 
29764:  additive_identity 9 0 1 3
29764:  add 21 2 5 0,2
29764:  multiply 30 2 12 0,1,1,1,1,1,2
29764:  associator 19 3 18 0,1,1,1,1,1,1,2
29764:  y 18 0 18 3,1,1,1,1,1,1,2
29764:  x 36 0 36 1,1,1,1,1,1,1,2
29763:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29763:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29763:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29763:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29763:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29763:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
29763:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
29763: Goal:
29763:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29763: Order:
29763:   kbo
29763: Leaf order:
29763:  commutator 1 2 0 
29763:  additive_inverse 6 1 0 
29763:  additive_identity 9 0 1 3
29763:  add 21 2 5 0,2
29763:  multiply 30 2 12 0,1,1,1,1,1,2
29763:  associator 19 3 18 0,1,1,1,1,1,1,2
29763:  y 18 0 18 3,1,1,1,1,1,1,2
29763:  x 36 0 36 1,1,1,1,1,1,1,2
% SZS status Timeout for RNG032-6.p
NO CLASH, using fixed ground order
29792: Facts:
29792:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29792:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29792:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29792:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29792:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29792:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29792:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29792:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29792:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29792:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29792:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29792:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29792:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29792:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29792:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29792:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29792:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29792:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29792:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29792:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29792:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29792: Goal:
29792:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29792: Order:
29792:   nrkbo
29792: Leaf order:
29792:  commutator 1 2 0 
29792:  additive_inverse 22 1 0 
29792:  additive_identity 9 0 1 3
29792:  add 29 2 5 0,2
29792:  multiply 48 2 12 0,1,1,1,1,1,2add
29792:  associator 19 3 18 0,1,1,1,1,1,1,2
29792:  y 18 0 18 3,1,1,1,1,1,1,2
29792:  x 36 0 36 1,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
29793: Facts:
29793:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29793:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29793:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29793:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29793:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29793:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29793:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29793:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29793:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29793:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29793:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29793:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29793:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29793:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29793:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29793:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29793:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29793:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29793:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29793:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29793:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29793: Goal:
29793:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29793: Order:
29793:   kbo
29793: Leaf order:
29793:  commutator 1 2 0 
29793:  additive_inverse 22 1 0 
29793:  additive_identity 9 0 1 3
29793:  add 29 2 5 0,2
29793:  multiply 48 2 12 0,1,1,1,1,1,2add
29793:  associator 19 3 18 0,1,1,1,1,1,1,2
29793:  y 18 0 18 3,1,1,1,1,1,1,2
29793:  x 36 0 36 1,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
29794: Facts:
29794:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29794:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29794:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29794:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29794:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29794:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29794:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29794:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29794:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29794:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29794:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29794:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29794:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29794:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29794:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29794:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29794:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29794:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29794:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29794:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
29794:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
29794: Goal:
29794:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
29794: Order:
29794:   lpo
29794: Leaf order:
29794:  commutator 1 2 0 
29794:  additive_inverse 22 1 0 
29794:  additive_identity 9 0 1 3
29794:  add 29 2 5 0,2
29794:  multiply 48 2 12 0,1,1,1,1,1,2add
29794:  associator 19 3 18 0,1,1,1,1,1,1,2
29794:  y 18 0 18 3,1,1,1,1,1,1,2
29794:  x 36 0 36 1,1,1,1,1,1,1,2
% SZS status Timeout for RNG032-7.p
NO CLASH, using fixed ground order
29810: Facts:
29810:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29810:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29810:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29810:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29810:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29810:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29810:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29810:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29810:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29810:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29810:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29810:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29810:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29810:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29810:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29810: Goal:
29810:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29810: Order:
29810:   nrkbo
29810: Leaf order:
29810:  additive_inverse 6 1 0 
29810:  additive_identity 8 0 0 
29810:  add 18 2 2 0,2
29810:  commutator 2 2 1 0,3,2,2
29810:  associator 5 3 4 0,1,2
29810:  w 4 0 4 3,1,2
29810:  z 4 0 4 2,1,2
29810:  multiply 25 2 3 0,1,1,2
29810:  y 4 0 4 2,1,1,2
29810:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29811: Facts:
29811:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29811:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29811:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29811:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29811:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29811:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29811:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29811:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29811:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29811:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29811:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29811:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29811:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29811:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29811:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29811: Goal:
29811:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29811: Order:
29811:   kbo
29811: Leaf order:
29811:  additive_inverse 6 1 0 
29811:  additive_identity 8 0 0 
29811:  add 18 2 2 0,2
29811:  commutator 2 2 1 0,3,2,2
29811:  associator 5 3 4 0,1,2
29811:  w 4 0 4 3,1,2
29811:  z 4 0 4 2,1,2
29811:  multiply 25 2 3 0,1,1,2
29811:  y 4 0 4 2,1,1,2
29811:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29812: Facts:
29812:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29812:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29812:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29812:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29812:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29812:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29812:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29812:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29812:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29812:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29812:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29812:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29812:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29812:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29812:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29812: Goal:
29812:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29812: Order:
29812:   lpo
29812: Leaf order:
29812:  additive_inverse 6 1 0 
29812:  additive_identity 8 0 0 
29812:  add 18 2 2 0,2
29812:  commutator 2 2 1 0,3,2,2
29812:  associator 5 3 4 0,1,2
29812:  w 4 0 4 3,1,2
29812:  z 4 0 4 2,1,2
29812:  multiply 25 2 3 0,1,1,2
29812:  y 4 0 4 2,1,1,2
29812:  x 4 0 4 1,1,1,2
% SZS status Timeout for RNG033-6.p
NO CLASH, using fixed ground order
29844: Facts:
29844:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29844:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29844:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29844:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29844:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29844:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29844:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29844:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29844:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29844:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29844:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29844:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29844:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29844:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29844:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29844:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29844:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29844:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29844:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29844:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29844:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29844:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29844: Goal:
29844:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29844: Order:
29844:   nrkbo
29844: Leaf order:
29844:  additive_inverse 22 1 0 
29844:  additive_identity 8 0 0 
29844:  add 26 2 2 0,2
29844:  commutator 2 2 1 0,3,2,2
29844:  associator 5 3 4 0,1,2
29844:  w 4 0 4 3,1,2
29844:  z 4 0 4 2,1,2
29844:  multiply 43 2 3 0,1,1,2
29844:  y 4 0 4 2,1,1,2
29844:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29846: Facts:
29846:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29846:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29846:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29846:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29846:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29846:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29846:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29846:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29846:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29846:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29846:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29846:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29846:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29846:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29846:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29846:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29846:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29846:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29846:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29846:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29846:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29846:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29846: Goal:
29846:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29846: Order:
29846:   lpo
29846: Leaf order:
29846:  additive_inverse 22 1 0 
29846:  additive_identity 8 0 0 
29846:  add 26 2 2 0,2
29846:  commutator 2 2 1 0,3,2,2
29846:  associator 5 3 4 0,1,2
29846:  w 4 0 4 3,1,2
29846:  z 4 0 4 2,1,2
29846:  multiply 43 2 3 0,1,1,2
29846:  y 4 0 4 2,1,1,2
29846:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29845: Facts:
29845:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29845:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29845:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29845:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29845:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29845:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29845:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29845:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29845:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29845:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29845:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29845:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29845:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29845:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29845:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29845:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29845:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29845:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29845:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29845:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29845:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29845:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29845: Goal:
29845:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29845: Order:
29845:   kbo
29845: Leaf order:
29845:  additive_inverse 22 1 0 
29845:  additive_identity 8 0 0 
29845:  add 26 2 2 0,2
29845:  commutator 2 2 1 0,3,2,2
29845:  associator 5 3 4 0,1,2
29845:  w 4 0 4 3,1,2
29845:  z 4 0 4 2,1,2
29845:  multiply 43 2 3 0,1,1,2
29845:  y 4 0 4 2,1,1,2
29845:  x 4 0 4 1,1,1,2
% SZS status Timeout for RNG033-7.p
NO CLASH, using fixed ground order
29862: Facts:
29862:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29862:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29862:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29862:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29862:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29862:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29862:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29862:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29862:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29862:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29862:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29862:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29862:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29862:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29862:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29862:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =?=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
29862: Goal:
29862:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29862: Order:
29862:   nrkbo
29862: Leaf order:
29862:  additive_inverse 6 1 0 
29862:  additive_identity 8 0 0 
29862:  add 18 2 2 0,2
29862:  commutator 2 2 1 0,3,2,2
29862:  associator 5 3 4 0,1,2
29862:  w 4 0 4 3,1,2
29862:  z 4 0 4 2,1,2
29862:  multiply 31 2 3 0,1,1,2
29862:  y 4 0 4 2,1,1,2
29862:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29863: Facts:
29863:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29863:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29863:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29863:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29863:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29863:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29863:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29863:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29863:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29863:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29863:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29863:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29863:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29863:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29863:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29863:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =<=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
29863: Goal:
29863:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29863: Order:
29863:   kbo
29863: Leaf order:
29863:  additive_inverse 6 1 0 
29863:  additive_identity 8 0 0 
29863:  add 18 2 2 0,2
29863:  commutator 2 2 1 0,3,2,2
29863:  associator 5 3 4 0,1,2
29863:  w 4 0 4 3,1,2
29863:  z 4 0 4 2,1,2
29863:  multiply 31 2 3 0,1,1,2
29863:  y 4 0 4 2,1,1,2
29863:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29864: Facts:
29864:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29864:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29864:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29864:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29864:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29864:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29864:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29864:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29864:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29864:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29864:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29864:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29864:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29864:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29864:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29864:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =<=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
29864: Goal:
29864:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29864: Order:
29864:   lpo
29864: Leaf order:
29864:  additive_inverse 6 1 0 
29864:  additive_identity 8 0 0 
29864:  add 18 2 2 0,2
29864:  commutator 2 2 1 0,3,2,2
29864:  associator 5 3 4 0,1,2
29864:  w 4 0 4 3,1,2
29864:  z 4 0 4 2,1,2
29864:  multiply 31 2 3 0,1,1,2
29864:  y 4 0 4 2,1,1,2
29864:  x 4 0 4 1,1,1,2
% SZS status Timeout for RNG033-8.p
NO CLASH, using fixed ground order
29900: Facts:
29900:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29900:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29900:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29900:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29900:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29900:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29900:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29900:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29900:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29900:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29900:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29900:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29900:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29900:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29900:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29900:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29900:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29900:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29900:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29900:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29900:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29900:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29900:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =?=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
29900: Goal:
29900:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29900: Order:
29900:   nrkbo
29900: Leaf order:
29900:  additive_inverse 22 1 0 
29900:  additive_identity 8 0 0 
29900:  add 26 2 2 0,2
29900:  commutator 2 2 1 0,3,2,2
29900:  associator 5 3 4 0,1,2
29900:  w 4 0 4 3,1,2
29900:  z 4 0 4 2,1,2
29900:  multiply 49 2 3 0,1,1,2
29900:  y 4 0 4 2,1,1,2
29900:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29901: Facts:
29901:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29901:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29901:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29901:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29901:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29901:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29901:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29901:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29901:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29901:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29901:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29901:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29901:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29901:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29901:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29901:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29901:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29901:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29901:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29901:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29901:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29901:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29901:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =<=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
29901: Goal:
29901:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29901: Order:
29901:   kbo
29901: Leaf order:
29901:  additive_inverse 22 1 0 
29901:  additive_identity 8 0 0 
29901:  add 26 2 2 0,2
29901:  commutator 2 2 1 0,3,2,2
29901:  associator 5 3 4 0,1,2
29901:  w 4 0 4 3,1,2
29901:  z 4 0 4 2,1,2
29901:  multiply 49 2 3 0,1,1,2
29901:  y 4 0 4 2,1,1,2
29901:  x 4 0 4 1,1,1,2
NO CLASH, using fixed ground order
29902: Facts:
29902:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29902:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29902:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29902:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29902:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29902:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29902:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29902:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29902:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29902:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29902:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29902:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29902:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29902:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29902:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29902:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29902:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29902:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29902:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29902:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29902:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29902:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29902:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =<=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
29902: Goal:
29902:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =<=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
29902: Order:
29902:   lpo
29902: Leaf order:
29902:  additive_inverse 22 1 0 
29902:  additive_identity 8 0 0 
29902:  add 26 2 2 0,2
29902:  commutator 2 2 1 0,3,2,2
29902:  associator 5 3 4 0,1,2
29902:  w 4 0 4 3,1,2
29902:  z 4 0 4 2,1,2
29902:  multiply 49 2 3 0,1,1,2
29902:  y 4 0 4 2,1,1,2
29902:  x 4 0 4 1,1,1,2
% SZS status Timeout for RNG033-9.p
NO CLASH, using fixed ground order
29918: Facts:
29918:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29918:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29918:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
29918:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
29918:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
29918:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
29918:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
29918:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29918:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29918:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
29918:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
29918: Goal:
29918:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
29918: Order:
29918:   nrkbo
29918: Leaf order:
29918:  additive_inverse 2 1 0 
29918:  add 14 2 0 
29918:  additive_identity 4 0 0 
29918:  c 2 0 1 3
29918:  multiply 16 2 1 0,2
29918:  a 2 0 1 2,2
29918:  b 2 0 1 1,2
NO CLASH, using fixed ground order
29919: Facts:
29919:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29919:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29919:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
29919:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
29919:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
29919:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
29919:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
29919:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29919:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29919:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
29919:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
29919: Goal:
29919:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
29919: Order:
29919:   kbo
29919: Leaf order:
29919:  additive_inverse 2 1 0 
29919:  add 14 2 0 
29919:  additive_identity 4 0 0 
NO CLASH, using fixed ground order
29920: Facts:
29920:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29920:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29920:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
29920:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
29920:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
29920:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
29920:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
29920:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29920:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29920:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
29920:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
29920: Goal:
29920:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
29920: Order:
29920:   lpo
29920: Leaf order:
29920:  additive_inverse 2 1 0 
29920:  add 14 2 0 
29920:  additive_identity 4 0 0 
29920:  c 2 0 1 3
29920:  multiply 16 2 1 0,2
29920:  a 2 0 1 2,2
29920:  b 2 0 1 1,2
29919:  c 2 0 1 3
29919:  multiply 16 2 1 0,2
29919:  a 2 0 1 2,2
29919:  b 2 0 1 1,2
% SZS status Timeout for RNG036-7.p
NO CLASH, using fixed ground order
29951: Facts:
29951:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29951:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29951:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29951: Goal:
29951:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29951: Order:
29951:   nrkbo
29951: Leaf order:
29951:  add 12 2 3 0,2
29951:  negate 9 1 5 0,1,2
29951:  b 3 0 3 1,2,1,1,2
29951:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
29952: Facts:
29952:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29952:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29952:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29952: Goal:
29952:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29952: Order:
29952:   kbo
29952: Leaf order:
29952:  add 12 2 3 0,2
29952:  negate 9 1 5 0,1,2
29952:  b 3 0 3 1,2,1,1,2
29952:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
29953: Facts:
29953:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29953:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29953:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29953: Goal:
29953:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29953: Order:
29953:   lpo
29953: Leaf order:
29953:  add 12 2 3 0,2
29953:  negate 9 1 5 0,1,2
29953:  b 3 0 3 1,2,1,1,2
29953:  a 2 0 2 1,1,1,2
% SZS status Timeout for ROB001-1.p
NO CLASH, using fixed ground order
29969: Facts:
29969:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29969:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29969:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29969:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
29969: Goal:
29969:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29969: Order:
29969:   nrkbo
29969: Leaf order:
29969:  add 13 2 3 0,2
29969:  negate 11 1 5 0,1,2
29969:  b 5 0 3 1,2,1,1,2
29969:  a 3 0 2 1,1,1,2
NO CLASH, using fixed ground order
29970: Facts:
29970:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29970:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29970:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29970:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
29970: Goal:
29970:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29970: Order:
29970:   kbo
29970: Leaf order:
29970:  add 13 2 3 0,2
29970:  negate 11 1 5 0,1,2
29970:  b 5 0 3 1,2,1,1,2
29970:  a 3 0 2 1,1,1,2
NO CLASH, using fixed ground order
29971: Facts:
29971:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
29971:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
29971:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
29971:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
29971: Goal:
29971:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
29971: Order:
29971:   lpo
29971: Leaf order:
29971:  add 13 2 3 0,2
29971:  negate 11 1 5 0,1,2
29971:  b 5 0 3 1,2,1,1,2
29971:  a 3 0 2 1,1,1,2
% SZS status Timeout for ROB007-1.p
NO CLASH, using fixed ground order
29998: Facts:
29998:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
29998:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
29998:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
29998:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
29998: Goal:
29998:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
29998: Order:
29998:   nrkbo
29998: Leaf order:
29998:  b 2 0 0 
29998:  a 1 0 0 
29998:  negate 6 1 0 
29998:  add 11 2 1 0,2
NO CLASH, using fixed ground order
29999: Facts:
29999:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
29999:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
29999:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
29999:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
29999: Goal:
29999:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
29999: Order:
29999:   kbo
29999: Leaf order:
29999:  b 2 0 0 
29999:  a 1 0 0 
29999:  negate 6 1 0 
29999:  add 11 2 1 0,2
NO CLASH, using fixed ground order
30000: Facts:
30000:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30000:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30000:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30000:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
30000: Goal:
30000:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30000: Order:
30000:   lpo
30000: Leaf order:
30000:  b 2 0 0 
30000:  a 1 0 0 
30000:  negate 6 1 0 
30000:  add 11 2 1 0,2
% SZS status Timeout for ROB007-2.p
NO CLASH, using fixed ground order
30074: Facts:
30074:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
NO CLASH, using fixed ground order
30075: Facts:
30075:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30075:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30075:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30075:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30075: Goal:
30075:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30075: Order:
30075:   kbo
30075: Leaf order:
30075:  add 13 2 3 0,2
30075:  negate 11 1 5 0,1,2
30075:  b 5 0 3 1,2,1,1,2
30075:  a 3 0 2 1,1,1,2
30074:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30074:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30074:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30074: Goal:
30074:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30074: Order:
30074:   nrkbo
30074: Leaf order:
30074:  add 13 2 3 0,2
30074:  negate 11 1 5 0,1,2
30074:  b 5 0 3 1,2,1,1,2
30074:  a 3 0 2 1,1,1,2
NO CLASH, using fixed ground order
30076: Facts:
30076:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30076:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30076:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30076:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30076: Goal:
30076:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30076: Order:
30076:   lpo
30076: Leaf order:
30076:  add 13 2 3 0,2
30076:  negate 11 1 5 0,1,2
30076:  b 5 0 3 1,2,1,1,2
30076:  a 3 0 2 1,1,1,2
% SZS status Timeout for ROB020-1.p
NO CLASH, using fixed ground order
30104: Facts:
30104:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30104:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30104:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30104:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30104: Goal:
30104:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30104: Order:
30104:   nrkbo
30104: Leaf order:
30104:  b 2 0 0 
30104:  a 1 0 0 
30104:  negate 6 1 0 
30104:  add 11 2 1 0,2
NO CLASH, using fixed ground order
30105: Facts:
30105:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30105:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30105:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30105:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30105: Goal:
30105:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30105: Order:
30105:   kbo
30105: Leaf order:
30105:  b 2 0 0 
30105:  a 1 0 0 
30105:  negate 6 1 0 
30105:  add 11 2 1 0,2
NO CLASH, using fixed ground order
30106: Facts:
30106:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30106:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30106:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30106:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
30106: Goal:
30106:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30106: Order:
30106:   lpo
30106: Leaf order:
30106:  b 2 0 0 
30106:  a 1 0 0 
30106:  negate 6 1 0 
30106:  add 11 2 1 0,2
% SZS status Timeout for ROB020-2.p
NO CLASH, using fixed ground order
30123: Facts:
30123:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30123:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30123:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30123:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
30123: Goal:
30123:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30123: Order:
30123:   nrkbo
30123: Leaf order:
30123:  add 16 2 3 0,2
30123:  negate 13 1 5 0,1,2
30123:  b 5 0 3 1,2,1,1,2
30123:  a 6 0 2 1,1,1,2
NO CLASH, using fixed ground order
30124: Facts:
30124:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30124:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30124:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30124:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
30124: Goal:
30124:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30124: Order:
30124:   kbo
30124: Leaf order:
30124:  add 16 2 3 0,2
30124:  negate 13 1 5 0,1,2
30124:  b 5 0 3 1,2,1,1,2
30124:  a 6 0 2 1,1,1,2
NO CLASH, using fixed ground order
30125: Facts:
30125:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30125:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30125:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30125:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
30125: Goal:
30125:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30125: Order:
30125:   lpo
30125: Leaf order:
30125:  add 16 2 3 0,2
30125:  negate 13 1 5 0,1,2
30125:  b 5 0 3 1,2,1,1,2
30125:  a 6 0 2 1,1,1,2
% SZS status Timeout for ROB024-1.p
NO CLASH, using fixed ground order
30152: Facts:
30152:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30152:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30152:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30152:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
30152: Goal:
30152:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30152: Order:
30152:   nrkbo
30152: Leaf order:
30152:  c 2 0 0 
30152:  add 12 2 3 0,2
30152:  negate 11 1 5 0,1,2
30152:  b 3 0 3 1,2,1,1,2
30152:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
30153: Facts:
30153:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30153:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30153:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30153:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
30153: Goal:
30153:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30153: Order:
30153:   kbo
30153: Leaf order:
30153:  c 2 0 0 
30153:  add 12 2 3 0,2
30153:  negate 11 1 5 0,1,2
30153:  b 3 0 3 1,2,1,1,2
30153:  a 2 0 2 1,1,1,2
NO CLASH, using fixed ground order
30154: Facts:
30154:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
30154:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
30154:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
30154:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
30154: Goal:
30154:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
30154: Order:
30154:   lpo
30154: Leaf order:
30154:  c 2 0 0 
30154:  add 12 2 3 0,2
30154:  negate 11 1 5 0,1,2
30154:  b 3 0 3 1,2,1,1,2
30154:  a 2 0 2 1,1,1,2
% SZS status Timeout for ROB027-1.p
NO CLASH, using fixed ground order
30170: Facts:
30170:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
30170:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =?= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30170:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30170: Goal:
30170:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
30170: Order:
30170:   nrkbo
30170: Leaf order:
30170:  negate 6 1 2 0,2
30170:  add 10 2 1 0,1,2
NO CLASH, using fixed ground order
30171: Facts:
30171:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
30171:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30171:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30171: Goal:
30171:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
30171: Order:
30171:   kbo
30171: Leaf order:
30171:  negate 6 1 2 0,2
30171:  add 10 2 1 0,1,2
NO CLASH, using fixed ground order
30172: Facts:
30172:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
30172:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30172:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30172: Goal:
30172:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
30172: Order:
30172:   lpo
30172: Leaf order:
30172:  negate 6 1 2 0,2
30172:  add 10 2 1 0,1,2
% SZS status Timeout for ROB031-1.p
NO CLASH, using fixed ground order
30204: Facts:
30204:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
NO CLASH, using fixed ground order
30205: Facts:
30205:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
30205:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30205:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30205: Goal:
30205:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
30205: Order:
30205:   kbo
30205: Leaf order:
30205:  negate 4 1 0 
30205:  add 10 2 1 0,2
30204:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =?= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30204:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30204: Goal:
30204:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
30204: Order:
30204:   nrkbo
30204: Leaf order:
30204:  negate 4 1 0 
30204:  add 10 2 1 0,2
NO CLASH, using fixed ground order
30206: Facts:
30206:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
30206:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
30206:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
30206: Goal:
30206:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
30206: Order:
30206:   lpo
30206: Leaf order:
30206:  negate 4 1 0 
30206:  add 10 2 1 0,2
% SZS status Timeout for ROB032-1.p
