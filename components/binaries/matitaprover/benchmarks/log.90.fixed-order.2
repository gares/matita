CLASH, statistics insufficient
CLASH, statistics insufficient
22279: Facts:
22279:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22279:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22279:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22279:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22279:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =<=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
22279:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =<=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
22279:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
22279:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
22279:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
22279:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
22279:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
22279:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
22279:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
22279:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
22279: Goal:
22279:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22279: Order:
22279:   kbo
22279: Leaf order:
22279:  a 2 0 2 1,2
22279:  b 2 0 2 1,2,2
22279:  c 2 0 2 2,2,2
22279:  multiplicative_identity 4 0 0 
22279:  additive_identity 4 0 0 
22279:  inverse 4 1 0 
22279:  add 16 2 0 multiply
22279:  multiply 20 2 4 0,2add
CLASH, statistics insufficient
22280: Facts:
22280:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22280:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22280:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22280:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22280:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =>=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
22280:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =>=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
22280:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
22280:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
22280:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
22280:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
22280:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
22280:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
22280:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
22280:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
22280: Goal:
22280:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22280: Order:
22280:   lpo
22280: Leaf order:
22280:  a 2 0 2 1,2
22280:  b 2 0 2 1,2,2
22280:  c 2 0 2 2,2,2
22280:  multiplicative_identity 4 0 0 
22280:  additive_identity 4 0 0 
22280:  inverse 4 1 0 
22280:  add 16 2 0 multiply
22280:  multiply 20 2 4 0,2add
22278: Facts:
22278:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22278:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22278:  Id :   4, {_}:
          add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22278:  Id :   5, {_}:
          add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22278:  Id :   6, {_}:
          multiply (add ?16 ?17) ?18
          =<=
          add (multiply ?16 ?18) (multiply ?17 ?18)
          [18, 17, 16] by distributivity3 ?16 ?17 ?18
22278:  Id :   7, {_}:
          multiply ?20 (add ?21 ?22)
          =<=
          add (multiply ?20 ?21) (multiply ?20 ?22)
          [22, 21, 20] by distributivity4 ?20 ?21 ?22
22278:  Id :   8, {_}:
          add ?24 (inverse ?24) =>= multiplicative_identity
          [24] by additive_inverse1 ?24
22278:  Id :   9, {_}:
          add (inverse ?26) ?26 =>= multiplicative_identity
          [26] by additive_inverse2 ?26
22278:  Id :  10, {_}:
          multiply ?28 (inverse ?28) =>= additive_identity
          [28] by multiplicative_inverse1 ?28
22278:  Id :  11, {_}:
          multiply (inverse ?30) ?30 =>= additive_identity
          [30] by multiplicative_inverse2 ?30
22278:  Id :  12, {_}:
          multiply ?32 multiplicative_identity =>= ?32
          [32] by multiplicative_id1 ?32
22278:  Id :  13, {_}:
          multiply multiplicative_identity ?34 =>= ?34
          [34] by multiplicative_id2 ?34
22278:  Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
22278:  Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
22278: Goal:
22278:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22278: Order:
22278:   nrkbo
22278: Leaf order:
22278:  a 2 0 2 1,2
22278:  b 2 0 2 1,2,2
22278:  c 2 0 2 2,2,2
22278:  multiplicative_identity 4 0 0 
22278:  additive_identity 4 0 0 
22278:  inverse 4 1 0 
22278:  add 16 2 0 multiply
22278:  multiply 20 2 4 0,2add
Statistics :
Max weight : 22
Found proof, 16.771241s
% SZS status Unsatisfiable for BOO007-2.p
% SZS output start CNFRefutation for BOO007-2.p
Id :  12, {_}: multiply ?32 multiplicative_identity =>= ?32 [32] by multiplicative_id1 ?32
Id :   7, {_}: multiply ?20 (add ?21 ?22) =<= add (multiply ?20 ?21) (multiply ?20 ?22) [22, 21, 20] by distributivity4 ?20 ?21 ?22
Id :  15, {_}: add additive_identity ?38 =>= ?38 [38] by additive_id2 ?38
Id :  14, {_}: add ?36 additive_identity =>= ?36 [36] by additive_id1 ?36
Id :  10, {_}: multiply ?28 (inverse ?28) =>= additive_identity [28] by multiplicative_inverse1 ?28
Id :  13, {_}: multiply multiplicative_identity ?34 =>= ?34 [34] by multiplicative_id2 ?34
Id :   8, {_}: add ?24 (inverse ?24) =>= multiplicative_identity [24] by additive_inverse1 ?24
Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
Id :  31, {_}: add (multiply ?78 ?79) ?80 =<= multiply (add ?78 ?80) (add ?79 ?80) [80, 79, 78] by distributivity1 ?78 ?79 ?80
Id :   5, {_}: add ?12 (multiply ?13 ?14) =<= multiply (add ?12 ?13) (add ?12 ?14) [14, 13, 12] by distributivity2 ?12 ?13 ?14
Id :   3, {_}: multiply ?5 ?6 =?= multiply ?6 ?5 [6, 5] by commutativity_of_multiply ?5 ?6
Id :   6, {_}: multiply (add ?16 ?17) ?18 =<= add (multiply ?16 ?18) (multiply ?17 ?18) [18, 17, 16] by distributivity3 ?16 ?17 ?18
Id :   4, {_}: add (multiply ?8 ?9) ?10 =<= multiply (add ?8 ?10) (add ?9 ?10) [10, 9, 8] by distributivity1 ?8 ?9 ?10
Id :  65, {_}: add (multiply ?156 (multiply ?157 ?158)) (multiply ?159 ?158) =<= multiply (add ?156 (multiply ?159 ?158)) (multiply (add ?157 ?159) ?158) [159, 158, 157, 156] by Super 4 with 6 at 2,3
Id :  46, {_}: multiply (add ?110 ?111) (add ?110 ?112) =>= add ?110 (multiply ?112 ?111) [112, 111, 110] by Super 3 with 5 at 3
Id :  58, {_}: add ?110 (multiply ?111 ?112) =?= add ?110 (multiply ?112 ?111) [112, 111, 110] by Demod 46 with 5 at 2
Id :  32, {_}: add (multiply ?82 ?83) ?84 =<= multiply (add ?82 ?84) (add ?84 ?83) [84, 83, 82] by Super 31 with 2 at 2,3
Id : 121, {_}: add ?333 (multiply (inverse ?333) ?334) =>= multiply multiplicative_identity (add ?333 ?334) [334, 333] by Super 5 with 8 at 1,3
Id : 2169, {_}: add ?2910 (multiply (inverse ?2910) ?2911) =>= add ?2910 ?2911 [2911, 2910] by Demod 121 with 13 at 3
Id : 2179, {_}: add ?2938 additive_identity =<= add ?2938 (inverse (inverse ?2938)) [2938] by Super 2169 with 10 at 2,2
Id : 2230, {_}: ?2938 =<= add ?2938 (inverse (inverse ?2938)) [2938] by Demod 2179 with 14 at 2
Id : 2429, {_}: add (multiply ?3159 (inverse (inverse ?3160))) ?3160 =>= multiply (add ?3159 ?3160) ?3160 [3160, 3159] by Super 32 with 2230 at 2,3
Id : 2455, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= multiply (add ?3159 ?3160) ?3160 [3159, 3160] by Demod 2429 with 2 at 2
Id : 2456, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= multiply ?3160 (add ?3159 ?3160) [3159, 3160] by Demod 2455 with 3 at 3
Id : 248, {_}: add (multiply additive_identity ?467) ?468 =<= multiply ?468 (add ?467 ?468) [468, 467] by Super 4 with 15 at 1,3
Id : 2457, {_}: add ?3160 (multiply ?3159 (inverse (inverse ?3160))) =>= add (multiply additive_identity ?3159) ?3160 [3159, 3160] by Demod 2456 with 248 at 3
Id : 120, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= multiply (add ?330 ?331) multiplicative_identity [331, 330] by Super 5 with 8 at 2,3
Id : 124, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= multiply multiplicative_identity (add ?330 ?331) [331, 330] by Demod 120 with 3 at 3
Id : 3170, {_}: add ?330 (multiply ?331 (inverse ?330)) =>= add ?330 ?331 [331, 330] by Demod 124 with 13 at 3
Id : 144, {_}: multiply ?347 (add (inverse ?347) ?348) =>= add additive_identity (multiply ?347 ?348) [348, 347] by Super 7 with 10 at 1,3
Id : 3378, {_}: multiply ?4138 (add (inverse ?4138) ?4139) =>= multiply ?4138 ?4139 [4139, 4138] by Demod 144 with 15 at 3
Id : 3399, {_}: multiply ?4195 (inverse ?4195) =<= multiply ?4195 (inverse (inverse (inverse ?4195))) [4195] by Super 3378 with 2230 at 2,2
Id : 3488, {_}: additive_identity =<= multiply ?4195 (inverse (inverse (inverse ?4195))) [4195] by Demod 3399 with 10 at 2
Id : 3900, {_}: add (inverse (inverse ?4844)) additive_identity =?= add (inverse (inverse ?4844)) ?4844 [4844] by Super 3170 with 3488 at 2,2
Id : 3924, {_}: add additive_identity (inverse (inverse ?4844)) =<= add (inverse (inverse ?4844)) ?4844 [4844] by Demod 3900 with 2 at 2
Id : 3925, {_}: add additive_identity (inverse (inverse ?4844)) =?= add ?4844 (inverse (inverse ?4844)) [4844] by Demod 3924 with 2 at 3
Id : 3926, {_}: inverse (inverse ?4844) =<= add ?4844 (inverse (inverse ?4844)) [4844] by Demod 3925 with 15 at 2
Id : 3927, {_}: inverse (inverse ?4844) =>= ?4844 [4844] by Demod 3926 with 2230 at 3
Id : 6845, {_}: add ?3160 (multiply ?3159 ?3160) =?= add (multiply additive_identity ?3159) ?3160 [3159, 3160] by Demod 2457 with 3927 at 2,2,2
Id : 1130, {_}: add (multiply additive_identity ?1671) ?1672 =<= multiply ?1672 (add ?1671 ?1672) [1672, 1671] by Super 4 with 15 at 1,3
Id : 1134, {_}: add (multiply additive_identity ?1683) (inverse ?1683) =>= multiply (inverse ?1683) multiplicative_identity [1683] by Super 1130 with 8 at 2,3
Id : 1186, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= multiply (inverse ?1683) multiplicative_identity [1683] by Demod 1134 with 2 at 2
Id : 1187, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= multiply multiplicative_identity (inverse ?1683) [1683] by Demod 1186 with 3 at 3
Id : 1188, {_}: add (inverse ?1683) (multiply additive_identity ?1683) =>= inverse ?1683 [1683] by Demod 1187 with 13 at 3
Id : 3360, {_}: multiply ?347 (add (inverse ?347) ?348) =>= multiply ?347 ?348 [348, 347] by Demod 144 with 15 at 3
Id : 3364, {_}: add (inverse (add (inverse additive_identity) ?4095)) (multiply additive_identity ?4095) =>= inverse (add (inverse additive_identity) ?4095) [4095] by Super 1188 with 3360 at 2,2
Id : 3442, {_}: add (multiply additive_identity ?4095) (inverse (add (inverse additive_identity) ?4095)) =>= inverse (add (inverse additive_identity) ?4095) [4095] by Demod 3364 with 2 at 2
Id : 249, {_}: inverse additive_identity =>= multiplicative_identity [] by Super 8 with 15 at 2
Id : 3443, {_}: add (multiply additive_identity ?4095) (inverse (add (inverse additive_identity) ?4095)) =>= inverse (add multiplicative_identity ?4095) [4095] by Demod 3442 with 249 at 1,1,3
Id : 3444, {_}: add (multiply additive_identity ?4095) (inverse (add multiplicative_identity ?4095)) =>= inverse (add multiplicative_identity ?4095) [4095] by Demod 3443 with 249 at 1,1,2,2
Id : 2180, {_}: add ?2940 (inverse ?2940) =>= add ?2940 multiplicative_identity [2940] by Super 2169 with 12 at 2,2
Id : 2231, {_}: multiplicative_identity =<= add ?2940 multiplicative_identity [2940] by Demod 2180 with 8 at 2
Id : 2263, {_}: add multiplicative_identity ?3015 =>= multiplicative_identity [3015] by Super 2 with 2231 at 3
Id : 3445, {_}: add (multiply additive_identity ?4095) (inverse (add multiplicative_identity ?4095)) =>= inverse multiplicative_identity [4095] by Demod 3444 with 2263 at 1,3
Id : 3446, {_}: add (multiply additive_identity ?4095) (inverse multiplicative_identity) =>= inverse multiplicative_identity [4095] by Demod 3445 with 2263 at 1,2,2
Id : 191, {_}: inverse multiplicative_identity =>= additive_identity [] by Super 10 with 13 at 2
Id : 3447, {_}: add (multiply additive_identity ?4095) (inverse multiplicative_identity) =>= additive_identity [4095] by Demod 3446 with 191 at 3
Id : 3448, {_}: add (inverse multiplicative_identity) (multiply additive_identity ?4095) =>= additive_identity [4095] by Demod 3447 with 2 at 2
Id : 3449, {_}: add additive_identity (multiply additive_identity ?4095) =>= additive_identity [4095] by Demod 3448 with 191 at 1,2
Id : 3450, {_}: multiply additive_identity ?4095 =>= additive_identity [4095] by Demod 3449 with 15 at 2
Id : 6846, {_}: add ?3160 (multiply ?3159 ?3160) =>= add additive_identity ?3160 [3159, 3160] by Demod 6845 with 3450 at 1,3
Id : 6847, {_}: add ?3160 (multiply ?3159 ?3160) =>= ?3160 [3159, 3160] by Demod 6846 with 15 at 3
Id : 6852, {_}: add ?8316 (multiply ?8316 ?8317) =>= ?8316 [8317, 8316] by Super 58 with 6847 at 3
Id : 7003, {_}: add (multiply ?8541 (multiply ?8542 ?8543)) (multiply ?8541 ?8543) =>= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8543, 8542, 8541] by Super 65 with 6852 at 1,3
Id : 7114, {_}: add (multiply ?8541 ?8543) (multiply ?8541 (multiply ?8542 ?8543)) =>= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8542, 8543, 8541] by Demod 7003 with 2 at 2
Id : 7115, {_}: multiply ?8541 (add ?8543 (multiply ?8542 ?8543)) =?= multiply ?8541 (multiply (add ?8542 ?8541) ?8543) [8542, 8543, 8541] by Demod 7114 with 7 at 2
Id : 21444, {_}: multiply ?30534 ?30535 =<= multiply ?30534 (multiply (add ?30536 ?30534) ?30535) [30536, 30535, 30534] by Demod 7115 with 6847 at 2,2
Id : 21466, {_}: multiply (multiply ?30625 ?30626) ?30627 =<= multiply (multiply ?30625 ?30626) (multiply ?30626 ?30627) [30627, 30626, 30625] by Super 21444 with 6847 at 1,2,3
Id : 147, {_}: multiply (add ?355 ?356) (inverse ?355) =>= add additive_identity (multiply ?356 (inverse ?355)) [356, 355] by Super 6 with 10 at 1,3
Id : 152, {_}: multiply (inverse ?355) (add ?355 ?356) =>= add additive_identity (multiply ?356 (inverse ?355)) [356, 355] by Demod 147 with 3 at 2
Id : 4375, {_}: multiply (inverse ?355) (add ?355 ?356) =>= multiply ?356 (inverse ?355) [356, 355] by Demod 152 with 15 at 3
Id : 532, {_}: add (multiply ?866 ?867) ?868 =<= multiply (add ?866 ?868) (add ?868 ?867) [868, 867, 866] by Super 31 with 2 at 2,3
Id : 547, {_}: add (multiply ?925 ?926) (inverse ?925) =?= multiply multiplicative_identity (add (inverse ?925) ?926) [926, 925] by Super 532 with 8 at 1,3
Id : 583, {_}: add (inverse ?925) (multiply ?925 ?926) =?= multiply multiplicative_identity (add (inverse ?925) ?926) [926, 925] by Demod 547 with 2 at 2
Id : 584, {_}: add (inverse ?925) (multiply ?925 ?926) =>= add (inverse ?925) ?926 [926, 925] by Demod 583 with 13 at 3
Id : 4646, {_}: multiply (inverse (inverse ?5719)) (add (inverse ?5719) ?5720) =>= multiply (multiply ?5719 ?5720) (inverse (inverse ?5719)) [5720, 5719] by Super 4375 with 584 at 2,2
Id : 4685, {_}: multiply ?5720 (inverse (inverse ?5719)) =<= multiply (multiply ?5719 ?5720) (inverse (inverse ?5719)) [5719, 5720] by Demod 4646 with 4375 at 2
Id : 4686, {_}: multiply ?5720 (inverse (inverse ?5719)) =<= multiply (inverse (inverse ?5719)) (multiply ?5719 ?5720) [5719, 5720] by Demod 4685 with 3 at 3
Id : 4687, {_}: multiply ?5720 ?5719 =<= multiply (inverse (inverse ?5719)) (multiply ?5719 ?5720) [5719, 5720] by Demod 4686 with 3927 at 2,2
Id : 4688, {_}: multiply ?5720 ?5719 =<= multiply ?5719 (multiply ?5719 ?5720) [5719, 5720] by Demod 4687 with 3927 at 1,3
Id : 21467, {_}: multiply (multiply ?30629 ?30630) ?30631 =<= multiply (multiply ?30629 ?30630) (multiply ?30629 ?30631) [30631, 30630, 30629] by Super 21444 with 6852 at 1,2,3
Id : 36399, {_}: multiply (multiply ?58815 ?58816) (multiply ?58815 ?58817) =<= multiply (multiply ?58815 ?58817) (multiply (multiply ?58815 ?58817) ?58816) [58817, 58816, 58815] by Super 4688 with 21467 at 2,3
Id : 36627, {_}: multiply (multiply ?58815 ?58816) ?58817 =<= multiply (multiply ?58815 ?58817) (multiply (multiply ?58815 ?58817) ?58816) [58817, 58816, 58815] by Demod 36399 with 21467 at 2
Id : 36628, {_}: multiply (multiply ?58815 ?58816) ?58817 =>= multiply ?58816 (multiply ?58815 ?58817) [58817, 58816, 58815] by Demod 36627 with 4688 at 3
Id : 36893, {_}: multiply ?30626 (multiply ?30625 ?30627) =<= multiply (multiply ?30625 ?30626) (multiply ?30626 ?30627) [30627, 30625, 30626] by Demod 21466 with 36628 at 2
Id : 36894, {_}: multiply ?30626 (multiply ?30625 ?30627) =<= multiply ?30626 (multiply ?30625 (multiply ?30626 ?30627)) [30627, 30625, 30626] by Demod 36893 with 36628 at 3
Id : 3522, {_}: add additive_identity ?468 =<= multiply ?468 (add ?467 ?468) [467, 468] by Demod 248 with 3450 at 1,2
Id : 3543, {_}: ?468 =<= multiply ?468 (add ?467 ?468) [467, 468] by Demod 3522 with 15 at 2
Id : 7020, {_}: add (multiply ?8599 (multiply ?8600 ?8601)) ?8600 =>= multiply (add ?8599 ?8600) ?8600 [8601, 8600, 8599] by Super 32 with 6852 at 2,3
Id : 7087, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= multiply (add ?8599 ?8600) ?8600 [8601, 8599, 8600] by Demod 7020 with 2 at 2
Id : 7088, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= multiply ?8600 (add ?8599 ?8600) [8601, 8599, 8600] by Demod 7087 with 3 at 3
Id : 7089, {_}: add ?8600 (multiply ?8599 (multiply ?8600 ?8601)) =>= ?8600 [8601, 8599, 8600] by Demod 7088 with 3543 at 3
Id : 20142, {_}: multiply ?27776 (multiply ?27777 ?27778) =<= multiply (multiply ?27776 (multiply ?27777 ?27778)) ?27777 [27778, 27777, 27776] by Super 3543 with 7089 at 2,3
Id : 20329, {_}: multiply ?27776 (multiply ?27777 ?27778) =<= multiply ?27777 (multiply ?27776 (multiply ?27777 ?27778)) [27778, 27777, 27776] by Demod 20142 with 3 at 3
Id : 36895, {_}: multiply ?30626 (multiply ?30625 ?30627) =?= multiply ?30625 (multiply ?30626 ?30627) [30627, 30625, 30626] by Demod 36894 with 20329 at 3
Id :  34, {_}: add (multiply ?90 ?91) ?92 =<= multiply (add ?92 ?90) (add ?91 ?92) [92, 91, 90] by Super 31 with 2 at 1,3
Id : 6868, {_}: add (multiply (multiply ?8366 ?8367) ?8368) ?8367 =>= multiply ?8367 (add ?8368 ?8367) [8368, 8367, 8366] by Super 34 with 6847 at 1,3
Id : 6940, {_}: add ?8367 (multiply (multiply ?8366 ?8367) ?8368) =>= multiply ?8367 (add ?8368 ?8367) [8368, 8366, 8367] by Demod 6868 with 2 at 2
Id : 6941, {_}: add ?8367 (multiply (multiply ?8366 ?8367) ?8368) =>= ?8367 [8368, 8366, 8367] by Demod 6940 with 3543 at 3
Id : 19816, {_}: multiply (multiply ?27180 ?27181) ?27182 =<= multiply (multiply (multiply ?27180 ?27181) ?27182) ?27181 [27182, 27181, 27180] by Super 3543 with 6941 at 2,3
Id : 19977, {_}: multiply (multiply ?27180 ?27181) ?27182 =<= multiply ?27181 (multiply (multiply ?27180 ?27181) ?27182) [27182, 27181, 27180] by Demod 19816 with 3 at 3
Id : 36891, {_}: multiply ?27181 (multiply ?27180 ?27182) =<= multiply ?27181 (multiply (multiply ?27180 ?27181) ?27182) [27182, 27180, 27181] by Demod 19977 with 36628 at 2
Id : 36892, {_}: multiply ?27181 (multiply ?27180 ?27182) =<= multiply ?27181 (multiply ?27181 (multiply ?27180 ?27182)) [27182, 27180, 27181] by Demod 36891 with 36628 at 2,3
Id : 36900, {_}: multiply ?27181 (multiply ?27180 ?27182) =?= multiply (multiply ?27180 ?27182) ?27181 [27182, 27180, 27181] by Demod 36892 with 4688 at 3
Id : 36901, {_}: multiply ?27181 (multiply ?27180 ?27182) =?= multiply ?27182 (multiply ?27180 ?27181) [27182, 27180, 27181] by Demod 36900 with 36628 at 3
Id : 37364, {_}: multiply c (multiply b a) =?= multiply c (multiply b a) [] by Demod 37363 with 3 at 2,2
Id : 37363, {_}: multiply c (multiply a b) =?= multiply c (multiply b a) [] by Demod 37362 with 3 at 2,3
Id : 37362, {_}: multiply c (multiply a b) =?= multiply c (multiply a b) [] by Demod 37361 with 36901 at 2
Id : 37361, {_}: multiply b (multiply a c) =>= multiply c (multiply a b) [] by Demod 37360 with 3 at 3
Id : 37360, {_}: multiply b (multiply a c) =<= multiply (multiply a b) c [] by Demod 1 with 36895 at 2
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for BOO007-2.p
22279: solved BOO007-2.p in 8.384524 using kbo
22279: status Unsatisfiable for BOO007-2.p
CLASH, statistics insufficient
22287: Facts:
22287:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22287:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22287:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22287:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =<=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22287:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
22287:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
22287:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
22287:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
22287: Goal:
22287:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22287: Order:
22287:   nrkbo
22287: Leaf order:
22287:  additive_identity 2 0 0 
22287:  multiplicative_identity 2 0 0 
22287:  a 2 0 2 1,2
22287:  b 2 0 2 1,2,2
22287:  c 2 0 2 2,2,2
22287:  inverse 2 1 0 
22287:  add 9 2 0 multiply
22287:  multiply 13 2 4 0,2add
CLASH, statistics insufficient
22288: Facts:
22288:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22288:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22288:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22288:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =<=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22288:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
22288:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
22288:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
22288:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
22288: Goal:
22288:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22288: Order:
22288:   kbo
22288: Leaf order:
22288:  additive_identity 2 0 0 
22288:  multiplicative_identity 2 0 0 
22288:  a 2 0 2 1,2
22288:  b 2 0 2 1,2,2
22288:  c 2 0 2 2,2,2
22288:  inverse 2 1 0 
22288:  add 9 2 0 multiply
22288:  multiply 13 2 4 0,2add
CLASH, statistics insufficient
22289: Facts:
22289:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
22289:  Id :   3, {_}:
          multiply ?5 ?6 =?= multiply ?6 ?5
          [6, 5] by commutativity_of_multiply ?5 ?6
22289:  Id :   4, {_}:
          add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10)
          [10, 9, 8] by distributivity1 ?8 ?9 ?10
22289:  Id :   5, {_}:
          multiply ?12 (add ?13 ?14)
          =>=
          add (multiply ?12 ?13) (multiply ?12 ?14)
          [14, 13, 12] by distributivity2 ?12 ?13 ?14
22289:  Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
22289:  Id :   7, {_}:
          multiply ?18 multiplicative_identity =>= ?18
          [18] by multiplicative_id1 ?18
22289:  Id :   8, {_}:
          add ?20 (inverse ?20) =>= multiplicative_identity
          [20] by additive_inverse1 ?20
22289:  Id :   9, {_}:
          multiply ?22 (inverse ?22) =>= additive_identity
          [22] by multiplicative_inverse1 ?22
22289: Goal:
22289:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22289: Order:
22289:   lpo
22289: Leaf order:
22289:  additive_identity 2 0 0 
22289:  multiplicative_identity 2 0 0 
22289:  a 2 0 2 1,2
22289:  b 2 0 2 1,2,2
22289:  c 2 0 2 2,2,2
22289:  inverse 2 1 0 
22289:  add 9 2 0 multiply
22289:  multiply 13 2 4 0,2add
Statistics :
Max weight : 25
Found proof, 23.744275s
% SZS status Unsatisfiable for BOO007-4.p
% SZS output start CNFRefutation for BOO007-4.p
Id :  44, {_}: multiply ?112 (add ?113 ?114) =<= add (multiply ?112 ?113) (multiply ?112 ?114) [114, 113, 112] by distributivity2 ?112 ?113 ?114
Id :   4, {_}: add ?8 (multiply ?9 ?10) =<= multiply (add ?8 ?9) (add ?8 ?10) [10, 9, 8] by distributivity1 ?8 ?9 ?10
Id :   9, {_}: multiply ?22 (inverse ?22) =>= additive_identity [22] by multiplicative_inverse1 ?22
Id :   5, {_}: multiply ?12 (add ?13 ?14) =<= add (multiply ?12 ?13) (multiply ?12 ?14) [14, 13, 12] by distributivity2 ?12 ?13 ?14
Id :   7, {_}: multiply ?18 multiplicative_identity =>= ?18 [18] by multiplicative_id1 ?18
Id :   3, {_}: multiply ?5 ?6 =?= multiply ?6 ?5 [6, 5] by commutativity_of_multiply ?5 ?6
Id :   8, {_}: add ?20 (inverse ?20) =>= multiplicative_identity [20] by additive_inverse1 ?20
Id :   6, {_}: add ?16 additive_identity =>= ?16 [16] by additive_id1 ?16
Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
Id :  25, {_}: add ?62 (multiply ?63 ?64) =<= multiply (add ?62 ?63) (add ?62 ?64) [64, 63, 62] by distributivity1 ?62 ?63 ?64
Id : 516, {_}: add ?742 (multiply ?743 ?744) =<= multiply (add ?742 ?743) (add ?744 ?742) [744, 743, 742] by Super 25 with 2 at 2,3
Id : 530, {_}: add ?796 (multiply additive_identity ?797) =<= multiply ?796 (add ?797 ?796) [797, 796] by Super 516 with 6 at 1,3
Id : 1019, {_}: add ?1448 (multiply additive_identity ?1449) =<= multiply ?1448 (add ?1449 ?1448) [1449, 1448] by Super 516 with 6 at 1,3
Id : 1024, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= multiply (inverse ?1462) multiplicative_identity [1462] by Super 1019 with 8 at 2,3
Id : 1064, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= multiply multiplicative_identity (inverse ?1462) [1462] by Demod 1024 with 3 at 3
Id :  75, {_}: multiply multiplicative_identity ?178 =>= ?178 [178] by Super 3 with 7 at 3
Id : 1065, {_}: add (inverse ?1462) (multiply additive_identity ?1462) =>= inverse ?1462 [1462] by Demod 1064 with 75 at 3
Id :  97, {_}: multiply ?204 (add (inverse ?204) ?205) =>= add additive_identity (multiply ?204 ?205) [205, 204] by Super 5 with 9 at 1,3
Id :  63, {_}: add additive_identity ?160 =>= ?160 [160] by Super 2 with 6 at 3
Id : 2714, {_}: multiply ?204 (add (inverse ?204) ?205) =>= multiply ?204 ?205 [205, 204] by Demod 97 with 63 at 3
Id : 2718, {_}: add (inverse (add (inverse additive_identity) ?3390)) (multiply additive_identity ?3390) =>= inverse (add (inverse additive_identity) ?3390) [3390] by Super 1065 with 2714 at 2,2
Id : 2791, {_}: add (multiply additive_identity ?3390) (inverse (add (inverse additive_identity) ?3390)) =>= inverse (add (inverse additive_identity) ?3390) [3390] by Demod 2718 with 2 at 2
Id : 184, {_}: inverse additive_identity =>= multiplicative_identity [] by Super 8 with 63 at 2
Id : 2792, {_}: add (multiply additive_identity ?3390) (inverse (add (inverse additive_identity) ?3390)) =>= inverse (add multiplicative_identity ?3390) [3390] by Demod 2791 with 184 at 1,1,3
Id : 2793, {_}: add (multiply additive_identity ?3390) (inverse (add multiplicative_identity ?3390)) =>= inverse (add multiplicative_identity ?3390) [3390] by Demod 2792 with 184 at 1,1,2,2
Id :  86, {_}: add ?193 (multiply (inverse ?193) ?194) =>= multiply multiplicative_identity (add ?193 ?194) [194, 193] by Super 4 with 8 at 1,3
Id : 1836, {_}: add ?2310 (multiply (inverse ?2310) ?2311) =>= add ?2310 ?2311 [2311, 2310] by Demod 86 with 75 at 3
Id : 1846, {_}: add ?2338 (inverse ?2338) =>= add ?2338 multiplicative_identity [2338] by Super 1836 with 7 at 2,2
Id : 1890, {_}: multiplicative_identity =<= add ?2338 multiplicative_identity [2338] by Demod 1846 with 8 at 2
Id : 1917, {_}: add multiplicative_identity ?2407 =>= multiplicative_identity [2407] by Super 2 with 1890 at 3
Id : 2794, {_}: add (multiply additive_identity ?3390) (inverse (add multiplicative_identity ?3390)) =>= inverse multiplicative_identity [3390] by Demod 2793 with 1917 at 1,3
Id : 2795, {_}: add (multiply additive_identity ?3390) (inverse multiplicative_identity) =>= inverse multiplicative_identity [3390] by Demod 2794 with 1917 at 1,2,2
Id : 476, {_}: inverse multiplicative_identity =>= additive_identity [] by Super 9 with 75 at 2
Id : 2796, {_}: add (multiply additive_identity ?3390) (inverse multiplicative_identity) =>= additive_identity [3390] by Demod 2795 with 476 at 3
Id : 2797, {_}: add (inverse multiplicative_identity) (multiply additive_identity ?3390) =>= additive_identity [3390] by Demod 2796 with 2 at 2
Id : 2798, {_}: add additive_identity (multiply additive_identity ?3390) =>= additive_identity [3390] by Demod 2797 with 476 at 1,2
Id : 2799, {_}: multiply additive_identity ?3390 =>= additive_identity [3390] by Demod 2798 with 63 at 2
Id : 2854, {_}: add ?796 additive_identity =<= multiply ?796 (add ?797 ?796) [797, 796] by Demod 530 with 2799 at 2,2
Id : 2870, {_}: ?796 =<= multiply ?796 (add ?797 ?796) [797, 796] by Demod 2854 with 6 at 2
Id : 2113, {_}: add (multiply ?2595 ?2596) (multiply ?2597 (multiply ?2595 ?2598)) =<= multiply (add (multiply ?2595 ?2596) ?2597) (multiply ?2595 (add ?2596 ?2598)) [2598, 2597, 2596, 2595] by Super 4 with 5 at 2,3
Id : 2126, {_}: add (multiply ?2655 multiplicative_identity) (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (add (multiply ?2655 multiplicative_identity) ?2656) (multiply ?2655 multiplicative_identity) [2657, 2656, 2655] by Super 2113 with 1917 at 2,2,3
Id : 2201, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (add (multiply ?2655 multiplicative_identity) ?2656) (multiply ?2655 multiplicative_identity) [2657, 2656, 2655] by Demod 2126 with 7 at 1,2
Id : 2202, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= multiply (multiply ?2655 multiplicative_identity) (add (multiply ?2655 multiplicative_identity) ?2656) [2657, 2656, 2655] by Demod 2201 with 3 at 3
Id :  62, {_}: add ?157 (multiply additive_identity ?158) =<= multiply ?157 (add ?157 ?158) [158, 157] by Super 4 with 6 at 1,3
Id : 2203, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =?= add (multiply ?2655 multiplicative_identity) (multiply additive_identity ?2656) [2657, 2656, 2655] by Demod 2202 with 62 at 3
Id : 2204, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= add ?2655 (multiply additive_identity ?2656) [2657, 2656, 2655] by Demod 2203 with 7 at 1,3
Id : 12654, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= add ?2655 additive_identity [2657, 2656, 2655] by Demod 2204 with 2799 at 2,3
Id : 12655, {_}: add ?2655 (multiply ?2656 (multiply ?2655 ?2657)) =>= ?2655 [2657, 2656, 2655] by Demod 12654 with 6 at 3
Id : 12666, {_}: multiply ?15534 (multiply ?15535 ?15536) =<= multiply (multiply ?15534 (multiply ?15535 ?15536)) ?15535 [15536, 15535, 15534] by Super 2870 with 12655 at 2,3
Id : 21339, {_}: multiply ?30912 (multiply ?30913 ?30914) =<= multiply ?30913 (multiply ?30912 (multiply ?30913 ?30914)) [30914, 30913, 30912] by Demod 12666 with 3 at 3
Id : 21342, {_}: multiply ?30924 (multiply ?30925 ?30926) =<= multiply ?30925 (multiply ?30924 (multiply ?30926 ?30925)) [30926, 30925, 30924] by Super 21339 with 3 at 2,2,3
Id :  28, {_}: add ?74 (multiply ?75 ?76) =<= multiply (add ?75 ?74) (add ?74 ?76) [76, 75, 74] by Super 25 with 2 at 1,3
Id : 4808, {_}: multiply ?5796 (add ?5797 ?5798) =<= add (multiply ?5796 ?5797) (multiply ?5798 ?5796) [5798, 5797, 5796] by Super 44 with 3 at 2,3
Id : 4837, {_}: multiply ?5913 (add multiplicative_identity ?5914) =?= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Super 4808 with 7 at 1,3
Id : 4917, {_}: multiply ?5913 multiplicative_identity =<= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Demod 4837 with 1917 at 2,2
Id : 4918, {_}: ?5913 =<= add ?5913 (multiply ?5914 ?5913) [5914, 5913] by Demod 4917 with 7 at 2
Id : 5091, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= multiply (add ?6287 ?6286) ?6286 [6288, 6287, 6286] by Super 28 with 4918 at 2,3
Id : 5151, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= multiply ?6286 (add ?6287 ?6286) [6288, 6287, 6286] by Demod 5091 with 3 at 3
Id : 5152, {_}: add ?6286 (multiply ?6287 (multiply ?6288 ?6286)) =>= ?6286 [6288, 6287, 6286] by Demod 5151 with 2870 at 3
Id : 19536, {_}: multiply ?27546 (multiply ?27547 ?27548) =<= multiply (multiply ?27546 (multiply ?27547 ?27548)) ?27548 [27548, 27547, 27546] by Super 2870 with 5152 at 2,3
Id : 19689, {_}: multiply ?27546 (multiply ?27547 ?27548) =<= multiply ?27548 (multiply ?27546 (multiply ?27547 ?27548)) [27548, 27547, 27546] by Demod 19536 with 3 at 3
Id : 31289, {_}: multiply ?30924 (multiply ?30925 ?30926) =?= multiply ?30924 (multiply ?30926 ?30925) [30926, 30925, 30924] by Demod 21342 with 19689 at 3
Id : 521, {_}: add (inverse ?761) (multiply ?762 ?761) =?= multiply (add (inverse ?761) ?762) multiplicative_identity [762, 761] by Super 516 with 8 at 2,3
Id : 550, {_}: add (inverse ?761) (multiply ?762 ?761) =?= multiply multiplicative_identity (add (inverse ?761) ?762) [762, 761] by Demod 521 with 3 at 3
Id : 551, {_}: add (inverse ?761) (multiply ?762 ?761) =>= add (inverse ?761) ?762 [762, 761] by Demod 550 with 75 at 3
Id : 3740, {_}: multiply ?4638 (add (inverse ?4638) ?4639) =>= multiply ?4638 (multiply ?4639 ?4638) [4639, 4638] by Super 2714 with 551 at 2,2
Id : 3782, {_}: multiply ?4638 ?4639 =<= multiply ?4638 (multiply ?4639 ?4638) [4639, 4638] by Demod 3740 with 2714 at 2
Id : 3863, {_}: multiply ?4768 (add ?4769 (multiply ?4770 ?4768)) =>= add (multiply ?4768 ?4769) (multiply ?4768 ?4770) [4770, 4769, 4768] by Super 5 with 3782 at 2,3
Id : 15840, {_}: multiply ?20984 (add ?20985 (multiply ?20986 ?20984)) =>= multiply ?20984 (add ?20985 ?20986) [20986, 20985, 20984] by Demod 3863 with 5 at 3
Id : 15903, {_}: multiply ?21234 (multiply ?21235 (add ?21236 ?21234)) =?= multiply ?21234 (add (multiply ?21235 ?21236) ?21235) [21236, 21235, 21234] by Super 15840 with 5 at 2,2
Id : 16059, {_}: multiply ?21234 (multiply ?21235 (add ?21236 ?21234)) =?= multiply ?21234 (add ?21235 (multiply ?21235 ?21236)) [21236, 21235, 21234] by Demod 15903 with 2 at 2,3
Id : 4814, {_}: multiply ?5818 (add ?5819 multiplicative_identity) =?= add (multiply ?5818 ?5819) ?5818 [5819, 5818] by Super 4808 with 75 at 2,3
Id : 4891, {_}: multiply ?5818 multiplicative_identity =<= add (multiply ?5818 ?5819) ?5818 [5819, 5818] by Demod 4814 with 1890 at 2,2
Id : 4892, {_}: multiply ?5818 multiplicative_identity =<= add ?5818 (multiply ?5818 ?5819) [5819, 5818] by Demod 4891 with 2 at 3
Id : 4893, {_}: ?5818 =<= add ?5818 (multiply ?5818 ?5819) [5819, 5818] by Demod 4892 with 7 at 2
Id : 26804, {_}: multiply ?40743 (multiply ?40744 (add ?40745 ?40743)) =>= multiply ?40743 ?40744 [40745, 40744, 40743] by Demod 16059 with 4893 at 2,3
Id : 26854, {_}: multiply (multiply ?40962 ?40963) (multiply ?40964 ?40962) =>= multiply (multiply ?40962 ?40963) ?40964 [40964, 40963, 40962] by Super 26804 with 4893 at 2,2,2
Id : 38294, {_}: multiply (multiply ?63621 ?63622) (multiply ?63621 ?63623) =>= multiply (multiply ?63621 ?63622) ?63623 [63623, 63622, 63621] by Super 31289 with 26854 at 3
Id : 26855, {_}: multiply (multiply ?40966 ?40967) (multiply ?40968 ?40967) =>= multiply (multiply ?40966 ?40967) ?40968 [40968, 40967, 40966] by Super 26804 with 4918 at 2,2,2
Id : 38958, {_}: multiply (multiply ?65058 ?65059) (multiply ?65059 ?65060) =>= multiply (multiply ?65058 ?65059) ?65060 [65060, 65059, 65058] by Super 31289 with 26855 at 3
Id : 38330, {_}: multiply (multiply ?63784 ?63785) (multiply ?63785 ?63786) =>= multiply (multiply ?63785 ?63786) ?63784 [63786, 63785, 63784] by Super 3 with 26854 at 3
Id : 46713, {_}: multiply (multiply ?65059 ?65060) ?65058 =?= multiply (multiply ?65058 ?65059) ?65060 [65058, 65060, 65059] by Demod 38958 with 38330 at 2
Id : 46797, {_}: multiply ?81775 (multiply ?81776 ?81777) =<= multiply (multiply ?81775 ?81776) ?81777 [81777, 81776, 81775] by Super 3 with 46713 at 3
Id : 47389, {_}: multiply ?63621 (multiply ?63622 (multiply ?63621 ?63623)) =>= multiply (multiply ?63621 ?63622) ?63623 [63623, 63622, 63621] by Demod 38294 with 46797 at 2
Id : 47390, {_}: multiply ?63621 (multiply ?63622 (multiply ?63621 ?63623)) =>= multiply ?63621 (multiply ?63622 ?63623) [63623, 63622, 63621] by Demod 47389 with 46797 at 3
Id : 12809, {_}: multiply ?15534 (multiply ?15535 ?15536) =<= multiply ?15535 (multiply ?15534 (multiply ?15535 ?15536)) [15536, 15535, 15534] by Demod 12666 with 3 at 3
Id : 47391, {_}: multiply ?63622 (multiply ?63621 ?63623) =?= multiply ?63621 (multiply ?63622 ?63623) [63623, 63621, 63622] by Demod 47390 with 12809 at 2
Id : 47371, {_}: multiply ?40962 (multiply ?40963 (multiply ?40964 ?40962)) =>= multiply (multiply ?40962 ?40963) ?40964 [40964, 40963, 40962] by Demod 26854 with 46797 at 2
Id : 47372, {_}: multiply ?40962 (multiply ?40963 (multiply ?40964 ?40962)) =>= multiply ?40962 (multiply ?40963 ?40964) [40964, 40963, 40962] by Demod 47371 with 46797 at 3
Id : 47409, {_}: multiply ?40963 (multiply ?40964 ?40962) =?= multiply ?40962 (multiply ?40963 ?40964) [40962, 40964, 40963] by Demod 47372 with 19689 at 2
Id : 47847, {_}: multiply c (multiply b a) =?= multiply c (multiply b a) [] by Demod 47846 with 3 at 2,3
Id : 47846, {_}: multiply c (multiply b a) =?= multiply c (multiply a b) [] by Demod 47845 with 47409 at 2
Id : 47845, {_}: multiply b (multiply a c) =>= multiply c (multiply a b) [] by Demod 47844 with 3 at 3
Id : 47844, {_}: multiply b (multiply a c) =<= multiply (multiply a b) c [] by Demod 1 with 47391 at 2
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for BOO007-4.p
22288: solved BOO007-4.p in 11.836739 using kbo
22288: status Unsatisfiable for BOO007-4.p
CLASH, statistics insufficient
22303: Facts:
22303:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
22303:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
22303:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
22303:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
22303:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
22303:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
22303:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
22303:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
22303:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
22303:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =?= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
22303:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =?= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
22303: Goal:
22303:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
22303: Order:
22303:   nrkbo
22303: Leaf order:
22303:  n1 1 0 0 
22303:  n0 1 0 0 
22303:  b 2 0 2 1,2,2
22303:  c 2 0 2 2,2,2
22303:  a 3 0 3 1,2
22303:  inverse 4 1 0 
22303:  add 21 2 2 0,2,2multiply
22303:  multiply 22 2 3 0,2add
CLASH, statistics insufficient
22304: Facts:
22304:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
22304:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
22304:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
22304:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
22304:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
22304:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
22304:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
22304:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
22304:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
22304:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
22304:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
CLASH, statistics insufficient
22305: Facts:
22305:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =>=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
22305:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
22305:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
22305:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
22305:  Id :   6, {_}:
          multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17
          [19, 18, 17] by l2 ?17 ?18 ?19
22305:  Id :   7, {_}:
          multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22
          [23, 22, 21] by l4 ?21 ?22 ?23
22305:  Id :   8, {_}:
          add (multiply ?25 (inverse ?25)) ?26 =>= ?26
          [26, 25] by property3_dual ?25 ?26
22305:  Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
22305:  Id :  10, {_}:
          multiply ?30 (inverse ?30) =>= n0
          [30] by multiplicative_inverse ?30
22305:  Id :  11, {_}:
          add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34)
          [34, 33, 32] by associativity_of_add ?32 ?33 ?34
22305:  Id :  12, {_}:
          multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38)
          [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
22305: Goal:
22305:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
22305: Order:
22305:   lpo
22305: Leaf order:
22305:  n1 1 0 0 
22305:  n0 1 0 0 
22305:  b 2 0 2 1,2,2
22305:  c 2 0 2 2,2,2
22305:  a 3 0 3 1,2
22305:  inverse 4 1 0 
22305:  add 21 2 2 0,2,2multiply
22305:  multiply 22 2 3 0,2add
22304: Goal:
22304:  Id :   1, {_}:
          multiply a (add b c) =<= add (multiply b a) (multiply c a)
          [] by prove_multiply_add_property
22304: Order:
22304:   kbo
22304: Leaf order:
22304:  n1 1 0 0 
22304:  n0 1 0 0 
22304:  b 2 0 2 1,2,2
22304:  c 2 0 2 2,2,2
22304:  a 3 0 3 1,2
22304:  inverse 4 1 0 
22304:  add 21 2 2 0,2,2multiply
22304:  multiply 22 2 3 0,2add
Statistics :
Max weight : 29
Found proof, 45.037592s
% SZS status Unsatisfiable for BOO031-1.p
% SZS output start CNFRefutation for BOO031-1.p
Id :   7, {_}: multiply (multiply (add ?21 ?22) (add ?22 ?23)) ?22 =>= ?22 [23, 22, 21] by l4 ?21 ?22 ?23
Id :  10, {_}: multiply ?30 (inverse ?30) =>= n0 [30] by multiplicative_inverse ?30
Id :   8, {_}: add (multiply ?25 (inverse ?25)) ?26 =>= ?26 [26, 25] by property3_dual ?25 ?26
Id :  12, {_}: multiply (multiply ?36 ?37) ?38 =>= multiply ?36 (multiply ?37 ?38) [38, 37, 36] by associativity_of_multiply ?36 ?37 ?38
Id :  52, {_}: multiply (multiply (add ?189 ?190) (add ?190 ?191)) ?190 =>= ?190 [191, 190, 189] by l4 ?189 ?190 ?191
Id :   9, {_}: add ?28 (inverse ?28) =>= n1 [28] by additive_inverse ?28
Id :   5, {_}: multiply (add ?14 (inverse ?14)) ?15 =>= ?15 [15, 14] by property3 ?14 ?15
Id :   2, {_}: add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2)) =>= multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2)) [4, 3, 2] by distributivity ?2 ?3 ?4
Id :  18, {_}: add (add (multiply ?58 ?59) (multiply ?59 ?60)) ?59 =>= ?59 [60, 59, 58] by l3 ?58 ?59 ?60
Id :  11, {_}: add (add ?32 ?33) ?34 =>= add ?32 (add ?33 ?34) [34, 33, 32] by associativity_of_add ?32 ?33 ?34
Id :   4, {_}: add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11 [12, 11, 10] by l3 ?10 ?11 ?12
Id :  37, {_}: multiply ?128 (add ?129 (add ?128 ?130)) =>= ?128 [130, 129, 128] by l2 ?128 ?129 ?130
Id :   6, {_}: multiply ?17 (add ?18 (add ?17 ?19)) =>= ?17 [19, 18, 17] by l2 ?17 ?18 ?19
Id :   3, {_}: add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6 [8, 7, 6] by l1 ?6 ?7 ?8
Id :  35, {_}: add ?121 (multiply ?122 ?121) =>= ?121 [122, 121] by Super 3 with 6 at 2,2,2
Id :  42, {_}: multiply ?149 (add ?149 ?150) =>= ?149 [150, 149] by Super 37 with 4 at 2,2
Id : 1579, {_}: add (add ?2436 ?2437) ?2436 =>= add ?2436 ?2437 [2437, 2436] by Super 35 with 42 at 2,2
Id : 1609, {_}: add ?2436 (add ?2437 ?2436) =>= add ?2436 ?2437 [2437, 2436] by Demod 1579 with 11 at 2
Id :  19, {_}: add (multiply ?62 ?63) ?63 =>= ?63 [63, 62] by Super 18 with 3 at 1,2
Id :  39, {_}: multiply ?137 (add ?138 ?137) =>= ?137 [138, 137] by Super 37 with 3 at 2,2,2
Id : 1363, {_}: add ?2089 (add ?2090 ?2089) =>= add ?2090 ?2089 [2090, 2089] by Super 19 with 39 at 1,2
Id : 2844, {_}: add ?2437 ?2436 =?= add ?2436 ?2437 [2436, 2437] by Demod 1609 with 1363 at 2
Id :  32, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add (multiply ?109 ?107) ?107) =<= multiply (add (add ?106 (add ?107 ?108)) ?109) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Super 2 with 6 at 2,2,2
Id : 5786, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add (add ?106 (add ?107 ?108)) ?109) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Demod 32 with 2844 at 2,2
Id : 5787, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?107 (add ?106 (add ?107 ?108)))) [109, 108, 107, 106] by Demod 5786 with 11 at 1,3
Id : 1088, {_}: add (multiply ?1721 ?1722) ?1722 =>= ?1722 [1722, 1721] by Super 18 with 3 at 1,2
Id : 1091, {_}: add ?1730 (add ?1731 (add ?1730 ?1732)) =>= add ?1731 (add ?1730 ?1732) [1732, 1731, 1730] by Super 1088 with 6 at 1,2
Id : 5788, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) (add ?107 (multiply ?109 ?107)) =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5787 with 1091 at 2,2,3
Id : 5789, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) ?107 =<= multiply (add ?106 (add (add ?107 ?108) ?109)) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5788 with 35 at 2,2
Id : 5790, {_}: add (multiply (add ?106 (add ?107 ?108)) ?109) ?107 =<= multiply (add ?106 (add ?107 (add ?108 ?109))) (multiply (add ?109 ?107) (add ?106 (add ?107 ?108))) [109, 108, 107, 106] by Demod 5789 with 11 at 2,1,3
Id : 5814, {_}: add ?7785 (multiply (add ?7786 (add ?7785 ?7787)) ?7788) =<= multiply (add ?7786 (add ?7785 (add ?7787 ?7788))) (multiply (add ?7788 ?7785) (add ?7786 (add ?7785 ?7787))) [7788, 7787, 7786, 7785] by Demod 5790 with 2844 at 2
Id :  79, {_}: multiply n1 ?15 =>= ?15 [15] by Demod 5 with 9 at 1,2
Id : 1095, {_}: add ?1743 ?1743 =>= ?1743 [1743] by Super 1088 with 79 at 1,2
Id : 5853, {_}: add ?7982 (multiply (add (add ?7982 ?7983) (add ?7982 ?7983)) ?7984) =<= multiply (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) (multiply (add ?7984 ?7982) (add ?7982 ?7983)) [7984, 7983, 7982] by Super 5814 with 1095 at 2,2,3
Id : 6183, {_}: add ?7982 (multiply (add ?7982 (add ?7983 (add ?7982 ?7983))) ?7984) =<= multiply (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) (multiply (add ?7984 ?7982) (add ?7982 ?7983)) [7984, 7983, 7982] by Demod 5853 with 11 at 1,2,2
Id : 1663, {_}: multiply (add ?2570 ?2571) ?2571 =>= ?2571 [2571, 2570] by Super 52 with 6 at 1,2
Id : 1673, {_}: multiply ?2601 (multiply ?2602 ?2601) =>= multiply ?2602 ?2601 [2602, 2601] by Super 1663 with 35 at 1,2
Id : 1365, {_}: multiply ?2095 (add ?2096 ?2095) =>= ?2095 [2096, 2095] by Super 37 with 3 at 2,2,2
Id :  22, {_}: add ?71 (multiply ?71 ?72) =>= ?71 [72, 71] by Super 3 with 5 at 2,2
Id : 1374, {_}: multiply (multiply ?2123 ?2124) ?2123 =>= multiply ?2123 ?2124 [2124, 2123] by Super 1365 with 22 at 2,2
Id : 1408, {_}: multiply ?2123 (multiply ?2124 ?2123) =>= multiply ?2123 ?2124 [2124, 2123] by Demod 1374 with 12 at 2
Id : 2987, {_}: multiply ?2601 ?2602 =?= multiply ?2602 ?2601 [2602, 2601] by Demod 1673 with 1408 at 2
Id : 6184, {_}: add ?7982 (multiply (add ?7982 (add ?7983 (add ?7982 ?7983))) ?7984) =<= multiply (multiply (add ?7984 ?7982) (add ?7982 ?7983)) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) [7984, 7983, 7982] by Demod 6183 with 2987 at 3
Id : 6185, {_}: add ?7982 (multiply (add ?7983 (add ?7982 ?7983)) ?7984) =<= multiply (multiply (add ?7984 ?7982) (add ?7982 ?7983)) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984))) [7984, 7983, 7982] by Demod 6184 with 1091 at 1,2,2
Id : 6186, {_}: add ?7982 (multiply (add ?7983 (add ?7982 ?7983)) ?7984) =<= multiply (add ?7984 ?7982) (multiply (add ?7982 ?7983) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984)))) [7984, 7983, 7982] by Demod 6185 with 12 at 3
Id : 6187, {_}: add ?7982 (multiply (add ?7982 ?7983) ?7984) =<= multiply (add ?7984 ?7982) (multiply (add ?7982 ?7983) (add (add ?7982 ?7983) (add ?7982 (add ?7983 ?7984)))) [7984, 7983, 7982] by Demod 6186 with 1363 at 1,2,2
Id : 13074, {_}: add ?18195 (multiply (add ?18195 ?18196) ?18197) =>= multiply (add ?18197 ?18195) (add ?18195 ?18196) [18197, 18196, 18195] by Demod 6187 with 42 at 2,3
Id : 16401, {_}: add ?22734 (multiply (add ?22735 ?22734) ?22736) =>= multiply (add ?22736 ?22734) (add ?22734 ?22735) [22736, 22735, 22734] by Super 13074 with 2844 at 1,2,2
Id : 18162, {_}: add ?24925 (multiply ?24926 (add ?24927 ?24925)) =>= multiply (add ?24926 ?24925) (add ?24925 ?24927) [24927, 24926, 24925] by Super 16401 with 2987 at 2,2
Id : 18171, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =<= multiply (add ?24965 (multiply ?24963 ?24964)) (add (multiply ?24963 ?24964) ?24964) [24965, 24964, 24963] by Super 18162 with 35 at 2,2,2
Id : 18379, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =<= multiply (add ?24965 (multiply ?24963 ?24964)) (add ?24964 (multiply ?24963 ?24964)) [24965, 24964, 24963] by Demod 18171 with 2844 at 2,3
Id : 18380, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply (add ?24965 (multiply ?24963 ?24964)) ?24964 [24965, 24964, 24963] by Demod 18379 with 35 at 2,3
Id : 18381, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply ?24964 (add ?24965 (multiply ?24963 ?24964)) [24965, 24964, 24963] by Demod 18380 with 2987 at 3
Id : 1575, {_}: multiply ?2421 ?2422 =<= multiply ?2421 (multiply (add ?2421 ?2423) ?2422) [2423, 2422, 2421] by Super 12 with 42 at 1,2
Id : 16456, {_}: add ?22968 (multiply ?22969 (add ?22970 ?22968)) =>= multiply (add ?22969 ?22968) (add ?22968 ?22970) [22970, 22969, 22968] by Super 16401 with 2987 at 2,2
Id : 1247, {_}: add ?1879 ?1880 =<= add ?1879 (add (multiply ?1879 ?1881) ?1880) [1881, 1880, 1879] by Super 11 with 22 at 1,2
Id : 6619, {_}: multiply (multiply ?8607 ?8608) (add ?8607 ?8609) =>= multiply ?8607 ?8608 [8609, 8608, 8607] by Super 6 with 1247 at 2,2
Id : 6763, {_}: multiply ?8607 (multiply ?8608 (add ?8607 ?8609)) =>= multiply ?8607 ?8608 [8609, 8608, 8607] by Demod 6619 with 12 at 2
Id :  65, {_}: add (multiply ?237 ?238) (multiply (inverse ?238) ?237) =<= multiply (add ?237 ?238) (multiply (add ?238 (inverse ?238)) (add (inverse ?238) ?237)) [238, 237] by Super 2 with 8 at 2,2
Id :  76, {_}: add (multiply ?237 ?238) (multiply (inverse ?238) ?237) =>= multiply (add ?237 ?238) (add (inverse ?238) ?237) [238, 237] by Demod 65 with 5 at 2,3
Id : 18170, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =<= multiply (add ?24961 (multiply ?24959 ?24960)) (add (multiply ?24959 ?24960) ?24959) [24961, 24960, 24959] by Super 18162 with 22 at 2,2,2
Id : 18376, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =<= multiply (add ?24961 (multiply ?24959 ?24960)) (add ?24959 (multiply ?24959 ?24960)) [24961, 24960, 24959] by Demod 18170 with 2844 at 2,3
Id : 18377, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =>= multiply (add ?24961 (multiply ?24959 ?24960)) ?24959 [24961, 24960, 24959] by Demod 18376 with 22 at 2,3
Id : 18378, {_}: add (multiply ?24959 ?24960) (multiply ?24961 ?24959) =>= multiply ?24959 (add ?24961 (multiply ?24959 ?24960)) [24961, 24960, 24959] by Demod 18377 with 2987 at 3
Id : 22657, {_}: multiply ?237 (add (inverse ?238) (multiply ?237 ?238)) =<= multiply (add ?237 ?238) (add (inverse ?238) ?237) [238, 237] by Demod 76 with 18378 at 2
Id : 22699, {_}: multiply (inverse ?30910) (multiply ?30911 (add (inverse ?30910) (multiply ?30911 ?30910))) =>= multiply (inverse ?30910) (add ?30911 ?30910) [30911, 30910] by Super 6763 with 22657 at 2,2
Id : 22814, {_}: multiply (inverse ?30910) ?30911 =<= multiply (inverse ?30910) (add ?30911 ?30910) [30911, 30910] by Demod 22699 with 6763 at 2
Id : 23609, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =<= multiply (add (inverse ?31619) ?31619) (add ?31619 ?31620) [31620, 31619] by Super 16456 with 22814 at 2,2
Id : 23775, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =<= multiply (add ?31619 (inverse ?31619)) (add ?31619 ?31620) [31620, 31619] by Demod 23609 with 2844 at 1,3
Id : 23776, {_}: add ?31619 (multiply (inverse ?31619) ?31620) =>= multiply n1 (add ?31619 ?31620) [31620, 31619] by Demod 23775 with 9 at 1,3
Id : 24286, {_}: add ?32553 (multiply (inverse ?32553) ?32554) =>= add ?32553 ?32554 [32554, 32553] by Demod 23776 with 79 at 3
Id : 13130, {_}: add ?18432 (multiply ?18433 (add ?18432 ?18434)) =>= multiply (add ?18433 ?18432) (add ?18432 ?18434) [18434, 18433, 18432] by Super 13074 with 2987 at 2,2
Id : 22705, {_}: multiply ?30931 (add (inverse ?30932) (multiply ?30931 ?30932)) =<= multiply (add ?30931 ?30932) (add (inverse ?30932) ?30931) [30932, 30931] by Demod 76 with 18378 at 2
Id : 22751, {_}: multiply ?31084 (add (inverse (inverse ?31084)) (multiply ?31084 (inverse ?31084))) =>= multiply n1 (add (inverse (inverse ?31084)) ?31084) [31084] by Super 22705 with 9 at 1,3
Id : 23065, {_}: multiply ?31084 (add (inverse (inverse ?31084)) n0) =?= multiply n1 (add (inverse (inverse ?31084)) ?31084) [31084] by Demod 22751 with 10 at 2,2,2
Id : 23066, {_}: multiply ?31084 (add (inverse (inverse ?31084)) n0) =>= add (inverse (inverse ?31084)) ?31084 [31084] by Demod 23065 with 79 at 3
Id : 130, {_}: multiply (add ?21 ?22) (multiply (add ?22 ?23) ?22) =>= ?22 [23, 22, 21] by Demod 7 with 12 at 2
Id :  89, {_}: n0 =<= inverse n1 [] by Super 79 with 10 at 2
Id : 360, {_}: add n1 n0 =>= n1 [] by Super 9 with 89 at 2,2
Id : 382, {_}: multiply n1 (multiply (add n0 ?765) n0) =>= n0 [765] by Super 130 with 360 at 1,2
Id : 422, {_}: multiply (add n0 ?765) n0 =>= n0 [765] by Demod 382 with 79 at 2
Id :  88, {_}: add n0 ?26 =>= ?26 [26] by Demod 8 with 10 at 1,2
Id : 423, {_}: multiply ?765 n0 =>= n0 [765] by Demod 422 with 88 at 1,2
Id : 831, {_}: add ?1448 (multiply ?1449 n0) =>= ?1448 [1449, 1448] by Super 3 with 423 at 2,2,2
Id : 867, {_}: add ?1448 n0 =>= ?1448 [1448] by Demod 831 with 423 at 2,2
Id : 23067, {_}: multiply ?31084 (inverse (inverse ?31084)) =<= add (inverse (inverse ?31084)) ?31084 [31084] by Demod 23066 with 867 at 2,2
Id : 23068, {_}: multiply ?31084 (inverse (inverse ?31084)) =<= add ?31084 (inverse (inverse ?31084)) [31084] by Demod 23067 with 2844 at 3
Id : 23215, {_}: add ?31334 (multiply ?31335 (multiply ?31334 (inverse (inverse ?31334)))) =>= multiply (add ?31335 ?31334) (add ?31334 (inverse (inverse ?31334))) [31335, 31334] by Super 13130 with 23068 at 2,2,2
Id : 23280, {_}: ?31334 =<= multiply (add ?31335 ?31334) (add ?31334 (inverse (inverse ?31334))) [31335, 31334] by Demod 23215 with 3 at 2
Id : 23281, {_}: ?31334 =<= multiply (add ?31335 ?31334) (multiply ?31334 (inverse (inverse ?31334))) [31335, 31334] by Demod 23280 with 23068 at 2,3
Id : 2547, {_}: multiply (multiply ?3698 ?3699) ?3700 =<= multiply ?3698 (multiply (multiply ?3699 ?3698) ?3700) [3700, 3699, 3698] by Super 12 with 1408 at 1,2
Id : 2578, {_}: multiply ?3698 (multiply ?3699 ?3700) =<= multiply ?3698 (multiply (multiply ?3699 ?3698) ?3700) [3700, 3699, 3698] by Demod 2547 with 12 at 2
Id : 2579, {_}: multiply ?3698 (multiply ?3699 ?3700) =<= multiply ?3698 (multiply ?3699 (multiply ?3698 ?3700)) [3700, 3699, 3698] by Demod 2578 with 12 at 2,3
Id : 1667, {_}: multiply ?2583 (multiply ?2584 (multiply ?2583 ?2585)) =>= multiply ?2584 (multiply ?2583 ?2585) [2585, 2584, 2583] by Super 1663 with 3 at 1,2
Id : 12236, {_}: multiply ?3698 (multiply ?3699 ?3700) =?= multiply ?3699 (multiply ?3698 ?3700) [3700, 3699, 3698] by Demod 2579 with 1667 at 3
Id : 23282, {_}: ?31334 =<= multiply ?31334 (multiply (add ?31335 ?31334) (inverse (inverse ?31334))) [31335, 31334] by Demod 23281 with 12236 at 3
Id : 1360, {_}: multiply ?2077 ?2078 =<= multiply ?2077 (multiply (add ?2079 ?2077) ?2078) [2079, 2078, 2077] by Super 12 with 39 at 1,2
Id : 23283, {_}: ?31334 =<= multiply ?31334 (inverse (inverse ?31334)) [31334] by Demod 23282 with 1360 at 3
Id : 23386, {_}: add (inverse (inverse ?31435)) ?31435 =>= inverse (inverse ?31435) [31435] by Super 35 with 23283 at 2,2
Id : 23494, {_}: add ?31435 (inverse (inverse ?31435)) =>= inverse (inverse ?31435) [31435] by Demod 23386 with 2844 at 2
Id : 23374, {_}: ?31084 =<= add ?31084 (inverse (inverse ?31084)) [31084] by Demod 23068 with 23283 at 2
Id : 23495, {_}: ?31435 =<= inverse (inverse ?31435) [31435] by Demod 23494 with 23374 at 2
Id : 24293, {_}: add (inverse ?32572) (multiply ?32572 ?32573) =>= add (inverse ?32572) ?32573 [32573, 32572] by Super 24286 with 23495 at 1,2,2
Id : 23619, {_}: multiply (multiply (inverse ?31653) ?31654) ?31655 =<= multiply (inverse ?31653) (multiply (add ?31654 ?31653) ?31655) [31655, 31654, 31653] by Super 12 with 22814 at 1,2
Id : 23754, {_}: multiply (inverse ?31653) (multiply ?31654 ?31655) =<= multiply (inverse ?31653) (multiply (add ?31654 ?31653) ?31655) [31655, 31654, 31653] by Demod 23619 with 12 at 2
Id : 77768, {_}: add (inverse (inverse ?103133)) (multiply (inverse ?103133) (multiply ?103134 ?103135)) =>= add (inverse (inverse ?103133)) (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Super 24293 with 23754 at 2,2
Id : 78028, {_}: add (inverse (inverse ?103133)) (multiply ?103134 ?103135) =<= add (inverse (inverse ?103133)) (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 77768 with 24293 at 2
Id : 78029, {_}: add (inverse (inverse ?103133)) (multiply ?103134 ?103135) =?= add ?103133 (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 78028 with 23495 at 1,3
Id : 78030, {_}: add ?103133 (multiply ?103134 ?103135) =<= add ?103133 (multiply (add ?103134 ?103133) ?103135) [103135, 103134, 103133] by Demod 78029 with 23495 at 1,2
Id : 13094, {_}: add ?18275 (multiply (add ?18276 ?18275) ?18277) =>= multiply (add ?18277 ?18275) (add ?18275 ?18276) [18277, 18276, 18275] by Super 13074 with 2844 at 1,2,2
Id : 78031, {_}: add ?103133 (multiply ?103134 ?103135) =<= multiply (add ?103135 ?103133) (add ?103133 ?103134) [103135, 103134, 103133] by Demod 78030 with 13094 at 3
Id : 78812, {_}: multiply ?104288 (add ?104289 ?104290) =<= multiply ?104288 (add ?104289 (multiply ?104290 ?104288)) [104290, 104289, 104288] by Super 1575 with 78031 at 2,3
Id : 80954, {_}: add (multiply ?24963 ?24964) (multiply ?24965 ?24964) =>= multiply ?24964 (add ?24965 ?24963) [24965, 24964, 24963] by Demod 18381 with 78812 at 3
Id : 81595, {_}: multiply a (add c b) =?= multiply a (add c b) [] by Demod 81594 with 2844 at 2,3
Id : 81594, {_}: multiply a (add c b) =?= multiply a (add b c) [] by Demod 81593 with 80954 at 3
Id : 81593, {_}: multiply a (add c b) =<= add (multiply c a) (multiply b a) [] by Demod 81592 with 2844 at 3
Id : 81592, {_}: multiply a (add c b) =<= add (multiply b a) (multiply c a) [] by Demod 1 with 2844 at 2,2
Id :   1, {_}: multiply a (add b c) =<= add (multiply b a) (multiply c a) [] by prove_multiply_add_property
% SZS output end CNFRefutation for BOO031-1.p
22304: solved BOO031-1.p in 22.545408 using kbo
22304: status Unsatisfiable for BOO031-1.p
NO CLASH, using fixed ground order
22316: Facts:
22316:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22316: Goal:
22316:  Id :   1, {_}: add b a =<= add a b [] by huntinton_1
22316: Order:
22316:   nrkbo
22316: Leaf order:
22316:  b 2 0 2 1,2
22316:  a 2 0 2 2,2
22316:  inverse 7 1 0 
22316:  add 8 2 2 0,2
NO CLASH, using fixed ground order
22317: Facts:
22317:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22317: Goal:
22317:  Id :   1, {_}: add b a =<= add a b [] by huntinton_1
22317: Order:
22317:   kbo
22317: Leaf order:
22317:  b 2 0 2 1,2
22317:  a 2 0 2 2,2
22317:  inverse 7 1 0 
22317:  add 8 2 2 0,2
NO CLASH, using fixed ground order
22318: Facts:
22318:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22318: Goal:
22318:  Id :   1, {_}: add b a =<= add a b [] by huntinton_1
22318: Order:
22318:   lpo
22318: Leaf order:
22318:  b 2 0 2 1,2
22318:  a 2 0 2 2,2
22318:  inverse 7 1 0 
22318:  add 8 2 2 0,2
Statistics :
Max weight : 70
Found proof, 10.385052s
% SZS status Unsatisfiable for BOO072-1.p
% SZS output start CNFRefutation for BOO072-1.p
Id :   3, {_}: inverse (add (inverse (add (inverse (add ?7 ?8)) ?9)) (inverse (add ?7 (inverse (add (inverse ?9) (inverse (add ?9 ?10))))))) =>= ?9 [10, 9, 8, 7] by dn1 ?7 ?8 ?9 ?10
Id :   2, {_}: inverse (add (inverse (add (inverse (add ?2 ?3)) ?4)) (inverse (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5))))))) =>= ?4 [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
Id :  15, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?74)) ?75)) ?74)) ?76)) (inverse ?74))) ?74) =>= inverse ?74 [76, 75, 74] by Super 3 with 2 at 2,1,2
Id :  20, {_}: inverse (add (inverse (add ?104 (inverse ?104))) ?104) =>= inverse ?104 [104] by Super 15 with 2 at 1,1,1,1,2
Id :  99, {_}: inverse (add (inverse ?355) (inverse (add ?355 (inverse (add (inverse ?355) (inverse (add ?355 ?356))))))) =>= ?355 [356, 355] by Super 2 with 20 at 1,1,2
Id : 136, {_}: inverse (add (inverse (add (inverse (add ?450 ?451)) ?452)) (inverse (add ?450 ?452))) =>= ?452 [452, 451, 450] by Super 2 with 99 at 2,1,2,1,2
Id : 536, {_}: inverse (add (inverse (add (inverse (add ?1808 ?1809)) ?1810)) (inverse (add ?1808 ?1810))) =>= ?1810 [1810, 1809, 1808] by Super 2 with 99 at 2,1,2,1,2
Id : 550, {_}: inverse (add (inverse (add ?1882 ?1883)) (inverse (add (inverse ?1882) ?1883))) =>= ?1883 [1883, 1882] by Super 536 with 99 at 1,1,1,1,2
Id : 724, {_}: inverse (add ?2517 (inverse (add ?2518 (inverse (add (inverse ?2518) ?2517))))) =>= inverse (add (inverse ?2518) ?2517) [2518, 2517] by Super 136 with 550 at 1,1,2
Id : 1584, {_}: inverse (add (inverse ?4978) (inverse (add ?4978 (inverse (add (inverse ?4978) (inverse ?4978)))))) =>= ?4978 [4978] by Super 99 with 724 at 2,1,2,1,2
Id : 1652, {_}: inverse (add (inverse ?4978) (inverse ?4978)) =>= ?4978 [4978] by Demod 1584 with 724 at 2
Id : 763, {_}: inverse (add (inverse (add ?2736 ?2737)) (inverse (add (inverse ?2736) ?2737))) =>= ?2737 [2737, 2736] by Super 536 with 99 at 1,1,1,1,2
Id : 144, {_}: inverse (add (inverse ?482) (inverse (add ?482 (inverse (add (inverse ?482) (inverse (add ?482 ?483))))))) =>= ?482 [483, 482] by Super 2 with 20 at 1,1,2
Id : 155, {_}: inverse (add (inverse ?528) (inverse (add ?528 ?528))) =>= ?528 [528] by Super 144 with 99 at 2,1,2,1,2
Id : 782, {_}: inverse (add (inverse (add ?2830 (inverse (add ?2830 ?2830)))) ?2830) =>= inverse (add ?2830 ?2830) [2830] by Super 763 with 155 at 2,1,2
Id : 871, {_}: inverse (add (inverse (add ?3076 ?3076)) (inverse (add ?3076 ?3076))) =>= ?3076 [3076] by Super 136 with 782 at 1,1,2
Id : 1724, {_}: add ?3076 ?3076 =>= ?3076 [3076] by Demod 871 with 1652 at 2
Id : 1754, {_}: inverse (inverse ?5284) =>= ?5284 [5284] by Demod 1652 with 1724 at 1,2
Id : 1761, {_}: inverse ?5314 =<= add (inverse (add ?5315 ?5314)) (inverse (add (inverse ?5315) ?5314)) [5315, 5314] by Super 1754 with 550 at 1,2
Id : 1733, {_}: inverse (inverse ?4978) =>= ?4978 [4978] by Demod 1652 with 1724 at 1,2
Id :   6, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?26)) ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Super 3 with 2 at 2,1,2
Id : 1734, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add ?26 ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Demod 6 with 1733 at 1,1,1,1,1,1,1,1,1,1,2
Id : 921, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse (add ?3102 ?3102))))) =>= inverse (add ?3102 ?3102) [3102] by Super 136 with 871 at 1,1,2
Id : 1725, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse (add ?3102 ?3102) [3102] by Demod 921 with 1724 at 1,2,1,2,1,2
Id : 1726, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse ?3102 [3102] by Demod 1725 with 1724 at 1,3
Id : 1763, {_}: inverse (inverse ?5320) =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Super 1754 with 1726 at 1,2
Id : 1786, {_}: ?5320 =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Demod 1763 with 1733 at 2
Id : 2715, {_}: inverse (add (inverse (add (inverse ?7389) (inverse (inverse ?7389)))) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Super 724 with 1786 at 1,2,1,2,1,2
Id : 2755, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2715 with 1733 at 2,1,1,1,2
Id : 2756, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =?= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2755 with 1733 at 2,1,2,1,2
Id : 2757, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =>= inverse (inverse ?7389) [7389] by Demod 2756 with 1786 at 1,3
Id : 2758, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= inverse (inverse ?7389) [7389] by Demod 2757 with 1724 at 1,2,1,2
Id : 2759, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= ?7389 [7389] by Demod 2758 with 1733 at 3
Id : 2920, {_}: inverse ?7714 =<= add (inverse (add (inverse ?7714) ?7714)) (inverse ?7714) [7714] by Super 1733 with 2759 at 1,2
Id : 3142, {_}: inverse (add (inverse (add (inverse (add (inverse (inverse ?8118)) ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Super 1734 with 2920 at 1,1,1,1,1,1,1,2
Id : 3172, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3142 with 1733 at 1,1,1,1,1,1,2
Id : 3173, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) ?8118)) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3172 with 1733 at 2,1,1,1,2
Id : 8100, {_}: inverse (add (inverse (add (inverse (add ?15581 ?15582)) ?15581)) (inverse ?15581)) =>= ?15581 [15582, 15581] by Demod 3173 with 1733 at 3
Id : 8144, {_}: inverse (add ?15759 (inverse (inverse (add ?15760 ?15759)))) =>= inverse (add ?15760 ?15759) [15760, 15759] by Super 8100 with 136 at 1,1,2
Id : 8459, {_}: inverse (add ?16264 (add ?16265 ?16264)) =>= inverse (add ?16265 ?16264) [16265, 16264] by Demod 8144 with 1733 at 2,1,2
Id : 1749, {_}: inverse (add (inverse (add (inverse ?5262) ?5263)) (inverse (add ?5262 ?5263))) =>= ?5263 [5263, 5262] by Super 550 with 1733 at 1,1,2,1,2
Id : 5602, {_}: inverse ?11750 =<= add (inverse (add (inverse ?11751) ?11750)) (inverse (add ?11751 ?11750)) [11751, 11750] by Super 1733 with 1749 at 1,2
Id : 8468, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =<= inverse (add (inverse (add (inverse ?16285) ?16286)) (inverse (add ?16285 ?16286))) [16286, 16285] by Super 8459 with 5602 at 2,1,2
Id : 8598, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= inverse (inverse ?16286) [16286, 16285] by Demod 8468 with 5602 at 1,3
Id : 8599, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= ?16286 [16286, 16285] by Demod 8598 with 1733 at 3
Id : 8791, {_}: inverse ?16774 =<= add (inverse (add ?16775 ?16774)) (inverse ?16774) [16775, 16774] by Super 1733 with 8599 at 1,2
Id : 10568, {_}: inverse (add (inverse (inverse ?20566)) (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Super 136 with 8791 at 1,1,1,2
Id : 10805, {_}: inverse (add ?20566 (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Demod 10568 with 1733 at 1,1,2
Id : 11153, {_}: inverse (inverse ?21486) =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Super 1733 with 10805 at 1,2
Id : 11260, {_}: ?21486 =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Demod 11153 with 1733 at 2
Id : 12127, {_}: inverse (inverse (add ?22871 (inverse (inverse ?22872)))) =<= add (inverse (add ?22872 (inverse (add ?22871 (inverse (inverse ?22872)))))) (inverse (inverse ?22872)) [22872, 22871] by Super 1761 with 11260 at 1,2,3
Id : 12312, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 (inverse (inverse ?22872)))))) (inverse (inverse ?22872)) [22872, 22871] by Demod 12127 with 1733 at 2
Id : 12313, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) (inverse (inverse ?22872)) [22872, 22871] by Demod 12312 with 1733 at 2,1,2,1,1,3
Id : 12314, {_}: add ?22871 (inverse (inverse ?22872)) =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) ?22872 [22872, 22871] by Demod 12313 with 1733 at 2,3
Id : 12315, {_}: add ?22871 ?22872 =<= add (inverse (add ?22872 (inverse (add ?22871 ?22872)))) ?22872 [22872, 22871] by Demod 12314 with 1733 at 2,2
Id :  12, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Super 2 with 6 at 2,1,2
Id : 3710, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 12 with 1733 at 1,1,1,1,1,1,1,1,1,1,1,1,1,1,2
Id : 3711, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3710 with 1733 at 2,1,1,1,1,1,1,1,2
Id : 3712, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (add (inverse ?57) (inverse (add ?57 ?58)))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3711 with 1733 at 2,1,2
Id : 10590, {_}: inverse (add (inverse (inverse ?20667)) (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Super 3712 with 8791 at 1,1,1,2
Id : 10753, {_}: inverse (add ?20667 (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10590 with 1733 at 1,1,2
Id : 10754, {_}: inverse (add ?20667 (add ?20667 (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10753 with 1733 at 1,2,1,2
Id : 15430, {_}: inverse (inverse ?28103) =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Super 1733 with 10754 at 1,2
Id : 15735, {_}: ?28103 =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Demod 15430 with 1733 at 2
Id : 1762, {_}: inverse (inverse (add (inverse ?5317) ?5318)) =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Super 1754 with 724 at 1,2
Id : 1785, {_}: add (inverse ?5317) ?5318 =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Demod 1762 with 1733 at 2
Id : 11176, {_}: inverse (add ?21600 (inverse (add ?21601 (inverse ?21600)))) =>= inverse ?21600 [21601, 21600] by Demod 10568 with 1733 at 1,1,2
Id : 11183, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= inverse (inverse ?21642) [21643, 21642] by Super 11176 with 1733 at 2,1,2,1,2
Id : 11564, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= ?21642 [21643, 21642] by Demod 11183 with 1733 at 3
Id : 13294, {_}: inverse ?24726 =<= add (inverse ?24726) (inverse (add ?24727 ?24726)) [24727, 24726] by Super 1733 with 11564 at 1,2
Id : 13313, {_}: inverse (add (inverse ?24792) (inverse (add ?24792 ?24793))) =<= add (inverse (add (inverse ?24792) (inverse (add ?24792 ?24793)))) ?24792 [24793, 24792] by Super 13294 with 3712 at 2,3
Id : 16466, {_}: add (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) ?29660 =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Super 1785 with 13313 at 1,2,1,2,3
Id : 16829, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Demod 16466 with 13313 at 2
Id : 16830, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (add (inverse ?29660) (inverse (add ?29660 ?29661))))) [29661, 29660] by Demod 16829 with 1733 at 2,1,2,3
Id : 16831, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) [29661, 29660] by Demod 16830 with 1724 at 1,2,3
Id : 17624, {_}: ?31105 =<= add ?31105 (inverse (add (inverse ?31105) (inverse (add ?31105 ?31106)))) [31106, 31105] by Super 15735 with 16831 at 2,3
Id : 17680, {_}: ?31105 =<= inverse (add (inverse ?31105) (inverse (add ?31105 ?31106))) [31106, 31105] by Demod 17624 with 16831 at 3
Id : 18257, {_}: add ?31431 ?31432 =<= add (add ?31431 ?31432) ?31431 [31432, 31431] by Super 11260 with 17680 at 2,3
Id : 18514, {_}: add (add ?31834 ?31835) ?31834 =<= add (inverse (add ?31834 (inverse (add ?31834 ?31835)))) ?31834 [31835, 31834] by Super 12315 with 18257 at 1,2,1,1,3
Id : 19938, {_}: add ?34185 ?34186 =<= add (inverse (add ?34185 (inverse (add ?34185 ?34186)))) ?34185 [34186, 34185] by Demod 18514 with 18257 at 2
Id : 8365, {_}: inverse (add ?15759 (add ?15760 ?15759)) =>= inverse (add ?15760 ?15759) [15760, 15759] by Demod 8144 with 1733 at 2,1,2
Id : 8391, {_}: inverse (inverse (add ?15887 ?15888)) =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Super 1733 with 8365 at 1,2
Id : 8543, {_}: add ?15887 ?15888 =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Demod 8391 with 1733 at 2
Id : 15853, {_}: add ?28715 (add ?28715 (inverse (add (inverse ?28715) ?28716))) =?= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Super 8543 with 15735 at 2,3
Id : 16108, {_}: ?28715 =<= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Demod 15853 with 15735 at 2
Id : 18478, {_}: ?28715 =<= add ?28715 (inverse (add (inverse ?28715) ?28716)) [28716, 28715] by Demod 16108 with 18257 at 3
Id : 18480, {_}: add (inverse ?5317) ?5318 =?= add ?5318 (inverse ?5317) [5318, 5317] by Demod 1785 with 18478 at 1,2,3
Id : 20385, {_}: add ?34911 ?34912 =<= add (inverse (add (inverse (add ?34911 ?34912)) ?34911)) ?34911 [34912, 34911] by Super 19938 with 18480 at 1,1,3
Id : 20390, {_}: add ?34925 (add ?34926 ?34925) =<= add (inverse (add (inverse (add ?34926 ?34925)) ?34925)) ?34925 [34926, 34925] by Super 20385 with 8543 at 1,1,1,1,3
Id : 20500, {_}: add ?34926 ?34925 =<= add (inverse (add (inverse (add ?34926 ?34925)) ?34925)) ?34925 [34925, 34926] by Demod 20390 with 8543 at 2
Id : 5906, {_}: inverse (add (inverse (inverse ?12265)) (inverse (add (inverse ?12266) (inverse (add ?12266 ?12265))))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Super 136 with 5602 at 1,1,1,2
Id : 6067, {_}: inverse (add ?12265 (inverse (add (inverse ?12266) (inverse (add ?12266 ?12265))))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Demod 5906 with 1733 at 1,1,2
Id : 15857, {_}: add (inverse ?28730) (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) =<= add (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Super 1785 with 15735 at 1,2,1,2,3
Id : 16100, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add (inverse (inverse ?28730)) ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Demod 15857 with 15735 at 2
Id : 16101, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse (add ?28730 (inverse (inverse ?28730)))) [28731, 28730] by Demod 16100 with 1733 at 1,1,2,1,3
Id : 16102, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse (add ?28730 ?28730)) [28731, 28730] by Demod 16101 with 1733 at 2,1,2,3
Id : 16103, {_}: inverse ?28730 =<= add (add (inverse ?28730) (inverse (add ?28730 ?28731))) (inverse ?28730) [28731, 28730] by Demod 16102 with 1724 at 1,2,3
Id : 18477, {_}: inverse ?28730 =<= add (inverse ?28730) (inverse (add ?28730 ?28731)) [28731, 28730] by Demod 16103 with 18257 at 3
Id : 21222, {_}: inverse (add ?12265 (inverse (inverse ?12266))) =>= inverse (add ?12266 ?12265) [12266, 12265] by Demod 6067 with 18477 at 1,2,1,2
Id : 21223, {_}: inverse (add ?12265 ?12266) =?= inverse (add ?12266 ?12265) [12266, 12265] by Demod 21222 with 1733 at 2,1,2
Id : 21386, {_}: add ?36951 ?36952 =<= add (inverse (add (inverse (add ?36952 ?36951)) ?36952)) ?36952 [36952, 36951] by Super 20500 with 21223 at 1,1,1,3
Id : 19969, {_}: add ?34289 ?34290 =<= add (inverse (add (inverse (add ?34289 ?34290)) ?34289)) ?34289 [34290, 34289] by Super 19938 with 18480 at 1,1,3
Id : 21454, {_}: add ?36951 ?36952 =?= add ?36952 ?36951 [36952, 36951] by Demod 21386 with 19969 at 3
Id : 21981, {_}: add b a === add b a [] by Demod 1 with 21454 at 3
Id :   1, {_}: add b a =<= add a b [] by huntinton_1
% SZS output end CNFRefutation for BOO072-1.p
22316: solved BOO072-1.p in 10.380648 using nrkbo
22316: status Unsatisfiable for BOO072-1.p
NO CLASH, using fixed ground order
22328: Facts:
22328:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22328: Goal:
22328:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
22328: Order:
22328:   nrkbo
22328: Leaf order:
22328:  a 2 0 2 1,1,2
22328:  b 2 0 2 2,1,2
22328:  c 2 0 2 2,2
22328:  inverse 7 1 0 
22328:  add 10 2 4 0,2
NO CLASH, using fixed ground order
22329: Facts:
22329:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22329: Goal:
22329:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
22329: Order:
22329:   kbo
22329: Leaf order:
22329:  a 2 0 2 1,1,2
22329:  b 2 0 2 2,1,2
22329:  c 2 0 2 2,2
22329:  inverse 7 1 0 
22329:  add 10 2 4 0,2
NO CLASH, using fixed ground order
22330: Facts:
22330:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22330: Goal:
22330:  Id :   1, {_}: add (add a b) c =>= add a (add b c) [] by huntinton_2
22330: Order:
22330:   lpo
22330: Leaf order:
22330:  a 2 0 2 1,1,2
22330:  b 2 0 2 2,1,2
22330:  c 2 0 2 2,2
22330:  inverse 7 1 0 
22330:  add 10 2 4 0,2
% SZS status Timeout for BOO073-1.p
NO CLASH, using fixed ground order
22390: Facts:
22390:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22390: Goal:
22390:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
22390: Order:
22390:   nrkbo
22390: Leaf order:
22390:  b 2 0 2 2,1,1,2
22390:  a 3 0 3 1,1,1,1,2
22390:  inverse 12 1 5 0,1,2
22390:  add 9 2 3 0,2
NO CLASH, using fixed ground order
22391: Facts:
22391:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22391: Goal:
22391:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
22391: Order:
22391:   kbo
22391: Leaf order:
22391:  b 2 0 2 2,1,1,2
22391:  a 3 0 3 1,1,1,1,2
22391:  inverse 12 1 5 0,1,2
22391:  add 9 2 3 0,2
NO CLASH, using fixed ground order
22392: Facts:
22392:  Id :   2, {_}:
          inverse
            (add (inverse (add (inverse (add ?2 ?3)) ?4))
              (inverse
                (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5)))))))
          =>=
          ?4
          [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
22392: Goal:
22392:  Id :   1, {_}:
          add (inverse (add (inverse a) b))
            (inverse (add (inverse a) (inverse b)))
          =>=
          a
          [] by huntinton_3
22392: Order:
22392:   lpo
22392: Leaf order:
22392:  b 2 0 2 2,1,1,2
22392:  a 3 0 3 1,1,1,1,2
22392:  inverse 12 1 5 0,1,2
22392:  add 9 2 3 0,2
Statistics :
Max weight : 70
Found proof, 9.195802s
% SZS status Unsatisfiable for BOO074-1.p
% SZS output start CNFRefutation for BOO074-1.p
Id :   3, {_}: inverse (add (inverse (add (inverse (add ?7 ?8)) ?9)) (inverse (add ?7 (inverse (add (inverse ?9) (inverse (add ?9 ?10))))))) =>= ?9 [10, 9, 8, 7] by dn1 ?7 ?8 ?9 ?10
Id :   2, {_}: inverse (add (inverse (add (inverse (add ?2 ?3)) ?4)) (inverse (add ?2 (inverse (add (inverse ?4) (inverse (add ?4 ?5))))))) =>= ?4 [5, 4, 3, 2] by dn1 ?2 ?3 ?4 ?5
Id :  15, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?74)) ?75)) ?74)) ?76)) (inverse ?74))) ?74) =>= inverse ?74 [76, 75, 74] by Super 3 with 2 at 2,1,2
Id :  20, {_}: inverse (add (inverse (add ?104 (inverse ?104))) ?104) =>= inverse ?104 [104] by Super 15 with 2 at 1,1,1,1,2
Id :  99, {_}: inverse (add (inverse ?355) (inverse (add ?355 (inverse (add (inverse ?355) (inverse (add ?355 ?356))))))) =>= ?355 [356, 355] by Super 2 with 20 at 1,1,2
Id : 136, {_}: inverse (add (inverse (add (inverse (add ?450 ?451)) ?452)) (inverse (add ?450 ?452))) =>= ?452 [452, 451, 450] by Super 2 with 99 at 2,1,2,1,2
Id : 536, {_}: inverse (add (inverse (add (inverse (add ?1808 ?1809)) ?1810)) (inverse (add ?1808 ?1810))) =>= ?1810 [1810, 1809, 1808] by Super 2 with 99 at 2,1,2,1,2
Id : 550, {_}: inverse (add (inverse (add ?1882 ?1883)) (inverse (add (inverse ?1882) ?1883))) =>= ?1883 [1883, 1882] by Super 536 with 99 at 1,1,1,1,2
Id : 724, {_}: inverse (add ?2517 (inverse (add ?2518 (inverse (add (inverse ?2518) ?2517))))) =>= inverse (add (inverse ?2518) ?2517) [2518, 2517] by Super 136 with 550 at 1,1,2
Id : 1584, {_}: inverse (add (inverse ?4978) (inverse (add ?4978 (inverse (add (inverse ?4978) (inverse ?4978)))))) =>= ?4978 [4978] by Super 99 with 724 at 2,1,2,1,2
Id : 1652, {_}: inverse (add (inverse ?4978) (inverse ?4978)) =>= ?4978 [4978] by Demod 1584 with 724 at 2
Id : 763, {_}: inverse (add (inverse (add ?2736 ?2737)) (inverse (add (inverse ?2736) ?2737))) =>= ?2737 [2737, 2736] by Super 536 with 99 at 1,1,1,1,2
Id : 144, {_}: inverse (add (inverse ?482) (inverse (add ?482 (inverse (add (inverse ?482) (inverse (add ?482 ?483))))))) =>= ?482 [483, 482] by Super 2 with 20 at 1,1,2
Id : 155, {_}: inverse (add (inverse ?528) (inverse (add ?528 ?528))) =>= ?528 [528] by Super 144 with 99 at 2,1,2,1,2
Id : 782, {_}: inverse (add (inverse (add ?2830 (inverse (add ?2830 ?2830)))) ?2830) =>= inverse (add ?2830 ?2830) [2830] by Super 763 with 155 at 2,1,2
Id : 871, {_}: inverse (add (inverse (add ?3076 ?3076)) (inverse (add ?3076 ?3076))) =>= ?3076 [3076] by Super 136 with 782 at 1,1,2
Id : 1724, {_}: add ?3076 ?3076 =>= ?3076 [3076] by Demod 871 with 1652 at 2
Id : 1754, {_}: inverse (inverse ?5284) =>= ?5284 [5284] by Demod 1652 with 1724 at 1,2
Id : 1762, {_}: inverse (inverse (add (inverse ?5317) ?5318)) =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Super 1754 with 724 at 1,2
Id : 1733, {_}: inverse (inverse ?4978) =>= ?4978 [4978] by Demod 1652 with 1724 at 1,2
Id : 1785, {_}: add (inverse ?5317) ?5318 =<= add ?5318 (inverse (add ?5317 (inverse (add (inverse ?5317) ?5318)))) [5318, 5317] by Demod 1762 with 1733 at 2
Id :   6, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse ?26)) ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Super 3 with 2 at 2,1,2
Id : 1734, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add ?26 ?27)) ?26)) ?28)) (inverse ?26))) ?26) =>= inverse ?26 [28, 27, 26] by Demod 6 with 1733 at 1,1,1,1,1,1,1,1,1,1,2
Id : 921, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse (add ?3102 ?3102))))) =>= inverse (add ?3102 ?3102) [3102] by Super 136 with 871 at 1,1,2
Id : 1725, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse (add ?3102 ?3102) [3102] by Demod 921 with 1724 at 1,2,1,2,1,2
Id : 1726, {_}: inverse (add ?3102 (inverse (add ?3102 (inverse ?3102)))) =>= inverse ?3102 [3102] by Demod 1725 with 1724 at 1,3
Id : 1763, {_}: inverse (inverse ?5320) =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Super 1754 with 1726 at 1,2
Id : 1786, {_}: ?5320 =<= add ?5320 (inverse (add ?5320 (inverse ?5320))) [5320] by Demod 1763 with 1733 at 2
Id : 2715, {_}: inverse (add (inverse (add (inverse ?7389) (inverse (inverse ?7389)))) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Super 724 with 1786 at 1,2,1,2,1,2
Id : 2755, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 (inverse (inverse ?7389))))) =>= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2715 with 1733 at 2,1,1,1,2
Id : 2756, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =?= inverse (add (inverse ?7389) (inverse (add (inverse ?7389) (inverse (inverse ?7389))))) [7389] by Demod 2755 with 1733 at 2,1,2,1,2
Id : 2757, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse (add ?7389 ?7389))) =>= inverse (inverse ?7389) [7389] by Demod 2756 with 1786 at 1,3
Id : 2758, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= inverse (inverse ?7389) [7389] by Demod 2757 with 1724 at 1,2,1,2
Id : 2759, {_}: inverse (add (inverse (add (inverse ?7389) ?7389)) (inverse ?7389)) =>= ?7389 [7389] by Demod 2758 with 1733 at 3
Id : 2920, {_}: inverse ?7714 =<= add (inverse (add (inverse ?7714) ?7714)) (inverse ?7714) [7714] by Super 1733 with 2759 at 1,2
Id : 3142, {_}: inverse (add (inverse (add (inverse (add (inverse (inverse ?8118)) ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Super 1734 with 2920 at 1,1,1,1,1,1,1,2
Id : 3172, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) (inverse (inverse ?8118)))) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3142 with 1733 at 1,1,1,1,1,1,2
Id : 3173, {_}: inverse (add (inverse (add (inverse (add ?8118 ?8119)) ?8118)) (inverse ?8118)) =>= inverse (inverse ?8118) [8119, 8118] by Demod 3172 with 1733 at 2,1,1,1,2
Id : 8100, {_}: inverse (add (inverse (add (inverse (add ?15581 ?15582)) ?15581)) (inverse ?15581)) =>= ?15581 [15582, 15581] by Demod 3173 with 1733 at 3
Id : 8144, {_}: inverse (add ?15759 (inverse (inverse (add ?15760 ?15759)))) =>= inverse (add ?15760 ?15759) [15760, 15759] by Super 8100 with 136 at 1,1,2
Id : 8365, {_}: inverse (add ?15759 (add ?15760 ?15759)) =>= inverse (add ?15760 ?15759) [15760, 15759] by Demod 8144 with 1733 at 2,1,2
Id : 8391, {_}: inverse (inverse (add ?15887 ?15888)) =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Super 1733 with 8365 at 1,2
Id : 8543, {_}: add ?15887 ?15888 =<= add ?15888 (add ?15887 ?15888) [15888, 15887] by Demod 8391 with 1733 at 2
Id :  12, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Super 2 with 6 at 2,1,2
Id : 3710, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58))))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 12 with 1733 at 1,1,1,1,1,1,1,1,1,1,1,1,1,1,2
Id : 3711, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (inverse (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3710 with 1733 at 2,1,1,1,1,1,1,1,2
Id : 3712, {_}: inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse (add (inverse ?57) (inverse (add ?57 ?58)))) ?59)) (inverse (add (inverse ?57) (inverse (add ?57 ?58)))))) ?60)) (add (inverse ?57) (inverse (add ?57 ?58))))) ?61)) ?57)) (add (inverse ?57) (inverse (add ?57 ?58)))) =>= ?57 [61, 60, 59, 58, 57] by Demod 3711 with 1733 at 2,1,2
Id : 8459, {_}: inverse (add ?16264 (add ?16265 ?16264)) =>= inverse (add ?16265 ?16264) [16265, 16264] by Demod 8144 with 1733 at 2,1,2
Id : 1749, {_}: inverse (add (inverse (add (inverse ?5262) ?5263)) (inverse (add ?5262 ?5263))) =>= ?5263 [5263, 5262] by Super 550 with 1733 at 1,1,2,1,2
Id : 5602, {_}: inverse ?11750 =<= add (inverse (add (inverse ?11751) ?11750)) (inverse (add ?11751 ?11750)) [11751, 11750] by Super 1733 with 1749 at 1,2
Id : 8468, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =<= inverse (add (inverse (add (inverse ?16285) ?16286)) (inverse (add ?16285 ?16286))) [16286, 16285] by Super 8459 with 5602 at 2,1,2
Id : 8598, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= inverse (inverse ?16286) [16286, 16285] by Demod 8468 with 5602 at 1,3
Id : 8599, {_}: inverse (add (inverse (add ?16285 ?16286)) (inverse ?16286)) =>= ?16286 [16286, 16285] by Demod 8598 with 1733 at 3
Id : 8791, {_}: inverse ?16774 =<= add (inverse (add ?16775 ?16774)) (inverse ?16774) [16775, 16774] by Super 1733 with 8599 at 1,2
Id : 10590, {_}: inverse (add (inverse (inverse ?20667)) (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Super 3712 with 8791 at 1,1,1,2
Id : 10753, {_}: inverse (add ?20667 (add (inverse (inverse ?20667)) (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10590 with 1733 at 1,1,2
Id : 10754, {_}: inverse (add ?20667 (add ?20667 (inverse (add (inverse ?20667) ?20668)))) =>= inverse ?20667 [20668, 20667] by Demod 10753 with 1733 at 1,2,1,2
Id : 15430, {_}: inverse (inverse ?28103) =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Super 1733 with 10754 at 1,2
Id : 15735, {_}: ?28103 =<= add ?28103 (add ?28103 (inverse (add (inverse ?28103) ?28104))) [28104, 28103] by Demod 15430 with 1733 at 2
Id : 15853, {_}: add ?28715 (add ?28715 (inverse (add (inverse ?28715) ?28716))) =?= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Super 8543 with 15735 at 2,3
Id : 16108, {_}: ?28715 =<= add (add ?28715 (inverse (add (inverse ?28715) ?28716))) ?28715 [28716, 28715] by Demod 15853 with 15735 at 2
Id : 10568, {_}: inverse (add (inverse (inverse ?20566)) (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Super 136 with 8791 at 1,1,1,2
Id : 10805, {_}: inverse (add ?20566 (inverse (add ?20567 (inverse ?20566)))) =>= inverse ?20566 [20567, 20566] by Demod 10568 with 1733 at 1,1,2
Id : 11153, {_}: inverse (inverse ?21486) =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Super 1733 with 10805 at 1,2
Id : 11260, {_}: ?21486 =<= add ?21486 (inverse (add ?21487 (inverse ?21486))) [21487, 21486] by Demod 11153 with 1733 at 2
Id : 11176, {_}: inverse (add ?21600 (inverse (add ?21601 (inverse ?21600)))) =>= inverse ?21600 [21601, 21600] by Demod 10568 with 1733 at 1,1,2
Id : 11183, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= inverse (inverse ?21642) [21643, 21642] by Super 11176 with 1733 at 2,1,2,1,2
Id : 11564, {_}: inverse (add (inverse ?21642) (inverse (add ?21643 ?21642))) =>= ?21642 [21643, 21642] by Demod 11183 with 1733 at 3
Id : 13294, {_}: inverse ?24726 =<= add (inverse ?24726) (inverse (add ?24727 ?24726)) [24727, 24726] by Super 1733 with 11564 at 1,2
Id : 13313, {_}: inverse (add (inverse ?24792) (inverse (add ?24792 ?24793))) =<= add (inverse (add (inverse ?24792) (inverse (add ?24792 ?24793)))) ?24792 [24793, 24792] by Super 13294 with 3712 at 2,3
Id : 16466, {_}: add (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) ?29660 =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Super 1785 with 13313 at 1,2,1,2,3
Id : 16829, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (inverse (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))))))) [29661, 29660] by Demod 16466 with 13313 at 2
Id : 16830, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (add (inverse ?29660) (inverse (add ?29660 ?29661))) (add (inverse ?29660) (inverse (add ?29660 ?29661))))) [29661, 29660] by Demod 16829 with 1733 at 2,1,2,3
Id : 16831, {_}: inverse (add (inverse ?29660) (inverse (add ?29660 ?29661))) =<= add ?29660 (inverse (add (inverse ?29660) (inverse (add ?29660 ?29661)))) [29661, 29660] by Demod 16830 with 1724 at 1,2,3
Id : 17624, {_}: ?31105 =<= add ?31105 (inverse (add (inverse ?31105) (inverse (add ?31105 ?31106)))) [31106, 31105] by Super 15735 with 16831 at 2,3
Id : 17680, {_}: ?31105 =<= inverse (add (inverse ?31105) (inverse (add ?31105 ?31106))) [31106, 31105] by Demod 17624 with 16831 at 3
Id : 18257, {_}: add ?31431 ?31432 =<= add (add ?31431 ?31432) ?31431 [31432, 31431] by Super 11260 with 17680 at 2,3
Id : 18478, {_}: ?28715 =<= add ?28715 (inverse (add (inverse ?28715) ?28716)) [28716, 28715] by Demod 16108 with 18257 at 3
Id : 18480, {_}: add (inverse ?5317) ?5318 =?= add ?5318 (inverse ?5317) [5318, 5317] by Demod 1785 with 18478 at 1,2,3
Id : 1761, {_}: inverse ?5314 =<= add (inverse (add ?5315 ?5314)) (inverse (add (inverse ?5315) ?5314)) [5315, 5314] by Super 1754 with 550 at 1,2
Id : 18617, {_}: a === a [] by Demod 18616 with 1733 at 2
Id : 18616, {_}: inverse (inverse a) =>= a [] by Demod 18615 with 1761 at 2
Id : 18615, {_}: add (inverse (add b (inverse a))) (inverse (add (inverse b) (inverse a))) =>= a [] by Demod 18614 with 18480 at 1,2,2
Id : 18614, {_}: add (inverse (add b (inverse a))) (inverse (add (inverse a) (inverse b))) =>= a [] by Demod 1 with 18480 at 1,1,2
Id :   1, {_}: add (inverse (add (inverse a) b)) (inverse (add (inverse a) (inverse b))) =>= a [] by huntinton_3
% SZS output end CNFRefutation for BOO074-1.p
22390: solved BOO074-1.p in 9.212575 using nrkbo
22390: status Unsatisfiable for BOO074-1.p
NO CLASH, using fixed ground order
22397: Facts:
22397:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22397:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22397:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
22397: Goal:
22397:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22397: Order:
22397:   nrkbo
22397: Leaf order:
22397:  strong_fixed_point 3 0 2 1,2
22397:  fixed_pt 3 0 3 2,2
22397:  w 4 0 0 
22397:  b 6 0 0 
22397:  apply 19 2 3 0,2
NO CLASH, using fixed ground order
22398: Facts:
22398:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22398:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22398:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
22398: Goal:
22398:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22398: Order:
22398:   kbo
22398: Leaf order:
22398:  strong_fixed_point 3 0 2 1,2
22398:  fixed_pt 3 0 3 2,2
22398:  w 4 0 0 
22398:  b 6 0 0 
22398:  apply 19 2 3 0,2
NO CLASH, using fixed ground order
22399: Facts:
22399:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22399:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22399:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w)) (apply (apply b w) (apply (apply b b) b))
          [] by strong_fixed_point
22399: Goal:
22399:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22399: Order:
22399:   lpo
22399: Leaf order:
22399:  strong_fixed_point 3 0 2 1,2
22399:  fixed_pt 3 0 3 2,2
22399:  w 4 0 0 
22399:  b 6 0 0 
22399:  apply 19 2 3 0,2
% SZS status Timeout for COL003-12.p
NO CLASH, using fixed ground order
22420: Facts:
22420:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22420:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22420:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
22420: Goal:
22420:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22420: Order:
22420:   nrkbo
22420: Leaf order:
22420:  strong_fixed_point 3 0 2 1,2
22420:  fixed_pt 3 0 3 2,2
22420:  w 4 0 0 
22420:  b 7 0 0 
22420:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22421: Facts:
22421:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22421:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22421:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
22421: Goal:
22421:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22421: Order:
22421:   kbo
22421: Leaf order:
22421:  strong_fixed_point 3 0 2 1,2
22421:  fixed_pt 3 0 3 2,2
22421:  w 4 0 0 
22421:  b 7 0 0 
22421:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22422: Facts:
22422:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22422:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22422:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply (apply b (apply w w)) (apply b w))) b)) b
          [] by strong_fixed_point
22422: Goal:
22422:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22422: Order:
22422:   lpo
22422: Leaf order:
22422:  strong_fixed_point 3 0 2 1,2
22422:  fixed_pt 3 0 3 2,2
22422:  w 4 0 0 
22422:  b 7 0 0 
22422:  apply 20 2 3 0,2
% SZS status Timeout for COL003-17.p
NO CLASH, using fixed ground order
22445: Facts:
22445:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22445:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22445:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
22445: Goal:
22445:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22445: Order:
22445:   nrkbo
22445: Leaf order:
22445:  strong_fixed_point 3 0 2 1,2
22445:  fixed_pt 3 0 3 2,2
22445:  w 4 0 0 
22445:  b 7 0 0 
22445:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22446: Facts:
22446:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22446:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22446:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
22446: Goal:
22446:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22446: Order:
22446:   kbo
22446: Leaf order:
22446:  strong_fixed_point 3 0 2 1,2
22446:  fixed_pt 3 0 3 2,2
22446:  w 4 0 0 
22446:  b 7 0 0 
22446:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22447: Facts:
22447:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22447:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22447:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply (apply b (apply w w)) (apply b w)))
            (apply (apply b b) b)
          [] by strong_fixed_point
22447: Goal:
22447:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22447: Order:
22447:   lpo
22447: Leaf order:
22447:  strong_fixed_point 3 0 2 1,2
22447:  fixed_pt 3 0 3 2,2
22447:  w 4 0 0 
22447:  b 7 0 0 
22447:  apply 20 2 3 0,2
% SZS status Timeout for COL003-18.p
NO CLASH, using fixed ground order
22471: Facts:
22471:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22471:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22471:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
22471: Goal:
22471:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22471: Order:
22471:   nrkbo
22471: Leaf order:
22471:  strong_fixed_point 3 0 2 1,2
22471:  fixed_pt 3 0 3 2,2
22471:  w 4 0 0 
22471:  b 7 0 0 
22471:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22472: Facts:
22472:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22472:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22472:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
22472: Goal:
22472:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22472: Order:
22472:   kbo
22472: Leaf order:
22472:  strong_fixed_point 3 0 2 1,2
22472:  fixed_pt 3 0 3 2,2
22472:  w 4 0 0 
22472:  b 7 0 0 
22472:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
22473: Facts:
22473:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
22473:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
22473:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply (apply b (apply w w)) (apply (apply b (apply b w)) b))) b
          [] by strong_fixed_point
22473: Goal:
22473:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
22473: Order:
22473:   lpo
22473: Leaf order:
22473:  strong_fixed_point 3 0 2 1,2
22473:  fixed_pt 3 0 3 2,2
22473:  w 4 0 0 
22473:  b 7 0 0 
22473:  apply 20 2 3 0,2
% SZS status Timeout for COL003-19.p
CLASH, statistics insufficient
22495: Facts:
22495:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
22495:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =>= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
22495: Goal:
22495:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
22495: Order:
22495:   nrkbo
22495: Leaf order:
22495:  o 1 0 0 
22495:  q1 1 0 0 
22495:  combinator 1 0 1 1,3
22495:  apply 10 2 1 0,3
CLASH, statistics insufficient
22496: Facts:
22496:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
22496:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =>= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
22496: Goal:
22496:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
22496: Order:
22496:   kbo
22496: Leaf order:
22496:  o 1 0 0 
22496:  q1 1 0 0 
22496:  combinator 1 0 1 1,3
22496:  apply 10 2 1 0,3
CLASH, statistics insufficient
22497: Facts:
22497:  Id :   2, {_}:
          apply (apply o ?3) ?4 =?= apply ?4 (apply ?3 ?4)
          [4, 3] by o_definition ?3 ?4
22497:  Id :   3, {_}:
          apply (apply (apply q1 ?6) ?7) ?8 =?= apply ?6 (apply ?8 ?7)
          [8, 7, 6] by q1_definition ?6 ?7 ?8
22497: Goal:
22497:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
22497: Order:
22497:   lpo
22497: Leaf order:
22497:  o 1 0 0 
22497:  q1 1 0 0 
22497:  combinator 1 0 1 1,3
22497:  apply 10 2 1 0,3
% SZS status Timeout for COL011-1.p
CLASH, statistics insufficient
22518: Facts:
22518:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22518:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22518:  Id :   4, {_}:
          apply (apply t ?9) ?10 =>= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
22518: Goal:
22518:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22518: Order:
22518:   nrkbo
22518: Leaf order:
22518:  b 1 0 0 
22518:  m 1 0 0 
22518:  t 1 0 0 
22518:  f 3 1 3 0,2,2
22518:  apply 13 2 3 0,2
CLASH, statistics insufficient
22519: Facts:
22519:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22519:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22519:  Id :   4, {_}:
          apply (apply t ?9) ?10 =>= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
22519: Goal:
22519:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22519: Order:
22519:   kbo
22519: Leaf order:
22519:  b 1 0 0 
22519:  m 1 0 0 
22519:  t 1 0 0 
22519:  f 3 1 3 0,2,2
22519:  apply 13 2 3 0,2
CLASH, statistics insufficient
22520: Facts:
22520:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22520:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22520:  Id :   4, {_}:
          apply (apply t ?9) ?10 =?= apply ?10 ?9
          [10, 9] by t_definition ?9 ?10
22520: Goal:
22520:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22520: Order:
22520:   lpo
22520: Leaf order:
22520:  b 1 0 0 
22520:  m 1 0 0 
22520:  t 1 0 0 
22520:  f 3 1 3 0,2,2
22520:  apply 13 2 3 0,2
Goal subsumed
Statistics :
Max weight : 62
Found proof, 0.520019s
% SZS status Unsatisfiable for COL034-1.p
% SZS output start CNFRefutation for COL034-1.p
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :   4, {_}: apply (apply t ?9) ?10 =>= apply ?10 ?9 [10, 9] by t_definition ?9 ?10
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :  11, {_}: apply m (apply (apply b ?29) ?30) =<= apply ?29 (apply ?30 (apply (apply b ?29) ?30)) [30, 29] by Super 2 with 3 at 2
Id : 2545, {_}: apply (f (apply (apply b m) (apply (apply b (apply t m)) b))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply b (apply t m)) b)))) m)) === apply (f (apply (apply b m) (apply (apply b (apply t m)) b))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply b (apply t m)) b)))) m)) [] by Super 2544 with 11 at 2
Id : 2544, {_}: apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975) =<= apply (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))) (apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975)) [1975, 1976, 1974] by Demod 2294 with 4 at 2,2
Id : 2294, {_}: apply ?1974 (apply (apply t ?1975) (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))))) =<= apply (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976))) (apply ?1974 (apply (apply ?1976 (f (apply (apply b ?1974) (apply (apply b (apply t ?1975)) ?1976)))) ?1975)) [1976, 1975, 1974] by Super 53 with 4 at 2,2,3
Id :  53, {_}: apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80))))) =<= apply (f (apply (apply b ?78) (apply (apply b ?79) ?80))) (apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80)))))) [80, 79, 78] by Demod 39 with 2 at 2,2
Id :  39, {_}: apply ?78 (apply (apply (apply b ?79) ?80) (f (apply (apply b ?78) (apply (apply b ?79) ?80)))) =<= apply (f (apply (apply b ?78) (apply (apply b ?79) ?80))) (apply ?78 (apply ?79 (apply ?80 (f (apply (apply b ?78) (apply (apply b ?79) ?80)))))) [80, 79, 78] by Super 8 with 2 at 2,2,3
Id :   8, {_}: apply ?20 (apply ?21 (f (apply (apply b ?20) ?21))) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?20) ?21) (f (apply (apply b ?20) ?21)) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL034-1.p
22518: solved COL034-1.p in 0.528032 using nrkbo
22518: status Unsatisfiable for COL034-1.p
CLASH, statistics insufficient
22525: Facts:
22525:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22525:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22525:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22525: Goal:
22525:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22525: Order:
22525:   nrkbo
22525: Leaf order:
22525:  s 1 0 0 
22525:  b 1 0 0 
22525:  c 1 0 0 
22525:  f 3 1 3 0,2,2
22525:  apply 19 2 3 0,2
CLASH, statistics insufficient
22526: Facts:
22526:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22526:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22526:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22526: Goal:
22526:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22526: Order:
22526:   kbo
22526: Leaf order:
22526:  s 1 0 0 
22526:  b 1 0 0 
22526:  c 1 0 0 
22526:  f 3 1 3 0,2,2
22526:  apply 19 2 3 0,2
CLASH, statistics insufficient
22527: Facts:
22527:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22527:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22527:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =?= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22527: Goal:
22527:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22527: Order:
22527:   lpo
22527: Leaf order:
22527:  s 1 0 0 
22527:  b 1 0 0 
22527:  c 1 0 0 
22527:  f 3 1 3 0,2,2
22527:  apply 19 2 3 0,2
% SZS status Timeout for COL037-1.p
CLASH, statistics insufficient
22551: Facts:
22551:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22551:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22551:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
22551: Goal:
22551:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22551: Order:
22551:   nrkbo
22551: Leaf order:
22551:  b 1 0 0 
22551:  m 1 0 0 
22551:  c 1 0 0 
22551:  f 3 1 3 0,2,2
22551:  apply 15 2 3 0,2
CLASH, statistics insufficient
22552: Facts:
22552:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22552:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22552:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
22552: Goal:
22552:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22552: Order:
22552:   kbo
22552: Leaf order:
22552:  b 1 0 0 
22552:  m 1 0 0 
22552:  c 1 0 0 
22552:  f 3 1 3 0,2,2
22552:  apply 15 2 3 0,2
CLASH, statistics insufficient
22553: Facts:
22553:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22553:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
22553:  Id :   4, {_}:
          apply (apply (apply c ?9) ?10) ?11 =?= apply (apply ?9 ?11) ?10
          [11, 10, 9] by c_definition ?9 ?10 ?11
22553: Goal:
22553:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22553: Order:
22553:   lpo
22553: Leaf order:
22553:  b 1 0 0 
22553:  m 1 0 0 
22553:  c 1 0 0 
22553:  f 3 1 3 0,2,2
22553:  apply 15 2 3 0,2
Goal subsumed
Statistics :
Max weight : 54
Found proof, 1.136025s
% SZS status Unsatisfiable for COL041-1.p
% SZS output start CNFRefutation for COL041-1.p
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :   4, {_}: apply (apply (apply c ?9) ?10) ?11 =>= apply (apply ?9 ?11) ?10 [11, 10, 9] by c_definition ?9 ?10 ?11
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :  11, {_}: apply m (apply (apply b ?30) ?31) =<= apply ?30 (apply ?31 (apply (apply b ?30) ?31)) [31, 30] by Super 2 with 3 at 2
Id : 4380, {_}: apply (f (apply (apply b m) (apply (apply c b) m))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply c b) m)))) m)) === apply (f (apply (apply b m) (apply (apply c b) m))) (apply m (apply (apply b (f (apply (apply b m) (apply (apply c b) m)))) m)) [] by Super 53 with 11 at 2
Id :  53, {_}: apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93) =<= apply (f (apply (apply b ?91) (apply (apply c ?92) ?93))) (apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93)) [93, 92, 91] by Demod 39 with 4 at 2,2
Id :  39, {_}: apply ?91 (apply (apply (apply c ?92) ?93) (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) =<= apply (f (apply (apply b ?91) (apply (apply c ?92) ?93))) (apply ?91 (apply (apply ?92 (f (apply (apply b ?91) (apply (apply c ?92) ?93)))) ?93)) [93, 92, 91] by Super 8 with 4 at 2,2,3
Id :   8, {_}: apply ?21 (apply ?22 (f (apply (apply b ?21) ?22))) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?21) ?22) (f (apply (apply b ?21) ?22)) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL041-1.p
22551: solved COL041-1.p in 1.14407 using nrkbo
22551: status Unsatisfiable for COL041-1.p
CLASH, statistics insufficient
22558: Facts:
22558:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22558:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
22558: Goal:
22558:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22558: Order:
22558:   nrkbo
22558: Leaf order:
22558:  b 1 0 0 
22558:  n 1 0 0 
22558:  f 3 1 3 0,2,2
22558:  apply 14 2 3 0,2
CLASH, statistics insufficient
22559: Facts:
22559:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22559:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
22559: Goal:
22559:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22559: Order:
22559:   kbo
22559: Leaf order:
22559:  b 1 0 0 
22559:  n 1 0 0 
22559:  f 3 1 3 0,2,2
22559:  apply 14 2 3 0,2
CLASH, statistics insufficient
22560: Facts:
22560:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22560:  Id :   3, {_}:
          apply (apply (apply n ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?9) ?8) ?9
          [9, 8, 7] by n_definition ?7 ?8 ?9
22560: Goal:
22560:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
22560: Order:
22560:   lpo
22560: Leaf order:
22560:  b 1 0 0 
22560:  n 1 0 0 
22560:  f 3 1 3 0,2,2
22560:  apply 14 2 3 0,2
Goal subsumed
Statistics :
Max weight : 88
Found proof, 25.425976s
% SZS status Unsatisfiable for COL044-1.p
% SZS output start CNFRefutation for COL044-1.p
Id :   4, {_}: apply (apply (apply b ?11) ?12) ?13 =>= apply ?11 (apply ?12 ?13) [13, 12, 11] by b_definition ?11 ?12 ?13
Id :   3, {_}: apply (apply (apply n ?7) ?8) ?9 =?= apply (apply (apply ?7 ?9) ?8) ?9 [9, 8, 7] by n_definition ?7 ?8 ?9
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :   8, {_}: apply (apply (apply n b) ?22) ?23 =?= apply ?23 (apply ?22 ?23) [23, 22] by Super 2 with 3 at 2
Id :   5, {_}: apply ?15 (apply ?16 ?17) =?= apply ?15 (apply ?16 ?17) [17, 16, 15] by Super 4 with 2 at 2
Id :  83, {_}: apply (apply (apply (apply n b) ?260) (apply b ?261)) ?262 =?= apply ?261 (apply (apply ?260 (apply b ?261)) ?262) [262, 261, 260] by Super 2 with 8 at 1,2
Id : 24939, {_}: apply (apply (apply n b) (apply (apply (apply n (apply n b)) (apply b (apply n b))) (apply n (apply n b)))) (f (apply (apply (apply (apply n b) (apply n (apply n b))) (apply b (apply n b))) (apply n (apply n b)))) =?= apply (apply (apply n b) (apply (apply (apply n (apply n b)) (apply b (apply n b))) (apply n (apply n b)))) (f (apply (apply (apply (apply n b) (apply n (apply n b))) (apply b (apply n b))) (apply n (apply n b)))) [] by Super 24245 with 83 at 1,2
Id : 24245, {_}: apply (apply (apply (apply ?35313 ?35314) ?35315) ?35314) (f (apply (apply (apply ?35313 ?35314) ?35315) ?35314)) =?= apply (apply (apply n b) (apply (apply (apply n ?35313) ?35315) ?35314)) (f (apply (apply (apply ?35313 ?35314) ?35315) ?35314)) [35315, 35314, 35313] by Super 153 with 3 at 2,1,3
Id : 153, {_}: apply (apply ?460 ?461) (f (apply ?460 ?461)) =<= apply (apply (apply n b) (apply ?460 ?461)) (f (apply ?460 ?461)) [461, 460] by Super 115 with 5 at 1,3
Id : 115, {_}: apply ?375 (f ?375) =<= apply (apply (apply n b) ?375) (f ?375) [375] by Super 1 with 8 at 3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL044-1.p
22559: solved COL044-1.p in 12.720795 using kbo
22559: status Unsatisfiable for COL044-1.p
CLASH, statistics insufficient
22570: Facts:
22570:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
CLASH, statistics insufficient
22571: Facts:
22571:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22571:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
22571:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
22571: Goal:
22571:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22571: Order:
22571:   kbo
22571: Leaf order:
22571:  b 1 0 0 
22571:  w 1 0 0 
22571:  m 1 0 0 
22571:  f 3 1 3 0,2,2
22571:  apply 14 2 3 0,2
CLASH, statistics insufficient
22572: Facts:
22572:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
22572:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
22572:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
22572: Goal:
22572:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22572: Order:
22572:   lpo
22572: Leaf order:
22572:  b 1 0 0 
22572:  w 1 0 0 
22572:  m 1 0 0 
22572:  f 3 1 3 0,2,2
22572:  apply 14 2 3 0,2
22570:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
22570:  Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
22570: Goal:
22570:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22570: Order:
22570:   nrkbo
22570: Leaf order:
22570:  b 1 0 0 
22570:  w 1 0 0 
22570:  m 1 0 0 
22570:  f 3 1 3 0,2,2
22570:  apply 14 2 3 0,2
Goal subsumed
Statistics :
Max weight : 54
Found proof, 12.496351s
% SZS status Unsatisfiable for COL049-1.p
% SZS output start CNFRefutation for COL049-1.p
Id :   3, {_}: apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8 [8, 7] by w_definition ?7 ?8
Id :   4, {_}: apply m ?10 =?= apply ?10 ?10 [10] by m_definition ?10
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 226, {_}: apply (apply w (apply b ?378)) ?379 =?= apply ?378 (apply ?379 ?379) [379, 378] by Super 2 with 3 at 2
Id : 231, {_}: apply (apply w (apply b ?393)) ?394 =>= apply ?393 (apply m ?394) [394, 393] by Super 226 with 4 at 2,3
Id : 289, {_}: apply m (apply w (apply b ?503)) =<= apply ?503 (apply m (apply w (apply b ?503))) [503] by Super 4 with 231 at 3
Id : 15983, {_}: apply (f (apply (apply b m) (apply (apply b w) b))) (apply m (apply w (apply b (f (apply (apply b m) (apply (apply b w) b)))))) === apply (f (apply (apply b m) (apply (apply b w) b))) (apply m (apply w (apply b (f (apply (apply b m) (apply (apply b w) b)))))) [] by Super 72 with 289 at 2
Id :  72, {_}: apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125))))) =<= apply (f (apply (apply b ?123) (apply (apply b ?124) ?125))) (apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125)))))) [125, 124, 123] by Demod 59 with 2 at 2,2
Id :  59, {_}: apply ?123 (apply (apply (apply b ?124) ?125) (f (apply (apply b ?123) (apply (apply b ?124) ?125)))) =<= apply (f (apply (apply b ?123) (apply (apply b ?124) ?125))) (apply ?123 (apply ?124 (apply ?125 (f (apply (apply b ?123) (apply (apply b ?124) ?125)))))) [125, 124, 123] by Super 8 with 2 at 2,2,3
Id :   8, {_}: apply ?20 (apply ?21 (f (apply (apply b ?20) ?21))) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?20) ?21) (f (apply (apply b ?20) ?21)) =<= apply (f (apply (apply b ?20) ?21)) (apply ?20 (apply ?21 (f (apply (apply b ?20) ?21)))) [21, 20] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_strong_fixed_point ?1
% SZS output end CNFRefutation for COL049-1.p
22570: solved COL049-1.p in 6.296392 using nrkbo
22570: status Unsatisfiable for COL049-1.p
CLASH, statistics insufficient
22586: Facts:
22586:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22586:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22586:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22586:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
22586: Goal:
22586:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22586: Order:
22586:   nrkbo
22586: Leaf order:
22586:  s 1 0 0 
22586:  b 1 0 0 
22586:  c 1 0 0 
22586:  i 1 0 0 
22586:  f 3 1 3 0,2,2
22586:  apply 20 2 3 0,2
CLASH, statistics insufficient
22587: Facts:
22587:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22587:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22587:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =>= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22587:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
22587: Goal:
22587:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22587: Order:
22587:   kbo
22587: Leaf order:
22587:  s 1 0 0 
22587:  b 1 0 0 
22587:  c 1 0 0 
22587:  i 1 0 0 
22587:  f 3 1 3 0,2,2
22587:  apply 20 2 3 0,2
CLASH, statistics insufficient
22588: Facts:
22588:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
22588:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
22588:  Id :   4, {_}:
          apply (apply (apply c ?11) ?12) ?13 =?= apply (apply ?11 ?13) ?12
          [13, 12, 11] by c_definition ?11 ?12 ?13
22588:  Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
22588: Goal:
22588:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
22588: Order:
22588:   lpo
22588: Leaf order:
22588:  s 1 0 0 
22588:  b 1 0 0 
22588:  c 1 0 0 
22588:  i 1 0 0 
22588:  f 3 1 3 0,2,2
22588:  apply 20 2 3 0,2
Goal subsumed
Statistics :
Max weight : 84
Found proof, 2.121776s
% SZS status Unsatisfiable for COL057-1.p
% SZS output start CNFRefutation for COL057-1.p
Id :   3, {_}: apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9) [9, 8, 7] by b_definition ?7 ?8 ?9
Id :   5, {_}: apply i ?15 =>= ?15 [15] by i_definition ?15
Id :   2, {_}: apply (apply (apply s ?3) ?4) ?5 =?= apply (apply ?3 ?5) (apply ?4 ?5) [5, 4, 3] by s_definition ?3 ?4 ?5
Id :  37, {_}: apply (apply (apply s i) ?141) ?142 =?= apply ?142 (apply ?141 ?142) [142, 141] by Super 2 with 5 at 1,3
Id :  16, {_}: apply (apply (apply s (apply b ?64)) ?65) ?66 =?= apply ?64 (apply ?66 (apply ?65 ?66)) [66, 65, 64] by Super 2 with 3 at 3
Id : 9068, {_}: apply (apply (apply (apply s (apply b (apply s i))) i) (apply (apply s (apply b (apply s i))) i)) (f (apply (apply (apply s (apply b (apply s i))) i) (apply i (apply (apply s (apply b (apply s i))) i)))) === apply (apply (apply (apply s (apply b (apply s i))) i) (apply (apply s (apply b (apply s i))) i)) (f (apply (apply (apply s (apply b (apply s i))) i) (apply i (apply (apply s (apply b (apply s i))) i)))) [] by Super 9059 with 5 at 2,1,2
Id : 9059, {_}: apply (apply ?16932 (apply ?16933 ?16932)) (f (apply ?16932 (apply ?16933 ?16932))) =?= apply (apply (apply (apply s (apply b (apply s i))) ?16933) ?16932) (f (apply ?16932 (apply ?16933 ?16932))) [16933, 16932] by Super 9058 with 16 at 1,3
Id : 9058, {_}: apply ?16930 (f ?16930) =<= apply (apply (apply s i) ?16930) (f ?16930) [16930] by Super 1 with 37 at 3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_strong_fixed_point ?1
% SZS output end CNFRefutation for COL057-1.p
22586: solved COL057-1.p in 2.124132 using nrkbo
22586: status Unsatisfiable for COL057-1.p
NO CLASH, using fixed ground order
22593: Facts:
22593:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
22593: Goal:
22593:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22593: Order:
22593:   nrkbo
22593: Leaf order:
22593:  a 2 0 2 1,2
22593:  b 2 0 2 1,2,2
22593:  c 2 0 2 2,2,2
22593:  inverse 5 1 0 
22593:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
22594: Facts:
22594:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
22594: Goal:
22594:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22594: Order:
22594:   kbo
22594: Leaf order:
22594:  a 2 0 2 1,2
22594:  b 2 0 2 1,2,2
22594:  c 2 0 2 2,2,2
22594:  inverse 5 1 0 
22594:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
22595: Facts:
22595:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
22595: Goal:
22595:  Id :   1, {_}:
          multiply a (multiply b c) =<= multiply (multiply a b) c
          [] by prove_associativity
22595: Order:
22595:   lpo
22595: Leaf order:
22595:  a 2 0 2 1,2
22595:  b 2 0 2 1,2,2
22595:  c 2 0 2 2,2,2
22595:  inverse 5 1 0 
22595:  multiply 10 2 4 0,2
Statistics :
Max weight : 62
Found proof, 23.394494s
% SZS status Unsatisfiable for GRP014-1.p
% SZS output start CNFRefutation for GRP014-1.p
Id :   2, {_}: multiply ?2 (inverse (multiply (multiply (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4))) ?5) (inverse (multiply ?3 ?5)))) =>= ?4 [5, 4, 3, 2] by group_axiom ?2 ?3 ?4 ?5
Id :   3, {_}: multiply ?7 (inverse (multiply (multiply (inverse (multiply (inverse ?8) (multiply (inverse ?7) ?9))) ?10) (inverse (multiply ?8 ?10)))) =>= ?9 [10, 9, 8, 7] by group_axiom ?7 ?8 ?9 ?10
Id :   6, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (inverse (multiply (inverse ?29) (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27))) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 30, 29, 28, 27, 26] by Super 3 with 2 at 1,1,2,2
Id :   5, {_}: multiply ?19 (inverse (multiply (multiply (inverse (multiply (inverse ?20) ?21)) ?22) (inverse (multiply ?20 ?22)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24) (inverse (multiply ?23 ?24))) [24, 23, 22, 21, 20, 19] by Super 3 with 2 at 2,1,1,1,1,2,2
Id :  28, {_}: multiply (inverse ?215) (multiply ?215 (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216, 215] by Super 2 with 5 at 2,2
Id :  29, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?220) (multiply (inverse (inverse ?221)) (multiply (inverse ?221) ?222)))) ?223) (inverse (multiply ?220 ?223))) =>= ?222 [223, 222, 221, 220] by Super 2 with 5 at 2
Id : 287, {_}: multiply (inverse ?2293) (multiply ?2293 ?2294) =?= multiply (inverse (inverse ?2295)) (multiply (inverse ?2295) ?2294) [2295, 2294, 2293] by Super 28 with 29 at 2,2,2
Id : 136, {_}: multiply (inverse ?1148) (multiply ?1148 ?1149) =?= multiply (inverse (inverse ?1150)) (multiply (inverse ?1150) ?1149) [1150, 1149, 1148] by Super 28 with 29 at 2,2,2
Id : 301, {_}: multiply (inverse ?2384) (multiply ?2384 ?2385) =?= multiply (inverse ?2386) (multiply ?2386 ?2385) [2386, 2385, 2384] by Super 287 with 136 at 3
Id : 356, {_}: multiply (inverse ?2583) (multiply ?2583 (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584, 2583] by Super 28 with 301 at 1,1,1,1,2,2,2
Id : 679, {_}: multiply ?5168 (inverse (multiply (multiply (inverse (multiply (inverse ?5169) (multiply ?5169 ?5170))) ?5171) (inverse (multiply (inverse ?5168) ?5171)))) =>= ?5170 [5171, 5170, 5169, 5168] by Super 2 with 301 at 1,1,1,1,2,2
Id : 2910, {_}: multiply ?23936 (inverse (multiply (multiply (inverse (multiply (inverse ?23937) (multiply ?23937 ?23938))) (multiply ?23936 ?23939)) (inverse (multiply (inverse ?23940) (multiply ?23940 ?23939))))) =>= ?23938 [23940, 23939, 23938, 23937, 23936] by Super 679 with 301 at 1,2,1,2,2
Id : 2996, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse (multiply (inverse ?24705) (multiply ?24705 (inverse (multiply (multiply (inverse (multiply (inverse ?24706) ?24704)) ?24707) (inverse (multiply ?24706 ?24707))))))))) =>= ?24703 [24707, 24706, 24705, 24704, 24703, 24702] by Super 2910 with 28 at 1,1,2,2
Id : 3034, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse ?24704))) =>= ?24703 [24704, 24703, 24702] by Demod 2996 with 28 at 1,2,1,2,2
Id : 3426, {_}: multiply (inverse (multiply (inverse ?29536) (multiply ?29536 ?29537))) ?29537 =?= multiply (inverse (multiply (inverse ?29538) (multiply ?29538 ?29539))) ?29539 [29539, 29538, 29537, 29536] by Super 356 with 3034 at 2,2
Id : 3726, {_}: multiply (inverse (inverse (multiply (inverse ?31745) (multiply ?31745 (inverse (multiply (multiply (inverse (multiply (inverse ?31746) ?31747)) ?31748) (inverse (multiply ?31746 ?31748)))))))) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31748, 31747, 31746, 31745] by Super 28 with 3426 at 2,2
Id : 3919, {_}: multiply (inverse (inverse ?31747)) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31747] by Demod 3726 with 28 at 1,1,1,2
Id :  91, {_}: multiply (inverse ?821) (multiply ?821 (inverse (multiply (multiply (inverse (multiply (inverse ?822) ?823)) ?824) (inverse (multiply ?822 ?824))))) =>= ?823 [824, 823, 822, 821] by Super 2 with 5 at 2,2
Id : 107, {_}: multiply (inverse ?949) (multiply ?949 (multiply ?950 (inverse (multiply (multiply (inverse (multiply (inverse ?951) ?952)) ?953) (inverse (multiply ?951 ?953)))))) =>= multiply (inverse (inverse ?950)) ?952 [953, 952, 951, 950, 949] by Super 91 with 5 at 2,2,2
Id : 3966, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse (multiply (inverse ?33636) (multiply ?33636 (inverse (multiply (multiply (inverse (multiply (inverse ?33637) ?33638)) ?33639) (inverse (multiply ?33637 ?33639))))))))) ?33638 [33639, 33638, 33637, 33636, 33635] by Super 107 with 3919 at 2,2
Id : 4117, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 3966 with 28 at 1,1,1,1,3
Id : 4346, {_}: multiply (inverse (inverse ?35898)) (multiply (inverse (multiply (inverse (inverse (inverse (inverse ?35899)))) (multiply (inverse (inverse (inverse ?35900))) ?35900))) ?35899) =>= ?35898 [35900, 35899, 35898] by Super 3919 with 4117 at 2,1,1,2,2
Id : 3965, {_}: multiply (inverse ?33628) (multiply ?33628 (multiply ?33629 (inverse (multiply (multiply (inverse ?33630) ?33631) (inverse (multiply (inverse ?33630) ?33631)))))) =?= multiply (inverse (inverse ?33629)) (multiply (inverse (multiply (inverse ?33632) (multiply ?33632 ?33633))) ?33633) [33633, 33632, 33631, 33630, 33629, 33628] by Super 107 with 3919 at 1,1,1,1,2,2,2,2
Id : 6632, {_}: multiply (inverse ?52916) (multiply ?52916 (multiply ?52917 (inverse (multiply (multiply (inverse ?52918) ?52919) (inverse (multiply (inverse ?52918) ?52919)))))) =>= ?52917 [52919, 52918, 52917, 52916] by Demod 3965 with 3919 at 3
Id : 6641, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply (multiply (inverse ?52994) (inverse (multiply (multiply (inverse (multiply (inverse ?52995) (multiply (inverse (inverse ?52994)) ?52996))) ?52997) (inverse (multiply ?52995 ?52997))))) (inverse ?52996))))) =>= ?52993 [52997, 52996, 52995, 52994, 52993, 52992] by Super 6632 with 2 at 1,2,1,2,2,2,2
Id : 6773, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply ?52996 (inverse ?52996))))) =>= ?52993 [52996, 52993, 52992] by Demod 6641 with 2 at 1,1,2,2,2,2
Id : 6832, {_}: multiply (inverse (inverse ?53817)) (multiply (inverse ?53818) (multiply ?53818 (inverse (multiply ?53819 (inverse ?53819))))) =>= ?53817 [53819, 53818, 53817] by Super 4346 with 6773 at 1,1,2,2
Id :   4, {_}: multiply ?12 (inverse (multiply (multiply (inverse (multiply (inverse ?13) (multiply (inverse ?12) ?14))) (inverse (multiply (multiply (inverse (multiply (inverse ?15) (multiply (inverse ?13) ?16))) ?17) (inverse (multiply ?15 ?17))))) (inverse ?16))) =>= ?14 [17, 16, 15, 14, 13, 12] by Super 3 with 2 at 1,2,1,2,2
Id :   9, {_}: multiply ?44 (inverse (multiply (multiply (inverse (multiply (inverse ?45) ?46)) ?47) (inverse (multiply ?45 ?47)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?48) (multiply (inverse (inverse ?44)) ?46))) (inverse (multiply (multiply (inverse (multiply (inverse ?49) (multiply (inverse ?48) ?50))) ?51) (inverse (multiply ?49 ?51))))) (inverse ?50)) [51, 50, 49, 48, 47, 46, 45, 44] by Super 2 with 4 at 2,1,1,1,1,2,2
Id : 7754, {_}: multiply ?63171 (inverse (multiply (multiply (inverse (multiply (inverse ?63172) (multiply (inverse ?63171) (inverse (multiply ?63173 (inverse ?63173)))))) ?63174) (inverse (multiply ?63172 ?63174)))) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63174, 63173, 63172, 63171] by Super 9 with 6832 at 1,1,1,1,3
Id : 7872, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63173] by Demod 7754 with 2 at 2
Id : 7873, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply ?63177 (inverse ?63177)) [63177, 63173] by Demod 7872 with 2 at 1,1,3
Id : 8249, {_}: multiply (inverse (inverse (multiply ?66459 (inverse ?66459)))) (multiply (inverse ?66460) (multiply ?66460 (inverse (multiply ?66461 (inverse ?66461))))) =?= multiply ?66462 (inverse ?66462) [66462, 66461, 66460, 66459] by Super 6832 with 7873 at 1,1,2
Id : 8282, {_}: multiply ?66459 (inverse ?66459) =?= multiply ?66462 (inverse ?66462) [66462, 66459] by Demod 8249 with 6832 at 2
Id : 8520, {_}: multiply (multiply (inverse ?67970) (multiply ?67971 (inverse ?67971))) (inverse (multiply ?67972 (inverse ?67972))) =>= inverse ?67970 [67972, 67971, 67970] by Super 3034 with 8282 at 2,1,2
Id : 380, {_}: multiply ?2743 (inverse (multiply (multiply (inverse ?2744) (multiply ?2744 ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2744, 2743] by Super 2 with 301 at 1,1,2,2
Id : 8912, {_}: multiply ?70596 (inverse (multiply (multiply (inverse ?70597) (multiply ?70597 (inverse (multiply ?70598 (inverse ?70598))))) (inverse (multiply ?70599 (inverse ?70599))))) =>= inverse (inverse ?70596) [70599, 70598, 70597, 70596] by Super 380 with 8520 at 2,1,2,1,2,2
Id : 9021, {_}: multiply ?70596 (inverse (inverse (multiply ?70598 (inverse ?70598)))) =>= inverse (inverse ?70596) [70598, 70596] by Demod 8912 with 3034 at 1,2,2
Id : 9165, {_}: multiply (inverse (inverse ?72171)) (multiply (inverse (multiply (inverse ?72172) (inverse (inverse ?72172)))) (inverse (inverse (multiply ?72173 (inverse ?72173))))) =>= ?72171 [72173, 72172, 72171] by Super 3919 with 9021 at 2,1,1,2,2
Id : 10068, {_}: multiply (inverse (inverse ?76580)) (inverse (inverse (inverse (multiply (inverse ?76581) (inverse (inverse ?76581)))))) =>= ?76580 [76581, 76580] by Demod 9165 with 9021 at 2,2
Id : 9180, {_}: multiply ?72234 (inverse ?72234) =?= inverse (inverse (inverse (multiply ?72235 (inverse ?72235)))) [72235, 72234] by Super 8282 with 9021 at 3
Id : 10100, {_}: multiply (inverse (inverse ?76745)) (multiply ?76746 (inverse ?76746)) =>= ?76745 [76746, 76745] by Super 10068 with 9180 at 2,2
Id : 10663, {_}: multiply ?82289 (inverse (multiply ?82290 (inverse ?82290))) =>= inverse (inverse ?82289) [82290, 82289] by Super 8520 with 10100 at 1,2
Id : 10913, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (inverse (multiply (inverse ?83564) (multiply ?83564 (inverse (multiply ?83565 (inverse ?83565)))))))) =>= ?83563 [83565, 83564, 83563] by Super 3919 with 10663 at 2,2
Id : 10892, {_}: inverse (inverse (multiply (inverse ?24702) (multiply ?24702 ?24703))) =>= ?24703 [24703, 24702] by Demod 3034 with 10663 at 2
Id : 11238, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (multiply ?83565 (inverse ?83565)))) =>= ?83563 [83565, 83563] by Demod 10913 with 10892 at 1,2,2
Id : 11239, {_}: inverse (inverse (inverse (inverse ?83563))) =>= ?83563 [83563] by Demod 11238 with 9021 at 2
Id : 138, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1160) (multiply (inverse (inverse ?1161)) (multiply (inverse ?1161) ?1162)))) ?1163) (inverse (multiply ?1160 ?1163))) =>= ?1162 [1163, 1162, 1161, 1160] by Super 2 with 5 at 2
Id : 145, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?1214) (multiply (inverse (inverse ?1215)) (multiply (inverse ?1215) ?1216)))) ?1217) (inverse (multiply ?1214 ?1217))))) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1217, 1216, 1215, 1214, 1213] by Super 138 with 29 at 1,2,2,1,1,1,1,2
Id : 168, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse ?1216) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1216, 1213] by Demod 145 with 29 at 1,1,2,1,1,1,1,2
Id : 777, {_}: multiply (inverse ?5891) (multiply ?5891 (multiply ?5892 (inverse (multiply (multiply (inverse (multiply (inverse ?5893) ?5894)) ?5895) (inverse (multiply ?5893 ?5895)))))) =>= multiply (inverse (inverse ?5892)) ?5894 [5895, 5894, 5893, 5892, 5891] by Super 91 with 5 at 2,2,2
Id : 813, {_}: multiply (inverse ?6211) (multiply ?6211 (multiply ?6212 ?6213)) =?= multiply (inverse (inverse ?6212)) (multiply (inverse ?6214) (multiply ?6214 ?6213)) [6214, 6213, 6212, 6211] by Super 777 with 168 at 2,2,2,2
Id : 1401, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11491) (multiply ?11491 (multiply ?11492 ?11493)))) ?11494) (inverse (multiply (inverse ?11492) ?11494))) =>= ?11493 [11494, 11493, 11492, 11491] by Super 168 with 813 at 1,1,1,1,2
Id : 1427, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11709) (multiply ?11709 (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710, 11709] by Super 1401 with 301 at 2,2,1,1,1,1,2
Id : 10889, {_}: multiply (inverse ?52992) (multiply ?52992 (inverse (inverse ?52993))) =>= ?52993 [52993, 52992] by Demod 6773 with 10663 at 2,2,2
Id : 11440, {_}: multiply (inverse ?85947) (multiply ?85947 ?85948) =>= inverse (inverse ?85948) [85948, 85947] by Super 10889 with 11239 at 2,2,2
Id : 12070, {_}: inverse (multiply (multiply (inverse (inverse (inverse (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710] by Demod 1427 with 11440 at 1,1,1,1,2
Id : 12071, {_}: inverse (multiply (multiply (inverse (inverse (inverse (inverse (inverse ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12070 with 11440 at 1,1,1,1,1,1,2
Id : 12086, {_}: inverse (multiply (multiply (inverse ?11711) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12071 with 11239 at 1,1,1,2
Id : 11284, {_}: multiply ?84907 (inverse (multiply (inverse (inverse (inverse ?84908))) ?84908)) =>= inverse (inverse ?84907) [84908, 84907] by Super 10663 with 11239 at 2,1,2,2
Id : 12456, {_}: inverse (inverse (inverse (multiply (inverse ?89511) ?89512))) =>= multiply (inverse ?89512) ?89511 [89512, 89511] by Super 12086 with 11284 at 1,2
Id : 12807, {_}: inverse (multiply (inverse ?89891) ?89892) =>= multiply (inverse ?89892) ?89891 [89892, 89891] by Super 11239 with 12456 at 1,2
Id : 13084, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 6 with 12807 at 1,1,1,2,1,2,1,2,2
Id : 13085, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13084 with 12807 at 1,1,1,1,2,1,2,1,2,2
Id : 13086, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (inverse (multiply (inverse ?26) ?30)) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13085 with 12807 at 2,1,1,1,1,2,1,2,1,2,2
Id : 13087, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13086 with 12807 at 1,2,1,1,1,1,2,1,2,1,2,2
Id : 12072, {_}: multiply ?2743 (inverse (multiply (inverse (inverse ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2743] by Demod 380 with 11440 at 1,1,2,2
Id : 13068, {_}: multiply ?2743 (multiply (inverse (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745)))) (inverse ?2745)) =>= ?2747 [2745, 2747, 2746, 2743] by Demod 12072 with 12807 at 2,2
Id : 358, {_}: multiply (inverse ?2595) (multiply ?2595 (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596, 2595] by Super 28 with 301 at 1,1,2,2,2
Id : 12055, {_}: inverse (inverse (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596] by Demod 358 with 11440 at 2
Id : 12056, {_}: inverse (inverse (inverse (multiply (inverse (inverse ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597] by Demod 12055 with 11440 at 1,1,1,1,2
Id : 12778, {_}: multiply (inverse (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))) (inverse ?2597) =>= ?2599 [2597, 2599, 2598] by Demod 12056 with 12456 at 2
Id : 13130, {_}: multiply ?2743 (multiply (inverse ?2743) ?2747) =>= ?2747 [2747, 2743] by Demod 13068 with 12778 at 2,2
Id : 12068, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584] by Demod 356 with 11440 at 2
Id : 12069, {_}: inverse (inverse (inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12068 with 11440 at 1,1,1,1,1,1,2
Id : 12343, {_}: inverse (inverse (inverse (inverse (inverse (multiply (inverse (inverse (inverse ?88665))) ?88666))))) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Super 12069 with 11284 at 1,1,1,2
Id : 12705, {_}: inverse (multiply (inverse (inverse (inverse ?88665))) ?88666) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Demod 12343 with 11239 at 2
Id : 13398, {_}: multiply (inverse ?88666) (inverse (inverse ?88665)) =?= multiply (inverse (inverse (inverse ?88666))) ?88665 [88665, 88666] by Demod 12705 with 12807 at 2
Id : 13591, {_}: multiply (inverse ?93455) (inverse (inverse (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456))) =>= ?93456 [93456, 93455] by Super 13130 with 13398 at 2
Id : 13688, {_}: multiply (inverse ?93455) (inverse (multiply (inverse ?93456) (inverse (inverse (inverse ?93455))))) =>= ?93456 [93456, 93455] by Demod 13591 with 12807 at 1,2,2
Id : 13689, {_}: multiply (inverse ?93455) (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456) =>= ?93456 [93456, 93455] by Demod 13688 with 12807 at 2,2
Id : 13690, {_}: multiply (inverse ?93455) (multiply ?93455 ?93456) =>= ?93456 [93456, 93455] by Demod 13689 with 11239 at 1,2,2
Id : 13691, {_}: inverse (inverse ?93456) =>= ?93456 [93456] by Demod 13690 with 11440 at 2
Id : 14259, {_}: inverse (multiply ?94937 ?94938) =<= multiply (inverse ?94938) (inverse ?94937) [94938, 94937] by Super 12807 with 13691 at 1,1,2
Id : 14272, {_}: inverse (multiply ?94994 (inverse ?94995)) =>= multiply ?94995 (inverse ?94994) [94995, 94994] by Super 14259 with 13691 at 1,3
Id : 15113, {_}: multiply ?26 (multiply (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31))))) (inverse ?27)) =>= ?30 [31, 29, 30, 27, 28, 26] by Demod 13087 with 14272 at 2,2
Id : 15114, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15113 with 14272 at 2,1,2,2
Id : 14099, {_}: inverse (multiply ?94283 ?94284) =<= multiply (inverse ?94284) (inverse ?94283) [94284, 94283] by Super 12807 with 13691 at 1,1,2
Id : 15376, {_}: multiply ?101449 (inverse (multiply ?101450 ?101449)) =>= inverse ?101450 [101450, 101449] by Super 13130 with 14099 at 2,2
Id : 14196, {_}: multiply ?94524 (inverse (multiply ?94525 ?94524)) =>= inverse ?94525 [94525, 94524] by Super 13130 with 14099 at 2,2
Id : 15386, {_}: multiply (inverse (multiply ?101486 ?101487)) (inverse (inverse ?101486)) =>= inverse ?101487 [101487, 101486] by Super 15376 with 14196 at 1,2,2
Id : 15574, {_}: inverse (multiply (inverse ?101486) (multiply ?101486 ?101487)) =>= inverse ?101487 [101487, 101486] by Demod 15386 with 14099 at 2
Id : 16040, {_}: multiply (inverse (multiply ?103094 ?103095)) ?103094 =>= inverse ?103095 [103095, 103094] by Demod 15574 with 12807 at 2
Id : 12061, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216] by Demod 28 with 11440 at 2
Id : 13066, {_}: inverse (inverse (inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 216, 217] by Demod 12061 with 12807 at 1,1,1,1,1,2
Id : 14035, {_}: inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))) =>= ?217 [218, 216, 217] by Demod 13066 with 13691 at 2
Id : 15129, {_}: multiply (multiply ?216 ?218) (inverse (multiply (multiply (inverse ?217) ?216) ?218)) =>= ?217 [217, 218, 216] by Demod 14035 with 14272 at 2
Id : 16059, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= inverse (inverse (multiply (multiply (inverse ?103200) ?103201) ?103202)) [103202, 103201, 103200] by Super 16040 with 15129 at 1,1,2
Id : 16156, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= multiply (multiply (inverse ?103200) ?103201) ?103202 [103202, 103201, 103200] by Demod 16059 with 13691 at 3
Id : 17066, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29)) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15114 with 16156 at 1,1,2,2,1,2,2
Id : 17067, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17066 with 16156 at 1,2,2,1,2,2
Id : 17068, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) (multiply ?26 ?28)) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17067 with 16156 at 1,1,2,1,2,2,1,2,2
Id : 17069, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (inverse ?30) (multiply (multiply ?26 ?28) ?29)) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17068 with 16156 at 1,2,1,2,2,1,2,2
Id : 17070, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31)))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17069 with 16156 at 2,1,2,2,1,2,2
Id : 17075, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31))) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17070 with 12807 at 2,2,1,2,2
Id : 17076, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) ?30) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17075 with 12807 at 1,2,2,1,2,2
Id : 17077, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) (multiply ?30 ?27)))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17076 with 16156 at 2,2,1,2,2
Id : 14023, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 4117 with 13691 at 1,2
Id : 14024, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse ?33638) ?33638 [33638, 33635] by Demod 14023 with 13691 at 1,3
Id : 14053, {_}: multiply (inverse ?93965) ?93965 =?= multiply ?93966 (inverse ?93966) [93966, 93965] by Super 14024 with 13691 at 1,3
Id : 19206, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply (multiply ?108861 ?108862) (multiply ?108863 (inverse ?108863)))) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108863, 108862, 108861, 108860, 108859] by Super 17077 with 14053 at 2,2,1,2,2
Id : 14021, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= inverse (inverse ?70596) [70598, 70596] by Demod 9021 with 13691 at 2,2
Id : 14022, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= ?70596 [70598, 70596] by Demod 14021 with 13691 at 3
Id : 19669, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply ?108861 ?108862)) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108862, 108861, 108860, 108859] by Demod 19206 with 14022 at 2,1,2,2
Id : 14028, {_}: inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12069 with 13691 at 2
Id : 14029, {_}: inverse (multiply (multiply (inverse ?2585) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 14028 with 13691 at 1,1,1,2
Id : 15108, {_}: multiply (multiply ?2587 ?2586) (inverse (multiply (inverse ?2585) ?2586)) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 14029 with 14272 at 2
Id : 15134, {_}: multiply (multiply ?2587 ?2586) (multiply (inverse ?2586) ?2585) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 15108 with 12807 at 2,2
Id : 15575, {_}: multiply (inverse (multiply ?101486 ?101487)) ?101486 =>= inverse ?101487 [101487, 101486] by Demod 15574 with 12807 at 2
Id : 16032, {_}: multiply (multiply ?103052 (multiply ?103053 ?103054)) (inverse ?103054) =>= multiply ?103052 ?103053 [103054, 103053, 103052] by Super 15134 with 15575 at 2,2
Id : 32860, {_}: multiply ?108859 (multiply ?108860 ?108861) =?= multiply (multiply ?108859 ?108860) ?108861 [108861, 108860, 108859] by Demod 19669 with 16032 at 2,2
Id : 33337, {_}: multiply a (multiply b c) === multiply a (multiply b c) [] by Demod 1 with 32860 at 3
Id :   1, {_}: multiply a (multiply b c) =<= multiply (multiply a b) c [] by prove_associativity
% SZS output end CNFRefutation for GRP014-1.p
22593: solved GRP014-1.p in 11.760735 using nrkbo
22593: status Unsatisfiable for GRP014-1.p
CLASH, statistics insufficient
22602: Facts:
22602:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22602:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22602:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22602:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22602:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22602:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22602:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22602:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22602:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22602:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22602:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22602:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22602:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22602:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22602:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22602:  Id :  17, {_}:
          positive_part ?50 =<= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
22602:  Id :  18, {_}:
          negative_part ?52 =<= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
22602:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
22602:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =<=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
22602: Goal:
22602:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22602: Order:
22602:   nrkbo
22602: Leaf order:
22602:  a 3 0 3 2
22602:  identity 4 0 0 
22602:  inverse 1 1 0 
22602:  positive_part 2 1 1 0,1,3
22602:  negative_part 2 1 1 0,2,3
22602:  greatest_lower_bound 19 2 0 
22602:  least_upper_bound 19 2 0 
22602:  multiply 19 2 1 0,3
CLASH, statistics insufficient
22603: Facts:
22603:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22603:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22603:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22603:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22603:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22603:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22603:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22603:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22603:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22603:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22603:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22603:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22603:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22603:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22603:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22603:  Id :  17, {_}:
          positive_part ?50 =<= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
22603:  Id :  18, {_}:
          negative_part ?52 =<= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
22603:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
22603:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =<=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
22603: Goal:
22603:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22603: Order:
22603:   kbo
22603: Leaf order:
22603:  a 3 0 3 2
22603:  identity 4 0 0 
22603:  inverse 1 1 0 
22603:  positive_part 2 1 1 0,1,3
22603:  negative_part 2 1 1 0,2,3
22603:  greatest_lower_bound 19 2 0 
22603:  least_upper_bound 19 2 0 
22603:  multiply 19 2 1 0,3
CLASH, statistics insufficient
22604: Facts:
22604:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22604:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22604:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22604:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22604:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22604:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22604:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22604:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22604:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22604:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22604:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22604:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22604:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22604:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22604:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22604:  Id :  17, {_}:
          positive_part ?50 =>= least_upper_bound ?50 identity
          [50] by lat4_1 ?50
22604:  Id :  18, {_}:
          negative_part ?52 =>= greatest_lower_bound ?52 identity
          [52] by lat4_2 ?52
22604:  Id :  19, {_}:
          least_upper_bound ?54 (greatest_lower_bound ?55 ?56)
          =<=
          greatest_lower_bound (least_upper_bound ?54 ?55)
            (least_upper_bound ?54 ?56)
          [56, 55, 54] by lat4_3 ?54 ?55 ?56
22604:  Id :  20, {_}:
          greatest_lower_bound ?58 (least_upper_bound ?59 ?60)
          =>=
          least_upper_bound (greatest_lower_bound ?58 ?59)
            (greatest_lower_bound ?58 ?60)
          [60, 59, 58] by lat4_4 ?58 ?59 ?60
22604: Goal:
22604:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22604: Order:
22604:   lpo
22604: Leaf order:
22604:  a 3 0 3 2
22604:  identity 4 0 0 
22604:  inverse 1 1 0 
22604:  positive_part 2 1 1 0,1,3
22604:  negative_part 2 1 1 0,2,3
22604:  greatest_lower_bound 19 2 0 
22604:  least_upper_bound 19 2 0 
22604:  multiply 19 2 1 0,3
Statistics :
Max weight : 20
Found proof, 10.348100s
% SZS status Unsatisfiable for GRP167-1.p
% SZS output start CNFRefutation for GRP167-1.p
Id : 185, {_}: multiply ?584 (greatest_lower_bound ?585 ?586) =<= greatest_lower_bound (multiply ?584 ?585) (multiply ?584 ?586) [586, 585, 584] by monotony_glb1 ?584 ?585 ?586
Id : 218, {_}: multiply (least_upper_bound ?658 ?659) ?660 =<= least_upper_bound (multiply ?658 ?660) (multiply ?659 ?660) [660, 659, 658] by monotony_lub2 ?658 ?659 ?660
Id :  11, {_}: least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28 [29, 28] by lub_absorbtion ?28 ?29
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =?= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :  12, {_}: greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31 [32, 31] by glb_absorbtion ?31 ?32
Id :   7, {_}: greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18) =?= greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18 [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id : 250, {_}: multiply (greatest_lower_bound ?735 ?736) ?737 =<= greatest_lower_bound (multiply ?735 ?737) (multiply ?736 ?737) [737, 736, 735] by monotony_glb2 ?735 ?736 ?737
Id :  16, {_}: multiply (greatest_lower_bound ?46 ?47) ?48 =<= greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48) [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
Id :  18, {_}: negative_part ?52 =<= greatest_lower_bound ?52 identity [52] by lat4_2 ?52
Id : 364, {_}: greatest_lower_bound ?996 (least_upper_bound ?997 ?998) =<= least_upper_bound (greatest_lower_bound ?996 ?997) (greatest_lower_bound ?996 ?998) [998, 997, 996] by lat4_4 ?996 ?997 ?998
Id :  17, {_}: positive_part ?50 =<= least_upper_bound ?50 identity [50] by lat4_1 ?50
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 155, {_}: multiply ?513 (least_upper_bound ?514 ?515) =<= least_upper_bound (multiply ?513 ?514) (multiply ?513 ?515) [515, 514, 513] by monotony_lub1 ?513 ?514 ?515
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  25, {_}: multiply (multiply ?69 ?70) ?71 =?= multiply ?69 (multiply ?70 ?71) [71, 70, 69] by associativity ?69 ?70 ?71
Id :  27, {_}: multiply (multiply ?76 (inverse ?77)) ?77 =>= multiply ?76 identity [77, 76] by Super 25 with 3 at 2,3
Id : 643, {_}: multiply (multiply ?1439 (inverse ?1440)) ?1440 =>= multiply ?1439 identity [1440, 1439] by Super 25 with 3 at 2,3
Id : 645, {_}: multiply identity ?1444 =<= multiply (inverse (inverse ?1444)) identity [1444] by Super 643 with 3 at 1,2
Id : 656, {_}: ?1444 =<= multiply (inverse (inverse ?1444)) identity [1444] by Demod 645 with 2 at 2
Id :  26, {_}: multiply (multiply ?73 identity) ?74 =>= multiply ?73 ?74 [74, 73] by Super 25 with 2 at 2,3
Id : 1111, {_}: multiply ?2369 ?2370 =<= multiply (inverse (inverse ?2369)) ?2370 [2370, 2369] by Super 26 with 656 at 1,2
Id : 2348, {_}: ?1444 =<= multiply ?1444 identity [1444] by Demod 656 with 1111 at 3
Id : 2350, {_}: multiply (multiply ?76 (inverse ?77)) ?77 =>= ?76 [77, 76] by Demod 27 with 2348 at 3
Id : 2372, {_}: inverse (inverse ?4335) =<= multiply ?4335 identity [4335] by Super 2348 with 1111 at 3
Id : 2377, {_}: inverse (inverse ?4335) =>= ?4335 [4335] by Demod 2372 with 2348 at 3
Id : 25971, {_}: multiply (multiply ?35046 ?35047) (inverse ?35047) =>= ?35046 [35047, 35046] by Super 2350 with 2377 at 2,1,2
Id : 161, {_}: multiply (inverse ?536) (least_upper_bound ?536 ?537) =>= least_upper_bound identity (multiply (inverse ?536) ?537) [537, 536] by Super 155 with 3 at 1,3
Id : 279, {_}: least_upper_bound identity ?790 =>= positive_part ?790 [790] by Super 6 with 17 at 3
Id : 4991, {_}: multiply (inverse ?8728) (least_upper_bound ?8728 ?8729) =>= positive_part (multiply (inverse ?8728) ?8729) [8729, 8728] by Demod 161 with 279 at 3
Id : 5015, {_}: multiply (inverse ?8798) (positive_part ?8798) =?= positive_part (multiply (inverse ?8798) identity) [8798] by Super 4991 with 17 at 2,2
Id : 5066, {_}: multiply (inverse ?8872) (positive_part ?8872) =>= positive_part (inverse ?8872) [8872] by Demod 5015 with 2348 at 1,3
Id : 5077, {_}: multiply ?8900 (positive_part (inverse ?8900)) =>= positive_part (inverse (inverse ?8900)) [8900] by Super 5066 with 2377 at 1,2
Id : 5091, {_}: multiply ?8900 (positive_part (inverse ?8900)) =>= positive_part ?8900 [8900] by Demod 5077 with 2377 at 1,3
Id : 25993, {_}: multiply (positive_part ?35122) (inverse (positive_part (inverse ?35122))) =>= ?35122 [35122] by Super 25971 with 5091 at 1,2
Id : 2406, {_}: multiply (multiply ?4349 ?4350) (inverse ?4350) =>= ?4349 [4350, 4349] by Super 2350 with 2377 at 2,1,2
Id : 4974, {_}: multiply (inverse ?536) (least_upper_bound ?536 ?537) =>= positive_part (multiply (inverse ?536) ?537) [537, 536] by Demod 161 with 279 at 3
Id : 373, {_}: greatest_lower_bound ?1035 (least_upper_bound ?1036 identity) =<= least_upper_bound (greatest_lower_bound ?1035 ?1036) (negative_part ?1035) [1036, 1035] by Super 364 with 18 at 2,3
Id : 397, {_}: greatest_lower_bound ?1035 (positive_part ?1036) =<= least_upper_bound (greatest_lower_bound ?1035 ?1036) (negative_part ?1035) [1036, 1035] by Demod 373 with 17 at 2,2
Id : 256, {_}: multiply (greatest_lower_bound (inverse ?758) ?759) ?758 =>= greatest_lower_bound identity (multiply ?759 ?758) [759, 758] by Super 250 with 3 at 1,3
Id : 296, {_}: greatest_lower_bound identity ?821 =>= negative_part ?821 [821] by Super 5 with 18 at 3
Id : 17350, {_}: multiply (greatest_lower_bound (inverse ?24308) ?24309) ?24308 =>= negative_part (multiply ?24309 ?24308) [24309, 24308] by Demod 256 with 296 at 3
Id : 17377, {_}: multiply (negative_part (inverse ?24398)) ?24398 =>= negative_part (multiply identity ?24398) [24398] by Super 17350 with 18 at 1,2
Id : 17420, {_}: multiply (negative_part (inverse ?24398)) ?24398 =>= negative_part ?24398 [24398] by Demod 17377 with 2 at 1,3
Id : 17441, {_}: multiply (greatest_lower_bound (negative_part (inverse ?24443)) ?24444) ?24443 =>= greatest_lower_bound (negative_part ?24443) (multiply ?24444 ?24443) [24444, 24443] by Super 16 with 17420 at 1,3
Id : 455, {_}: greatest_lower_bound identity (greatest_lower_bound ?1150 ?1151) =>= greatest_lower_bound (negative_part ?1150) ?1151 [1151, 1150] by Super 7 with 296 at 1,3
Id : 465, {_}: negative_part (greatest_lower_bound ?1150 ?1151) =>= greatest_lower_bound (negative_part ?1150) ?1151 [1151, 1150] by Demod 455 with 296 at 2
Id : 299, {_}: greatest_lower_bound ?828 (greatest_lower_bound ?829 identity) =>= negative_part (greatest_lower_bound ?828 ?829) [829, 828] by Super 7 with 18 at 3
Id : 309, {_}: greatest_lower_bound ?828 (negative_part ?829) =<= negative_part (greatest_lower_bound ?828 ?829) [829, 828] by Demod 299 with 18 at 2,2
Id : 831, {_}: greatest_lower_bound ?1150 (negative_part ?1151) =?= greatest_lower_bound (negative_part ?1150) ?1151 [1151, 1150] by Demod 465 with 309 at 2
Id : 17491, {_}: multiply (greatest_lower_bound (inverse ?24443) (negative_part ?24444)) ?24443 =>= greatest_lower_bound (negative_part ?24443) (multiply ?24444 ?24443) [24444, 24443] by Demod 17441 with 831 at 1,2
Id : 17492, {_}: multiply (greatest_lower_bound (inverse ?24443) (negative_part ?24444)) ?24443 =>= greatest_lower_bound (multiply ?24444 ?24443) (negative_part ?24443) [24444, 24443] by Demod 17491 with 5 at 3
Id : 17323, {_}: multiply (greatest_lower_bound (inverse ?758) ?759) ?758 =>= negative_part (multiply ?759 ?758) [759, 758] by Demod 256 with 296 at 3
Id : 17493, {_}: negative_part (multiply (negative_part ?24444) ?24443) =<= greatest_lower_bound (multiply ?24444 ?24443) (negative_part ?24443) [24443, 24444] by Demod 17492 with 17323 at 2
Id : 5044, {_}: multiply (inverse ?8798) (positive_part ?8798) =>= positive_part (inverse ?8798) [8798] by Demod 5015 with 2348 at 1,3
Id : 25992, {_}: multiply (positive_part (inverse ?35120)) (inverse (positive_part ?35120)) =>= inverse ?35120 [35120] by Super 25971 with 5044 at 1,2
Id : 65949, {_}: negative_part (multiply (negative_part (positive_part (inverse ?78239))) (inverse (positive_part ?78239))) =>= greatest_lower_bound (inverse ?78239) (negative_part (inverse (positive_part ?78239))) [78239] by Super 17493 with 25992 at 1,3
Id : 285, {_}: greatest_lower_bound ?806 (positive_part ?806) =>= ?806 [806] by Super 12 with 17 at 2,2
Id : 575, {_}: greatest_lower_bound (positive_part ?1304) ?1304 =>= ?1304 [1304] by Super 5 with 285 at 3
Id : 424, {_}: least_upper_bound identity (least_upper_bound ?1119 ?1120) =>= least_upper_bound (positive_part ?1119) ?1120 [1120, 1119] by Super 8 with 279 at 1,3
Id : 433, {_}: positive_part (least_upper_bound ?1119 ?1120) =>= least_upper_bound (positive_part ?1119) ?1120 [1120, 1119] by Demod 424 with 279 at 2
Id : 282, {_}: least_upper_bound ?797 (least_upper_bound ?798 identity) =>= positive_part (least_upper_bound ?797 ?798) [798, 797] by Super 8 with 17 at 3
Id : 292, {_}: least_upper_bound ?797 (positive_part ?798) =<= positive_part (least_upper_bound ?797 ?798) [798, 797] by Demod 282 with 17 at 2,2
Id : 749, {_}: least_upper_bound ?1119 (positive_part ?1120) =?= least_upper_bound (positive_part ?1119) ?1120 [1120, 1119] by Demod 433 with 292 at 2
Id : 758, {_}: least_upper_bound (positive_part (positive_part ?1606)) ?1606 =>= positive_part ?1606 [1606] by Super 9 with 749 at 2
Id : 606, {_}: least_upper_bound ?1347 (positive_part ?1348) =<= positive_part (least_upper_bound ?1347 ?1348) [1348, 1347] by Demod 282 with 17 at 2,2
Id : 616, {_}: least_upper_bound ?1379 (positive_part identity) =>= positive_part (positive_part ?1379) [1379] by Super 606 with 17 at 1,3
Id : 278, {_}: positive_part identity =>= identity [] by Super 9 with 17 at 2
Id : 628, {_}: least_upper_bound ?1379 identity =<= positive_part (positive_part ?1379) [1379] by Demod 616 with 278 at 2,2
Id : 629, {_}: positive_part ?1379 =<= positive_part (positive_part ?1379) [1379] by Demod 628 with 17 at 2
Id : 798, {_}: least_upper_bound (positive_part ?1606) ?1606 =>= positive_part ?1606 [1606] by Demod 758 with 629 at 1,2
Id : 5005, {_}: multiply (inverse (positive_part ?8766)) (positive_part ?8766) =<= positive_part (multiply (inverse (positive_part ?8766)) ?8766) [8766] by Super 4991 with 798 at 2,2
Id : 5040, {_}: identity =<= positive_part (multiply (inverse (positive_part ?8766)) ?8766) [8766] by Demod 5005 with 3 at 2
Id : 5691, {_}: greatest_lower_bound identity (multiply (inverse (positive_part ?9483)) ?9483) =>= multiply (inverse (positive_part ?9483)) ?9483 [9483] by Super 575 with 5040 at 1,2
Id : 5736, {_}: negative_part (multiply (inverse (positive_part ?9483)) ?9483) =>= multiply (inverse (positive_part ?9483)) ?9483 [9483] by Demod 5691 with 296 at 2
Id : 770, {_}: least_upper_bound ?1642 (positive_part ?1643) =?= least_upper_bound (positive_part ?1642) ?1643 [1643, 1642] by Demod 433 with 292 at 2
Id : 456, {_}: least_upper_bound identity (negative_part ?1153) =>= identity [1153] by Super 11 with 296 at 2,2
Id : 464, {_}: positive_part (negative_part ?1153) =>= identity [1153] by Demod 456 with 279 at 2
Id : 772, {_}: least_upper_bound (negative_part ?1647) (positive_part ?1648) =>= least_upper_bound identity ?1648 [1648, 1647] by Super 770 with 464 at 1,3
Id : 812, {_}: least_upper_bound (negative_part ?1647) (positive_part ?1648) =>= positive_part ?1648 [1648, 1647] by Demod 772 with 279 at 3
Id : 5068, {_}: multiply (inverse (negative_part ?8875)) identity =>= positive_part (inverse (negative_part ?8875)) [8875] by Super 5066 with 464 at 2,2
Id : 5087, {_}: inverse (negative_part ?8875) =<= positive_part (inverse (negative_part ?8875)) [8875] by Demod 5068 with 2348 at 2
Id : 5099, {_}: least_upper_bound (negative_part ?8914) (inverse (negative_part ?8915)) =>= positive_part (inverse (negative_part ?8915)) [8915, 8914] by Super 812 with 5087 at 2,2
Id : 5137, {_}: least_upper_bound (inverse (negative_part ?8915)) (negative_part ?8914) =>= positive_part (inverse (negative_part ?8915)) [8914, 8915] by Demod 5099 with 6 at 2
Id : 5138, {_}: least_upper_bound (inverse (negative_part ?8915)) (negative_part ?8914) =>= inverse (negative_part ?8915) [8914, 8915] by Demod 5137 with 5087 at 3
Id : 7238, {_}: multiply (inverse (inverse (negative_part ?11513))) (inverse (negative_part ?11513)) =?= positive_part (multiply (inverse (inverse (negative_part ?11513))) (negative_part ?11514)) [11514, 11513] by Super 4974 with 5138 at 2,2
Id : 7311, {_}: identity =<= positive_part (multiply (inverse (inverse (negative_part ?11513))) (negative_part ?11514)) [11514, 11513] by Demod 7238 with 3 at 2
Id : 7312, {_}: identity =<= positive_part (multiply (negative_part ?11513) (negative_part ?11514)) [11514, 11513] by Demod 7311 with 2377 at 1,1,3
Id : 11865, {_}: negative_part (multiply (inverse identity) (multiply (negative_part ?16875) (negative_part ?16876))) =<= multiply (inverse (positive_part (multiply (negative_part ?16875) (negative_part ?16876)))) (multiply (negative_part ?16875) (negative_part ?16876)) [16876, 16875] by Super 5736 with 7312 at 1,1,1,2
Id : 2405, {_}: multiply ?4347 (inverse ?4347) =>= identity [4347] by Super 3 with 2377 at 1,2
Id : 2415, {_}: identity =<= inverse identity [] by Super 2 with 2405 at 2
Id : 11917, {_}: negative_part (multiply identity (multiply (negative_part ?16875) (negative_part ?16876))) =<= multiply (inverse (positive_part (multiply (negative_part ?16875) (negative_part ?16876)))) (multiply (negative_part ?16875) (negative_part ?16876)) [16876, 16875] by Demod 11865 with 2415 at 1,1,2
Id : 11918, {_}: negative_part (multiply identity (multiply (negative_part ?16875) (negative_part ?16876))) =>= multiply (inverse identity) (multiply (negative_part ?16875) (negative_part ?16876)) [16876, 16875] by Demod 11917 with 7312 at 1,1,3
Id : 11919, {_}: negative_part (multiply (negative_part ?16875) (negative_part ?16876)) =<= multiply (inverse identity) (multiply (negative_part ?16875) (negative_part ?16876)) [16876, 16875] by Demod 11918 with 2 at 1,2
Id : 11920, {_}: negative_part (multiply (negative_part ?16875) (negative_part ?16876)) =<= multiply identity (multiply (negative_part ?16875) (negative_part ?16876)) [16876, 16875] by Demod 11919 with 2415 at 1,3
Id : 13421, {_}: negative_part (multiply (negative_part ?18780) (negative_part ?18781)) =>= multiply (negative_part ?18780) (negative_part ?18781) [18781, 18780] by Demod 11920 with 2 at 3
Id : 5075, {_}: multiply (inverse (positive_part ?8895)) (positive_part ?8895) =>= positive_part (inverse (positive_part ?8895)) [8895] by Super 5066 with 629 at 2,2
Id : 5090, {_}: identity =<= positive_part (inverse (positive_part ?8895)) [8895] by Demod 5075 with 3 at 2
Id : 5175, {_}: greatest_lower_bound identity (inverse (positive_part ?9005)) =>= inverse (positive_part ?9005) [9005] by Super 575 with 5090 at 1,2
Id : 5216, {_}: negative_part (inverse (positive_part ?9005)) =>= inverse (positive_part ?9005) [9005] by Demod 5175 with 296 at 2
Id : 13433, {_}: negative_part (multiply (negative_part ?18822) (inverse (positive_part ?18823))) =>= multiply (negative_part ?18822) (negative_part (inverse (positive_part ?18823))) [18823, 18822] by Super 13421 with 5216 at 2,1,2
Id : 13543, {_}: negative_part (multiply (negative_part ?18822) (inverse (positive_part ?18823))) =>= multiply (negative_part ?18822) (inverse (positive_part ?18823)) [18823, 18822] by Demod 13433 with 5216 at 2,3
Id : 66057, {_}: multiply (negative_part (positive_part (inverse ?78239))) (inverse (positive_part ?78239)) =>= greatest_lower_bound (inverse ?78239) (negative_part (inverse (positive_part ?78239))) [78239] by Demod 65949 with 13543 at 2
Id : 66058, {_}: multiply (negative_part (positive_part (inverse ?78239))) (inverse (positive_part ?78239)) =>= greatest_lower_bound (inverse ?78239) (inverse (positive_part ?78239)) [78239] by Demod 66057 with 5216 at 2,3
Id : 451, {_}: negative_part (least_upper_bound identity ?1143) =>= identity [1143] by Super 12 with 296 at 2
Id : 469, {_}: negative_part (positive_part ?1143) =>= identity [1143] by Demod 451 with 279 at 1,2
Id : 66059, {_}: multiply identity (inverse (positive_part ?78239)) =<= greatest_lower_bound (inverse ?78239) (inverse (positive_part ?78239)) [78239] by Demod 66058 with 469 at 1,2
Id : 66060, {_}: inverse (positive_part ?78239) =<= greatest_lower_bound (inverse ?78239) (inverse (positive_part ?78239)) [78239] by Demod 66059 with 2 at 2
Id : 66290, {_}: greatest_lower_bound (inverse ?78524) (positive_part (inverse (positive_part ?78524))) =>= least_upper_bound (inverse (positive_part ?78524)) (negative_part (inverse ?78524)) [78524] by Super 397 with 66060 at 1,3
Id : 66456, {_}: greatest_lower_bound (inverse ?78524) identity =<= least_upper_bound (inverse (positive_part ?78524)) (negative_part (inverse ?78524)) [78524] by Demod 66290 with 5090 at 2,2
Id : 66457, {_}: greatest_lower_bound identity (inverse ?78524) =<= least_upper_bound (inverse (positive_part ?78524)) (negative_part (inverse ?78524)) [78524] by Demod 66456 with 5 at 2
Id : 66458, {_}: negative_part (inverse ?78524) =<= least_upper_bound (inverse (positive_part ?78524)) (negative_part (inverse ?78524)) [78524] by Demod 66457 with 296 at 2
Id : 80743, {_}: multiply (inverse (inverse (positive_part ?90706))) (negative_part (inverse ?90706)) =<= positive_part (multiply (inverse (inverse (positive_part ?90706))) (negative_part (inverse ?90706))) [90706] by Super 4974 with 66458 at 2,2
Id : 80871, {_}: multiply (positive_part ?90706) (negative_part (inverse ?90706)) =<= positive_part (multiply (inverse (inverse (positive_part ?90706))) (negative_part (inverse ?90706))) [90706] by Demod 80743 with 2377 at 1,2
Id : 80872, {_}: multiply (positive_part ?90706) (negative_part (inverse ?90706)) =<= positive_part (multiply (positive_part ?90706) (negative_part (inverse ?90706))) [90706] by Demod 80871 with 2377 at 1,1,3
Id : 224, {_}: multiply (least_upper_bound (inverse ?681) ?682) ?681 =>= least_upper_bound identity (multiply ?682 ?681) [682, 681] by Super 218 with 3 at 1,3
Id : 15127, {_}: multiply (least_upper_bound (inverse ?21966) ?21967) ?21966 =>= positive_part (multiply ?21967 ?21966) [21967, 21966] by Demod 224 with 279 at 3
Id : 5107, {_}: least_upper_bound (inverse (negative_part ?8933)) (positive_part ?8934) =>= least_upper_bound (inverse (negative_part ?8933)) ?8934 [8934, 8933] by Super 749 with 5087 at 1,3
Id : 15147, {_}: multiply (least_upper_bound (inverse (negative_part ?22031)) ?22032) (negative_part ?22031) =>= positive_part (multiply (positive_part ?22032) (negative_part ?22031)) [22032, 22031] by Super 15127 with 5107 at 1,2
Id : 15100, {_}: multiply (least_upper_bound (inverse ?681) ?682) ?681 =>= positive_part (multiply ?682 ?681) [682, 681] by Demod 224 with 279 at 3
Id : 15182, {_}: positive_part (multiply ?22032 (negative_part ?22031)) =<= positive_part (multiply (positive_part ?22032) (negative_part ?22031)) [22031, 22032] by Demod 15147 with 15100 at 2
Id : 80873, {_}: multiply (positive_part ?90706) (negative_part (inverse ?90706)) =<= positive_part (multiply ?90706 (negative_part (inverse ?90706))) [90706] by Demod 80872 with 15182 at 3
Id : 191, {_}: multiply (inverse ?607) (greatest_lower_bound ?607 ?608) =>= greatest_lower_bound identity (multiply (inverse ?607) ?608) [608, 607] by Super 185 with 3 at 1,3
Id : 14063, {_}: multiply (inverse ?19549) (greatest_lower_bound ?19549 ?19550) =>= negative_part (multiply (inverse ?19549) ?19550) [19550, 19549] by Demod 191 with 296 at 3
Id : 14093, {_}: multiply (inverse ?19640) (negative_part ?19640) =?= negative_part (multiply (inverse ?19640) identity) [19640] by Super 14063 with 18 at 2,2
Id : 14179, {_}: multiply (inverse ?19758) (negative_part ?19758) =>= negative_part (inverse ?19758) [19758] by Demod 14093 with 2348 at 1,3
Id : 14205, {_}: multiply ?19826 (negative_part (inverse ?19826)) =>= negative_part (inverse (inverse ?19826)) [19826] by Super 14179 with 2377 at 1,2
Id : 14261, {_}: multiply ?19826 (negative_part (inverse ?19826)) =>= negative_part ?19826 [19826] by Demod 14205 with 2377 at 1,3
Id : 80874, {_}: multiply (positive_part ?90706) (negative_part (inverse ?90706)) =>= positive_part (negative_part ?90706) [90706] by Demod 80873 with 14261 at 1,3
Id : 80875, {_}: multiply (positive_part ?90706) (negative_part (inverse ?90706)) =>= identity [90706] by Demod 80874 with 464 at 3
Id : 81247, {_}: multiply identity (inverse (negative_part (inverse ?91006))) =>= positive_part ?91006 [91006] by Super 2406 with 80875 at 1,2
Id : 81627, {_}: inverse (negative_part (inverse ?91433)) =>= positive_part ?91433 [91433] by Demod 81247 with 2 at 2
Id : 81628, {_}: inverse (negative_part ?91435) =<= positive_part (inverse ?91435) [91435] by Super 81627 with 2377 at 1,1,2
Id : 82425, {_}: multiply (positive_part ?35122) (inverse (inverse (negative_part ?35122))) =>= ?35122 [35122] by Demod 25993 with 81628 at 1,2,2
Id : 82501, {_}: multiply (positive_part ?35122) (negative_part ?35122) =>= ?35122 [35122] by Demod 82425 with 2377 at 2,2
Id : 82875, {_}: a === a [] by Demod 1 with 82501 at 3
Id :   1, {_}: a =<= multiply (positive_part a) (negative_part a) [] by prove_lat4
% SZS output end CNFRefutation for GRP167-1.p
22602: solved GRP167-1.p in 10.376648 using nrkbo
22602: status Unsatisfiable for GRP167-1.p
CLASH, statistics insufficient
22609: Facts:
22609:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22609:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22609:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22609:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22609:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22609:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22609:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22609:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22609:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22609:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22609:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22609:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22609:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22609:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22609:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22609:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
22609:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
22609:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
22609:  Id :  20, {_}:
          positive_part ?56 =<= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
22609:  Id :  21, {_}:
          negative_part ?58 =<= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
22609:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
22609:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =<=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
22609: Goal:
22609:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22609: Order:
22609:   nrkbo
22609: Leaf order:
22609:  a 3 0 3 2
22609:  identity 6 0 0 
22609:  positive_part 2 1 1 0,1,3
22609:  negative_part 2 1 1 0,2,3
22609:  inverse 7 1 0 
22609:  greatest_lower_bound 19 2 0 
22609:  least_upper_bound 19 2 0 
22609:  multiply 21 2 1 0,3
CLASH, statistics insufficient
22610: Facts:
22610:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22610:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22610:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22610:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22610:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
CLASH, statistics insufficient
22611: Facts:
22611:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22611:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22611:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22611:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22610:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22610:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22610:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22610:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22610:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22610:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22610:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22610:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22610:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22610:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22610:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
22610:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
22610:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
22610:  Id :  20, {_}:
          positive_part ?56 =<= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
22610:  Id :  21, {_}:
          negative_part ?58 =<= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
22610:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
22610:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =<=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
22610: Goal:
22610:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22610: Order:
22610:   kbo
22610: Leaf order:
22610:  a 3 0 3 2
22610:  identity 6 0 0 
22610:  positive_part 2 1 1 0,1,3
22610:  negative_part 2 1 1 0,2,3
22610:  inverse 7 1 0 
22610:  greatest_lower_bound 19 2 0 
22610:  least_upper_bound 19 2 0 
22610:  multiply 21 2 1 0,3
22611:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22611:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22611:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22611:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22611:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22611:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22611:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22611:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22611:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22611:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22611:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22611:  Id :  17, {_}: inverse identity =>= identity [] by lat4_1
22611:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
22611:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by lat4_3 ?53 ?54
22611:  Id :  20, {_}:
          positive_part ?56 =>= least_upper_bound ?56 identity
          [56] by lat4_4 ?56
22611:  Id :  21, {_}:
          negative_part ?58 =>= greatest_lower_bound ?58 identity
          [58] by lat4_5 ?58
22611:  Id :  22, {_}:
          least_upper_bound ?60 (greatest_lower_bound ?61 ?62)
          =<=
          greatest_lower_bound (least_upper_bound ?60 ?61)
            (least_upper_bound ?60 ?62)
          [62, 61, 60] by lat4_6 ?60 ?61 ?62
22611:  Id :  23, {_}:
          greatest_lower_bound ?64 (least_upper_bound ?65 ?66)
          =>=
          least_upper_bound (greatest_lower_bound ?64 ?65)
            (greatest_lower_bound ?64 ?66)
          [66, 65, 64] by lat4_7 ?64 ?65 ?66
22611: Goal:
22611:  Id :   1, {_}:
          a =<= multiply (positive_part a) (negative_part a)
          [] by prove_lat4
22611: Order:
22611:   lpo
22611: Leaf order:
22611:  a 3 0 3 2
22611:  identity 6 0 0 
22611:  positive_part 2 1 1 0,1,3
22611:  negative_part 2 1 1 0,2,3
22611:  inverse 7 1 0 
22611:  greatest_lower_bound 19 2 0 
22611:  least_upper_bound 19 2 0 
22611:  multiply 21 2 1 0,3
Statistics :
Max weight : 16
Found proof, 6.082892s
% SZS status Unsatisfiable for GRP167-2.p
% SZS output start CNFRefutation for GRP167-2.p
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id :  11, {_}: least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28 [29, 28] by lub_absorbtion ?28 ?29
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =?= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  22, {_}: least_upper_bound ?60 (greatest_lower_bound ?61 ?62) =<= greatest_lower_bound (least_upper_bound ?60 ?61) (least_upper_bound ?60 ?62) [62, 61, 60] by lat4_6 ?60 ?61 ?62
Id : 221, {_}: multiply (least_upper_bound ?664 ?665) ?666 =<= least_upper_bound (multiply ?664 ?666) (multiply ?665 ?666) [666, 665, 664] by monotony_lub2 ?664 ?665 ?666
Id :  21, {_}: negative_part ?58 =<= greatest_lower_bound ?58 identity [58] by lat4_5 ?58
Id :  14, {_}: multiply ?38 (greatest_lower_bound ?39 ?40) =<= greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40) [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  20, {_}: positive_part ?56 =<= least_upper_bound ?56 identity [56] by lat4_4 ?56
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =<= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :  19, {_}: inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53) [54, 53] by lat4_3 ?53 ?54
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  17, {_}: inverse identity =>= identity [] by lat4_1
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  28, {_}: multiply (multiply ?75 ?76) ?77 =?= multiply ?75 (multiply ?76 ?77) [77, 76, 75] by associativity ?75 ?76 ?77
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by lat4_2 ?51
Id : 302, {_}: inverse (multiply ?849 ?850) =<= multiply (inverse ?850) (inverse ?849) [850, 849] by lat4_3 ?849 ?850
Id : 1638, {_}: inverse (multiply ?3326 (inverse ?3327)) =>= multiply ?3327 (inverse ?3326) [3327, 3326] by Super 302 with 18 at 1,3
Id :  30, {_}: multiply (multiply ?82 (inverse ?83)) ?83 =>= multiply ?82 identity [83, 82] by Super 28 with 3 at 2,3
Id : 303, {_}: inverse (multiply identity ?852) =<= multiply (inverse ?852) identity [852] by Super 302 with 17 at 2,3
Id : 587, {_}: inverse ?1361 =<= multiply (inverse ?1361) identity [1361] by Demod 303 with 2 at 1,2
Id : 589, {_}: inverse (inverse ?1364) =<= multiply ?1364 identity [1364] by Super 587 with 18 at 1,3
Id : 603, {_}: ?1364 =<= multiply ?1364 identity [1364] by Demod 589 with 18 at 2
Id : 645, {_}: multiply (multiply ?82 (inverse ?83)) ?83 =>= ?82 [83, 82] by Demod 30 with 603 at 3
Id : 1648, {_}: inverse ?3357 =<= multiply ?3358 (inverse (multiply ?3357 (inverse (inverse ?3358)))) [3358, 3357] by Super 1638 with 645 at 1,2
Id : 306, {_}: inverse (multiply ?859 (inverse ?860)) =>= multiply ?860 (inverse ?859) [860, 859] by Super 302 with 18 at 1,3
Id : 1667, {_}: inverse ?3357 =<= multiply ?3358 (multiply (inverse ?3358) (inverse ?3357)) [3358, 3357] by Demod 1648 with 306 at 2,3
Id : 48018, {_}: inverse ?56639 =<= multiply ?56640 (inverse (multiply ?56639 ?56640)) [56640, 56639] by Demod 1667 with 19 at 2,3
Id : 657, {_}: multiply ?1476 (least_upper_bound ?1477 identity) =?= least_upper_bound (multiply ?1476 ?1477) ?1476 [1477, 1476] by Super 13 with 603 at 2,3
Id : 4078, {_}: multiply ?7362 (positive_part ?7363) =<= least_upper_bound (multiply ?7362 ?7363) ?7362 [7363, 7362] by Demod 657 with 20 at 2,2
Id : 4080, {_}: multiply (inverse ?7367) (positive_part ?7367) =>= least_upper_bound identity (inverse ?7367) [7367] by Super 4078 with 3 at 1,3
Id : 320, {_}: least_upper_bound identity ?881 =>= positive_part ?881 [881] by Super 6 with 20 at 3
Id : 4115, {_}: multiply (inverse ?7367) (positive_part ?7367) =>= positive_part (inverse ?7367) [7367] by Demod 4080 with 320 at 3
Id : 618, {_}: multiply (multiply ?1420 (inverse ?1421)) ?1421 =>= multiply ?1420 identity [1421, 1420] by Super 28 with 3 at 2,3
Id : 620, {_}: multiply (multiply ?1425 ?1426) (inverse ?1426) =>= multiply ?1425 identity [1426, 1425] by Super 618 with 18 at 2,1,2
Id : 34073, {_}: multiply (multiply ?41189 ?41190) (inverse ?41190) =>= ?41189 [41190, 41189] by Demod 620 with 603 at 3
Id : 651, {_}: multiply ?1462 (greatest_lower_bound ?1463 identity) =?= greatest_lower_bound (multiply ?1462 ?1463) ?1462 [1463, 1462] by Super 14 with 603 at 2,3
Id : 676, {_}: multiply ?1462 (negative_part ?1463) =<= greatest_lower_bound (multiply ?1462 ?1463) ?1462 [1463, 1462] by Demod 651 with 21 at 2,2
Id : 227, {_}: multiply (least_upper_bound (inverse ?687) ?688) ?687 =>= least_upper_bound identity (multiply ?688 ?687) [688, 687] by Super 221 with 3 at 1,3
Id : 14335, {_}: multiply (least_upper_bound (inverse ?21902) ?21903) ?21902 =>= positive_part (multiply ?21903 ?21902) [21903, 21902] by Demod 227 with 320 at 3
Id : 14360, {_}: multiply (positive_part (inverse ?21984)) ?21984 =>= positive_part (multiply identity ?21984) [21984] by Super 14335 with 20 at 1,2
Id : 14399, {_}: multiply (positive_part (inverse ?21984)) ?21984 =>= positive_part ?21984 [21984] by Demod 14360 with 2 at 1,3
Id : 14409, {_}: multiply (positive_part (inverse ?22003)) (negative_part ?22003) =>= greatest_lower_bound (positive_part ?22003) (positive_part (inverse ?22003)) [22003] by Super 676 with 14399 at 1,3
Id : 504, {_}: least_upper_bound identity (greatest_lower_bound ?1268 ?1269) =<= greatest_lower_bound (least_upper_bound identity ?1268) (positive_part ?1269) [1269, 1268] by Super 22 with 320 at 2,3
Id : 513, {_}: positive_part (greatest_lower_bound ?1268 ?1269) =<= greatest_lower_bound (least_upper_bound identity ?1268) (positive_part ?1269) [1269, 1268] by Demod 504 with 320 at 2
Id : 514, {_}: positive_part (greatest_lower_bound ?1268 ?1269) =<= greatest_lower_bound (positive_part ?1268) (positive_part ?1269) [1269, 1268] by Demod 513 with 320 at 1,3
Id : 14487, {_}: multiply (positive_part (inverse ?22003)) (negative_part ?22003) =>= positive_part (greatest_lower_bound ?22003 (inverse ?22003)) [22003] by Demod 14409 with 514 at 3
Id : 501, {_}: least_upper_bound identity (least_upper_bound ?1262 ?1263) =>= least_upper_bound (positive_part ?1262) ?1263 [1263, 1262] by Super 8 with 320 at 1,3
Id : 518, {_}: positive_part (least_upper_bound ?1262 ?1263) =>= least_upper_bound (positive_part ?1262) ?1263 [1263, 1262] by Demod 501 with 320 at 2
Id : 317, {_}: least_upper_bound ?872 (least_upper_bound ?873 identity) =>= positive_part (least_upper_bound ?872 ?873) [873, 872] by Super 8 with 20 at 3
Id : 329, {_}: least_upper_bound ?872 (positive_part ?873) =<= positive_part (least_upper_bound ?872 ?873) [873, 872] by Demod 317 with 20 at 2,2
Id : 975, {_}: least_upper_bound ?1262 (positive_part ?1263) =?= least_upper_bound (positive_part ?1262) ?1263 [1263, 1262] by Demod 518 with 329 at 2
Id : 4147, {_}: multiply (inverse ?7493) (positive_part ?7493) =>= positive_part (inverse ?7493) [7493] by Demod 4080 with 320 at 3
Id : 337, {_}: greatest_lower_bound identity ?912 =>= negative_part ?912 [912] by Super 5 with 21 at 3
Id : 533, {_}: least_upper_bound identity (negative_part ?1296) =>= identity [1296] by Super 11 with 337 at 2,2
Id : 549, {_}: positive_part (negative_part ?1296) =>= identity [1296] by Demod 533 with 320 at 2
Id : 4149, {_}: multiply (inverse (negative_part ?7496)) identity =>= positive_part (inverse (negative_part ?7496)) [7496] by Super 4147 with 549 at 2,2
Id : 4174, {_}: inverse (negative_part ?7496) =<= positive_part (inverse (negative_part ?7496)) [7496] by Demod 4149 with 603 at 2
Id : 4193, {_}: least_upper_bound (inverse (negative_part ?7552)) (positive_part ?7553) =>= least_upper_bound (inverse (negative_part ?7552)) ?7553 [7553, 7552] by Super 975 with 4174 at 1,3
Id : 14357, {_}: multiply (least_upper_bound (inverse (negative_part ?21975)) ?21976) (negative_part ?21975) =>= positive_part (multiply (positive_part ?21976) (negative_part ?21975)) [21976, 21975] by Super 14335 with 4193 at 1,2
Id : 14303, {_}: multiply (least_upper_bound (inverse ?687) ?688) ?687 =>= positive_part (multiply ?688 ?687) [688, 687] by Demod 227 with 320 at 3
Id : 14396, {_}: positive_part (multiply ?21976 (negative_part ?21975)) =<= positive_part (multiply (positive_part ?21976) (negative_part ?21975)) [21975, 21976] by Demod 14357 with 14303 at 2
Id : 15618, {_}: positive_part (multiply (inverse ?23238) (negative_part ?23238)) =<= positive_part (positive_part (greatest_lower_bound ?23238 (inverse ?23238))) [23238] by Super 14396 with 14487 at 1,3
Id : 4791, {_}: multiply ?8267 (negative_part ?8268) =<= greatest_lower_bound (multiply ?8267 ?8268) ?8267 [8268, 8267] by Demod 651 with 21 at 2,2
Id : 4793, {_}: multiply (inverse ?8272) (negative_part ?8272) =>= greatest_lower_bound identity (inverse ?8272) [8272] by Super 4791 with 3 at 1,3
Id : 4834, {_}: multiply (inverse ?8272) (negative_part ?8272) =>= negative_part (inverse ?8272) [8272] by Demod 4793 with 337 at 3
Id : 15709, {_}: positive_part (negative_part (inverse ?23238)) =<= positive_part (positive_part (greatest_lower_bound ?23238 (inverse ?23238))) [23238] by Demod 15618 with 4834 at 1,2
Id : 774, {_}: least_upper_bound ?1603 (positive_part ?1604) =<= positive_part (least_upper_bound ?1603 ?1604) [1604, 1603] by Demod 317 with 20 at 2,2
Id : 784, {_}: least_upper_bound ?1635 (positive_part identity) =>= positive_part (positive_part ?1635) [1635] by Super 774 with 20 at 1,3
Id : 322, {_}: positive_part identity =>= identity [] by Super 9 with 20 at 2
Id : 796, {_}: least_upper_bound ?1635 identity =<= positive_part (positive_part ?1635) [1635] by Demod 784 with 322 at 2,2
Id : 797, {_}: positive_part ?1635 =<= positive_part (positive_part ?1635) [1635] by Demod 796 with 20 at 2
Id : 15710, {_}: positive_part (negative_part (inverse ?23238)) =<= positive_part (greatest_lower_bound ?23238 (inverse ?23238)) [23238] by Demod 15709 with 797 at 3
Id : 15711, {_}: identity =<= positive_part (greatest_lower_bound ?23238 (inverse ?23238)) [23238] by Demod 15710 with 549 at 2
Id : 15820, {_}: multiply (positive_part (inverse ?22003)) (negative_part ?22003) =>= identity [22003] by Demod 14487 with 15711 at 3
Id : 34109, {_}: multiply identity (inverse (negative_part ?41304)) =>= positive_part (inverse ?41304) [41304] by Super 34073 with 15820 at 1,2
Id : 34155, {_}: inverse (negative_part ?41304) =<= positive_part (inverse ?41304) [41304] by Demod 34109 with 2 at 2
Id : 34195, {_}: multiply (inverse ?7367) (positive_part ?7367) =>= inverse (negative_part ?7367) [7367] by Demod 4115 with 34155 at 3
Id : 48045, {_}: inverse (inverse ?56723) =<= multiply (positive_part ?56723) (inverse (inverse (negative_part ?56723))) [56723] by Super 48018 with 34195 at 1,2,3
Id : 48126, {_}: ?56723 =<= multiply (positive_part ?56723) (inverse (inverse (negative_part ?56723))) [56723] by Demod 48045 with 18 at 2
Id : 48127, {_}: ?56723 =<= multiply (positive_part ?56723) (negative_part ?56723) [56723] by Demod 48126 with 18 at 2,3
Id : 48357, {_}: a === a [] by Demod 1 with 48127 at 3
Id :   1, {_}: a =<= multiply (positive_part a) (negative_part a) [] by prove_lat4
% SZS output end CNFRefutation for GRP167-2.p
22609: solved GRP167-2.p in 6.08038 using nrkbo
22609: status Unsatisfiable for GRP167-2.p
NO CLASH, using fixed ground order
22621: Facts:
NO CLASH, using fixed ground order
22622: Facts:
22622:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22622:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22622:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22622:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22622:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22622:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22622:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22622:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22622:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22622:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22622:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22622:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22622:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22622:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22622:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22622:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
22622:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
22622:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
22622:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
22622: Goal:
22622:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
22622: Order:
22622:   kbo
22622: Leaf order:
22622:  b 4 0 1 1,2,2
22622:  c 4 0 2 2,2,2
22622:  a 5 0 2 1,2
22622:  identity 6 0 0 
22622:  inverse 1 1 0 
22622:  least_upper_bound 16 2 0 
22622:  greatest_lower_bound 16 2 2 0,2
22622:  multiply 19 2 1 0,2,2
NO CLASH, using fixed ground order
22623: Facts:
22623:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22623:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22623:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22623:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22623:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22623:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22623:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22623:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22623:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22623:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22623:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22623:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22623:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22623:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22623:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22623:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
22623:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
22623:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
22623:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
22623: Goal:
22623:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
22623: Order:
22623:   lpo
22623: Leaf order:
22623:  b 4 0 1 1,2,2
22623:  c 4 0 2 2,2,2
22623:  a 5 0 2 1,2
22623:  identity 6 0 0 
22623:  inverse 1 1 0 
22623:  least_upper_bound 16 2 0 
22623:  greatest_lower_bound 16 2 2 0,2
22623:  multiply 19 2 1 0,2,2
22621:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22621:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22621:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22621:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22621:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22621:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22621:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22621:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22621:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22621:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22621:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22621:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22621:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22621:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22621:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22621:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p09a_1
22621:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p09a_2
22621:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p09a_3
22621:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09a_4
22621: Goal:
22621:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09a
22621: Order:
22621:   nrkbo
22621: Leaf order:
22621:  b 4 0 1 1,2,2
22621:  c 4 0 2 2,2,2
22621:  a 5 0 2 1,2
22621:  identity 6 0 0 
22621:  inverse 1 1 0 
22621:  least_upper_bound 16 2 0 
22621:  greatest_lower_bound 16 2 2 0,2
22621:  multiply 19 2 1 0,2,2
% SZS status Timeout for GRP178-1.p
NO CLASH, using fixed ground order
22657: Facts:
22657:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22657:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22657:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22657:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22657:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22657:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22657:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22657:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22657:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22657:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22657:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22657:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22657:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22657:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22657:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22657:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
22657:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
22657:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
22657:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
22657: Goal:
22657:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
22657: Order:
22657:   nrkbo
22657: Leaf order:
22657:  b 3 0 1 1,2,2
22657:  c 3 0 2 2,2,2
22657:  a 4 0 2 1,2
22657:  identity 9 0 0 
22657:  inverse 1 1 0 
22657:  least_upper_bound 13 2 0 
22657:  multiply 19 2 1 0,2,2
22657:  greatest_lower_bound 19 2 2 0,2
NO CLASH, using fixed ground order
22658: Facts:
22658:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22658:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22658:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22658:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22658:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22658:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22658:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22658:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22658:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22658:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22658:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22658:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22658:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22658:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22658:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22658:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
22658:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
22658:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
22658:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
22658: Goal:
22658:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
22658: Order:
22658:   kbo
22658: Leaf order:
22658:  b 3 0 1 1,2,2
22658:  c 3 0 2 2,2,2
22658:  a 4 0 2 1,2
22658:  identity 9 0 0 
22658:  inverse 1 1 0 
22658:  least_upper_bound 13 2 0 
22658:  multiply 19 2 1 0,2,2
22658:  greatest_lower_bound 19 2 2 0,2
NO CLASH, using fixed ground order
22659: Facts:
22659:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22659:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22659:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22659:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22659:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22659:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22659:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22659:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22659:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22659:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22659:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22659:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22659:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22659:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22659:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22659:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p09b_1
22659:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p09b_2
22659:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p09b_3
22659:  Id :  20, {_}: greatest_lower_bound a b =>= identity [] by p09b_4
22659: Goal:
22659:  Id :   1, {_}:
          greatest_lower_bound a (multiply b c) =>= greatest_lower_bound a c
          [] by prove_p09b
22659: Order:
22659:   lpo
22659: Leaf order:
22659:  b 3 0 1 1,2,2
22659:  c 3 0 2 2,2,2
22659:  a 4 0 2 1,2
22659:  identity 9 0 0 
22659:  inverse 1 1 0 
22659:  least_upper_bound 13 2 0 
22659:  multiply 19 2 1 0,2,2
22659:  greatest_lower_bound 19 2 2 0,2
% SZS status Timeout for GRP178-2.p
CLASH, statistics insufficient
22685: Facts:
22685:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22685:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22685:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22685:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22685:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22685:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22685:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22685:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22685:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22685:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22685:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22685:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22685:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22685:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22685:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22685:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
22685:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
22685:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =<=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
22685:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =<=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
22685: Goal:
22685:  Id :   1, {_}: a =>= b [] by prove_p12x
22685: Order:
22685:   nrkbo
22685: Leaf order:
22685:  identity 2 0 0 
22685:  a 3 0 1 2
22685:  b 3 0 1 3
22685:  c 4 0 0 
22685:  inverse 7 1 0 
22685:  greatest_lower_bound 17 2 0 
22685:  least_upper_bound 17 2 0 
22685:  multiply 18 2 0 
CLASH, statistics insufficient
22686: Facts:
22686:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22686:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22686:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22686:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22686:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
CLASH, statistics insufficient
22687: Facts:
22687:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22687:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22687:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22687:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22687:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22687:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22686:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22686:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22686:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22686:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22686:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22686:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22686:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22686:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22686:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22686:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22686:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
22686:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
22686:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =<=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
22686:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =<=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
22686: Goal:
22686:  Id :   1, {_}: a =>= b [] by prove_p12x
22686: Order:
22686:   kbo
22686: Leaf order:
22686:  identity 2 0 0 
22686:  a 3 0 1 2
22686:  b 3 0 1 3
22686:  c 4 0 0 
22686:  inverse 7 1 0 
22686:  greatest_lower_bound 17 2 0 
22686:  least_upper_bound 17 2 0 
22686:  multiply 18 2 0 
22687:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22687:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22687:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22687:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22687:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22687:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22687:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22687:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22687:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22687:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_1
22687:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_2
22687:  Id :  19, {_}:
          inverse (greatest_lower_bound ?52 ?53)
          =>=
          least_upper_bound (inverse ?52) (inverse ?53)
          [53, 52] by p12x_3 ?52 ?53
22687:  Id :  20, {_}:
          inverse (least_upper_bound ?55 ?56)
          =>=
          greatest_lower_bound (inverse ?55) (inverse ?56)
          [56, 55] by p12x_4 ?55 ?56
22687: Goal:
22687:  Id :   1, {_}: a =>= b [] by prove_p12x
22687: Order:
22687:   lpo
22687: Leaf order:
22687:  identity 2 0 0 
22687:  a 3 0 1 2
22687:  b 3 0 1 3
22687:  c 4 0 0 
22687:  inverse 7 1 0 
22687:  greatest_lower_bound 17 2 0 
22687:  least_upper_bound 17 2 0 
22687:  multiply 18 2 0 
% SZS status Timeout for GRP181-3.p
NO CLASH, using fixed ground order
22714: Facts:
22714:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22714:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22714:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22714:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22714:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22714:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22714:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22714:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22714:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22714:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22714:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22714:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22714:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22714:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22714:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22714:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
22714:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
22714:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
22714: Goal:
22714:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
22714: Order:
22714:   nrkbo
22714: Leaf order:
22714:  a 4 0 4 1,1,2
22714:  identity 8 0 4 2,1,2
22714:  inverse 9 1 2 0,2,2
22714:  least_upper_bound 15 2 2 0,1,2
22714:  greatest_lower_bound 15 2 2 0,1,2,2
22714:  multiply 22 2 2 0,2
NO CLASH, using fixed ground order
22715: Facts:
22715:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22715:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22715:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22715:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22715:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22715:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22715:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22715:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22715:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22715:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22715:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22715:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22715:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22715:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22715:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22715:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
22715:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
22715:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
22715: Goal:
22715:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
22715: Order:
22715:   kbo
22715: Leaf order:
22715:  a 4 0 4 1,1,2
22715:  identity 8 0 4 2,1,2
22715:  inverse 9 1 2 0,2,2
22715:  least_upper_bound 15 2 2 0,1,2
22715:  greatest_lower_bound 15 2 2 0,1,2,2
22715:  multiply 22 2 2 0,2
NO CLASH, using fixed ground order
22716: Facts:
22716:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22716:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22716:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22716:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22716:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22716:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22716:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22716:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22716:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22716:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22716:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22716:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22716:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22716:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22716:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22716:  Id :  17, {_}: inverse identity =>= identity [] by p21_1
22716:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p21_2 ?51
22716:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p21_3 ?53 ?54
22716: Goal:
22716:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
22716: Order:
22716:   lpo
22716: Leaf order:
22716:  a 4 0 4 1,1,2
22716:  identity 8 0 4 2,1,2
22716:  inverse 9 1 2 0,2,2
22716:  least_upper_bound 15 2 2 0,1,2
22716:  greatest_lower_bound 15 2 2 0,1,2,2
22716:  multiply 22 2 2 0,2
% SZS status Timeout for GRP184-2.p
NO CLASH, using fixed ground order
22807: Facts:
22807:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22807:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22807:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22807:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22807:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22807:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22807:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22807:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22807:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22807:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22807:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22807:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22807:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22807:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22807:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22807: Goal:
22807:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22807: Order:
22807:   nrkbo
22807: Leaf order:
22807:  a 3 0 3 1,1,1,2
22807:  b 3 0 3 2,1,1,2
22807:  identity 7 0 5 2,1,2
22807:  inverse 1 1 0 
22807:  greatest_lower_bound 13 2 0 
22807:  least_upper_bound 19 2 6 0,2
22807:  multiply 21 2 3 0,1,1,2
NO CLASH, using fixed ground order
22808: Facts:
22808:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22808:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22808:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22808:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22808:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22808:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22808:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22808:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22808:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22808:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22808:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22808:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22808:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22808:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22808:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22808: Goal:
22808:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22808: Order:
22808:   kbo
22808: Leaf order:
22808:  a 3 0 3 1,1,1,2
22808:  b 3 0 3 2,1,1,2
22808:  identity 7 0 5 2,1,2
22808:  inverse 1 1 0 
22808:  greatest_lower_bound 13 2 0 
22808:  least_upper_bound 19 2 6 0,2
22808:  multiply 21 2 3 0,1,1,2
NO CLASH, using fixed ground order
22809: Facts:
22809:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22809:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22809:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22809:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22809:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22809:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22809:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22809:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22809:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22809:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22809:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22809:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22809:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22809:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22809:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22809: Goal:
22809:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22809: Order:
22809:   lpo
22809: Leaf order:
22809:  a 3 0 3 1,1,1,2
22809:  b 3 0 3 2,1,1,2
22809:  identity 7 0 5 2,1,2
22809:  inverse 1 1 0 
22809:  greatest_lower_bound 13 2 0 
22809:  least_upper_bound 19 2 6 0,2
22809:  multiply 21 2 3 0,1,1,2
Statistics :
Max weight : 21
Found proof, 1.740382s
% SZS status Unsatisfiable for GRP185-1.p
% SZS output start CNFRefutation for GRP185-1.p
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  21, {_}: multiply (multiply ?57 ?58) ?59 =>= multiply ?57 (multiply ?58 ?59) [59, 58, 57] by associativity ?57 ?58 ?59
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  23, {_}: multiply identity ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Super 21 with 3 at 1,2
Id : 482, {_}: ?594 =<= multiply (inverse ?595) (multiply ?595 ?594) [595, 594] by Demod 23 with 2 at 2
Id : 484, {_}: ?599 =<= multiply (inverse (inverse ?599)) identity [599] by Super 482 with 3 at 2,3
Id :  27, {_}: ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Demod 23 with 2 at 2
Id : 490, {_}: multiply ?621 ?622 =<= multiply (inverse (inverse ?621)) ?622 [622, 621] by Super 482 with 27 at 2,3
Id : 725, {_}: ?599 =<= multiply ?599 identity [599] by Demod 484 with 490 at 3
Id :  73, {_}: least_upper_bound ?180 (least_upper_bound ?180 ?181) =>= least_upper_bound ?180 ?181 [181, 180] by Super 8 with 9 at 1,3
Id :  57, {_}: least_upper_bound ?143 (least_upper_bound ?144 ?145) =?= least_upper_bound ?144 (least_upper_bound ?145 ?143) [145, 144, 143] by Super 6 with 8 at 3
Id : 3011, {_}: least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) === least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 3010 with 73 at 2,2,2
Id : 3010, {_}: least_upper_bound b (least_upper_bound a (least_upper_bound identity (least_upper_bound identity (multiply a b)))) =>= least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 3009 with 8 at 2,2
Id : 3009, {_}: least_upper_bound b (least_upper_bound (least_upper_bound a identity) (least_upper_bound identity (multiply a b))) =>= least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 3008 with 8 at 2
Id : 3008, {_}: least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (least_upper_bound identity (multiply a b)) =>= least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 3007 with 8 at 2,3
Id : 3007, {_}: least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (least_upper_bound identity (multiply a b)) =>= least_upper_bound b (least_upper_bound (least_upper_bound a identity) (multiply a b)) [] by Demod 3006 with 57 at 2
Id : 3006, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity))) =>= least_upper_bound b (least_upper_bound (least_upper_bound a identity) (multiply a b)) [] by Demod 3005 with 8 at 3
Id : 3005, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity))) =>= least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b) [] by Demod 3004 with 2 at 2,2,2,2,2
Id : 3004, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a (multiply identity identity)))) =>= least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b) [] by Demod 3003 with 725 at 1,2,2,2,2
Id : 3003, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b) [] by Demod 3002 with 2 at 1,2,2,2
Id : 3002, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b) [] by Demod 3001 with 6 at 3
Id : 3001, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity)) [] by Demod 3000 with 73 at 2,2
Id : 3000, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity)) [] by Demod 2999 with 2 at 2,2,2,3
Id : 2999, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a (multiply identity identity))) [] by Demod 2998 with 725 at 1,2,2,3
Id : 2998, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 2997 with 2 at 1,2,3
Id : 2997, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 2996 with 8 at 2,2,2
Id : 2996, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 2995 with 8 at 3
Id : 2995, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 2994 with 15 at 2,2,2,2
Id : 2994, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 2993 with 15 at 1,2,2,2
Id : 2993, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 2992 with 15 at 2,3
Id : 2992, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity) [] by Demod 2991 with 15 at 1,3
Id : 2991, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 2990 with 13 at 2,2,2
Id : 2990, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 2989 with 13 at 3
Id : 2989, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 56 with 8 at 2
Id :  56, {_}: least_upper_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 1 with 6 at 1,2
Id :   1, {_}: least_upper_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by prove_p22a
% SZS output end CNFRefutation for GRP185-1.p
22809: solved GRP185-1.p in 0.852052 using lpo
22809: status Unsatisfiable for GRP185-1.p
NO CLASH, using fixed ground order
22814: Facts:
NO CLASH, using fixed ground order
22815: Facts:
22815:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22815:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22815:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22815:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22815:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22815:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22815:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
NO CLASH, using fixed ground order
22816: Facts:
22816:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22816:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22816:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22816:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22816:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22816:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22816:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22816:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22814:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22815:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22814:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
22815:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22815:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22815:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22814:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
22814:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
22814:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
22815:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22814:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
22815:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22814:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
22814:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
22814:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22814:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22814:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22814:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22814:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22814:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22814:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22814:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
22814:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
22814:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
22814: Goal:
22814:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22814: Order:
22814:   nrkbo
22814: Leaf order:
22814:  a 3 0 3 1,1,1,2
22814:  b 3 0 3 2,1,1,2
22814:  identity 9 0 5 2,1,2
22814:  inverse 7 1 0 
22814:  greatest_lower_bound 13 2 0 
22814:  least_upper_bound 19 2 6 0,2
22814:  multiply 23 2 3 0,1,1,2
22816:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
22815:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22815:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22815:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
22815:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
22815:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
22815: Goal:
22815:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22815: Order:
22815:   kbo
22815: Leaf order:
22815:  a 3 0 3 1,1,1,2
22815:  b 3 0 3 2,1,1,2
22815:  identity 9 0 5 2,1,2
22815:  inverse 7 1 0 
22815:  greatest_lower_bound 13 2 0 
22815:  least_upper_bound 19 2 6 0,2
22815:  multiply 23 2 3 0,1,1,2
22816:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
22816:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
22816:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
22816:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
22816:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
22816:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
22816:  Id :  17, {_}: inverse identity =>= identity [] by p22a_1
22816:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
22816:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22a_3 ?53 ?54
22816: Goal:
22816:  Id :   1, {_}:
          least_upper_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          multiply (least_upper_bound a identity)
            (least_upper_bound b identity)
          [] by prove_p22a
22816: Order:
22816:   lpo
22816: Leaf order:
22816:  a 3 0 3 1,1,1,2
22816:  b 3 0 3 2,1,1,2
22816:  identity 9 0 5 2,1,2
22816:  inverse 7 1 0 
22816:  greatest_lower_bound 13 2 0 
22816:  least_upper_bound 19 2 6 0,2
22816:  multiply 23 2 3 0,1,1,2
Statistics :
Max weight : 21
Found proof, 4.698116s
% SZS status Unsatisfiable for GRP185-2.p
% SZS output start CNFRefutation for GRP185-2.p
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22a_2 ?51
Id :  17, {_}: inverse identity =>= identity [] by p22a_1
Id : 426, {_}: inverse (multiply ?520 ?521) =?= multiply (inverse ?521) (inverse ?520) [521, 520] by p22a_3 ?520 ?521
Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
Id :  62, {_}: least_upper_bound ?157 (least_upper_bound ?158 ?159) =<= least_upper_bound (least_upper_bound ?157 ?158) ?159 [159, 158, 157] by associativity_of_lub ?157 ?158 ?159
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  63, {_}: least_upper_bound ?161 (least_upper_bound ?162 ?163) =<= least_upper_bound (least_upper_bound ?162 ?161) ?163 [163, 162, 161] by Super 62 with 6 at 1,3
Id :  69, {_}: least_upper_bound ?161 (least_upper_bound ?162 ?163) =?= least_upper_bound ?162 (least_upper_bound ?161 ?163) [163, 162, 161] by Demod 63 with 8 at 3
Id :  76, {_}: least_upper_bound ?186 (least_upper_bound ?186 ?187) =>= least_upper_bound ?186 ?187 [187, 186] by Super 8 with 9 at 1,3
Id : 427, {_}: inverse (multiply identity ?523) =<= multiply (inverse ?523) identity [523] by Super 426 with 17 at 2,3
Id : 481, {_}: inverse ?569 =<= multiply (inverse ?569) identity [569] by Demod 427 with 2 at 1,2
Id : 483, {_}: inverse (inverse ?572) =<= multiply ?572 identity [572] by Super 481 with 18 at 1,3
Id : 491, {_}: ?572 =<= multiply ?572 identity [572] by Demod 483 with 18 at 2
Id :  60, {_}: least_upper_bound ?149 (least_upper_bound ?150 ?151) =?= least_upper_bound ?150 (least_upper_bound ?151 ?149) [151, 150, 149] by Super 6 with 8 at 3
Id : 706, {_}: least_upper_bound ?667 (least_upper_bound ?667 ?668) =>= least_upper_bound ?667 ?668 [668, 667] by Super 8 with 9 at 1,3
Id : 707, {_}: least_upper_bound ?670 (least_upper_bound ?671 ?670) =>= least_upper_bound ?670 ?671 [671, 670] by Super 706 with 6 at 2,2
Id : 1184, {_}: least_upper_bound ?916 (least_upper_bound (least_upper_bound ?917 ?916) ?918) =?= least_upper_bound (least_upper_bound ?916 ?917) ?918 [918, 917, 916] by Super 8 with 707 at 1,3
Id : 1214, {_}: least_upper_bound ?916 (least_upper_bound ?917 (least_upper_bound ?916 ?918)) =<= least_upper_bound (least_upper_bound ?916 ?917) ?918 [918, 917, 916] by Demod 1184 with 8 at 2,2
Id : 1215, {_}: least_upper_bound ?916 (least_upper_bound ?917 (least_upper_bound ?916 ?918)) =>= least_upper_bound ?916 (least_upper_bound ?917 ?918) [918, 917, 916] by Demod 1214 with 8 at 3
Id : 7862, {_}: least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b))) === least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b))) [] by Demod 7861 with 69 at 2
Id : 7861, {_}: least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) =>= least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b))) [] by Demod 7860 with 60 at 2,2
Id : 7860, {_}: least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) a)) =>= least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b))) [] by Demod 7859 with 491 at 2,2,2,2
Id : 7859, {_}: least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (multiply a identity))) =>= least_upper_bound a (least_upper_bound b (least_upper_bound identity (multiply a b))) [] by Demod 7858 with 69 at 3
Id : 7858, {_}: least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (multiply a identity))) =>= least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 7857 with 1215 at 2,2
Id : 7857, {_}: least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b))) [] by Demod 7856 with 60 at 2,3
Id : 7856, {_}: least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) a)) [] by Demod 7855 with 69 at 2
Id : 7855, {_}: least_upper_bound identity (least_upper_bound b (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) a)) [] by Demod 7854 with 491 at 2,2,2,3
Id : 7854, {_}: least_upper_bound identity (least_upper_bound b (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (multiply a identity))) [] by Demod 7853 with 69 at 2,2
Id : 7853, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound identity (least_upper_bound (multiply a b) (multiply a identity))) [] by Demod 7852 with 69 at 2,3
Id : 7852, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity)))) =>= least_upper_bound b (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity))) [] by Demod 7851 with 76 at 2,2
Id : 7851, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))))) =>= least_upper_bound b (least_upper_bound (multiply a b) (least_upper_bound identity (multiply a identity))) [] by Demod 7850 with 69 at 3
Id : 7850, {_}: least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))) [] by Demod 509 with 69 at 2
Id : 509, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))) [] by Demod 508 with 6 at 2,2,2,2,2
Id : 508, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) identity)))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound identity (multiply a identity))) [] by Demod 507 with 6 at 2,2,3
Id : 507, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) identity)))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) identity)) [] by Demod 506 with 2 at 2,2,2,2,2,2
Id : 506, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) identity)) [] by Demod 505 with 2 at 1,2,2,2,2
Id : 505, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) identity)) [] by Demod 504 with 2 at 2,2,2,3
Id : 504, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 503 with 2 at 1,2,3
Id : 503, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))))) =>= least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 502 with 8 at 2,2,2
Id : 502, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity))) [] by Demod 501 with 8 at 3
Id : 501, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 500 with 15 at 2,2,2,2
Id : 500, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 499 with 15 at 1,2,2,2
Id : 499, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity)) [] by Demod 498 with 15 at 2,3
Id : 498, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity) [] by Demod 497 with 15 at 1,3
Id : 497, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 496 with 13 at 2,2,2
Id : 496, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity) [] by Demod 495 with 13 at 3
Id : 495, {_}: least_upper_bound (multiply a b) (least_upper_bound identity (multiply (least_upper_bound a identity) (least_upper_bound b identity))) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by Demod 1 with 8 at 2
Id :   1, {_}: least_upper_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= multiply (least_upper_bound a identity) (least_upper_bound b identity) [] by prove_p22a
% SZS output end CNFRefutation for GRP185-2.p
22816: solved GRP185-2.p in 2.292143 using lpo
22816: status Unsatisfiable for GRP185-2.p
CLASH, statistics insufficient
22828: Facts:
22828:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22828:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22828:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22828:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22828:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22828:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22828:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22828:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22828:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =?=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
22828: Goal:
22828:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
22828: Order:
22828:   nrkbo
22828: Leaf order:
22828:  a 2 0 2 1,1,1,2
22828:  c 2 0 2 2,1,2
22828:  identity 4 0 0 
22828:  b 4 0 4 2,1,1,2
22828:  right_inverse 1 1 0 
22828:  left_inverse 1 1 0 
22828:  left_division 2 2 0 
22828:  right_division 2 2 0 
22828:  multiply 20 2 6 0,2
CLASH, statistics insufficient
22829: Facts:
22829:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22829:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22829:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22829:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22829:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22829:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22829:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22829:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22829:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =>=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
22829: Goal:
22829:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
22829: Order:
22829:   kbo
22829: Leaf order:
22829:  a 2 0 2 1,1,1,2
22829:  c 2 0 2 2,1,2
22829:  identity 4 0 0 
22829:  b 4 0 4 2,1,1,2
22829:  right_inverse 1 1 0 
22829:  left_inverse 1 1 0 
22829:  left_division 2 2 0 
22829:  right_division 2 2 0 
22829:  multiply 20 2 6 0,2
CLASH, statistics insufficient
22830: Facts:
22830:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22830:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22830:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22830:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22830:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22830:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22830:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22830:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22830:  Id :  10, {_}:
          multiply (multiply ?22 (multiply ?23 ?24)) ?22
          =>=
          multiply (multiply ?22 ?23) (multiply ?24 ?22)
          [24, 23, 22] by moufang1 ?22 ?23 ?24
22830: Goal:
22830:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
22830: Order:
22830:   lpo
22830: Leaf order:
22830:  a 2 0 2 1,1,1,2
22830:  c 2 0 2 2,1,2
22830:  identity 4 0 0 
22830:  b 4 0 4 2,1,1,2
22830:  right_inverse 1 1 0 
22830:  left_inverse 1 1 0 
22830:  left_division 2 2 0 
22830:  right_division 2 2 0 
22830:  multiply 20 2 6 0,2
% SZS status Timeout for GRP200-1.p
CLASH, statistics insufficient
22867: Facts:
22867:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22867:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22867:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22867:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22867:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22867:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22867:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22867:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22867:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =?=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
22867: Goal:
22867:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
22867: Order:
22867:   nrkbo
22867: Leaf order:
22867:  b 2 0 2 2,1,1,2
22867:  c 2 0 2 2,2
22867:  identity 4 0 0 
22867:  a 4 0 4 1,1,1,2
22867:  right_inverse 1 1 0 
22867:  left_inverse 1 1 0 
22867:  left_division 2 2 0 
22867:  right_division 2 2 0 
22867:  multiply 20 2 6 0,2
CLASH, statistics insufficient
22868: Facts:
22868:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22868:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22868:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22868:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22868:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22868:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22868:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22868:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22868:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =>=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
22868: Goal:
22868:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
22868: Order:
22868:   kbo
22868: Leaf order:
22868:  b 2 0 2 2,1,1,2
22868:  c 2 0 2 2,2
22868:  identity 4 0 0 
22868:  a 4 0 4 1,1,1,2
22868:  right_inverse 1 1 0 
22868:  left_inverse 1 1 0 
22868:  left_division 2 2 0 
22868:  right_division 2 2 0 
22868:  multiply 20 2 6 0,2
CLASH, statistics insufficient
22869: Facts:
22869:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22869:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22869:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22869:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22869:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22869:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22869:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22869:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22869:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?24) ?23
          =>=
          multiply ?22 (multiply ?23 (multiply ?24 ?23))
          [24, 23, 22] by moufang2 ?22 ?23 ?24
22869: Goal:
22869:  Id :   1, {_}:
          multiply (multiply (multiply a b) a) c
          =>=
          multiply a (multiply b (multiply a c))
          [] by prove_moufang3
22869: Order:
22869:   lpo
22869: Leaf order:
22869:  b 2 0 2 2,1,1,2
22869:  c 2 0 2 2,2
22869:  identity 4 0 0 
22869:  a 4 0 4 1,1,1,2
22869:  right_inverse 1 1 0 
22869:  left_inverse 1 1 0 
22869:  left_division 2 2 0 
22869:  right_division 2 2 0 
22869:  multiply 20 2 6 0,2
Statistics :
Max weight : 15
Found proof, 24.434685s
% SZS status Unsatisfiable for GRP201-1.p
% SZS output start CNFRefutation for GRP201-1.p
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?24) ?23 =>= multiply ?22 (multiply ?23 (multiply ?24 ?23)) [24, 23, 22] by moufang2 ?22 ?23 ?24
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  54, {_}: multiply (multiply (multiply ?119 ?120) ?121) ?120 =>= multiply ?119 (multiply ?120 (multiply ?121 ?120)) [121, 120, 119] by moufang2 ?119 ?120 ?121
Id :  55, {_}: multiply (multiply ?123 ?124) ?123 =<= multiply identity (multiply ?123 (multiply ?124 ?123)) [124, 123] by Super 54 with 2 at 1,1,2
Id :  71, {_}: multiply (multiply ?123 ?124) ?123 =>= multiply ?123 (multiply ?124 ?123) [124, 123] by Demod 55 with 2 at 3
Id : 897, {_}: right_division (multiply ?1221 (multiply ?1222 (multiply ?1223 ?1222))) ?1222 =>= multiply (multiply ?1221 ?1222) ?1223 [1223, 1222, 1221] by Super 7 with 10 at 1,2
Id : 904, {_}: right_division (multiply ?1247 (multiply ?1248 identity)) ?1248 =>= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Super 897 with 9 at 2,2,1,2
Id : 944, {_}: right_division (multiply ?1247 ?1248) ?1248 =<= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Demod 904 with 3 at 2,1,2
Id : 945, {_}: ?1247 =<= multiply (multiply ?1247 ?1248) (left_inverse ?1248) [1248, 1247] by Demod 944 with 7 at 2
Id : 1320, {_}: left_division (multiply ?1774 ?1775) ?1774 =>= left_inverse ?1775 [1775, 1774] by Super 5 with 945 at 2,2
Id : 1325, {_}: left_division ?1787 ?1788 =<= left_inverse (left_division ?1788 ?1787) [1788, 1787] by Super 1320 with 4 at 1,2
Id : 1124, {_}: ?1512 =<= multiply (multiply ?1512 ?1513) (left_inverse ?1513) [1513, 1512] by Demod 944 with 7 at 2
Id : 1136, {_}: right_division ?1545 ?1546 =<= multiply ?1545 (left_inverse ?1546) [1546, 1545] by Super 1124 with 6 at 1,3
Id : 1239, {_}: right_division (multiply (left_inverse ?1664) ?1665) ?1664 =<= multiply (left_inverse ?1664) (multiply ?1665 (left_inverse ?1664)) [1665, 1664] by Super 71 with 1136 at 2
Id : 1291, {_}: right_division (multiply (left_inverse ?1664) ?1665) ?1664 =<= multiply (left_inverse ?1664) (right_division ?1665 ?1664) [1665, 1664] by Demod 1239 with 1136 at 2,3
Id : 621, {_}: right_division (multiply ?874 (multiply ?875 ?874)) ?874 =>= multiply ?874 ?875 [875, 874] by Super 7 with 71 at 1,2
Id : 2721, {_}: right_division (multiply (left_inverse ?3427) (multiply ?3427 (multiply ?3428 ?3427))) ?3427 =>= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3428, 3427] by Super 1291 with 621 at 2,3
Id :  53, {_}: right_division (multiply ?115 (multiply ?116 (multiply ?117 ?116))) ?116 =>= multiply (multiply ?115 ?116) ?117 [117, 116, 115] by Super 7 with 10 at 1,2
Id : 2757, {_}: multiply (multiply (left_inverse ?3427) ?3427) ?3428 =>= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3428, 3427] by Demod 2721 with 53 at 2
Id : 2758, {_}: multiply identity ?3428 =<= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3427, 3428] by Demod 2757 with 9 at 1,2
Id : 2759, {_}: ?3428 =<= multiply (left_inverse ?3427) (multiply ?3427 ?3428) [3427, 3428] by Demod 2758 with 2 at 2
Id : 3344, {_}: left_division (left_inverse ?4254) ?4255 =>= multiply ?4254 ?4255 [4255, 4254] by Super 5 with 2759 at 2,2
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 425, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 626, {_}: multiply (multiply ?892 ?893) ?892 =>= multiply ?892 (multiply ?893 ?892) [893, 892] by Demod 55 with 2 at 3
Id : 633, {_}: multiply identity ?911 =<= multiply ?911 (multiply (right_inverse ?911) ?911) [911] by Super 626 with 8 at 1,2
Id : 654, {_}: ?911 =<= multiply ?911 (multiply (right_inverse ?911) ?911) [911] by Demod 633 with 2 at 2
Id : 727, {_}: left_division ?1053 ?1053 =<= multiply (right_inverse ?1053) ?1053 [1053] by Super 5 with 654 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 754, {_}: identity =<= multiply (right_inverse ?1053) ?1053 [1053] by Demod 727 with 24 at 2
Id : 784, {_}: right_division identity ?1115 =>= right_inverse ?1115 [1115] by Super 7 with 754 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 808, {_}: left_inverse ?1115 =<= right_inverse ?1115 [1115] by Demod 784 with 45 at 2
Id : 829, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 425 with 808 at 2
Id : 3348, {_}: left_division ?4266 ?4267 =<= multiply (left_inverse ?4266) ?4267 [4267, 4266] by Super 3344 with 829 at 1,2
Id : 3417, {_}: multiply (multiply (left_division ?4342 ?4343) ?4344) ?4343 =<= multiply (left_inverse ?4342) (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4343, 4342] by Super 10 with 3348 at 1,1,2
Id : 3495, {_}: multiply (multiply (left_division ?4342 ?4343) ?4344) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4343, 4342] by Demod 3417 with 3348 at 3
Id : 3351, {_}: left_division (left_division ?4274 ?4275) ?4276 =<= multiply (left_division ?4275 ?4274) ?4276 [4276, 4275, 4274] by Super 3344 with 1325 at 1,2
Id : 9541, {_}: multiply (left_division (left_division ?4343 ?4342) ?4344) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4344, 4342, 4343] by Demod 3495 with 3351 at 1,2
Id : 9542, {_}: left_division (left_division ?4344 (left_division ?4343 ?4342)) ?4343 =>= left_division ?4342 (multiply ?4343 (multiply ?4344 ?4343)) [4342, 4343, 4344] by Demod 9541 with 3351 at 2
Id : 9554, {_}: left_division ?10951 (left_division ?10952 (left_division ?10951 ?10953)) =<= left_inverse (left_division ?10953 (multiply ?10951 (multiply ?10952 ?10951))) [10953, 10952, 10951] by Super 1325 with 9542 at 1,3
Id : 27037, {_}: left_division ?28025 (left_division ?28026 (left_division ?28025 ?28027)) =<= left_division (multiply ?28025 (multiply ?28026 ?28025)) ?28027 [28027, 28026, 28025] by Demod 9554 with 1325 at 3
Id : 27055, {_}: left_division (left_inverse ?28099) (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (multiply (left_inverse ?28099) (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Super 27037 with 1136 at 2,1,3
Id : 3143, {_}: left_division (left_inverse ?4011) ?4012 =>= multiply ?4011 ?4012 [4012, 4011] by Super 5 with 2759 at 2,2
Id : 27191, {_}: multiply ?28099 (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (multiply (left_inverse ?28099) (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Demod 27055 with 3143 at 2
Id : 27192, {_}: multiply ?28099 (left_division ?28100 (left_division (left_inverse ?28099) ?28101)) =>= left_division (left_division ?28099 (right_division ?28100 ?28099)) ?28101 [28101, 28100, 28099] by Demod 27191 with 3348 at 1,3
Id : 1117, {_}: right_division ?1491 (left_inverse ?1492) =>= multiply ?1491 ?1492 [1492, 1491] by Super 7 with 945 at 1,2
Id : 1524, {_}: right_division ?2086 (left_division ?2087 ?2088) =<= multiply ?2086 (left_division ?2088 ?2087) [2088, 2087, 2086] by Super 1117 with 1325 at 2,2
Id : 27193, {_}: right_division ?28099 (left_division (left_division (left_inverse ?28099) ?28101) ?28100) =>= left_division (left_division ?28099 (right_division ?28100 ?28099)) ?28101 [28100, 28101, 28099] by Demod 27192 with 1524 at 2
Id : 3400, {_}: right_division (left_division ?1664 ?1665) ?1664 =<= multiply (left_inverse ?1664) (right_division ?1665 ?1664) [1665, 1664] by Demod 1291 with 3348 at 1,2
Id : 3401, {_}: right_division (left_division ?1664 ?1665) ?1664 =<= left_division ?1664 (right_division ?1665 ?1664) [1665, 1664] by Demod 3400 with 3348 at 3
Id : 27194, {_}: right_division ?28099 (left_division (left_division (left_inverse ?28099) ?28101) ?28100) =>= left_division (right_division (left_division ?28099 ?28100) ?28099) ?28101 [28100, 28101, 28099] by Demod 27193 with 3401 at 1,3
Id : 40132, {_}: right_division ?42719 (left_division (multiply ?42719 ?42720) ?42721) =<= left_division (right_division (left_division ?42719 ?42721) ?42719) ?42720 [42721, 42720, 42719] by Demod 27194 with 3143 at 1,2,2
Id : 1118, {_}: left_division (multiply ?1494 ?1495) ?1494 =>= left_inverse ?1495 [1495, 1494] by Super 5 with 945 at 2,2
Id : 3133, {_}: left_division ?3978 (left_inverse ?3979) =>= left_inverse (multiply ?3979 ?3978) [3979, 3978] by Super 1118 with 2759 at 1,2
Id : 40144, {_}: right_division ?42768 (left_division (multiply ?42768 ?42769) (left_inverse ?42770)) =<= left_division (right_division (left_inverse (multiply ?42770 ?42768)) ?42768) ?42769 [42770, 42769, 42768] by Super 40132 with 3133 at 1,1,3
Id : 40468, {_}: right_division ?42768 (left_inverse (multiply ?42770 (multiply ?42768 ?42769))) =<= left_division (right_division (left_inverse (multiply ?42770 ?42768)) ?42768) ?42769 [42769, 42770, 42768] by Demod 40144 with 3133 at 2,2
Id : 3414, {_}: right_division (left_inverse ?4334) ?4335 =<= left_division ?4334 (left_inverse ?4335) [4335, 4334] by Super 1136 with 3348 at 3
Id : 3502, {_}: right_division (left_inverse ?4334) ?4335 =>= left_inverse (multiply ?4335 ?4334) [4335, 4334] by Demod 3414 with 3133 at 3
Id : 40469, {_}: right_division ?42768 (left_inverse (multiply ?42770 (multiply ?42768 ?42769))) =<= left_division (left_inverse (multiply ?42768 (multiply ?42770 ?42768))) ?42769 [42769, 42770, 42768] by Demod 40468 with 3502 at 1,3
Id : 40470, {_}: multiply ?42768 (multiply ?42770 (multiply ?42768 ?42769)) =<= left_division (left_inverse (multiply ?42768 (multiply ?42770 ?42768))) ?42769 [42769, 42770, 42768] by Demod 40469 with 1117 at 2
Id : 40471, {_}: multiply ?42768 (multiply ?42770 (multiply ?42768 ?42769)) =<= multiply (multiply ?42768 (multiply ?42770 ?42768)) ?42769 [42769, 42770, 42768] by Demod 40470 with 3143 at 3
Id : 50862, {_}: multiply a (multiply b (multiply a c)) =?= multiply a (multiply b (multiply a c)) [] by Demod 50861 with 40471 at 2
Id : 50861, {_}: multiply (multiply a (multiply b a)) c =>= multiply a (multiply b (multiply a c)) [] by Demod 1 with 71 at 1,2
Id :   1, {_}: multiply (multiply (multiply a b) a) c =>= multiply a (multiply b (multiply a c)) [] by prove_moufang3
% SZS output end CNFRefutation for GRP201-1.p
22868: solved GRP201-1.p in 12.232764 using kbo
22868: status Unsatisfiable for GRP201-1.p
CLASH, statistics insufficient
22882: Facts:
CLASH, statistics insufficient
22883: Facts:
22883:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22883:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22883:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22883:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22883:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22883:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22883:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22883:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22883:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
22883: Goal:
22883:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
22883: Order:
22883:   kbo
22883: Leaf order:
22883:  b 2 0 2 1,2,1,2
22883:  c 2 0 2 2,2,1,2
22883:  identity 4 0 0 
22883:  a 4 0 4 1,1,2
22883:  right_inverse 1 1 0 
22883:  left_inverse 1 1 0 
22883:  left_division 2 2 0 
22883:  right_division 2 2 0 
22883:  multiply 20 2 6 0,2
22882:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22882:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22882:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22882:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22882:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22882:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22882:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22882:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22882:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =?=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
22882: Goal:
22882:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
22882: Order:
22882:   nrkbo
22882: Leaf order:
22882:  b 2 0 2 1,2,1,2
22882:  c 2 0 2 2,2,1,2
22882:  identity 4 0 0 
22882:  a 4 0 4 1,1,2
22882:  right_inverse 1 1 0 
22882:  left_inverse 1 1 0 
22882:  left_division 2 2 0 
22882:  right_division 2 2 0 
22882:  multiply 20 2 6 0,2
CLASH, statistics insufficient
22884: Facts:
22884:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
22884:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
22884:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
22884:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
22884:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
22884:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
22884:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
22884:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
22884:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
22884: Goal:
22884:  Id :   1, {_}:
          multiply (multiply a (multiply b c)) a
          =>=
          multiply (multiply a b) (multiply c a)
          [] by prove_moufang1
22884: Order:
22884:   lpo
22884: Leaf order:
22884:  b 2 0 2 1,2,1,2
22884:  c 2 0 2 2,2,1,2
22884:  identity 4 0 0 
22884:  a 4 0 4 1,1,2
22884:  right_inverse 1 1 0 
22884:  left_inverse 1 1 0 
22884:  left_division 2 2 0 
22884:  right_division 2 2 0 
22884:  multiply 20 2 6 0,2
Statistics :
Max weight : 20
Found proof, 29.906330s
% SZS status Unsatisfiable for GRP202-1.p
% SZS output start CNFRefutation for GRP202-1.p
Id :  56, {_}: multiply (multiply (multiply ?126 ?127) ?126) ?128 =>= multiply ?126 (multiply ?127 (multiply ?126 ?128)) [128, 127, 126] by moufang3 ?126 ?127 ?128
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?22) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by moufang3 ?22 ?23 ?24
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :  53, {_}: multiply ?115 (multiply ?116 (multiply ?115 identity)) =>= multiply (multiply ?115 ?116) ?115 [116, 115] by Super 3 with 10 at 2
Id :  70, {_}: multiply ?115 (multiply ?116 ?115) =<= multiply (multiply ?115 ?116) ?115 [116, 115] by Demod 53 with 3 at 2,2,2
Id : 894, {_}: right_division (multiply ?1099 (multiply ?1100 ?1099)) ?1099 =>= multiply ?1099 ?1100 [1100, 1099] by Super 7 with 70 at 1,2
Id : 900, {_}: right_division (multiply ?1115 ?1116) ?1115 =<= multiply ?1115 (right_division ?1116 ?1115) [1116, 1115] by Super 894 with 6 at 2,1,2
Id :  55, {_}: right_division (multiply ?122 (multiply ?123 (multiply ?122 ?124))) ?124 =>= multiply (multiply ?122 ?123) ?122 [124, 123, 122] by Super 7 with 10 at 1,2
Id : 2577, {_}: right_division (multiply ?3478 (multiply ?3479 (multiply ?3478 ?3480))) ?3480 =>= multiply ?3478 (multiply ?3479 ?3478) [3480, 3479, 3478] by Demod 55 with 70 at 3
Id : 647, {_}: multiply ?831 (multiply ?832 ?831) =<= multiply (multiply ?831 ?832) ?831 [832, 831] by Demod 53 with 3 at 2,2,2
Id : 654, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= multiply identity ?850 [850] by Super 647 with 8 at 1,3
Id : 677, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= ?850 [850] by Demod 654 with 2 at 3
Id : 765, {_}: left_division ?991 ?991 =<= multiply (right_inverse ?991) ?991 [991] by Super 5 with 677 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 791, {_}: identity =<= multiply (right_inverse ?991) ?991 [991] by Demod 765 with 24 at 2
Id : 819, {_}: right_division identity ?1047 =>= right_inverse ?1047 [1047] by Super 7 with 791 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 846, {_}: left_inverse ?1047 =<= right_inverse ?1047 [1047] by Demod 819 with 45 at 2
Id : 861, {_}: multiply ?18 (left_inverse ?18) =>= identity [18] by Demod 8 with 846 at 2,2
Id : 2586, {_}: right_division (multiply ?3513 (multiply ?3514 identity)) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Super 2577 with 861 at 2,2,1,2
Id : 2645, {_}: right_division (multiply ?3513 ?3514) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Demod 2586 with 3 at 2,1,2
Id : 2833, {_}: right_division (multiply (left_inverse ?3781) (multiply ?3781 ?3782)) (left_inverse ?3781) =>= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Super 900 with 2645 at 2,3
Id :  52, {_}: multiply ?111 (multiply ?112 (multiply ?111 (left_division (multiply (multiply ?111 ?112) ?111) ?113))) =>= ?113 [113, 112, 111] by Super 4 with 10 at 2
Id : 969, {_}: multiply ?1216 (multiply ?1217 (multiply ?1216 (left_division (multiply ?1216 (multiply ?1217 ?1216)) ?1218))) =>= ?1218 [1218, 1217, 1216] by Demod 52 with 70 at 1,2,2,2,2
Id : 976, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division (multiply ?1242 identity) ?1243))) =>= ?1243 [1243, 1242] by Super 969 with 9 at 2,1,2,2,2,2
Id : 1036, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division ?1242 ?1243))) =>= ?1243 [1243, 1242] by Demod 976 with 3 at 1,2,2,2,2
Id : 1037, {_}: multiply ?1242 (multiply (left_inverse ?1242) ?1243) =>= ?1243 [1243, 1242] by Demod 1036 with 4 at 2,2,2
Id : 1172, {_}: left_division ?1548 ?1549 =<= multiply (left_inverse ?1548) ?1549 [1549, 1548] by Super 5 with 1037 at 2,2
Id : 2879, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =<= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2833 with 1172 at 1,2
Id : 2880, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =>= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2879 with 1172 at 3
Id : 2881, {_}: right_division ?3782 (left_inverse ?3781) =<= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3781, 3782] by Demod 2880 with 5 at 1,2
Id : 2882, {_}: right_division ?3782 (left_inverse ?3781) =>= multiply ?3782 ?3781 [3781, 3782] by Demod 2881 with 5 at 3
Id : 1389, {_}: right_division (left_division ?1827 ?1828) ?1828 =>= left_inverse ?1827 [1828, 1827] by Super 7 with 1172 at 1,2
Id :  28, {_}: left_division (right_division ?62 ?63) ?62 =>= ?63 [63, 62] by Super 5 with 6 at 2,2
Id : 1395, {_}: right_division ?1844 ?1845 =<= left_inverse (right_division ?1845 ?1844) [1845, 1844] by Super 1389 with 28 at 1,2
Id : 3679, {_}: multiply (multiply ?4879 ?4880) ?4881 =<= multiply ?4880 (multiply (left_division ?4880 ?4879) (multiply ?4880 ?4881)) [4881, 4880, 4879] by Super 56 with 4 at 1,1,2
Id : 3684, {_}: multiply (multiply ?4897 ?4898) (left_division ?4898 ?4899) =>= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Super 3679 with 4 at 2,2,3
Id : 2950, {_}: right_division (left_inverse ?3910) ?3911 =>= left_inverse (multiply ?3911 ?3910) [3911, 3910] by Super 1395 with 2882 at 1,3
Id : 3037, {_}: left_inverse (multiply (left_inverse ?4021) ?4022) =>= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Super 2882 with 2950 at 2
Id : 3056, {_}: left_inverse (left_division ?4021 ?4022) =<= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Demod 3037 with 1172 at 1,2
Id : 3057, {_}: left_inverse (left_division ?4021 ?4022) =>= left_division ?4022 ?4021 [4022, 4021] by Demod 3056 with 1172 at 3
Id : 3222, {_}: right_division ?4224 (left_division ?4225 ?4226) =<= multiply ?4224 (left_division ?4226 ?4225) [4226, 4225, 4224] by Super 2882 with 3057 at 2,2
Id : 8079, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Demod 3684 with 3222 at 2
Id : 3218, {_}: left_division (left_division ?4210 ?4211) ?4212 =<= multiply (left_division ?4211 ?4210) ?4212 [4212, 4211, 4210] by Super 1172 with 3057 at 1,3
Id : 8080, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (left_division (left_division ?4897 ?4898) ?4899) [4899, 4898, 4897] by Demod 8079 with 3218 at 2,3
Id : 8081, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =>= right_division ?4898 (left_division ?4899 (left_division ?4897 ?4898)) [4899, 4898, 4897] by Demod 8080 with 3222 at 3
Id : 8094, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= left_inverse (right_division ?9767 (left_division ?9766 (left_division ?9768 ?9767))) [9768, 9767, 9766] by Super 1395 with 8081 at 1,3
Id : 8159, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= right_division (left_division ?9766 (left_division ?9768 ?9767)) ?9767 [9768, 9767, 9766] by Demod 8094 with 1395 at 3
Id : 23778, {_}: right_division (left_division ?25246 (left_inverse ?25247)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25247, 25246] by Super 2882 with 8159 at 2
Id : 2960, {_}: right_division ?3937 (left_inverse ?3938) =>= multiply ?3937 ?3938 [3938, 3937] by Demod 2881 with 5 at 3
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 426, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 864, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 426 with 846 at 2
Id : 2964, {_}: right_division ?3949 ?3950 =<= multiply ?3949 (left_inverse ?3950) [3950, 3949] by Super 2960 with 864 at 2,2
Id : 3107, {_}: left_division ?4125 (left_inverse ?4126) =>= right_division (left_inverse ?4125) ?4126 [4126, 4125] by Super 1172 with 2964 at 3
Id : 3145, {_}: left_division ?4125 (left_inverse ?4126) =>= left_inverse (multiply ?4126 ?4125) [4126, 4125] by Demod 3107 with 2950 at 3
Id : 23925, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23778 with 3145 at 1,2
Id : 23926, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23925 with 2964 at 2,2
Id : 23927, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25248, 25246, 25247] by Demod 23926 with 3218 at 3
Id : 23928, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23927 with 2950 at 2
Id : 23929, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23928 with 3145 at 1,1,3
Id : 1175, {_}: multiply ?1556 (multiply (left_inverse ?1556) ?1557) =>= ?1557 [1557, 1556] by Demod 1036 with 4 at 2,2,2
Id : 1185, {_}: multiply ?1584 ?1585 =<= left_division (left_inverse ?1584) ?1585 [1585, 1584] by Super 1175 with 4 at 2,2
Id : 1426, {_}: multiply (right_division ?1873 ?1874) ?1875 =>= left_division (right_division ?1874 ?1873) ?1875 [1875, 1874, 1873] by Super 1185 with 1395 at 1,3
Id : 23930, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25248, 25247] by Demod 23929 with 1426 at 1,2
Id : 23931, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =>= left_division (multiply (multiply ?25247 ?25248) ?25246) ?25247 [25246, 25248, 25247] by Demod 23930 with 1185 at 1,3
Id : 37380, {_}: left_division (multiply ?37773 ?37774) (right_division ?37773 ?37775) =<= left_division (multiply (multiply ?37773 ?37775) ?37774) ?37773 [37775, 37774, 37773] by Demod 23931 with 3057 at 2
Id : 37397, {_}: left_division (multiply ?37844 ?37845) (right_division ?37844 (left_inverse ?37846)) =>= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Super 37380 with 2964 at 1,1,3
Id : 37604, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Demod 37397 with 2882 at 2,2
Id : 37605, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (left_division (right_division ?37846 ?37844) ?37845) ?37844 [37846, 37845, 37844] by Demod 37604 with 1426 at 1,3
Id : 8101, {_}: right_division (multiply ?9794 ?9795) (left_division ?9796 ?9795) =>= right_division ?9795 (left_division ?9796 (left_division ?9794 ?9795)) [9796, 9795, 9794] by Demod 8080 with 3222 at 3
Id : 8114, {_}: right_division (multiply ?9845 (left_inverse ?9846)) (left_inverse (multiply ?9846 ?9847)) =>= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Super 8101 with 3145 at 2,2
Id : 8186, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Demod 8114 with 2882 at 2
Id : 8187, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8186 with 2950 at 3
Id : 8188, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8187 with 2964 at 1,2
Id : 8189, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9846, 9845] by Demod 8188 with 3218 at 1,3
Id : 8190, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9845, 9846] by Demod 8189 with 1426 at 2
Id : 8191, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) [9847, 9845, 9846] by Demod 8190 with 3057 at 3
Id : 8192, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_inverse (multiply ?9846 ?9845)) ?9847) [9847, 9845, 9846] by Demod 8191 with 3145 at 1,2,3
Id : 24138, {_}: left_division (right_division ?25824 ?25825) (multiply ?25824 ?25826) =>= left_division ?25824 (multiply (multiply ?25824 ?25825) ?25826) [25826, 25825, 25824] by Demod 8192 with 1185 at 2,3
Id : 24175, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =<= left_division ?25977 (multiply (multiply ?25977 (left_inverse ?25978)) ?25979) [25979, 25978, 25977] by Super 24138 with 2882 at 1,2
Id : 24394, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (multiply (right_division ?25977 ?25978) ?25979) [25979, 25978, 25977] by Demod 24175 with 2964 at 1,2,3
Id : 24395, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (left_division (right_division ?25978 ?25977) ?25979) [25979, 25978, 25977] by Demod 24394 with 1426 at 2,3
Id : 47972, {_}: left_division ?49234 (left_division (right_division ?49235 ?49234) ?49236) =<= left_division (left_division (right_division ?49236 ?49234) ?49235) ?49234 [49236, 49235, 49234] by Demod 37605 with 24395 at 2
Id : 1255, {_}: multiply (left_inverse ?1641) (multiply ?1642 (left_inverse ?1641)) =>= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Super 70 with 1172 at 1,3
Id : 1319, {_}: left_division ?1641 (multiply ?1642 (left_inverse ?1641)) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1255 with 1172 at 2
Id : 3086, {_}: left_division ?1641 (right_division ?1642 ?1641) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1319 with 2964 at 2,2
Id : 3087, {_}: left_division ?1641 (right_division ?1642 ?1641) =>= right_division (left_division ?1641 ?1642) ?1641 [1642, 1641] by Demod 3086 with 2964 at 3
Id : 48040, {_}: left_division ?49524 (left_division (right_division (right_division ?49525 (right_division ?49526 ?49524)) ?49524) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Super 47972 with 3087 at 1,3
Id :  59, {_}: multiply (multiply ?136 ?137) ?138 =<= multiply ?137 (multiply (left_division ?137 ?136) (multiply ?137 ?138)) [138, 137, 136] by Super 56 with 4 at 1,1,2
Id : 3668, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= multiply (left_division ?4830 ?4831) (multiply ?4830 ?4832) [4832, 4831, 4830] by Super 5 with 59 at 2,2
Id : 7892, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= left_division (left_division ?4831 ?4830) (multiply ?4830 ?4832) [4832, 4831, 4830] by Demod 3668 with 3218 at 3
Id : 7900, {_}: left_inverse (left_division ?9488 (multiply (multiply ?9489 ?9488) ?9490)) =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9489, 9488] by Super 3057 with 7892 at 1,2
Id : 7969, {_}: left_division (multiply (multiply ?9489 ?9488) ?9490) ?9488 =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9488, 9489] by Demod 7900 with 3057 at 2
Id : 22647, {_}: left_division (multiply (left_inverse ?23598) ?23599) (left_division ?23600 (left_inverse ?23598)) =>= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Super 3145 with 7969 at 2
Id : 22730, {_}: left_division (left_division ?23598 ?23599) (left_division ?23600 (left_inverse ?23598)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22647 with 1172 at 1,2
Id : 22731, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22730 with 3145 at 2,2
Id : 22732, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23600, 23599, 23598] by Demod 22731 with 2964 at 1,2,1,3
Id : 22733, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23599, 23600, 23598] by Demod 22732 with 3145 at 2
Id : 22734, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22733 with 1426 at 2,1,3
Id : 22735, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =<= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22734 with 3222 at 1,2
Id : 22736, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =>= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23599, 23600, 23598] by Demod 22735 with 3222 at 1,3
Id : 22737, {_}: right_division (left_division ?23599 ?23598) (multiply ?23598 ?23600) =<= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23600, 23598, 23599] by Demod 22736 with 1395 at 2
Id : 33406, {_}: right_division (left_division ?33402 ?33403) (multiply ?33403 ?33404) =<= right_division (left_division ?33402 (right_division ?33403 ?33404)) ?33403 [33404, 33403, 33402] by Demod 22737 with 1395 at 3
Id : 33487, {_}: right_division (left_division (left_inverse ?33737) ?33738) (multiply ?33738 ?33739) =>= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Super 33406 with 1185 at 1,3
Id : 33773, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Demod 33487 with 1185 at 1,2
Id : 2967, {_}: right_division ?3957 (right_division ?3958 ?3959) =<= multiply ?3957 (right_division ?3959 ?3958) [3959, 3958, 3957] by Super 2960 with 1395 at 2,2
Id : 33774, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (right_division ?33737 (right_division ?33739 ?33738)) ?33738 [33739, 33738, 33737] by Demod 33773 with 2967 at 1,3
Id : 48410, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Demod 48040 with 33774 at 1,2,2
Id : 640, {_}: multiply (multiply ?22 (multiply ?23 ?22)) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by Demod 10 with 70 at 1,2
Id : 1260, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =<= multiply ?1655 (multiply (left_inverse ?1656) (multiply ?1655 ?1657)) [1657, 1656, 1655] by Super 640 with 1172 at 2,1,2
Id : 1315, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1260 with 1172 at 2,3
Id : 5054, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1315 with 3222 at 1,2
Id : 5055, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5054 with 3222 at 3
Id : 5056, {_}: left_division (right_division (left_division ?1655 ?1656) ?1655) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5055 with 1426 at 2
Id : 48411, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49526, 49525, 49524] by Demod 48410 with 5056 at 3
Id : 3100, {_}: multiply (multiply (left_inverse ?4103) (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Super 640 with 2964 at 2,1,2
Id : 3156, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3100 with 1172 at 1,2
Id : 3157, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3156 with 1172 at 3
Id : 3158, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3157 with 3087 at 1,2
Id : 3159, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3158 with 1172 at 2,2,3
Id : 3160, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3159 with 1426 at 2
Id : 7103, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (right_division ?4104 (left_division ?4105 ?4103)) [4105, 4104, 4103] by Demod 3160 with 3222 at 2,3
Id : 7119, {_}: left_division ?8435 (right_division ?8436 (left_division (left_inverse ?8437) ?8435)) =>= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Super 3145 with 7103 at 2
Id : 7221, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Demod 7119 with 1185 at 2,2,2
Id : 7222, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (right_division ?8437 (right_division (left_division ?8435 ?8436) ?8435)) [8437, 8436, 8435] by Demod 7221 with 2967 at 1,3
Id : 7223, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =>= right_division (right_division (left_division ?8435 ?8436) ?8435) ?8437 [8437, 8436, 8435] by Demod 7222 with 1395 at 3
Id : 21525, {_}: left_inverse (right_division (right_division (left_division ?22100 ?22101) ?22100) ?22102) =>= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22102, 22101, 22100] by Super 3057 with 7223 at 1,2
Id : 21646, {_}: right_division ?22102 (right_division (left_division ?22100 ?22101) ?22100) =<= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22101, 22100, 22102] by Demod 21525 with 1395 at 2
Id : 48412, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49525, 49526, 49524] by Demod 48411 with 21646 at 2,2
Id : 48413, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49525, 49526, 49524] by Demod 48412 with 1426 at 1,2,3
Id : 3103, {_}: left_division ?4114 (right_division ?4114 ?4115) =>= left_inverse ?4115 [4115, 4114] by Super 5 with 2964 at 2,2
Id : 48414, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =<= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49524, 49525, 49526] by Demod 48413 with 3103 at 2
Id : 48415, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48414 with 28 at 1,2,3
Id : 48416, {_}: right_division ?49526 (left_division ?49526 (multiply ?49525 ?49524)) =<= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48415 with 1395 at 2
Id : 52586, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= left_inverse (right_division ?54688 (left_division ?54688 (multiply ?54689 ?54690))) [54690, 54689, 54688] by Super 1395 with 48416 at 1,3
Id : 52816, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= right_division (left_division ?54688 (multiply ?54689 ?54690)) ?54688 [54690, 54689, 54688] by Demod 52586 with 1395 at 3
Id : 55129, {_}: right_division (left_division (left_inverse ?57654) ?57655) (right_division (left_inverse ?57654) ?57656) =>= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Super 2882 with 52816 at 2
Id : 55322, {_}: right_division (multiply ?57654 ?57655) (right_division (left_inverse ?57654) ?57656) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55129 with 1185 at 1,2
Id : 55323, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55322 with 2950 at 2,2
Id : 55324, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55323 with 3218 at 3
Id : 55325, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55324 with 2882 at 2
Id : 55326, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_inverse (multiply ?57654 (multiply ?57655 ?57656))) ?57654 [57656, 57655, 57654] by Demod 55325 with 3145 at 1,3
Id : 55327, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= multiply (multiply ?57654 (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55326 with 1185 at 3
Id : 55328, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =>= multiply ?57654 (multiply (multiply ?57655 ?57656) ?57654) [57656, 57655, 57654] by Demod 55327 with 70 at 3
Id : 57081, {_}: multiply a (multiply (multiply b c) a) =?= multiply a (multiply (multiply b c) a) [] by Demod 57080 with 55328 at 3
Id : 57080, {_}: multiply a (multiply (multiply b c) a) =<= multiply (multiply a b) (multiply c a) [] by Demod 1 with 70 at 2
Id :   1, {_}: multiply (multiply a (multiply b c)) a =>= multiply (multiply a b) (multiply c a) [] by prove_moufang1
% SZS output end CNFRefutation for GRP202-1.p
22883: solved GRP202-1.p in 14.88493 using kbo
22883: status Unsatisfiable for GRP202-1.p
NO CLASH, using fixed ground order
22932: Facts:
22932:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
22932: Goal:
22932:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
22932: Order:
22932:   nrkbo
22932: Leaf order:
22932:  b2 2 0 2 1,1,1,2
22932:  a2 2 0 2 2,2
22932:  inverse 6 1 1 0,1,1,2
22932:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
22933: Facts:
22933:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
22933: Goal:
22933:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
22933: Order:
22933:   kbo
22933: Leaf order:
22933:  b2 2 0 2 1,1,1,2
22933:  a2 2 0 2 2,2
22933:  inverse 6 1 1 0,1,1,2
22933:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
22934: Facts:
22934:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
22934: Goal:
22934:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
22934: Order:
22934:   lpo
22934: Leaf order:
22934:  b2 2 0 2 1,1,1,2
22934:  a2 2 0 2 2,2
22934:  inverse 6 1 1 0,1,1,2
22934:  multiply 8 2 2 0,2
% SZS status Timeout for GRP404-1.p
NO CLASH, using fixed ground order
23295: Facts:
23295:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23295: Goal:
23295:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23295: Order:
23295:   nrkbo
23295: Leaf order:
23295:  a3 2 0 2 1,1,2
23295:  b3 2 0 2 2,1,2
23295:  c3 2 0 2 2,2
23295:  inverse 5 1 0 
23295:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23296: Facts:
23296:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23296: Goal:
23296:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23296: Order:
23296:   kbo
23296: Leaf order:
23296:  a3 2 0 2 1,1,2
23296:  b3 2 0 2 2,1,2
23296:  c3 2 0 2 2,2
23296:  inverse 5 1 0 
23296:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23297: Facts:
23297:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply (inverse (multiply (inverse (multiply ?2 ?3)) ?4))
                (inverse (multiply ?3 (multiply (inverse ?3) ?3)))))
          =>=
          ?4
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23297: Goal:
23297:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23297: Order:
23297:   lpo
23297: Leaf order:
23297:  a3 2 0 2 1,1,2
23297:  b3 2 0 2 2,1,2
23297:  c3 2 0 2 2,2
23297:  inverse 5 1 0 
23297:  multiply 10 2 4 0,2
% SZS status Timeout for GRP405-1.p
NO CLASH, using fixed ground order
23512: Facts:
NO CLASH, using fixed ground order
23513: Facts:
23513:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23513: Goal:
23513:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23513: Order:
23513:   kbo
23513: Leaf order:
23513:  b2 2 0 2 1,1,1,2
23513:  a2 2 0 2 2,2
23513:  inverse 6 1 1 0,1,1,2
23513:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
23514: Facts:
23514:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23514: Goal:
23514:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23514: Order:
23514:   lpo
23514: Leaf order:
23514:  b2 2 0 2 1,1,1,2
23514:  a2 2 0 2 2,2
23514:  inverse 6 1 1 0,1,1,2
23514:  multiply 8 2 2 0,2
23512:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23512: Goal:
23512:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23512: Order:
23512:   nrkbo
23512: Leaf order:
23512:  b2 2 0 2 1,1,1,2
23512:  a2 2 0 2 2,2
23512:  inverse 6 1 1 0,1,1,2
23512:  multiply 8 2 2 0,2
Statistics :
Max weight : 71
Found proof, 51.580663s
% SZS status Unsatisfiable for GRP410-1.p
% SZS output start CNFRefutation for GRP410-1.p
Id :   3, {_}: multiply (multiply (inverse (multiply ?6 (inverse (multiply ?7 ?8)))) (multiply ?6 (inverse ?8))) (inverse (multiply (inverse ?8) ?8)) =>= ?7 [8, 7, 6] by single_axiom ?6 ?7 ?8
Id :   2, {_}: multiply (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4)))) (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4)) =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   5, {_}: multiply (multiply (inverse (multiply ?15 (inverse ?16))) (multiply ?15 (inverse (inverse (multiply (inverse ?17) ?17))))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =?= multiply (inverse (multiply ?18 (inverse (multiply ?16 ?17)))) (multiply ?18 (inverse ?17)) [18, 17, 16, 15] by Super 3 with 2 at 1,2,1,1,1,2
Id : 104, {_}: multiply (inverse (multiply ?498 (inverse (multiply (multiply ?499 (inverse (multiply (inverse ?500) ?500))) ?500)))) (multiply ?498 (inverse ?500)) =>= ?499 [500, 499, 498] by Super 2 with 5 at 2
Id : 161, {_}: multiply (multiply (inverse (multiply ?829 (inverse ?830))) (multiply ?829 (inverse (multiply ?831 (inverse ?832))))) (inverse (multiply (inverse (multiply ?831 (inverse ?832))) (multiply ?831 (inverse ?832)))) =>= inverse (multiply ?831 (inverse (multiply (multiply ?830 (inverse (multiply (inverse ?832) ?832))) ?832))) [832, 831, 830, 829] by Super 2 with 104 at 1,2,1,1,1,2
Id : 218, {_}: multiply (inverse (multiply ?1090 (inverse (multiply (inverse (multiply ?1091 (inverse (multiply (multiply ?1092 (inverse (multiply (inverse ?1093) ?1093))) ?1093)))) (multiply ?1091 (inverse ?1093)))))) (multiply ?1090 (inverse (multiply ?1091 (inverse ?1093)))) =?= multiply (inverse (multiply ?1094 (inverse ?1092))) (multiply ?1094 (inverse (multiply ?1091 (inverse ?1093)))) [1094, 1093, 1092, 1091, 1090] by Super 104 with 161 at 1,1,2,1,1,2
Id : 846, {_}: multiply (inverse (multiply ?3342 (inverse ?3343))) (multiply ?3342 (inverse (multiply ?3344 (inverse ?3345)))) =?= multiply (inverse (multiply ?3346 (inverse ?3343))) (multiply ?3346 (inverse (multiply ?3344 (inverse ?3345)))) [3346, 3345, 3344, 3343, 3342] by Demod 218 with 104 at 1,2,1,1,2
Id : 210, {_}: inverse (multiply ?1043 (inverse (multiply (multiply (multiply ?1044 (multiply ?1043 (inverse ?1045))) (inverse (multiply (inverse ?1045) ?1045))) ?1045))) =>= ?1044 [1045, 1044, 1043] by Super 2 with 161 at 2
Id : 856, {_}: multiply (inverse (multiply ?3416 (inverse ?3417))) (multiply ?3416 (inverse (multiply ?3418 (inverse (multiply (multiply (multiply ?3419 (multiply ?3418 (inverse ?3420))) (inverse (multiply (inverse ?3420) ?3420))) ?3420))))) =?= multiply (inverse (multiply ?3421 (inverse ?3417))) (multiply ?3421 ?3419) [3421, 3420, 3419, 3418, 3417, 3416] by Super 846 with 210 at 2,2,3
Id : 1213, {_}: multiply (inverse (multiply ?5198 (inverse ?5199))) (multiply ?5198 ?5200) =?= multiply (inverse (multiply ?5201 (inverse ?5199))) (multiply ?5201 ?5200) [5201, 5200, 5199, 5198] by Demod 856 with 210 at 2,2,2
Id : 1228, {_}: multiply (inverse (multiply ?5296 (inverse (multiply ?5297 (inverse (multiply (multiply (multiply ?5298 (multiply ?5297 (inverse ?5299))) (inverse (multiply (inverse ?5299) ?5299))) ?5299)))))) (multiply ?5296 ?5300) =?= multiply (inverse (multiply ?5301 ?5298)) (multiply ?5301 ?5300) [5301, 5300, 5299, 5298, 5297, 5296] by Super 1213 with 210 at 2,1,1,3
Id : 1288, {_}: multiply (inverse (multiply ?5296 ?5298)) (multiply ?5296 ?5300) =?= multiply (inverse (multiply ?5301 ?5298)) (multiply ?5301 ?5300) [5301, 5300, 5298, 5296] by Demod 1228 with 210 at 2,1,1,2
Id : 1314, {_}: multiply (inverse (multiply ?5709 (inverse (multiply (multiply ?5710 (inverse (multiply (inverse (multiply ?5711 ?5712)) (multiply ?5711 ?5712)))) (multiply ?5713 ?5712))))) (multiply ?5709 (inverse (multiply ?5713 ?5712))) =>= ?5710 [5713, 5712, 5711, 5710, 5709] by Super 104 with 1288 at 1,2,1,1,2,1,1,2
Id : 2743, {_}: multiply ?12126 (inverse (multiply (inverse (multiply ?12127 ?12128)) (multiply ?12127 ?12128))) =?= multiply ?12126 (inverse (multiply (inverse (multiply ?12129 ?12128)) (multiply ?12129 ?12128))) [12129, 12128, 12127, 12126] by Super 2 with 1314 at 1,2
Id :   6, {_}: multiply (multiply (inverse ?20) (multiply (multiply (inverse (multiply ?21 (inverse (multiply ?20 ?22)))) (multiply ?21 (inverse ?22))) (inverse ?22))) (inverse (multiply (inverse ?22) ?22)) =>= inverse ?22 [22, 21, 20] by Super 3 with 2 at 1,1,1,2
Id : 2747, {_}: multiply ?12151 (inverse (multiply (inverse (multiply ?12152 (inverse (multiply (inverse ?12153) ?12153)))) (multiply ?12152 (inverse (multiply (inverse ?12153) ?12153))))) =?= multiply ?12151 (inverse (multiply (inverse (multiply (multiply (inverse ?12154) (multiply (multiply (inverse (multiply ?12155 (inverse (multiply ?12154 ?12153)))) (multiply ?12155 (inverse ?12153))) (inverse ?12153))) (inverse (multiply (inverse ?12153) ?12153)))) (inverse ?12153))) [12155, 12154, 12153, 12152, 12151] by Super 2743 with 6 at 2,1,2,3
Id : 3023, {_}: multiply ?13436 (inverse (multiply (inverse (multiply ?13437 (inverse (multiply (inverse ?13438) ?13438)))) (multiply ?13437 (inverse (multiply (inverse ?13438) ?13438))))) =>= multiply ?13436 (inverse (multiply (inverse (inverse ?13438)) (inverse ?13438))) [13438, 13437, 13436] by Demod 2747 with 6 at 1,1,1,2,3
Id : 3033, {_}: multiply ?13495 (inverse (multiply (inverse (multiply (multiply (inverse (multiply ?13496 (inverse (multiply ?13497 ?13498)))) (multiply ?13496 (inverse ?13498))) (inverse (multiply (inverse ?13498) ?13498)))) ?13497)) =>= multiply ?13495 (inverse (multiply (inverse (inverse ?13498)) (inverse ?13498))) [13498, 13497, 13496, 13495] by Super 3023 with 2 at 2,1,2,2
Id : 3493, {_}: multiply ?14948 (inverse (multiply (inverse ?14949) ?14949)) =?= multiply ?14948 (inverse (multiply (inverse (inverse ?14950)) (inverse ?14950))) [14950, 14949, 14948] by Demod 3033 with 2 at 1,1,1,2,2
Id : 3250, {_}: multiply ?13495 (inverse (multiply (inverse ?13497) ?13497)) =?= multiply ?13495 (inverse (multiply (inverse (inverse ?13498)) (inverse ?13498))) [13498, 13497, 13495] by Demod 3033 with 2 at 1,1,1,2,2
Id : 3510, {_}: multiply ?15042 (inverse (multiply (inverse ?15043) ?15043)) =?= multiply ?15042 (inverse (multiply (inverse ?15044) ?15044)) [15044, 15043, 15042] by Super 3493 with 3250 at 3
Id : 3957, {_}: multiply (inverse (multiply ?16893 (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) ?16896)))) (multiply ?16893 (inverse ?16896)) =>= ?16894 [16896, 16895, 16894, 16893] by Super 104 with 3510 at 1,1,2,1,1,2
Id : 4003, {_}: multiply (multiply (inverse (multiply ?17133 (inverse (multiply ?17134 ?17135)))) (multiply ?17133 (inverse ?17135))) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134, 17133] by Super 2 with 3510 at 2
Id : 4810, {_}: multiply (multiply (inverse ?21607) ?21607) (inverse (multiply (inverse (multiply (inverse ?21608) ?21608)) (multiply (inverse ?21608) ?21608))) =>= inverse (multiply (inverse ?21608) ?21608) [21608, 21607] by Super 6 with 4003 at 2,1,2
Id : 1364, {_}: multiply (multiply (inverse (multiply ?5995 (inverse ?5996))) (multiply ?5995 (inverse (multiply ?5997 (inverse ?5998))))) (inverse (multiply (inverse (multiply ?5999 (inverse ?5998))) (multiply ?5999 (inverse ?5998)))) =>= inverse (multiply ?5997 (inverse (multiply (multiply ?5996 (inverse (multiply (inverse ?5998) ?5998))) ?5998))) [5999, 5998, 5997, 5996, 5995] by Super 161 with 1288 at 1,2,2
Id : 4844, {_}: inverse (multiply ?21768 (inverse (multiply (multiply (multiply ?21768 (inverse ?21769)) (inverse (multiply (inverse ?21769) ?21769))) ?21769))) =>= inverse (multiply (inverse (inverse ?21769)) (inverse ?21769)) [21769, 21768] by Super 4810 with 1364 at 2
Id : 21277, {_}: multiply (inverse (multiply (inverse (inverse ?53833)) (inverse ?53833))) (multiply ?53834 (inverse ?53833)) =>= multiply ?53834 (inverse ?53833) [53834, 53833] by Super 3957 with 4844 at 1,2
Id : 21278, {_}: multiply (inverse (multiply (inverse (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838))))) (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))))) (multiply ?53839 ?53837) =>= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53839, 53838, 53837, 53836] by Super 21277 with 210 at 2,2,2
Id : 21547, {_}: multiply (inverse (multiply (inverse ?53837) (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))))) (multiply ?53839 ?53837) =>= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53839, 53838, 53836, 53837] by Demod 21278 with 210 at 1,1,1,1,2
Id : 21548, {_}: multiply (inverse (multiply (inverse ?53837) ?53837)) (multiply ?53839 ?53837) =?= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53838, 53836, 53839, 53837] by Demod 21547 with 210 at 2,1,1,2
Id : 21549, {_}: multiply (inverse (multiply (inverse ?53837) ?53837)) (multiply ?53839 ?53837) =>= multiply ?53839 ?53837 [53839, 53837] by Demod 21548 with 210 at 2,3
Id : 22063, {_}: multiply (inverse (multiply ?55325 ?55326)) (multiply ?55325 ?55326) =>= multiply (inverse ?55326) ?55326 [55326, 55325] by Super 1288 with 21549 at 3
Id : 22073, {_}: multiply (inverse (multiply (inverse (multiply ?55370 (inverse (multiply (multiply ?55371 (inverse (multiply (inverse ?55372) ?55372))) ?55373)))) (multiply ?55370 (inverse ?55373)))) ?55371 =>= multiply (inverse (multiply ?55370 (inverse ?55373))) (multiply ?55370 (inverse ?55373)) [55373, 55372, 55371, 55370] by Super 22063 with 3957 at 2,2
Id : 22230, {_}: multiply (inverse ?55371) ?55371 =?= multiply (inverse (multiply ?55370 (inverse ?55373))) (multiply ?55370 (inverse ?55373)) [55373, 55370, 55371] by Demod 22073 with 3957 at 1,1,2
Id : 21784, {_}: multiply (inverse (multiply ?54500 ?54501)) (multiply ?54500 ?54501) =>= multiply (inverse ?54501) ?54501 [54501, 54500] by Super 1288 with 21549 at 3
Id : 22543, {_}: multiply (inverse ?56820) ?56820 =?= multiply (inverse (inverse ?56821)) (inverse ?56821) [56821, 56820] by Demod 22230 with 21784 at 3
Id : 22231, {_}: multiply (inverse ?55371) ?55371 =?= multiply (inverse (inverse ?55373)) (inverse ?55373) [55373, 55371] by Demod 22230 with 21784 at 3
Id : 22585, {_}: multiply (inverse ?57023) ?57023 =?= multiply (inverse ?57024) ?57024 [57024, 57023] by Super 22543 with 22231 at 3
Id : 22724, {_}: multiply (inverse (multiply (inverse ?57285) ?57285)) (multiply ?57286 ?57287) =>= multiply ?57286 ?57287 [57287, 57286, 57285] by Super 21549 with 22585 at 1,1,2
Id : 23108, {_}: multiply (inverse (multiply ?58913 ?58914)) (multiply ?58913 ?58915) =>= multiply (inverse ?58914) ?58915 [58915, 58914, 58913] by Super 1288 with 22724 at 3
Id : 23378, {_}: multiply (multiply (inverse (inverse (multiply ?17134 ?17135))) (inverse ?17135)) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134] by Demod 4003 with 23108 at 1,2
Id : 1370, {_}: inverse (multiply ?6029 (inverse (multiply (multiply (multiply (inverse (multiply ?6030 ?6031)) (multiply ?6030 (inverse ?6032))) (inverse (multiply (inverse ?6032) ?6032))) ?6032))) =>= inverse (multiply ?6029 ?6031) [6032, 6031, 6030, 6029] by Super 210 with 1288 at 1,1,1,2,1,2
Id : 4845, {_}: multiply (multiply (inverse ?21771) ?21771) (inverse (multiply (inverse ?21772) ?21772)) =?= inverse (multiply (inverse ?21773) ?21773) [21773, 21772, 21771] by Super 4810 with 3510 at 2
Id : 7295, {_}: inverse (multiply ?28092 (inverse (multiply (inverse (multiply (inverse ?28093) ?28093)) ?28094))) =>= inverse (multiply ?28092 (inverse ?28094)) [28094, 28093, 28092] by Super 1370 with 4845 at 1,1,2,1,2
Id : 22930, {_}: inverse (multiply (inverse ?58245) ?58245) =?= inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?58246) ?58246)) ?58247))) (inverse ?58247)) [58247, 58246, 58245] by Super 7295 with 22585 at 1,2
Id :   8, {_}: multiply (multiply (inverse (multiply (multiply (inverse ?26) (multiply (multiply (inverse (multiply ?27 (inverse (multiply ?26 ?28)))) (multiply ?27 (inverse ?28))) (inverse ?28))) (inverse (multiply ?29 (multiply (inverse ?28) ?28))))) (inverse ?28)) (inverse (multiply (inverse (multiply (inverse ?28) ?28)) (multiply (inverse ?28) ?28))) =>= ?29 [29, 28, 27, 26] by Super 2 with 6 at 2,1,2
Id : 7694, {_}: inverse (multiply ?30248 (inverse (multiply (inverse (multiply (inverse ?30249) ?30249)) ?30250))) =>= inverse (multiply ?30248 (inverse ?30250)) [30250, 30249, 30248] by Super 1370 with 4845 at 1,1,2,1,2
Id : 9751, {_}: inverse (multiply ?34833 (inverse (multiply (inverse (multiply ?34834 ?34835)) (multiply ?34834 ?34836)))) =>= inverse (multiply ?34833 (inverse (multiply (inverse ?34835) ?34836))) [34836, 34835, 34834, 34833] by Super 7694 with 1288 at 1,2,1,2
Id : 9799, {_}: inverse (multiply ?35157 (inverse (multiply (inverse (multiply ?35158 (inverse ?35159))) (multiply ?35158 ?35160)))) =?= inverse (multiply ?35157 (inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?35161) ?35161)) ?35159))) ?35160))) [35161, 35160, 35159, 35158, 35157] by Super 9751 with 7295 at 1,1,2,1,2
Id : 7715, {_}: inverse (multiply ?30362 (inverse (multiply (inverse (multiply ?30363 ?30364)) (multiply ?30363 ?30365)))) =>= inverse (multiply ?30362 (inverse (multiply (inverse ?30364) ?30365))) [30365, 30364, 30363, 30362] by Super 7694 with 1288 at 1,2,1,2
Id : 10327, {_}: inverse (multiply ?35157 (inverse (multiply (inverse (inverse ?35159)) ?35160))) =<= inverse (multiply ?35157 (inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?35161) ?35161)) ?35159))) ?35160))) [35161, 35160, 35159, 35157] by Demod 9799 with 7715 at 2
Id : 14061, {_}: multiply (multiply (inverse (multiply (multiply (inverse ?43109) (multiply (multiply (inverse (multiply ?43110 (inverse (multiply ?43109 ?43111)))) (multiply ?43110 (inverse ?43111))) (inverse ?43111))) (inverse (multiply (inverse (inverse ?43112)) (multiply (inverse ?43111) ?43111))))) (inverse ?43111)) (inverse (multiply (inverse (multiply (inverse ?43111) ?43111)) (multiply (inverse ?43111) ?43111))) =?= inverse (inverse (multiply (inverse (multiply (inverse ?43113) ?43113)) ?43112)) [43113, 43112, 43111, 43110, 43109] by Super 8 with 10327 at 1,1,2
Id : 14495, {_}: inverse (inverse ?43112) =<= inverse (inverse (multiply (inverse (multiply (inverse ?43113) ?43113)) ?43112)) [43113, 43112] by Demod 14061 with 8 at 2
Id : 23770, {_}: inverse (multiply (inverse ?60796) ?60796) =?= inverse (multiply (inverse (inverse ?60797)) (inverse ?60797)) [60797, 60796] by Demod 22930 with 14495 at 1,1,3
Id : 23801, {_}: inverse (multiply (inverse ?60931) ?60931) =?= inverse (multiply (inverse ?60932) ?60932) [60932, 60931] by Super 23770 with 22585 at 1,3
Id : 25761, {_}: multiply (multiply (inverse (inverse (multiply (inverse ?63084) ?63084))) (inverse ?63085)) (inverse (multiply (inverse ?63086) ?63086)) =>= inverse ?63085 [63086, 63085, 63084] by Super 23378 with 23801 at 1,1,1,2
Id : 27867, {_}: multiply (inverse (multiply (inverse ?66211) ?66211)) (inverse ?66212) =?= multiply (multiply (inverse (inverse (multiply (inverse ?66213) ?66213))) (inverse ?66212)) (inverse (multiply (inverse ?66214) ?66214)) [66214, 66213, 66212, 66211] by Super 22724 with 25761 at 2,2
Id : 28152, {_}: multiply (inverse (multiply (inverse ?66849) ?66849)) (inverse ?66850) =>= inverse ?66850 [66850, 66849] by Demod 27867 with 25761 at 3
Id : 28153, {_}: multiply (inverse (multiply (inverse ?66852) ?66852)) ?66853 =?= inverse (multiply ?66854 (inverse (multiply (multiply (multiply ?66853 (multiply ?66854 (inverse ?66855))) (inverse (multiply (inverse ?66855) ?66855))) ?66855))) [66855, 66854, 66853, 66852] by Super 28152 with 210 at 2,2
Id : 28218, {_}: multiply (inverse (multiply (inverse ?66852) ?66852)) ?66853 =>= ?66853 [66853, 66852] by Demod 28153 with 210 at 3
Id : 23366, {_}: multiply (inverse (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) ?16896))) (inverse ?16896) =>= ?16894 [16896, 16895, 16894] by Demod 3957 with 23108 at 2
Id : 28331, {_}: multiply (inverse (inverse (multiply (inverse (multiply (inverse ?67206) ?67206)) ?67207))) (inverse ?67207) =?= inverse (multiply (inverse ?67208) ?67208) [67208, 67207, 67206] by Super 23366 with 28218 at 1,1,1,1,2
Id : 28438, {_}: multiply (inverse (inverse ?67207)) (inverse ?67207) =?= inverse (multiply (inverse ?67208) ?67208) [67208, 67207] by Demod 28331 with 28218 at 1,1,1,2
Id : 28698, {_}: multiply (inverse (inverse (multiply (inverse ?68177) ?68177))) ?68178 =>= ?68178 [68178, 68177] by Super 28218 with 28438 at 1,1,2
Id : 23375, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =?= multiply (inverse (multiply ?18 (inverse (multiply ?16 ?17)))) (multiply ?18 (inverse ?17)) [18, 17, 16] by Demod 5 with 23108 at 1,2
Id : 23376, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =>= multiply (inverse (inverse (multiply ?16 ?17))) (inverse ?17) [17, 16] by Demod 23375 with 23108 at 3
Id : 23410, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642))))) (inverse (multiply (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642)))) (inverse (multiply (inverse ?59642) ?59642)))) =>= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59642, 59641, 59640] by Super 23376 with 23108 at 1,2,1,2,2
Id : 23543, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse ?59642) ?59642)))) (inverse (multiply (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642)))) (inverse (multiply (inverse ?59642) ?59642)))) =>= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23410 with 23108 at 1,1,2,1,2
Id : 23544, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse ?59642) ?59642)))) (inverse (multiply (inverse (inverse (multiply (inverse ?59642) ?59642))) (inverse (multiply (inverse ?59642) ?59642)))) =?= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23543 with 23108 at 1,1,1,1,2,2
Id : 23545, {_}: multiply (inverse (inverse (multiply ?59640 ?59642))) (inverse ?59642) =<= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23544 with 23376 at 2
Id : 26221, {_}: multiply (inverse (inverse (multiply ?63681 (multiply (inverse ?63682) ?63682)))) (inverse (multiply (inverse ?63683) ?63683)) =>= multiply (inverse (inverse (multiply ?63681 ?63682))) (inverse ?63682) [63683, 63682, 63681] by Super 3510 with 23545 at 3
Id : 29246, {_}: multiply (inverse ?63085) (inverse (multiply (inverse ?63086) ?63086)) =>= inverse ?63085 [63086, 63085] by Demod 25761 with 28698 at 1,2
Id : 29249, {_}: inverse (inverse (multiply ?63681 (multiply (inverse ?63682) ?63682))) =<= multiply (inverse (inverse (multiply ?63681 ?63682))) (inverse ?63682) [63682, 63681] by Demod 26221 with 29246 at 2
Id : 29250, {_}: multiply (inverse (inverse (multiply ?17134 (multiply (inverse ?17135) ?17135)))) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134] by Demod 23378 with 29249 at 1,2
Id : 29258, {_}: inverse (inverse (multiply ?17134 (multiply (inverse ?17135) ?17135))) =>= ?17134 [17135, 17134] by Demod 29250 with 29246 at 2
Id : 29298, {_}: inverse (inverse (multiply ?68838 (inverse (multiply (inverse ?68839) ?68839)))) =>= ?68838 [68839, 68838] by Super 29258 with 28698 at 2,1,1,2
Id : 29251, {_}: inverse (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) (multiply (inverse ?16896) ?16896))) =>= ?16894 [16896, 16895, 16894] by Demod 23366 with 29249 at 2
Id : 29259, {_}: multiply ?16894 (inverse (multiply (inverse ?16895) ?16895)) =>= ?16894 [16895, 16894] by Demod 29251 with 29258 at 2
Id : 29399, {_}: inverse (inverse ?68838) =>= ?68838 [68838] by Demod 29298 with 29259 at 1,1,2
Id : 32788, {_}: multiply (multiply (inverse ?68177) ?68177) ?68178 =>= ?68178 [68178, 68177] by Demod 28698 with 29399 at 1,2
Id : 32852, {_}: a2 === a2 [] by Demod 1 with 32788 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP410-1.p
23512: solved GRP410-1.p in 25.797611 using nrkbo
23512: status Unsatisfiable for GRP410-1.p
NO CLASH, using fixed ground order
23552: Facts:
23552:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23552: Goal:
23552:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23552: Order:
23552:   nrkbo
23552: Leaf order:
23552:  a3 2 0 2 1,1,2
23552:  b3 2 0 2 2,1,2
23552:  c3 2 0 2 2,2
23552:  inverse 5 1 0 
23552:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23553: Facts:
23553:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23553: Goal:
23553:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23553: Order:
23553:   kbo
23553: Leaf order:
23553:  a3 2 0 2 1,1,2
23553:  b3 2 0 2 2,1,2
23553:  c3 2 0 2 2,2
23553:  inverse 5 1 0 
23553:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23554: Facts:
23554:  Id :   2, {_}:
          multiply
            (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4))))
              (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23554: Goal:
23554:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23554: Order:
23554:   lpo
23554: Leaf order:
23554:  a3 2 0 2 1,1,2
23554:  b3 2 0 2 2,1,2
23554:  c3 2 0 2 2,2
23554:  inverse 5 1 0 
23554:  multiply 10 2 4 0,2
Statistics :
Max weight : 83
Found proof, 26.764346s
% SZS status Unsatisfiable for GRP411-1.p
% SZS output start CNFRefutation for GRP411-1.p
Id :   3, {_}: multiply (multiply (inverse (multiply ?6 (inverse (multiply ?7 ?8)))) (multiply ?6 (inverse ?8))) (inverse (multiply (inverse ?8) ?8)) =>= ?7 [8, 7, 6] by single_axiom ?6 ?7 ?8
Id :   2, {_}: multiply (multiply (inverse (multiply ?2 (inverse (multiply ?3 ?4)))) (multiply ?2 (inverse ?4))) (inverse (multiply (inverse ?4) ?4)) =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   5, {_}: multiply (multiply (inverse (multiply ?15 (inverse ?16))) (multiply ?15 (inverse (inverse (multiply (inverse ?17) ?17))))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =?= multiply (inverse (multiply ?18 (inverse (multiply ?16 ?17)))) (multiply ?18 (inverse ?17)) [18, 17, 16, 15] by Super 3 with 2 at 1,2,1,1,1,2
Id : 104, {_}: multiply (inverse (multiply ?498 (inverse (multiply (multiply ?499 (inverse (multiply (inverse ?500) ?500))) ?500)))) (multiply ?498 (inverse ?500)) =>= ?499 [500, 499, 498] by Super 2 with 5 at 2
Id : 161, {_}: multiply (multiply (inverse (multiply ?829 (inverse ?830))) (multiply ?829 (inverse (multiply ?831 (inverse ?832))))) (inverse (multiply (inverse (multiply ?831 (inverse ?832))) (multiply ?831 (inverse ?832)))) =>= inverse (multiply ?831 (inverse (multiply (multiply ?830 (inverse (multiply (inverse ?832) ?832))) ?832))) [832, 831, 830, 829] by Super 2 with 104 at 1,2,1,1,1,2
Id : 218, {_}: multiply (inverse (multiply ?1090 (inverse (multiply (inverse (multiply ?1091 (inverse (multiply (multiply ?1092 (inverse (multiply (inverse ?1093) ?1093))) ?1093)))) (multiply ?1091 (inverse ?1093)))))) (multiply ?1090 (inverse (multiply ?1091 (inverse ?1093)))) =?= multiply (inverse (multiply ?1094 (inverse ?1092))) (multiply ?1094 (inverse (multiply ?1091 (inverse ?1093)))) [1094, 1093, 1092, 1091, 1090] by Super 104 with 161 at 1,1,2,1,1,2
Id : 846, {_}: multiply (inverse (multiply ?3342 (inverse ?3343))) (multiply ?3342 (inverse (multiply ?3344 (inverse ?3345)))) =?= multiply (inverse (multiply ?3346 (inverse ?3343))) (multiply ?3346 (inverse (multiply ?3344 (inverse ?3345)))) [3346, 3345, 3344, 3343, 3342] by Demod 218 with 104 at 1,2,1,1,2
Id : 210, {_}: inverse (multiply ?1043 (inverse (multiply (multiply (multiply ?1044 (multiply ?1043 (inverse ?1045))) (inverse (multiply (inverse ?1045) ?1045))) ?1045))) =>= ?1044 [1045, 1044, 1043] by Super 2 with 161 at 2
Id : 856, {_}: multiply (inverse (multiply ?3416 (inverse ?3417))) (multiply ?3416 (inverse (multiply ?3418 (inverse (multiply (multiply (multiply ?3419 (multiply ?3418 (inverse ?3420))) (inverse (multiply (inverse ?3420) ?3420))) ?3420))))) =?= multiply (inverse (multiply ?3421 (inverse ?3417))) (multiply ?3421 ?3419) [3421, 3420, 3419, 3418, 3417, 3416] by Super 846 with 210 at 2,2,3
Id : 1213, {_}: multiply (inverse (multiply ?5198 (inverse ?5199))) (multiply ?5198 ?5200) =?= multiply (inverse (multiply ?5201 (inverse ?5199))) (multiply ?5201 ?5200) [5201, 5200, 5199, 5198] by Demod 856 with 210 at 2,2,2
Id : 1238, {_}: multiply (inverse (multiply ?5362 (inverse (multiply (multiply (multiply ?5363 (multiply ?5364 (inverse ?5365))) (inverse (multiply (inverse ?5365) ?5365))) ?5365)))) (multiply ?5362 ?5366) =>= multiply ?5363 (multiply ?5364 ?5366) [5366, 5365, 5364, 5363, 5362] by Super 1213 with 210 at 1,3
Id : 1228, {_}: multiply (inverse (multiply ?5296 (inverse (multiply ?5297 (inverse (multiply (multiply (multiply ?5298 (multiply ?5297 (inverse ?5299))) (inverse (multiply (inverse ?5299) ?5299))) ?5299)))))) (multiply ?5296 ?5300) =?= multiply (inverse (multiply ?5301 ?5298)) (multiply ?5301 ?5300) [5301, 5300, 5299, 5298, 5297, 5296] by Super 1213 with 210 at 2,1,1,3
Id : 1288, {_}: multiply (inverse (multiply ?5296 ?5298)) (multiply ?5296 ?5300) =?= multiply (inverse (multiply ?5301 ?5298)) (multiply ?5301 ?5300) [5301, 5300, 5298, 5296] by Demod 1228 with 210 at 2,1,1,2
Id : 1314, {_}: multiply (inverse (multiply ?5709 (inverse (multiply (multiply ?5710 (inverse (multiply (inverse (multiply ?5711 ?5712)) (multiply ?5711 ?5712)))) (multiply ?5713 ?5712))))) (multiply ?5709 (inverse (multiply ?5713 ?5712))) =>= ?5710 [5713, 5712, 5711, 5710, 5709] by Super 104 with 1288 at 1,2,1,1,2,1,1,2
Id : 2743, {_}: multiply ?12126 (inverse (multiply (inverse (multiply ?12127 ?12128)) (multiply ?12127 ?12128))) =?= multiply ?12126 (inverse (multiply (inverse (multiply ?12129 ?12128)) (multiply ?12129 ?12128))) [12129, 12128, 12127, 12126] by Super 2 with 1314 at 1,2
Id :   6, {_}: multiply (multiply (inverse ?20) (multiply (multiply (inverse (multiply ?21 (inverse (multiply ?20 ?22)))) (multiply ?21 (inverse ?22))) (inverse ?22))) (inverse (multiply (inverse ?22) ?22)) =>= inverse ?22 [22, 21, 20] by Super 3 with 2 at 1,1,1,2
Id : 2747, {_}: multiply ?12151 (inverse (multiply (inverse (multiply ?12152 (inverse (multiply (inverse ?12153) ?12153)))) (multiply ?12152 (inverse (multiply (inverse ?12153) ?12153))))) =?= multiply ?12151 (inverse (multiply (inverse (multiply (multiply (inverse ?12154) (multiply (multiply (inverse (multiply ?12155 (inverse (multiply ?12154 ?12153)))) (multiply ?12155 (inverse ?12153))) (inverse ?12153))) (inverse (multiply (inverse ?12153) ?12153)))) (inverse ?12153))) [12155, 12154, 12153, 12152, 12151] by Super 2743 with 6 at 2,1,2,3
Id : 3023, {_}: multiply ?13436 (inverse (multiply (inverse (multiply ?13437 (inverse (multiply (inverse ?13438) ?13438)))) (multiply ?13437 (inverse (multiply (inverse ?13438) ?13438))))) =>= multiply ?13436 (inverse (multiply (inverse (inverse ?13438)) (inverse ?13438))) [13438, 13437, 13436] by Demod 2747 with 6 at 1,1,1,2,3
Id : 3033, {_}: multiply ?13495 (inverse (multiply (inverse (multiply (multiply (inverse (multiply ?13496 (inverse (multiply ?13497 ?13498)))) (multiply ?13496 (inverse ?13498))) (inverse (multiply (inverse ?13498) ?13498)))) ?13497)) =>= multiply ?13495 (inverse (multiply (inverse (inverse ?13498)) (inverse ?13498))) [13498, 13497, 13496, 13495] by Super 3023 with 2 at 2,1,2,2
Id : 3493, {_}: multiply ?14948 (inverse (multiply (inverse ?14949) ?14949)) =?= multiply ?14948 (inverse (multiply (inverse (inverse ?14950)) (inverse ?14950))) [14950, 14949, 14948] by Demod 3033 with 2 at 1,1,1,2,2
Id : 3250, {_}: multiply ?13495 (inverse (multiply (inverse ?13497) ?13497)) =?= multiply ?13495 (inverse (multiply (inverse (inverse ?13498)) (inverse ?13498))) [13498, 13497, 13495] by Demod 3033 with 2 at 1,1,1,2,2
Id : 3510, {_}: multiply ?15042 (inverse (multiply (inverse ?15043) ?15043)) =?= multiply ?15042 (inverse (multiply (inverse ?15044) ?15044)) [15044, 15043, 15042] by Super 3493 with 3250 at 3
Id : 3957, {_}: multiply (inverse (multiply ?16893 (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) ?16896)))) (multiply ?16893 (inverse ?16896)) =>= ?16894 [16896, 16895, 16894, 16893] by Super 104 with 3510 at 1,1,2,1,1,2
Id : 4003, {_}: multiply (multiply (inverse (multiply ?17133 (inverse (multiply ?17134 ?17135)))) (multiply ?17133 (inverse ?17135))) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134, 17133] by Super 2 with 3510 at 2
Id : 4810, {_}: multiply (multiply (inverse ?21607) ?21607) (inverse (multiply (inverse (multiply (inverse ?21608) ?21608)) (multiply (inverse ?21608) ?21608))) =>= inverse (multiply (inverse ?21608) ?21608) [21608, 21607] by Super 6 with 4003 at 2,1,2
Id : 1364, {_}: multiply (multiply (inverse (multiply ?5995 (inverse ?5996))) (multiply ?5995 (inverse (multiply ?5997 (inverse ?5998))))) (inverse (multiply (inverse (multiply ?5999 (inverse ?5998))) (multiply ?5999 (inverse ?5998)))) =>= inverse (multiply ?5997 (inverse (multiply (multiply ?5996 (inverse (multiply (inverse ?5998) ?5998))) ?5998))) [5999, 5998, 5997, 5996, 5995] by Super 161 with 1288 at 1,2,2
Id : 4844, {_}: inverse (multiply ?21768 (inverse (multiply (multiply (multiply ?21768 (inverse ?21769)) (inverse (multiply (inverse ?21769) ?21769))) ?21769))) =>= inverse (multiply (inverse (inverse ?21769)) (inverse ?21769)) [21769, 21768] by Super 4810 with 1364 at 2
Id : 21277, {_}: multiply (inverse (multiply (inverse (inverse ?53833)) (inverse ?53833))) (multiply ?53834 (inverse ?53833)) =>= multiply ?53834 (inverse ?53833) [53834, 53833] by Super 3957 with 4844 at 1,2
Id : 21278, {_}: multiply (inverse (multiply (inverse (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838))))) (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))))) (multiply ?53839 ?53837) =>= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53839, 53838, 53837, 53836] by Super 21277 with 210 at 2,2,2
Id : 21547, {_}: multiply (inverse (multiply (inverse ?53837) (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))))) (multiply ?53839 ?53837) =>= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53839, 53838, 53836, 53837] by Demod 21278 with 210 at 1,1,1,1,2
Id : 21548, {_}: multiply (inverse (multiply (inverse ?53837) ?53837)) (multiply ?53839 ?53837) =?= multiply ?53839 (inverse (multiply ?53836 (inverse (multiply (multiply (multiply ?53837 (multiply ?53836 (inverse ?53838))) (inverse (multiply (inverse ?53838) ?53838))) ?53838)))) [53838, 53836, 53839, 53837] by Demod 21547 with 210 at 2,1,1,2
Id : 21549, {_}: multiply (inverse (multiply (inverse ?53837) ?53837)) (multiply ?53839 ?53837) =>= multiply ?53839 ?53837 [53839, 53837] by Demod 21548 with 210 at 2,3
Id : 22063, {_}: multiply (inverse (multiply ?55325 ?55326)) (multiply ?55325 ?55326) =>= multiply (inverse ?55326) ?55326 [55326, 55325] by Super 1288 with 21549 at 3
Id : 22073, {_}: multiply (inverse (multiply (inverse (multiply ?55370 (inverse (multiply (multiply ?55371 (inverse (multiply (inverse ?55372) ?55372))) ?55373)))) (multiply ?55370 (inverse ?55373)))) ?55371 =>= multiply (inverse (multiply ?55370 (inverse ?55373))) (multiply ?55370 (inverse ?55373)) [55373, 55372, 55371, 55370] by Super 22063 with 3957 at 2,2
Id : 22230, {_}: multiply (inverse ?55371) ?55371 =?= multiply (inverse (multiply ?55370 (inverse ?55373))) (multiply ?55370 (inverse ?55373)) [55373, 55370, 55371] by Demod 22073 with 3957 at 1,1,2
Id : 21784, {_}: multiply (inverse (multiply ?54500 ?54501)) (multiply ?54500 ?54501) =>= multiply (inverse ?54501) ?54501 [54501, 54500] by Super 1288 with 21549 at 3
Id : 22543, {_}: multiply (inverse ?56820) ?56820 =?= multiply (inverse (inverse ?56821)) (inverse ?56821) [56821, 56820] by Demod 22230 with 21784 at 3
Id : 22231, {_}: multiply (inverse ?55371) ?55371 =?= multiply (inverse (inverse ?55373)) (inverse ?55373) [55373, 55371] by Demod 22230 with 21784 at 3
Id : 22585, {_}: multiply (inverse ?57023) ?57023 =?= multiply (inverse ?57024) ?57024 [57024, 57023] by Super 22543 with 22231 at 3
Id : 22724, {_}: multiply (inverse (multiply (inverse ?57285) ?57285)) (multiply ?57286 ?57287) =>= multiply ?57286 ?57287 [57287, 57286, 57285] by Super 21549 with 22585 at 1,1,2
Id : 23108, {_}: multiply (inverse (multiply ?58913 ?58914)) (multiply ?58913 ?58915) =>= multiply (inverse ?58914) ?58915 [58915, 58914, 58913] by Super 1288 with 22724 at 3
Id : 23367, {_}: multiply (inverse (inverse (multiply (multiply (multiply ?5363 (multiply ?5364 (inverse ?5365))) (inverse (multiply (inverse ?5365) ?5365))) ?5365))) ?5366 =>= multiply ?5363 (multiply ?5364 ?5366) [5366, 5365, 5364, 5363] by Demod 1238 with 23108 at 2
Id : 23366, {_}: multiply (inverse (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) ?16896))) (inverse ?16896) =>= ?16894 [16896, 16895, 16894] by Demod 3957 with 23108 at 2
Id : 23375, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =?= multiply (inverse (multiply ?18 (inverse (multiply ?16 ?17)))) (multiply ?18 (inverse ?17)) [18, 17, 16] by Demod 5 with 23108 at 1,2
Id : 23376, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (multiply (inverse (inverse (multiply (inverse ?17) ?17))) (inverse (multiply (inverse ?17) ?17)))) =>= multiply (inverse (inverse (multiply ?16 ?17))) (inverse ?17) [17, 16] by Demod 23375 with 23108 at 3
Id : 23410, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642))))) (inverse (multiply (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642)))) (inverse (multiply (inverse ?59642) ?59642)))) =>= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59642, 59641, 59640] by Super 23376 with 23108 at 1,2,1,2,2
Id : 23543, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse ?59642) ?59642)))) (inverse (multiply (inverse (inverse (multiply (inverse (multiply ?59641 ?59642)) (multiply ?59641 ?59642)))) (inverse (multiply (inverse ?59642) ?59642)))) =>= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23410 with 23108 at 1,1,2,1,2
Id : 23544, {_}: multiply (multiply (inverse (inverse ?59640)) (inverse (inverse (multiply (inverse ?59642) ?59642)))) (inverse (multiply (inverse (inverse (multiply (inverse ?59642) ?59642))) (inverse (multiply (inverse ?59642) ?59642)))) =?= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23543 with 23108 at 1,1,1,1,2,2
Id : 23545, {_}: multiply (inverse (inverse (multiply ?59640 ?59642))) (inverse ?59642) =<= multiply (inverse (inverse (multiply ?59640 (multiply ?59641 ?59642)))) (inverse (multiply ?59641 ?59642)) [59641, 59642, 59640] by Demod 23544 with 23376 at 2
Id : 26221, {_}: multiply (inverse (inverse (multiply ?63681 (multiply (inverse ?63682) ?63682)))) (inverse (multiply (inverse ?63683) ?63683)) =>= multiply (inverse (inverse (multiply ?63681 ?63682))) (inverse ?63682) [63683, 63682, 63681] by Super 3510 with 23545 at 3
Id : 23378, {_}: multiply (multiply (inverse (inverse (multiply ?17134 ?17135))) (inverse ?17135)) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134] by Demod 4003 with 23108 at 1,2
Id : 1370, {_}: inverse (multiply ?6029 (inverse (multiply (multiply (multiply (inverse (multiply ?6030 ?6031)) (multiply ?6030 (inverse ?6032))) (inverse (multiply (inverse ?6032) ?6032))) ?6032))) =>= inverse (multiply ?6029 ?6031) [6032, 6031, 6030, 6029] by Super 210 with 1288 at 1,1,1,2,1,2
Id : 4845, {_}: multiply (multiply (inverse ?21771) ?21771) (inverse (multiply (inverse ?21772) ?21772)) =?= inverse (multiply (inverse ?21773) ?21773) [21773, 21772, 21771] by Super 4810 with 3510 at 2
Id : 7295, {_}: inverse (multiply ?28092 (inverse (multiply (inverse (multiply (inverse ?28093) ?28093)) ?28094))) =>= inverse (multiply ?28092 (inverse ?28094)) [28094, 28093, 28092] by Super 1370 with 4845 at 1,1,2,1,2
Id : 22930, {_}: inverse (multiply (inverse ?58245) ?58245) =?= inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?58246) ?58246)) ?58247))) (inverse ?58247)) [58247, 58246, 58245] by Super 7295 with 22585 at 1,2
Id :   8, {_}: multiply (multiply (inverse (multiply (multiply (inverse ?26) (multiply (multiply (inverse (multiply ?27 (inverse (multiply ?26 ?28)))) (multiply ?27 (inverse ?28))) (inverse ?28))) (inverse (multiply ?29 (multiply (inverse ?28) ?28))))) (inverse ?28)) (inverse (multiply (inverse (multiply (inverse ?28) ?28)) (multiply (inverse ?28) ?28))) =>= ?29 [29, 28, 27, 26] by Super 2 with 6 at 2,1,2
Id : 7694, {_}: inverse (multiply ?30248 (inverse (multiply (inverse (multiply (inverse ?30249) ?30249)) ?30250))) =>= inverse (multiply ?30248 (inverse ?30250)) [30250, 30249, 30248] by Super 1370 with 4845 at 1,1,2,1,2
Id : 9751, {_}: inverse (multiply ?34833 (inverse (multiply (inverse (multiply ?34834 ?34835)) (multiply ?34834 ?34836)))) =>= inverse (multiply ?34833 (inverse (multiply (inverse ?34835) ?34836))) [34836, 34835, 34834, 34833] by Super 7694 with 1288 at 1,2,1,2
Id : 9799, {_}: inverse (multiply ?35157 (inverse (multiply (inverse (multiply ?35158 (inverse ?35159))) (multiply ?35158 ?35160)))) =?= inverse (multiply ?35157 (inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?35161) ?35161)) ?35159))) ?35160))) [35161, 35160, 35159, 35158, 35157] by Super 9751 with 7295 at 1,1,2,1,2
Id : 7715, {_}: inverse (multiply ?30362 (inverse (multiply (inverse (multiply ?30363 ?30364)) (multiply ?30363 ?30365)))) =>= inverse (multiply ?30362 (inverse (multiply (inverse ?30364) ?30365))) [30365, 30364, 30363, 30362] by Super 7694 with 1288 at 1,2,1,2
Id : 10327, {_}: inverse (multiply ?35157 (inverse (multiply (inverse (inverse ?35159)) ?35160))) =<= inverse (multiply ?35157 (inverse (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?35161) ?35161)) ?35159))) ?35160))) [35161, 35160, 35159, 35157] by Demod 9799 with 7715 at 2
Id : 14061, {_}: multiply (multiply (inverse (multiply (multiply (inverse ?43109) (multiply (multiply (inverse (multiply ?43110 (inverse (multiply ?43109 ?43111)))) (multiply ?43110 (inverse ?43111))) (inverse ?43111))) (inverse (multiply (inverse (inverse ?43112)) (multiply (inverse ?43111) ?43111))))) (inverse ?43111)) (inverse (multiply (inverse (multiply (inverse ?43111) ?43111)) (multiply (inverse ?43111) ?43111))) =?= inverse (inverse (multiply (inverse (multiply (inverse ?43113) ?43113)) ?43112)) [43113, 43112, 43111, 43110, 43109] by Super 8 with 10327 at 1,1,2
Id : 14495, {_}: inverse (inverse ?43112) =<= inverse (inverse (multiply (inverse (multiply (inverse ?43113) ?43113)) ?43112)) [43113, 43112] by Demod 14061 with 8 at 2
Id : 23770, {_}: inverse (multiply (inverse ?60796) ?60796) =?= inverse (multiply (inverse (inverse ?60797)) (inverse ?60797)) [60797, 60796] by Demod 22930 with 14495 at 1,1,3
Id : 23801, {_}: inverse (multiply (inverse ?60931) ?60931) =?= inverse (multiply (inverse ?60932) ?60932) [60932, 60931] by Super 23770 with 22585 at 1,3
Id : 25761, {_}: multiply (multiply (inverse (inverse (multiply (inverse ?63084) ?63084))) (inverse ?63085)) (inverse (multiply (inverse ?63086) ?63086)) =>= inverse ?63085 [63086, 63085, 63084] by Super 23378 with 23801 at 1,1,1,2
Id : 27867, {_}: multiply (inverse (multiply (inverse ?66211) ?66211)) (inverse ?66212) =?= multiply (multiply (inverse (inverse (multiply (inverse ?66213) ?66213))) (inverse ?66212)) (inverse (multiply (inverse ?66214) ?66214)) [66214, 66213, 66212, 66211] by Super 22724 with 25761 at 2,2
Id : 28152, {_}: multiply (inverse (multiply (inverse ?66849) ?66849)) (inverse ?66850) =>= inverse ?66850 [66850, 66849] by Demod 27867 with 25761 at 3
Id : 28153, {_}: multiply (inverse (multiply (inverse ?66852) ?66852)) ?66853 =?= inverse (multiply ?66854 (inverse (multiply (multiply (multiply ?66853 (multiply ?66854 (inverse ?66855))) (inverse (multiply (inverse ?66855) ?66855))) ?66855))) [66855, 66854, 66853, 66852] by Super 28152 with 210 at 2,2
Id : 28218, {_}: multiply (inverse (multiply (inverse ?66852) ?66852)) ?66853 =>= ?66853 [66853, 66852] by Demod 28153 with 210 at 3
Id : 28331, {_}: multiply (inverse (inverse (multiply (inverse (multiply (inverse ?67206) ?67206)) ?67207))) (inverse ?67207) =?= inverse (multiply (inverse ?67208) ?67208) [67208, 67207, 67206] by Super 23366 with 28218 at 1,1,1,1,2
Id : 28438, {_}: multiply (inverse (inverse ?67207)) (inverse ?67207) =?= inverse (multiply (inverse ?67208) ?67208) [67208, 67207] by Demod 28331 with 28218 at 1,1,1,2
Id : 28698, {_}: multiply (inverse (inverse (multiply (inverse ?68177) ?68177))) ?68178 =>= ?68178 [68178, 68177] by Super 28218 with 28438 at 1,1,2
Id : 29246, {_}: multiply (inverse ?63085) (inverse (multiply (inverse ?63086) ?63086)) =>= inverse ?63085 [63086, 63085] by Demod 25761 with 28698 at 1,2
Id : 29249, {_}: inverse (inverse (multiply ?63681 (multiply (inverse ?63682) ?63682))) =<= multiply (inverse (inverse (multiply ?63681 ?63682))) (inverse ?63682) [63682, 63681] by Demod 26221 with 29246 at 2
Id : 29251, {_}: inverse (inverse (multiply (multiply ?16894 (inverse (multiply (inverse ?16895) ?16895))) (multiply (inverse ?16896) ?16896))) =>= ?16894 [16896, 16895, 16894] by Demod 23366 with 29249 at 2
Id : 29250, {_}: multiply (inverse (inverse (multiply ?17134 (multiply (inverse ?17135) ?17135)))) (inverse (multiply (inverse ?17136) ?17136)) =>= ?17134 [17136, 17135, 17134] by Demod 23378 with 29249 at 1,2
Id : 29258, {_}: inverse (inverse (multiply ?17134 (multiply (inverse ?17135) ?17135))) =>= ?17134 [17135, 17134] by Demod 29250 with 29246 at 2
Id : 29259, {_}: multiply ?16894 (inverse (multiply (inverse ?16895) ?16895)) =>= ?16894 [16895, 16894] by Demod 29251 with 29258 at 2
Id : 29266, {_}: multiply (inverse (inverse (multiply (multiply ?5363 (multiply ?5364 (inverse ?5365))) ?5365))) ?5366 =>= multiply ?5363 (multiply ?5364 ?5366) [5366, 5365, 5364, 5363] by Demod 23367 with 29259 at 1,1,1,1,2
Id : 29298, {_}: inverse (inverse (multiply ?68838 (inverse (multiply (inverse ?68839) ?68839)))) =>= ?68838 [68839, 68838] by Super 29258 with 28698 at 2,1,1,2
Id : 29399, {_}: inverse (inverse ?68838) =>= ?68838 [68838] by Demod 29298 with 29259 at 1,1,2
Id : 32787, {_}: multiply (multiply (multiply ?5363 (multiply ?5364 (inverse ?5365))) ?5365) ?5366 =>= multiply ?5363 (multiply ?5364 ?5366) [5366, 5365, 5364, 5363] by Demod 29266 with 29399 at 1,2
Id : 32817, {_}: multiply (multiply (multiply ?69480 (multiply ?69481 ?69482)) (inverse ?69482)) ?69483 =>= multiply ?69480 (multiply ?69481 ?69483) [69483, 69482, 69481, 69480] by Super 32787 with 29399 at 2,2,1,1,2
Id : 27049, {_}: multiply (inverse (inverse (multiply ?65328 (multiply (inverse ?65329) ?65329)))) (inverse (multiply (inverse ?65330) ?65330)) =>= multiply (inverse (inverse (multiply ?65328 ?65329))) (inverse ?65329) [65330, 65329, 65328] by Super 3510 with 23545 at 3
Id : 27102, {_}: multiply (inverse (inverse (multiply (inverse ?65600) ?65600))) (inverse (multiply (inverse ?65601) ?65601)) =?= multiply (inverse (inverse (multiply (inverse (multiply (inverse ?65602) ?65602)) ?65600))) (inverse ?65600) [65602, 65601, 65600] by Super 27049 with 22724 at 1,1,1,2
Id : 27480, {_}: multiply (inverse (inverse (multiply (inverse ?65600) ?65600))) (inverse (multiply (inverse ?65601) ?65601)) =>= multiply (inverse (inverse ?65600)) (inverse ?65600) [65601, 65600] by Demod 27102 with 14495 at 1,3
Id : 27499, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (multiply (inverse (inverse ?17)) (inverse ?17))) =>= multiply (inverse (inverse (multiply ?16 ?17))) (inverse ?17) [17, 16] by Demod 23376 with 27480 at 1,2,2
Id : 28687, {_}: multiply (multiply (inverse (multiply (inverse (inverse ?68131)) (inverse ?68131))) (inverse (inverse (multiply (inverse ?68132) ?68132)))) (inverse (multiply (inverse (inverse ?68132)) (inverse ?68132))) =?= multiply (inverse (inverse (multiply (multiply (inverse ?68133) ?68133) ?68132))) (inverse ?68132) [68133, 68132, 68131] by Super 27499 with 28438 at 1,1,1,2
Id : 28770, {_}: multiply (inverse (inverse (multiply (inverse ?68132) ?68132))) (inverse (multiply (inverse (inverse ?68132)) (inverse ?68132))) =?= multiply (inverse (inverse (multiply (multiply (inverse ?68133) ?68133) ?68132))) (inverse ?68132) [68133, 68132] by Demod 28687 with 28218 at 1,2
Id :   9, {_}: multiply (multiply (inverse (multiply ?31 (inverse (inverse ?32)))) (multiply ?31 (inverse (inverse (multiply (inverse ?32) ?32))))) (inverse (multiply (inverse (inverse (multiply (inverse ?32) ?32))) (inverse (multiply (inverse ?32) ?32)))) =?= multiply (inverse ?33) (multiply (multiply (inverse (multiply ?34 (inverse (multiply ?33 ?32)))) (multiply ?34 (inverse ?32))) (inverse ?32)) [34, 33, 32, 31] by Super 2 with 6 at 1,2,1,1,1,2
Id : 23370, {_}: multiply (multiply (inverse (inverse (inverse ?32))) (inverse (inverse (multiply (inverse ?32) ?32)))) (inverse (multiply (inverse (inverse (multiply (inverse ?32) ?32))) (inverse (multiply (inverse ?32) ?32)))) =?= multiply (inverse ?33) (multiply (multiply (inverse (multiply ?34 (inverse (multiply ?33 ?32)))) (multiply ?34 (inverse ?32))) (inverse ?32)) [34, 33, 32] by Demod 9 with 23108 at 1,2
Id : 23371, {_}: multiply (multiply (inverse (inverse (inverse ?32))) (inverse (inverse (multiply (inverse ?32) ?32)))) (inverse (multiply (inverse (inverse (multiply (inverse ?32) ?32))) (inverse (multiply (inverse ?32) ?32)))) =?= multiply (inverse ?33) (multiply (multiply (inverse (inverse (multiply ?33 ?32))) (inverse ?32)) (inverse ?32)) [33, 32] by Demod 23370 with 23108 at 1,2,3
Id : 23387, {_}: multiply (inverse (inverse (multiply (inverse ?32) ?32))) (inverse ?32) =<= multiply (inverse ?33) (multiply (multiply (inverse (inverse (multiply ?33 ?32))) (inverse ?32)) (inverse ?32)) [33, 32] by Demod 23371 with 23376 at 2
Id : 25785, {_}: multiply (inverse (inverse (multiply (inverse ?63178) ?63178))) (inverse ?63178) =<= multiply (inverse (multiply (inverse ?63179) ?63179)) (multiply (multiply (inverse (inverse (multiply (multiply (inverse ?63180) ?63180) ?63178))) (inverse ?63178)) (inverse ?63178)) [63180, 63179, 63178] by Super 23387 with 23801 at 1,3
Id : 25940, {_}: multiply (inverse (inverse (multiply (inverse ?63178) ?63178))) (inverse ?63178) =<= multiply (multiply (inverse (inverse (multiply (multiply (inverse ?63180) ?63180) ?63178))) (inverse ?63178)) (inverse ?63178) [63180, 63178] by Demod 25785 with 22724 at 3
Id : 26391, {_}: multiply (inverse (inverse (multiply (multiply (inverse (inverse (multiply (inverse (multiply (inverse ?64074) ?64074)) (multiply (inverse ?64074) ?64074)))) (inverse (multiply (inverse ?64074) ?64074))) ?64075))) (inverse ?64075) =?= multiply (inverse (inverse (multiply (multiply (inverse ?64076) ?64076) (multiply (inverse ?64074) ?64074)))) (inverse (multiply (inverse ?64074) ?64074)) [64076, 64075, 64074] by Super 23366 with 25940 at 1,1,1,1,2
Id : 26476, {_}: inverse (inverse (multiply (inverse (multiply (inverse ?64074) ?64074)) (multiply (inverse ?64074) ?64074))) =<= multiply (inverse (inverse (multiply (multiply (inverse ?64076) ?64076) (multiply (inverse ?64074) ?64074)))) (inverse (multiply (inverse ?64074) ?64074)) [64076, 64074] by Demod 26391 with 23366 at 2
Id : 26477, {_}: inverse (inverse (multiply (inverse (multiply (inverse ?64074) ?64074)) (multiply (inverse ?64074) ?64074))) =?= multiply (inverse (inverse (multiply (multiply (inverse ?64076) ?64076) ?64074))) (inverse ?64074) [64076, 64074] by Demod 26476 with 23545 at 3
Id : 26478, {_}: inverse (inverse (multiply (inverse ?64074) ?64074)) =<= multiply (inverse (inverse (multiply (multiply (inverse ?64076) ?64076) ?64074))) (inverse ?64074) [64076, 64074] by Demod 26477 with 14495 at 2
Id : 28771, {_}: multiply (inverse (inverse (multiply (inverse ?68132) ?68132))) (inverse (multiply (inverse (inverse ?68132)) (inverse ?68132))) =>= inverse (inverse (multiply (inverse ?68132) ?68132)) [68132] by Demod 28770 with 26478 at 3
Id : 28772, {_}: multiply (inverse (inverse ?68132)) (inverse ?68132) =>= inverse (inverse (multiply (inverse ?68132) ?68132)) [68132] by Demod 28771 with 27480 at 2
Id : 28931, {_}: inverse (multiply ?21768 (inverse (multiply (multiply (multiply ?21768 (inverse ?21769)) (inverse (multiply (inverse ?21769) ?21769))) ?21769))) =>= inverse (inverse (inverse (multiply (inverse ?21769) ?21769))) [21769, 21768] by Demod 4844 with 28772 at 1,3
Id : 29275, {_}: inverse (multiply ?21768 (inverse (multiply (multiply ?21768 (inverse ?21769)) ?21769))) =>= inverse (inverse (inverse (multiply (inverse ?21769) ?21769))) [21769, 21768] by Demod 28931 with 29259 at 1,1,2,1,2
Id : 32786, {_}: inverse (multiply ?21768 (inverse (multiply (multiply ?21768 (inverse ?21769)) ?21769))) =>= inverse (multiply (inverse ?21769) ?21769) [21769, 21768] by Demod 29275 with 29399 at 3
Id : 32802, {_}: inverse (multiply ?69432 (inverse (multiply (multiply ?69432 ?69433) (inverse ?69433)))) =>= inverse (multiply (inverse (inverse ?69433)) (inverse ?69433)) [69433, 69432] by Super 32786 with 29399 at 2,1,1,2,1,2
Id : 21975, {_}: multiply (multiply (inverse (multiply ?5995 (inverse ?5996))) (multiply ?5995 (inverse (multiply ?5997 (inverse ?5998))))) (inverse (multiply (inverse (inverse ?5998)) (inverse ?5998))) =>= inverse (multiply ?5997 (inverse (multiply (multiply ?5996 (inverse (multiply (inverse ?5998) ?5998))) ?5998))) [5998, 5997, 5996, 5995] by Demod 1364 with 21784 at 1,2,2
Id : 23386, {_}: multiply (multiply (inverse (inverse ?5996)) (inverse (multiply ?5997 (inverse ?5998)))) (inverse (multiply (inverse (inverse ?5998)) (inverse ?5998))) =>= inverse (multiply ?5997 (inverse (multiply (multiply ?5996 (inverse (multiply (inverse ?5998) ?5998))) ?5998))) [5998, 5997, 5996] by Demod 21975 with 23108 at 1,2
Id : 28932, {_}: multiply (multiply (inverse (inverse ?5996)) (inverse (multiply ?5997 (inverse ?5998)))) (inverse (inverse (inverse (multiply (inverse ?5998) ?5998)))) =>= inverse (multiply ?5997 (inverse (multiply (multiply ?5996 (inverse (multiply (inverse ?5998) ?5998))) ?5998))) [5998, 5997, 5996] by Demod 23386 with 28772 at 1,2,2
Id : 29265, {_}: multiply (multiply (inverse (inverse ?5996)) (inverse (multiply ?5997 (inverse ?5998)))) (inverse (inverse (inverse (multiply (inverse ?5998) ?5998)))) =>= inverse (multiply ?5997 (inverse (multiply ?5996 ?5998))) [5998, 5997, 5996] by Demod 28932 with 29259 at 1,1,2,1,3
Id : 32767, {_}: multiply (multiply ?5996 (inverse (multiply ?5997 (inverse ?5998)))) (inverse (inverse (inverse (multiply (inverse ?5998) ?5998)))) =>= inverse (multiply ?5997 (inverse (multiply ?5996 ?5998))) [5998, 5997, 5996] by Demod 29265 with 29399 at 1,1,2
Id : 32768, {_}: multiply (multiply ?5996 (inverse (multiply ?5997 (inverse ?5998)))) (inverse (multiply (inverse ?5998) ?5998)) =>= inverse (multiply ?5997 (inverse (multiply ?5996 ?5998))) [5998, 5997, 5996] by Demod 32767 with 29399 at 2,2
Id : 32797, {_}: multiply ?5996 (inverse (multiply ?5997 (inverse ?5998))) =>= inverse (multiply ?5997 (inverse (multiply ?5996 ?5998))) [5998, 5997, 5996] by Demod 32768 with 29259 at 2
Id : 32841, {_}: inverse (inverse (multiply (multiply ?69432 ?69433) (inverse (multiply ?69432 ?69433)))) =>= inverse (multiply (inverse (inverse ?69433)) (inverse ?69433)) [69433, 69432] by Demod 32802 with 32797 at 1,2
Id : 32842, {_}: inverse (inverse (multiply (multiply ?69432 ?69433) (inverse (multiply ?69432 ?69433)))) =>= inverse (multiply ?69433 (inverse ?69433)) [69433, 69432] by Demod 32841 with 29399 at 1,1,3
Id : 32843, {_}: multiply (multiply ?69432 ?69433) (inverse (multiply ?69432 ?69433)) =>= inverse (multiply ?69433 (inverse ?69433)) [69433, 69432] by Demod 32842 with 29399 at 2
Id :  10, {_}: multiply (multiply (inverse (inverse ?36)) (multiply (multiply (inverse ?37) (multiply (multiply (inverse (multiply ?38 (inverse (multiply ?37 ?36)))) (multiply ?38 (inverse ?36))) (inverse ?36))) (inverse ?36))) (inverse (multiply (inverse ?36) ?36)) =>= inverse ?36 [38, 37, 36] by Super 2 with 6 at 1,1,1,2
Id :  37, {_}: multiply (multiply (inverse (multiply (inverse (inverse ?174)) (multiply (multiply (inverse ?175) (multiply (multiply (inverse (multiply ?176 (inverse (multiply ?175 ?174)))) (multiply ?176 (inverse ?174))) (inverse ?174))) (inverse ?174)))) (multiply (multiply (inverse (multiply ?177 (inverse (inverse ?174)))) (multiply ?177 (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [177, 176, 175, 174] by Super 6 with 10 at 1,2,1,1,1,2,1,2
Id : 23364, {_}: multiply (multiply (inverse (multiply (inverse (inverse ?174)) (multiply (multiply (inverse ?175) (multiply (multiply (inverse (inverse (multiply ?175 ?174))) (inverse ?174)) (inverse ?174))) (inverse ?174)))) (multiply (multiply (inverse (multiply ?177 (inverse (inverse ?174)))) (multiply ?177 (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [177, 175, 174] by Demod 37 with 23108 at 1,2,1,2,1,1,1,2
Id : 23365, {_}: multiply (multiply (inverse (multiply (inverse (inverse ?174)) (multiply (multiply (inverse ?175) (multiply (multiply (inverse (inverse (multiply ?175 ?174))) (inverse ?174)) (inverse ?174))) (inverse ?174)))) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [175, 174] by Demod 23364 with 23108 at 1,2,1,2
Id : 23401, {_}: multiply (multiply (inverse (multiply (inverse (inverse ?174)) (multiply (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse ?174)) (inverse ?174)))) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 23365 with 23387 at 1,2,1,1,1,2
Id : 23402, {_}: multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse ?174))) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 23401 with 23387 at 1,1,1,2
Id : 27500, {_}: multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse ?174))) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (multiply (inverse (inverse ?174)) (inverse ?174))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 23402 with 27480 at 1,2,2
Id : 28930, {_}: multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?174) ?174))) (inverse ?174))) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 27500 with 28772 at 1,2,2
Id : 29247, {_}: multiply (multiply (inverse (inverse ?174)) (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 28930 with 28698 at 1,1,1,2
Id : 32772, {_}: multiply (multiply ?174 (multiply (multiply (inverse (inverse (inverse ?174))) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 29247 with 29399 at 1,1,2
Id : 32773, {_}: multiply (multiply ?174 (multiply (multiply (inverse ?174) (inverse (inverse (multiply (inverse ?174) ?174)))) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 32772 with 29399 at 1,1,2,1,2
Id : 32774, {_}: multiply (multiply ?174 (multiply (multiply (inverse ?174) (multiply (inverse ?174) ?174)) (inverse (inverse (multiply (inverse ?174) ?174))))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 32773 with 29399 at 2,1,2,1,2
Id : 32775, {_}: multiply (multiply ?174 (multiply (multiply (inverse ?174) (multiply (inverse ?174) ?174)) (multiply (inverse ?174) ?174))) (inverse (inverse (inverse (multiply (inverse ?174) ?174)))) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 32774 with 29399 at 2,2,1,2
Id : 32776, {_}: multiply (multiply ?174 (multiply (multiply (inverse ?174) (multiply (inverse ?174) ?174)) (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)) =>= inverse (inverse (multiply (inverse ?174) ?174)) [174] by Demod 32775 with 29399 at 2,2
Id : 32777, {_}: multiply (multiply ?174 (multiply (multiply (inverse ?174) (multiply (inverse ?174) ?174)) (multiply (inverse ?174) ?174))) (inverse (multiply (inverse ?174) ?174)) =>= multiply (inverse ?174) ?174 [174] by Demod 32776 with 29399 at 3
Id : 32792, {_}: multiply ?174 (multiply (multiply (inverse ?174) (multiply (inverse ?174) ?174)) (multiply (inverse ?174) ?174)) =>= multiply (inverse ?174) ?174 [174] by Demod 32777 with 29259 at 2
Id : 28933, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (inverse (inverse (multiply (inverse ?17) ?17)))) =>= multiply (inverse (inverse (multiply ?16 ?17))) (inverse ?17) [17, 16] by Demod 27499 with 28772 at 1,2,2
Id : 29256, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (inverse (inverse (multiply (inverse ?17) ?17)))) =>= inverse (inverse (multiply ?16 (multiply (inverse ?17) ?17))) [17, 16] by Demod 28933 with 29249 at 3
Id : 29262, {_}: multiply (multiply (inverse (inverse ?16)) (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (inverse (inverse (multiply (inverse ?17) ?17)))) =>= ?16 [17, 16] by Demod 29256 with 29258 at 3
Id : 32782, {_}: multiply (multiply ?16 (inverse (inverse (multiply (inverse ?17) ?17)))) (inverse (inverse (inverse (multiply (inverse ?17) ?17)))) =>= ?16 [17, 16] by Demod 29262 with 29399 at 1,1,2
Id : 32783, {_}: multiply (multiply ?16 (multiply (inverse ?17) ?17)) (inverse (inverse (inverse (multiply (inverse ?17) ?17)))) =>= ?16 [17, 16] by Demod 32782 with 29399 at 2,1,2
Id : 32784, {_}: multiply (multiply ?16 (multiply (inverse ?17) ?17)) (inverse (multiply (inverse ?17) ?17)) =>= ?16 [17, 16] by Demod 32783 with 29399 at 2,2
Id : 32789, {_}: multiply ?16 (multiply (inverse ?17) ?17) =>= ?16 [17, 16] by Demod 32784 with 29259 at 2
Id : 32793, {_}: multiply ?174 (multiply (inverse ?174) (multiply (inverse ?174) ?174)) =>= multiply (inverse ?174) ?174 [174] by Demod 32792 with 32789 at 2,2
Id : 32794, {_}: multiply ?174 (inverse ?174) =?= multiply (inverse ?174) ?174 [174] by Demod 32793 with 32789 at 2,2
Id : 32844, {_}: multiply (inverse (multiply ?69432 ?69433)) (multiply ?69432 ?69433) =>= inverse (multiply ?69433 (inverse ?69433)) [69433, 69432] by Demod 32843 with 32794 at 2
Id : 32845, {_}: multiply (inverse ?69433) ?69433 =<= inverse (multiply ?69433 (inverse ?69433)) [69433] by Demod 32844 with 23108 at 2
Id : 32878, {_}: inverse (multiply (inverse ?69602) ?69602) =>= multiply ?69602 (inverse ?69602) [69602] by Super 29399 with 32845 at 1,2
Id : 32984, {_}: multiply ?16894 (multiply ?16895 (inverse ?16895)) =>= ?16894 [16895, 16894] by Demod 29259 with 32878 at 2,2
Id : 38023, {_}: multiply ?72734 (multiply ?72735 (multiply ?72736 (inverse ?72736))) =?= multiply (multiply ?72734 (multiply ?72735 ?72737)) (inverse ?72737) [72737, 72736, 72735, 72734] by Super 32984 with 32817 at 2
Id : 38122, {_}: multiply ?72734 ?72735 =<= multiply (multiply ?72734 (multiply ?72735 ?72737)) (inverse ?72737) [72737, 72735, 72734] by Demod 38023 with 32984 at 2,2
Id : 40272, {_}: multiply (multiply ?69480 ?69481) ?69483 =?= multiply ?69480 (multiply ?69481 ?69483) [69483, 69481, 69480] by Demod 32817 with 38122 at 1,2
Id : 40468, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 40272 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP411-1.p
23552: solved GRP411-1.p in 26.617662 using nrkbo
23552: status Unsatisfiable for GRP411-1.p
NO CLASH, using fixed ground order
23570: Facts:
23570:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23570: Goal:
23570:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23570: Order:
23570:   nrkbo
23570: Leaf order:
23570:  b2 2 0 2 1,1,1,2
23570:  a2 2 0 2 2,2
23570:  inverse 8 1 1 0,1,1,2
23570:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
23571: Facts:
23571:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23571: Goal:
23571:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23571: Order:
23571:   kbo
23571: Leaf order:
23571:  b2 2 0 2 1,1,1,2
23571:  a2 2 0 2 2,2
23571:  inverse 8 1 1 0,1,1,2
23571:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
23572: Facts:
23572:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23572: Goal:
23572:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23572: Order:
23572:   lpo
23572: Leaf order:
23572:  b2 2 0 2 1,1,1,2
23572:  a2 2 0 2 2,2
23572:  inverse 8 1 1 0,1,1,2
23572:  multiply 8 2 2 0,2
Statistics :
Max weight : 117
Found proof, 75.766748s
% SZS status Unsatisfiable for GRP419-1.p
% SZS output start CNFRefutation for GRP419-1.p
Id :   3, {_}: inverse (multiply (inverse (multiply ?6 (inverse (multiply (inverse ?7) (inverse (multiply ?8 (inverse (multiply (inverse ?8) ?8)))))))) (multiply ?6 ?8)) =>= ?7 [8, 7, 6] by single_axiom ?6 ?7 ?8
Id :   2, {_}: inverse (multiply (inverse (multiply ?2 (inverse (multiply (inverse ?3) (inverse (multiply ?4 (inverse (multiply (inverse ?4) ?4)))))))) (multiply ?2 ?4)) =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :  31, {_}: inverse (multiply (inverse (multiply ?219 (inverse (multiply (inverse ?220) (inverse (multiply (multiply (inverse (multiply ?221 (inverse (multiply (inverse ?222) (inverse (multiply ?223 (inverse (multiply (inverse ?223) ?223)))))))) (multiply ?221 ?223)) (inverse (multiply ?222 (multiply (inverse (multiply ?221 (inverse (multiply (inverse ?222) (inverse (multiply ?223 (inverse (multiply (inverse ?223) ?223)))))))) (multiply ?221 ?223)))))))))) (multiply ?219 (multiply (inverse (multiply ?221 (inverse (multiply (inverse ?222) (inverse (multiply ?223 (inverse (multiply (inverse ?223) ?223)))))))) (multiply ?221 ?223)))) =>= ?220 [223, 222, 221, 220, 219] by Super 3 with 2 at 1,1,2,1,2,1,2,1,1,1,2
Id :   5, {_}: inverse (multiply (inverse (multiply ?16 (inverse (multiply ?17 (inverse (multiply ?18 (inverse (multiply (inverse ?18) ?18)))))))) (multiply ?16 ?18)) =?= multiply (inverse (multiply ?19 (inverse (multiply (inverse ?17) (inverse (multiply ?20 (inverse (multiply (inverse ?20) ?20)))))))) (multiply ?19 ?20) [20, 19, 18, 17, 16] by Super 3 with 2 at 1,1,2,1,1,1,2
Id :  39, {_}: inverse (multiply (inverse (multiply ?290 (inverse (multiply (inverse ?291) (inverse (multiply (multiply (inverse (multiply ?292 (inverse (multiply (inverse ?293) (inverse (multiply ?294 (inverse (multiply (inverse ?294) ?294)))))))) (multiply ?292 ?294)) (inverse (multiply ?293 (multiply (inverse (multiply ?292 (inverse (multiply (inverse ?293) (inverse (multiply ?294 (inverse (multiply (inverse ?294) ?294)))))))) (multiply ?292 ?294)))))))))) (multiply ?290 (inverse (multiply (inverse (multiply ?295 (inverse (multiply ?293 (inverse (multiply ?296 (inverse (multiply (inverse ?296) ?296)))))))) (multiply ?295 ?296))))) =>= ?291 [296, 295, 294, 293, 292, 291, 290] by Super 31 with 5 at 2,2,1,2
Id :  11, {_}: multiply (inverse (multiply ?51 (inverse (multiply (inverse (inverse ?52)) (inverse (multiply ?53 (inverse (multiply (inverse ?53) ?53)))))))) (multiply ?51 ?53) =>= ?52 [53, 52, 51] by Super 2 with 5 at 2
Id : 131, {_}: inverse (multiply (inverse (multiply (inverse (multiply ?678 (inverse (multiply (inverse (inverse ?679)) (inverse (multiply ?680 (inverse (multiply (inverse ?680) ?680)))))))) (inverse (multiply (inverse ?681) (inverse (multiply (multiply ?678 ?680) (inverse (multiply (inverse (multiply ?678 ?680)) (multiply ?678 ?680))))))))) ?679) =>= ?681 [681, 680, 679, 678] by Super 2 with 11 at 2,1,2
Id : 592, {_}: inverse (multiply (inverse (multiply ?3887 ?3888)) (multiply ?3887 ?3889)) =?= multiply (inverse (multiply ?3890 (inverse (multiply (inverse (inverse (inverse (multiply ?3889 (inverse (multiply (inverse ?3889) ?3889)))))) (inverse (multiply ?3891 (inverse (multiply (inverse ?3891) ?3891)))))))) (inverse (multiply (inverse ?3888) (inverse (multiply (multiply ?3890 ?3891) (inverse (multiply (inverse (multiply ?3890 ?3891)) (multiply ?3890 ?3891))))))) [3891, 3890, 3889, 3888, 3887] by Super 2 with 131 at 2,1,1,1,2
Id : 1723, {_}: inverse (multiply (inverse (inverse (multiply (inverse (multiply ?12104 ?12105)) (multiply ?12104 ?12106)))) (inverse (multiply ?12106 (inverse (multiply (inverse ?12106) ?12106))))) =>= ?12105 [12106, 12105, 12104] by Super 131 with 592 at 1,1,1,2
Id : 139, {_}: multiply (inverse (multiply ?714 (inverse (multiply (inverse (inverse ?715)) (inverse (multiply ?716 (inverse (multiply (inverse ?716) ?716)))))))) (multiply ?714 ?716) =>= ?715 [716, 715, 714] by Super 2 with 5 at 2
Id : 140, {_}: multiply (inverse (multiply (inverse (multiply ?718 (inverse (multiply (inverse (inverse ?719)) (inverse (multiply ?720 (inverse (multiply (inverse ?720) ?720)))))))) (inverse (multiply (inverse (inverse ?721)) (inverse (multiply (multiply ?718 ?720) (inverse (multiply (inverse (multiply ?718 ?720)) (multiply ?718 ?720))))))))) ?719 =>= ?721 [721, 720, 719, 718] by Super 139 with 11 at 2,2
Id : 1734, {_}: multiply (inverse (inverse (multiply (inverse (multiply ?12189 (inverse ?12190))) (multiply ?12189 ?12191)))) (inverse (multiply ?12191 (inverse (multiply (inverse ?12191) ?12191)))) =>= ?12190 [12191, 12190, 12189] by Super 140 with 592 at 1,1,2
Id :  10, {_}: inverse (inverse (multiply (inverse (multiply ?47 (inverse (multiply ?48 (inverse (multiply ?49 (inverse (multiply (inverse ?49) ?49)))))))) (multiply ?47 ?49))) =>= ?48 [49, 48, 47] by Super 2 with 5 at 1,2
Id : 1746, {_}: inverse (multiply (inverse (multiply ?12293 ?12294)) (multiply ?12293 ?12295)) =?= multiply (inverse (multiply ?12296 (inverse (multiply (inverse (inverse (inverse (multiply ?12295 (inverse (multiply (inverse ?12295) ?12295)))))) (inverse (multiply ?12297 (inverse (multiply (inverse ?12297) ?12297)))))))) (inverse (multiply (inverse ?12294) (inverse (multiply (multiply ?12296 ?12297) (inverse (multiply (inverse (multiply ?12296 ?12297)) (multiply ?12296 ?12297))))))) [12297, 12296, 12295, 12294, 12293] by Super 2 with 131 at 2,1,1,1,2
Id : 1828, {_}: inverse (multiply (inverse (multiply ?13070 ?13071)) (multiply ?13070 ?13072)) =?= inverse (multiply (inverse (multiply ?13073 ?13071)) (multiply ?13073 ?13072)) [13073, 13072, 13071, 13070] by Super 1746 with 592 at 3
Id : 6984, {_}: inverse (inverse (multiply (inverse (multiply ?54958 (inverse (multiply ?54959 (inverse (multiply (multiply ?54960 ?54961) (inverse (multiply (inverse (multiply ?54962 ?54961)) (multiply ?54962 ?54961))))))))) (multiply ?54958 (multiply ?54960 ?54961)))) =>= ?54959 [54962, 54961, 54960, 54959, 54958] by Super 10 with 1828 at 2,1,2,1,2,1,1,1,1,2
Id : 6987, {_}: inverse (inverse (multiply (inverse (multiply ?54980 (inverse (multiply ?54981 (inverse (multiply (multiply (inverse (multiply (inverse (multiply ?54982 (inverse (multiply (inverse (inverse ?54983)) (inverse (multiply ?54984 (inverse (multiply (inverse ?54984) ?54984)))))))) (inverse (multiply (inverse (inverse ?54985)) (inverse (multiply (multiply ?54982 ?54984) (inverse (multiply (inverse (multiply ?54982 ?54984)) (multiply ?54982 ?54984))))))))) ?54983) (inverse (multiply (inverse (multiply ?54986 ?54983)) (multiply ?54986 ?54983))))))))) (multiply ?54980 ?54985))) =>= ?54981 [54986, 54985, 54984, 54983, 54982, 54981, 54980] by Super 6984 with 140 at 2,2,1,1,2
Id : 7283, {_}: inverse (inverse (multiply (inverse (multiply ?56997 (inverse (multiply ?56998 (inverse (multiply ?56999 (inverse (multiply (inverse (multiply ?57000 ?57001)) (multiply ?57000 ?57001))))))))) (multiply ?56997 ?56999))) =>= ?56998 [57001, 57000, 56999, 56998, 56997] by Demod 6987 with 140 at 1,1,2,1,2,1,1,1,1,2
Id : 7302, {_}: inverse (inverse (multiply (inverse (multiply ?57173 (inverse (multiply ?57174 (inverse (multiply ?57175 (inverse (multiply (inverse (multiply (inverse (multiply ?57176 (inverse (multiply (inverse (inverse ?57177)) (inverse (multiply ?57178 (inverse (multiply (inverse ?57178) ?57178)))))))) (multiply ?57176 ?57178))) ?57177)))))))) (multiply ?57173 ?57175))) =>= ?57174 [57178, 57177, 57176, 57175, 57174, 57173] by Super 7283 with 11 at 2,1,2,1,2,1,2,1,1,1,1,2
Id : 7433, {_}: inverse (inverse (multiply (inverse (multiply ?57173 (inverse (multiply ?57174 (inverse (multiply ?57175 (inverse (multiply (inverse ?57177) ?57177)))))))) (multiply ?57173 ?57175))) =>= ?57174 [57177, 57175, 57174, 57173] by Demod 7302 with 2 at 1,1,2,1,2,1,2,1,1,1,1,2
Id : 7485, {_}: multiply ?58076 (inverse (multiply ?58077 (inverse (multiply (inverse ?58077) ?58077)))) =?= multiply ?58076 (inverse (multiply ?58077 (inverse (multiply (inverse ?58078) ?58078)))) [58078, 58077, 58076] by Super 1734 with 7433 at 1,2
Id : 8374, {_}: multiply (inverse (inverse (multiply (inverse (multiply ?64683 (inverse (multiply ?64684 (inverse (multiply (inverse ?64685) ?64685)))))) (multiply ?64683 ?64686)))) (inverse (multiply ?64686 (inverse (multiply (inverse ?64686) ?64686)))) =?= multiply ?64684 (inverse (multiply (inverse ?64684) ?64684)) [64686, 64685, 64684, 64683] by Super 1734 with 7485 at 1,1,1,1,1,2
Id : 8749, {_}: multiply ?64684 (inverse (multiply (inverse ?64685) ?64685)) =?= multiply ?64684 (inverse (multiply (inverse ?64684) ?64684)) [64685, 64684] by Demod 8374 with 1734 at 2
Id : 8815, {_}: inverse (multiply (inverse (inverse (multiply (inverse (multiply ?67872 (inverse (multiply (inverse ?67872) ?67872)))) (multiply ?67872 ?67873)))) (inverse (multiply ?67873 (inverse (multiply (inverse ?67873) ?67873))))) =?= inverse (multiply (inverse ?67874) ?67874) [67874, 67873, 67872] by Super 1723 with 8749 at 1,1,1,1,1,1,2
Id : 9225, {_}: inverse (multiply (inverse ?67872) ?67872) =?= inverse (multiply (inverse ?67874) ?67874) [67874, 67872] by Demod 8815 with 1723 at 2
Id : 9030, {_}: multiply (inverse (inverse (multiply (inverse (multiply ?69262 (inverse (multiply (inverse ?69262) ?69262)))) (multiply ?69262 ?69263)))) (inverse (multiply ?69263 (inverse (multiply (inverse ?69263) ?69263)))) =?= multiply (inverse ?69264) ?69264 [69264, 69263, 69262] by Super 1734 with 8749 at 1,1,1,1,1,2
Id : 9183, {_}: multiply (inverse ?69262) ?69262 =?= multiply (inverse ?69264) ?69264 [69264, 69262] by Demod 9030 with 1734 at 2
Id : 12179, {_}: inverse (multiply (inverse (inverse (multiply (inverse ?88672) ?88672))) (inverse (multiply ?88673 (inverse (multiply (inverse ?88673) ?88673))))) =>= ?88673 [88673, 88672] by Super 1723 with 9183 at 1,1,1,1,2
Id : 12213, {_}: inverse (multiply (inverse (inverse (multiply (inverse ?88894) ?88894))) (inverse (multiply ?88895 (inverse (multiply (inverse ?88896) ?88896))))) =>= ?88895 [88896, 88895, 88894] by Super 12179 with 9183 at 1,2,1,2,1,2
Id : 13701, {_}: inverse (multiply (inverse ?97964) ?97964) =?= inverse (inverse (multiply (inverse ?97965) ?97965)) [97965, 97964] by Super 9225 with 12213 at 3
Id : 34411, {_}: inverse (multiply (inverse (multiply (inverse ?202408) ?202408)) (inverse (multiply ?202409 (inverse (multiply (inverse ?202409) ?202409))))) =>= ?202409 [202409, 202408] by Super 1723 with 13701 at 1,1,2
Id : 9086, {_}: multiply ?69615 (inverse (multiply (inverse ?69616) ?69616)) =?= multiply ?69615 (inverse (multiply (inverse ?69615) ?69615)) [69616, 69615] by Demod 8374 with 1734 at 2
Id : 9126, {_}: multiply ?69879 (inverse (multiply (inverse ?69880) ?69880)) =?= multiply ?69879 (inverse (multiply (inverse ?69881) ?69881)) [69881, 69880, 69879] by Super 9086 with 8749 at 3
Id :  56, {_}: inverse (multiply (inverse (multiply ?444 (inverse (multiply (inverse ?445) (inverse (multiply (inverse (multiply (inverse (multiply ?446 (inverse (multiply ?447 (inverse (multiply ?448 (inverse (multiply (inverse ?448) ?448)))))))) (multiply ?446 ?448))) (inverse (multiply ?447 (multiply (inverse (multiply ?449 (inverse (multiply (inverse ?447) (inverse (multiply ?450 (inverse (multiply (inverse ?450) ?450)))))))) (multiply ?449 ?450)))))))))) (multiply ?444 (multiply (inverse (multiply ?449 (inverse (multiply (inverse ?447) (inverse (multiply ?450 (inverse (multiply (inverse ?450) ?450)))))))) (multiply ?449 ?450)))) =>= ?445 [450, 449, 448, 447, 446, 445, 444] by Super 31 with 5 at 1,1,2,1,2,1,1,1,2
Id : 14563, {_}: inverse (multiply (inverse (multiply ?103053 (inverse (multiply (inverse (inverse (multiply (inverse ?103054) ?103054))) (inverse (multiply (inverse (multiply (inverse (multiply ?103055 (inverse (multiply ?103056 (inverse (multiply ?103057 (inverse (multiply (inverse ?103057) ?103057)))))))) (multiply ?103055 ?103057))) (inverse (multiply ?103056 (multiply (inverse (multiply ?103058 (inverse (multiply (inverse ?103056) (inverse (multiply ?103059 (inverse (multiply (inverse ?103059) ?103059)))))))) (multiply ?103058 ?103059)))))))))) (multiply ?103053 (multiply (inverse (multiply ?103058 (inverse (multiply (inverse ?103056) (inverse (multiply ?103059 (inverse (multiply (inverse ?103059) ?103059)))))))) (multiply ?103058 ?103059)))) =?= multiply (inverse ?103060) ?103060 [103060, 103059, 103058, 103057, 103056, 103055, 103054, 103053] by Super 56 with 13701 at 1,1,2,1,1,1,2
Id : 14713, {_}: inverse (multiply (inverse ?103054) ?103054) =?= multiply (inverse ?103060) ?103060 [103060, 103054] by Demod 14563 with 56 at 2
Id : 15410, {_}: multiply ?107836 (inverse (multiply (inverse ?107837) ?107837)) =?= multiply ?107836 (multiply (inverse ?107838) ?107838) [107838, 107837, 107836] by Super 9126 with 14713 at 2,3
Id : 34485, {_}: inverse (multiply (inverse (multiply (inverse ?202808) ?202808)) (inverse (multiply (inverse (multiply (inverse ?202809) ?202809)) (inverse (multiply (inverse (inverse (multiply (inverse ?202809) ?202809))) (multiply (inverse ?202810) ?202810)))))) =>= inverse (multiply (inverse ?202809) ?202809) [202810, 202809, 202808] by Super 34411 with 15410 at 1,2,1,2,1,2
Id : 14824, {_}: multiply (inverse ?103830) ?103830 =?= inverse (inverse (multiply (inverse ?103831) ?103831)) [103831, 103830] by Super 12213 with 14713 at 2
Id : 24848, {_}: inverse (multiply (multiply (inverse ?160661) ?160661) (inverse (multiply ?160662 (inverse (multiply (inverse ?160662) ?160662))))) =>= ?160662 [160662, 160661] by Super 1723 with 14824 at 1,1,2
Id : 25277, {_}: inverse (multiply (multiply (inverse ?163120) ?163120) (inverse (multiply ?163121 (multiply (inverse ?163122) ?163122)))) =>= ?163121 [163122, 163121, 163120] by Super 24848 with 14713 at 2,1,2,1,2
Id : 25479, {_}: inverse (multiply (inverse (multiply (inverse ?164337) ?164337)) (inverse (multiply ?164338 (multiply (inverse ?164339) ?164339)))) =>= ?164338 [164339, 164338, 164337] by Super 25277 with 14713 at 1,1,2
Id : 35006, {_}: inverse (multiply (inverse (multiply (inverse ?204646) ?204646)) (inverse (inverse (multiply (inverse ?204647) ?204647)))) =>= inverse (multiply (inverse ?204647) ?204647) [204647, 204646] by Demod 34485 with 25479 at 2,1,2
Id : 35218, {_}: inverse (multiply (multiply (inverse ?205705) ?205705) (inverse (inverse (multiply (inverse ?205706) ?205706)))) =>= inverse (multiply (inverse ?205706) ?205706) [205706, 205705] by Super 35006 with 14713 at 1,1,2
Id : 35602, {_}: inverse (multiply (inverse (multiply ?206697 (inverse (multiply (inverse (multiply (inverse ?206698) ?206698)) (inverse (multiply (multiply (inverse (multiply ?206699 (inverse (multiply (inverse ?206700) (inverse (multiply ?206701 (inverse (multiply (inverse ?206701) ?206701)))))))) (multiply ?206699 ?206701)) (inverse (multiply ?206700 (multiply (inverse (multiply ?206699 (inverse (multiply (inverse ?206700) (inverse (multiply ?206701 (inverse (multiply (inverse ?206701) ?206701)))))))) (multiply ?206699 ?206701)))))))))) (multiply ?206697 (inverse (multiply (inverse (multiply ?206702 (inverse (multiply ?206700 (inverse (multiply ?206703 (inverse (multiply (inverse ?206703) ?206703)))))))) (multiply ?206702 ?206703))))) =?= multiply (multiply (inverse ?206704) ?206704) (inverse (inverse (multiply (inverse ?206698) ?206698))) [206704, 206703, 206702, 206701, 206700, 206699, 206698, 206697] by Super 39 with 35218 at 1,1,2,1,1,1,2
Id : 35866, {_}: multiply (inverse ?206698) ?206698 =<= multiply (multiply (inverse ?206704) ?206704) (inverse (inverse (multiply (inverse ?206698) ?206698))) [206704, 206698] by Demod 35602 with 39 at 2
Id : 36115, {_}: inverse (multiply (inverse (multiply (multiply (inverse ?208195) ?208195) (inverse (multiply (inverse ?208196) (inverse (multiply (inverse (inverse (multiply (inverse ?208197) ?208197))) (inverse (multiply (inverse (inverse (inverse (multiply (inverse ?208197) ?208197)))) (inverse (inverse (multiply (inverse ?208197) ?208197))))))))))) (multiply (inverse ?208197) ?208197)) =>= ?208196 [208197, 208196, 208195] by Super 2 with 35866 at 2,1,2
Id : 15929, {_}: inverse (multiply (multiply (inverse ?110579) ?110579) (inverse (multiply ?110580 (inverse (multiply (inverse ?110580) ?110580))))) =>= ?110580 [110580, 110579] by Super 1723 with 14824 at 1,1,2
Id : 24931, {_}: inverse (multiply (multiply (inverse ?161104) ?161104) (inverse (multiply ?161105 (multiply (inverse ?161106) ?161106)))) =>= ?161105 [161106, 161105, 161104] by Super 24848 with 14713 at 2,1,2,1,2
Id : 25816, {_}: inverse (multiply (multiply (inverse ?166039) ?166039) (inverse (multiply (inverse ?166040) ?166040))) =>= multiply (inverse ?166040) ?166040 [166040, 166039] by Super 15929 with 24931 at 2,1,2
Id : 25967, {_}: inverse (multiply (inverse (inverse (multiply (inverse ?166851) ?166851))) (inverse (multiply (inverse ?166852) ?166852))) =>= multiply (inverse ?166852) ?166852 [166852, 166851] by Super 25816 with 14824 at 1,1,2
Id : 36557, {_}: inverse (multiply (inverse (multiply (multiply (inverse ?208195) ?208195) (inverse (multiply (inverse ?208196) (multiply (inverse (inverse (inverse (multiply (inverse ?208197) ?208197)))) (inverse (inverse (multiply (inverse ?208197) ?208197)))))))) (multiply (inverse ?208197) ?208197)) =>= ?208196 [208197, 208196, 208195] by Demod 36115 with 25967 at 2,1,2,1,1,1,2
Id : 36558, {_}: inverse (multiply (inverse ?208196) (multiply (inverse ?208197) ?208197)) =>= ?208196 [208197, 208196] by Demod 36557 with 24931 at 1,1,2
Id : 37252, {_}: inverse (multiply (multiply (inverse ?211410) ?211410) ?211411) =>= inverse ?211411 [211411, 211410] by Super 24931 with 36558 at 2,1,2
Id : 40835, {_}: inverse (multiply (inverse ?231064) (multiply (inverse ?231065) ?231065)) =?= multiply (multiply (inverse ?231066) ?231066) ?231064 [231066, 231065, 231064] by Super 36558 with 37252 at 1,1,2
Id : 40960, {_}: ?231064 =<= multiply (multiply (inverse ?231066) ?231066) ?231064 [231066, 231064] by Demod 40835 with 36558 at 2
Id : 42184, {_}: a2 === a2 [] by Demod 1 with 40960 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP419-1.p
23570: solved GRP419-1.p in 75.644727 using nrkbo
23570: status Unsatisfiable for GRP419-1.p
NO CLASH, using fixed ground order
23595: Facts:
23595:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23595: Goal:
23595:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23595: Order:
23595:   nrkbo
23595: Leaf order:
23595:  b2 2 0 2 1,1,1,2
23595:  a2 2 0 2 2,2
23595:  inverse 8 1 1 0,1,1,2
23595:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
23596: Facts:
23596:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23596: Goal:
23596:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23596: Order:
23596:   kbo
23596: Leaf order:
23596:  b2 2 0 2 1,1,1,2
23596:  a2 2 0 2 2,2
23596:  inverse 8 1 1 0,1,1,2
23596:  multiply 8 2 2 0,2
NO CLASH, using fixed ground order
23597: Facts:
23597:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23597: Goal:
23597:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23597: Order:
23597:   lpo
23597: Leaf order:
23597:  b2 2 0 2 1,1,1,2
23597:  a2 2 0 2 2,2
23597:  inverse 8 1 1 0,1,1,2
23597:  multiply 8 2 2 0,2
% SZS status Timeout for GRP422-1.p
NO CLASH, using fixed ground order
23629: Facts:
23629:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23629: Goal:
23629:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23629: Order:
23629:   nrkbo
23629: Leaf order:
23629:  a3 2 0 2 1,1,2
23629:  b3 2 0 2 2,1,2
23629:  c3 2 0 2 2,2
23629:  inverse 7 1 0 
23629:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23630: Facts:
23630:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23630: Goal:
23630:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23630: Order:
23630:   kbo
23630: Leaf order:
23630:  a3 2 0 2 1,1,2
23630:  b3 2 0 2 2,1,2
23630:  c3 2 0 2 2,2
23630:  inverse 7 1 0 
23630:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23631: Facts:
23631:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (multiply (inverse ?4)
                        (inverse (multiply (inverse ?4) ?4)))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23631: Goal:
23631:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23631: Order:
23631:   lpo
23631: Leaf order:
23631:  a3 2 0 2 1,1,2
23631:  b3 2 0 2 2,1,2
23631:  c3 2 0 2 2,2
23631:  inverse 7 1 0 
23631:  multiply 10 2 4 0,2
% SZS status Timeout for GRP423-1.p
NO CLASH, using fixed ground order
23653: Facts:
23653:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23653: Goal:
23653:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23653: Order:
23653:   nrkbo
23653: Leaf order:
23653:  a3 2 0 2 1,1,2
23653:  b3 2 0 2 2,1,2
23653:  c3 2 0 2 2,2
23653:  inverse 5 1 0 
23653:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23654: Facts:
23654:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23654: Goal:
23654:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23654: Order:
23654:   kbo
23654: Leaf order:
23654:  a3 2 0 2 1,1,2
23654:  b3 2 0 2 2,1,2
23654:  c3 2 0 2 2,2
23654:  inverse 5 1 0 
23654:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23655: Facts:
23655:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply
                (multiply
                  (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4)))
                  ?5) (inverse (multiply ?3 ?5))))
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23655: Goal:
23655:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23655: Order:
23655:   lpo
23655: Leaf order:
23655:  a3 2 0 2 1,1,2
23655:  b3 2 0 2 2,1,2
23655:  c3 2 0 2 2,2
23655:  inverse 5 1 0 
23655:  multiply 10 2 4 0,2
Statistics :
Max weight : 62
Found proof, 11.852538s
% SZS status Unsatisfiable for GRP429-1.p
% SZS output start CNFRefutation for GRP429-1.p
Id :   2, {_}: multiply ?2 (inverse (multiply (multiply (inverse (multiply (inverse ?3) (multiply (inverse ?2) ?4))) ?5) (inverse (multiply ?3 ?5)))) =>= ?4 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   3, {_}: multiply ?7 (inverse (multiply (multiply (inverse (multiply (inverse ?8) (multiply (inverse ?7) ?9))) ?10) (inverse (multiply ?8 ?10)))) =>= ?9 [10, 9, 8, 7] by single_axiom ?7 ?8 ?9 ?10
Id :   6, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (inverse (multiply (inverse ?29) (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27))) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 30, 29, 28, 27, 26] by Super 3 with 2 at 1,1,2,2
Id :   5, {_}: multiply ?19 (inverse (multiply (multiply (inverse (multiply (inverse ?20) ?21)) ?22) (inverse (multiply ?20 ?22)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?23) (multiply (inverse (inverse ?19)) ?21))) ?24) (inverse (multiply ?23 ?24))) [24, 23, 22, 21, 20, 19] by Super 3 with 2 at 2,1,1,1,1,2,2
Id :  28, {_}: multiply (inverse ?215) (multiply ?215 (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216, 215] by Super 2 with 5 at 2,2
Id :  29, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?220) (multiply (inverse (inverse ?221)) (multiply (inverse ?221) ?222)))) ?223) (inverse (multiply ?220 ?223))) =>= ?222 [223, 222, 221, 220] by Super 2 with 5 at 2
Id : 287, {_}: multiply (inverse ?2293) (multiply ?2293 ?2294) =?= multiply (inverse (inverse ?2295)) (multiply (inverse ?2295) ?2294) [2295, 2294, 2293] by Super 28 with 29 at 2,2,2
Id : 136, {_}: multiply (inverse ?1148) (multiply ?1148 ?1149) =?= multiply (inverse (inverse ?1150)) (multiply (inverse ?1150) ?1149) [1150, 1149, 1148] by Super 28 with 29 at 2,2,2
Id : 301, {_}: multiply (inverse ?2384) (multiply ?2384 ?2385) =?= multiply (inverse ?2386) (multiply ?2386 ?2385) [2386, 2385, 2384] by Super 287 with 136 at 3
Id : 356, {_}: multiply (inverse ?2583) (multiply ?2583 (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584, 2583] by Super 28 with 301 at 1,1,1,1,2,2,2
Id : 679, {_}: multiply ?5168 (inverse (multiply (multiply (inverse (multiply (inverse ?5169) (multiply ?5169 ?5170))) ?5171) (inverse (multiply (inverse ?5168) ?5171)))) =>= ?5170 [5171, 5170, 5169, 5168] by Super 2 with 301 at 1,1,1,1,2,2
Id : 2910, {_}: multiply ?23936 (inverse (multiply (multiply (inverse (multiply (inverse ?23937) (multiply ?23937 ?23938))) (multiply ?23936 ?23939)) (inverse (multiply (inverse ?23940) (multiply ?23940 ?23939))))) =>= ?23938 [23940, 23939, 23938, 23937, 23936] by Super 679 with 301 at 1,2,1,2,2
Id : 2996, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse (multiply (inverse ?24705) (multiply ?24705 (inverse (multiply (multiply (inverse (multiply (inverse ?24706) ?24704)) ?24707) (inverse (multiply ?24706 ?24707))))))))) =>= ?24703 [24707, 24706, 24705, 24704, 24703, 24702] by Super 2910 with 28 at 1,1,2,2
Id : 3034, {_}: multiply (multiply (inverse ?24702) (multiply ?24702 ?24703)) (inverse (multiply ?24704 (inverse ?24704))) =>= ?24703 [24704, 24703, 24702] by Demod 2996 with 28 at 1,2,1,2,2
Id : 3426, {_}: multiply (inverse (multiply (inverse ?29536) (multiply ?29536 ?29537))) ?29537 =?= multiply (inverse (multiply (inverse ?29538) (multiply ?29538 ?29539))) ?29539 [29539, 29538, 29537, 29536] by Super 356 with 3034 at 2,2
Id : 3726, {_}: multiply (inverse (inverse (multiply (inverse ?31745) (multiply ?31745 (inverse (multiply (multiply (inverse (multiply (inverse ?31746) ?31747)) ?31748) (inverse (multiply ?31746 ?31748)))))))) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31748, 31747, 31746, 31745] by Super 28 with 3426 at 2,2
Id : 3919, {_}: multiply (inverse (inverse ?31747)) (multiply (inverse (multiply (inverse ?31749) (multiply ?31749 ?31750))) ?31750) =>= ?31747 [31750, 31749, 31747] by Demod 3726 with 28 at 1,1,1,2
Id :  91, {_}: multiply (inverse ?821) (multiply ?821 (inverse (multiply (multiply (inverse (multiply (inverse ?822) ?823)) ?824) (inverse (multiply ?822 ?824))))) =>= ?823 [824, 823, 822, 821] by Super 2 with 5 at 2,2
Id : 107, {_}: multiply (inverse ?949) (multiply ?949 (multiply ?950 (inverse (multiply (multiply (inverse (multiply (inverse ?951) ?952)) ?953) (inverse (multiply ?951 ?953)))))) =>= multiply (inverse (inverse ?950)) ?952 [953, 952, 951, 950, 949] by Super 91 with 5 at 2,2,2
Id : 3966, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse (multiply (inverse ?33636) (multiply ?33636 (inverse (multiply (multiply (inverse (multiply (inverse ?33637) ?33638)) ?33639) (inverse (multiply ?33637 ?33639))))))))) ?33638 [33639, 33638, 33637, 33636, 33635] by Super 107 with 3919 at 2,2
Id : 4117, {_}: multiply (inverse (inverse (inverse ?33635))) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 3966 with 28 at 1,1,1,1,3
Id : 4346, {_}: multiply (inverse (inverse ?35898)) (multiply (inverse (multiply (inverse (inverse (inverse (inverse ?35899)))) (multiply (inverse (inverse (inverse ?35900))) ?35900))) ?35899) =>= ?35898 [35900, 35899, 35898] by Super 3919 with 4117 at 2,1,1,2,2
Id : 3965, {_}: multiply (inverse ?33628) (multiply ?33628 (multiply ?33629 (inverse (multiply (multiply (inverse ?33630) ?33631) (inverse (multiply (inverse ?33630) ?33631)))))) =?= multiply (inverse (inverse ?33629)) (multiply (inverse (multiply (inverse ?33632) (multiply ?33632 ?33633))) ?33633) [33633, 33632, 33631, 33630, 33629, 33628] by Super 107 with 3919 at 1,1,1,1,2,2,2,2
Id : 6632, {_}: multiply (inverse ?52916) (multiply ?52916 (multiply ?52917 (inverse (multiply (multiply (inverse ?52918) ?52919) (inverse (multiply (inverse ?52918) ?52919)))))) =>= ?52917 [52919, 52918, 52917, 52916] by Demod 3965 with 3919 at 3
Id : 6641, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply (multiply (inverse ?52994) (inverse (multiply (multiply (inverse (multiply (inverse ?52995) (multiply (inverse (inverse ?52994)) ?52996))) ?52997) (inverse (multiply ?52995 ?52997))))) (inverse ?52996))))) =>= ?52993 [52997, 52996, 52995, 52994, 52993, 52992] by Super 6632 with 2 at 1,2,1,2,2,2,2
Id : 6773, {_}: multiply (inverse ?52992) (multiply ?52992 (multiply ?52993 (inverse (multiply ?52996 (inverse ?52996))))) =>= ?52993 [52996, 52993, 52992] by Demod 6641 with 2 at 1,1,2,2,2,2
Id : 6832, {_}: multiply (inverse (inverse ?53817)) (multiply (inverse ?53818) (multiply ?53818 (inverse (multiply ?53819 (inverse ?53819))))) =>= ?53817 [53819, 53818, 53817] by Super 4346 with 6773 at 1,1,2,2
Id :   4, {_}: multiply ?12 (inverse (multiply (multiply (inverse (multiply (inverse ?13) (multiply (inverse ?12) ?14))) (inverse (multiply (multiply (inverse (multiply (inverse ?15) (multiply (inverse ?13) ?16))) ?17) (inverse (multiply ?15 ?17))))) (inverse ?16))) =>= ?14 [17, 16, 15, 14, 13, 12] by Super 3 with 2 at 1,2,1,2,2
Id :   9, {_}: multiply ?44 (inverse (multiply (multiply (inverse (multiply (inverse ?45) ?46)) ?47) (inverse (multiply ?45 ?47)))) =?= inverse (multiply (multiply (inverse (multiply (inverse ?48) (multiply (inverse (inverse ?44)) ?46))) (inverse (multiply (multiply (inverse (multiply (inverse ?49) (multiply (inverse ?48) ?50))) ?51) (inverse (multiply ?49 ?51))))) (inverse ?50)) [51, 50, 49, 48, 47, 46, 45, 44] by Super 2 with 4 at 2,1,1,1,1,2,2
Id : 7754, {_}: multiply ?63171 (inverse (multiply (multiply (inverse (multiply (inverse ?63172) (multiply (inverse ?63171) (inverse (multiply ?63173 (inverse ?63173)))))) ?63174) (inverse (multiply ?63172 ?63174)))) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63174, 63173, 63172, 63171] by Super 9 with 6832 at 1,1,1,1,3
Id : 7872, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply (multiply (inverse ?63175) (inverse (multiply (multiply (inverse (multiply (inverse ?63176) (multiply (inverse (inverse ?63175)) ?63177))) ?63178) (inverse (multiply ?63176 ?63178))))) (inverse ?63177)) [63178, 63177, 63176, 63175, 63173] by Demod 7754 with 2 at 2
Id : 7873, {_}: inverse (multiply ?63173 (inverse ?63173)) =?= inverse (multiply ?63177 (inverse ?63177)) [63177, 63173] by Demod 7872 with 2 at 1,1,3
Id : 8249, {_}: multiply (inverse (inverse (multiply ?66459 (inverse ?66459)))) (multiply (inverse ?66460) (multiply ?66460 (inverse (multiply ?66461 (inverse ?66461))))) =?= multiply ?66462 (inverse ?66462) [66462, 66461, 66460, 66459] by Super 6832 with 7873 at 1,1,2
Id : 8282, {_}: multiply ?66459 (inverse ?66459) =?= multiply ?66462 (inverse ?66462) [66462, 66459] by Demod 8249 with 6832 at 2
Id : 8520, {_}: multiply (multiply (inverse ?67970) (multiply ?67971 (inverse ?67971))) (inverse (multiply ?67972 (inverse ?67972))) =>= inverse ?67970 [67972, 67971, 67970] by Super 3034 with 8282 at 2,1,2
Id : 380, {_}: multiply ?2743 (inverse (multiply (multiply (inverse ?2744) (multiply ?2744 ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2744, 2743] by Super 2 with 301 at 1,1,2,2
Id : 8912, {_}: multiply ?70596 (inverse (multiply (multiply (inverse ?70597) (multiply ?70597 (inverse (multiply ?70598 (inverse ?70598))))) (inverse (multiply ?70599 (inverse ?70599))))) =>= inverse (inverse ?70596) [70599, 70598, 70597, 70596] by Super 380 with 8520 at 2,1,2,1,2,2
Id : 9021, {_}: multiply ?70596 (inverse (inverse (multiply ?70598 (inverse ?70598)))) =>= inverse (inverse ?70596) [70598, 70596] by Demod 8912 with 3034 at 1,2,2
Id : 9165, {_}: multiply (inverse (inverse ?72171)) (multiply (inverse (multiply (inverse ?72172) (inverse (inverse ?72172)))) (inverse (inverse (multiply ?72173 (inverse ?72173))))) =>= ?72171 [72173, 72172, 72171] by Super 3919 with 9021 at 2,1,1,2,2
Id : 10068, {_}: multiply (inverse (inverse ?76580)) (inverse (inverse (inverse (multiply (inverse ?76581) (inverse (inverse ?76581)))))) =>= ?76580 [76581, 76580] by Demod 9165 with 9021 at 2,2
Id : 9180, {_}: multiply ?72234 (inverse ?72234) =?= inverse (inverse (inverse (multiply ?72235 (inverse ?72235)))) [72235, 72234] by Super 8282 with 9021 at 3
Id : 10100, {_}: multiply (inverse (inverse ?76745)) (multiply ?76746 (inverse ?76746)) =>= ?76745 [76746, 76745] by Super 10068 with 9180 at 2,2
Id : 10663, {_}: multiply ?82289 (inverse (multiply ?82290 (inverse ?82290))) =>= inverse (inverse ?82289) [82290, 82289] by Super 8520 with 10100 at 1,2
Id : 10913, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (inverse (multiply (inverse ?83564) (multiply ?83564 (inverse (multiply ?83565 (inverse ?83565)))))))) =>= ?83563 [83565, 83564, 83563] by Super 3919 with 10663 at 2,2
Id : 10892, {_}: inverse (inverse (multiply (inverse ?24702) (multiply ?24702 ?24703))) =>= ?24703 [24703, 24702] by Demod 3034 with 10663 at 2
Id : 11238, {_}: multiply (inverse (inverse ?83563)) (inverse (inverse (multiply ?83565 (inverse ?83565)))) =>= ?83563 [83565, 83563] by Demod 10913 with 10892 at 1,2,2
Id : 11239, {_}: inverse (inverse (inverse (inverse ?83563))) =>= ?83563 [83563] by Demod 11238 with 9021 at 2
Id : 138, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1160) (multiply (inverse (inverse ?1161)) (multiply (inverse ?1161) ?1162)))) ?1163) (inverse (multiply ?1160 ?1163))) =>= ?1162 [1163, 1162, 1161, 1160] by Super 2 with 5 at 2
Id : 145, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?1214) (multiply (inverse (inverse ?1215)) (multiply (inverse ?1215) ?1216)))) ?1217) (inverse (multiply ?1214 ?1217))))) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1217, 1216, 1215, 1214, 1213] by Super 138 with 29 at 1,2,2,1,1,1,1,2
Id : 168, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?1213) (multiply (inverse ?1216) (multiply ?1216 ?1218)))) ?1219) (inverse (multiply ?1213 ?1219))) =>= ?1218 [1219, 1218, 1216, 1213] by Demod 145 with 29 at 1,1,2,1,1,1,1,2
Id : 777, {_}: multiply (inverse ?5891) (multiply ?5891 (multiply ?5892 (inverse (multiply (multiply (inverse (multiply (inverse ?5893) ?5894)) ?5895) (inverse (multiply ?5893 ?5895)))))) =>= multiply (inverse (inverse ?5892)) ?5894 [5895, 5894, 5893, 5892, 5891] by Super 91 with 5 at 2,2,2
Id : 813, {_}: multiply (inverse ?6211) (multiply ?6211 (multiply ?6212 ?6213)) =?= multiply (inverse (inverse ?6212)) (multiply (inverse ?6214) (multiply ?6214 ?6213)) [6214, 6213, 6212, 6211] by Super 777 with 168 at 2,2,2,2
Id : 1401, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11491) (multiply ?11491 (multiply ?11492 ?11493)))) ?11494) (inverse (multiply (inverse ?11492) ?11494))) =>= ?11493 [11494, 11493, 11492, 11491] by Super 168 with 813 at 1,1,1,1,2
Id : 1427, {_}: inverse (multiply (multiply (inverse (multiply (inverse ?11709) (multiply ?11709 (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710, 11709] by Super 1401 with 301 at 2,2,1,1,1,1,2
Id : 10889, {_}: multiply (inverse ?52992) (multiply ?52992 (inverse (inverse ?52993))) =>= ?52993 [52993, 52992] by Demod 6773 with 10663 at 2,2,2
Id : 11440, {_}: multiply (inverse ?85947) (multiply ?85947 ?85948) =>= inverse (inverse ?85948) [85948, 85947] by Super 10889 with 11239 at 2,2,2
Id : 12070, {_}: inverse (multiply (multiply (inverse (inverse (inverse (multiply (inverse ?11710) (multiply ?11710 ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711, 11710] by Demod 1427 with 11440 at 1,1,1,1,2
Id : 12071, {_}: inverse (multiply (multiply (inverse (inverse (inverse (inverse (inverse ?11711))))) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12070 with 11440 at 1,1,1,1,1,1,2
Id : 12086, {_}: inverse (multiply (multiply (inverse ?11711) ?11712) (inverse (multiply (inverse (inverse ?11713)) ?11712))) =>= multiply ?11713 ?11711 [11713, 11712, 11711] by Demod 12071 with 11239 at 1,1,1,2
Id : 11284, {_}: multiply ?84907 (inverse (multiply (inverse (inverse (inverse ?84908))) ?84908)) =>= inverse (inverse ?84907) [84908, 84907] by Super 10663 with 11239 at 2,1,2,2
Id : 12456, {_}: inverse (inverse (inverse (multiply (inverse ?89511) ?89512))) =>= multiply (inverse ?89512) ?89511 [89512, 89511] by Super 12086 with 11284 at 1,2
Id : 12807, {_}: inverse (multiply (inverse ?89891) ?89892) =>= multiply (inverse ?89892) ?89891 [89892, 89891] by Super 11239 with 12456 at 1,2
Id : 13084, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (inverse (multiply (inverse (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?27)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 6 with 12807 at 1,1,1,2,1,2,1,2,2
Id : 13085, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (inverse (multiply (inverse ?28) (multiply (inverse ?26) ?30)))) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13084 with 12807 at 1,1,1,1,2,1,2,1,2,2
Id : 13086, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (inverse (multiply (inverse ?26) ?30)) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13085 with 12807 at 2,1,1,1,1,2,1,2,1,2,2
Id : 13087, {_}: multiply ?26 (inverse (multiply ?27 (inverse (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31)))))))) =>= ?30 [31, 29, 30, 28, 27, 26] by Demod 13086 with 12807 at 1,2,1,1,1,1,2,1,2,1,2,2
Id : 12072, {_}: multiply ?2743 (inverse (multiply (inverse (inverse ?2745)) (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745))))) =>= ?2747 [2747, 2746, 2745, 2743] by Demod 380 with 11440 at 1,1,2,2
Id : 13068, {_}: multiply ?2743 (multiply (inverse (inverse (multiply ?2746 (multiply (multiply (inverse ?2746) (multiply (inverse ?2743) ?2747)) ?2745)))) (inverse ?2745)) =>= ?2747 [2745, 2747, 2746, 2743] by Demod 12072 with 12807 at 2,2
Id : 358, {_}: multiply (inverse ?2595) (multiply ?2595 (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596, 2595] by Super 28 with 301 at 1,1,2,2,2
Id : 12055, {_}: inverse (inverse (inverse (multiply (multiply (inverse ?2596) (multiply ?2596 ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597, 2596] by Demod 358 with 11440 at 2
Id : 12056, {_}: inverse (inverse (inverse (multiply (inverse (inverse ?2597)) (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))))) =>= ?2599 [2599, 2598, 2597] by Demod 12055 with 11440 at 1,1,1,1,2
Id : 12778, {_}: multiply (inverse (inverse (multiply ?2598 (multiply (multiply (inverse ?2598) ?2599) ?2597)))) (inverse ?2597) =>= ?2599 [2597, 2599, 2598] by Demod 12056 with 12456 at 2
Id : 13130, {_}: multiply ?2743 (multiply (inverse ?2743) ?2747) =>= ?2747 [2747, 2743] by Demod 13068 with 12778 at 2,2
Id : 12068, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?2584) (multiply ?2584 ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585, 2584] by Demod 356 with 11440 at 2
Id : 12069, {_}: inverse (inverse (inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12068 with 11440 at 1,1,1,1,1,1,2
Id : 12343, {_}: inverse (inverse (inverse (inverse (inverse (multiply (inverse (inverse (inverse ?88665))) ?88666))))) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Super 12069 with 11284 at 1,1,1,2
Id : 12705, {_}: inverse (multiply (inverse (inverse (inverse ?88665))) ?88666) =>= multiply (inverse (inverse (inverse ?88666))) ?88665 [88666, 88665] by Demod 12343 with 11239 at 2
Id : 13398, {_}: multiply (inverse ?88666) (inverse (inverse ?88665)) =?= multiply (inverse (inverse (inverse ?88666))) ?88665 [88665, 88666] by Demod 12705 with 12807 at 2
Id : 13591, {_}: multiply (inverse ?93455) (inverse (inverse (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456))) =>= ?93456 [93456, 93455] by Super 13130 with 13398 at 2
Id : 13688, {_}: multiply (inverse ?93455) (inverse (multiply (inverse ?93456) (inverse (inverse (inverse ?93455))))) =>= ?93456 [93456, 93455] by Demod 13591 with 12807 at 1,2,2
Id : 13689, {_}: multiply (inverse ?93455) (multiply (inverse (inverse (inverse (inverse ?93455)))) ?93456) =>= ?93456 [93456, 93455] by Demod 13688 with 12807 at 2,2
Id : 13690, {_}: multiply (inverse ?93455) (multiply ?93455 ?93456) =>= ?93456 [93456, 93455] by Demod 13689 with 11239 at 1,2,2
Id : 13691, {_}: inverse (inverse ?93456) =>= ?93456 [93456] by Demod 13690 with 11440 at 2
Id : 14259, {_}: inverse (multiply ?94937 ?94938) =<= multiply (inverse ?94938) (inverse ?94937) [94938, 94937] by Super 12807 with 13691 at 1,1,2
Id : 14272, {_}: inverse (multiply ?94994 (inverse ?94995)) =>= multiply ?94995 (inverse ?94994) [94995, 94994] by Super 14259 with 13691 at 1,3
Id : 15113, {_}: multiply ?26 (multiply (multiply ?28 (inverse (multiply (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31) (inverse (multiply ?29 ?31))))) (inverse ?27)) =>= ?30 [31, 29, 30, 27, 28, 26] by Demod 13087 with 14272 at 2,2
Id : 15114, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (multiply (inverse ?27) (multiply (multiply (inverse ?30) ?26) ?28)) ?29) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15113 with 14272 at 2,1,2,2
Id : 14099, {_}: inverse (multiply ?94283 ?94284) =<= multiply (inverse ?94284) (inverse ?94283) [94284, 94283] by Super 12807 with 13691 at 1,1,2
Id : 15376, {_}: multiply ?101449 (inverse (multiply ?101450 ?101449)) =>= inverse ?101450 [101450, 101449] by Super 13130 with 14099 at 2,2
Id : 14196, {_}: multiply ?94524 (inverse (multiply ?94525 ?94524)) =>= inverse ?94525 [94525, 94524] by Super 13130 with 14099 at 2,2
Id : 15386, {_}: multiply (inverse (multiply ?101486 ?101487)) (inverse (inverse ?101486)) =>= inverse ?101487 [101487, 101486] by Super 15376 with 14196 at 1,2,2
Id : 15574, {_}: inverse (multiply (inverse ?101486) (multiply ?101486 ?101487)) =>= inverse ?101487 [101487, 101486] by Demod 15386 with 14099 at 2
Id : 16040, {_}: multiply (inverse (multiply ?103094 ?103095)) ?103094 =>= inverse ?103095 [103095, 103094] by Demod 15574 with 12807 at 2
Id : 12061, {_}: inverse (inverse (inverse (multiply (multiply (inverse (multiply (inverse ?216) ?217)) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 217, 216] by Demod 28 with 11440 at 2
Id : 13066, {_}: inverse (inverse (inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))))) =>= ?217 [218, 216, 217] by Demod 12061 with 12807 at 1,1,1,1,1,2
Id : 14035, {_}: inverse (multiply (multiply (multiply (inverse ?217) ?216) ?218) (inverse (multiply ?216 ?218))) =>= ?217 [218, 216, 217] by Demod 13066 with 13691 at 2
Id : 15129, {_}: multiply (multiply ?216 ?218) (inverse (multiply (multiply (inverse ?217) ?216) ?218)) =>= ?217 [217, 218, 216] by Demod 14035 with 14272 at 2
Id : 16059, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= inverse (inverse (multiply (multiply (inverse ?103200) ?103201) ?103202)) [103202, 103201, 103200] by Super 16040 with 15129 at 1,1,2
Id : 16156, {_}: multiply (inverse ?103200) (multiply ?103201 ?103202) =<= multiply (multiply (inverse ?103200) ?103201) ?103202 [103202, 103201, 103200] by Demod 16059 with 13691 at 3
Id : 17066, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29)) ?31)))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 15114 with 16156 at 1,1,2,2,1,2,2
Id : 17067, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (multiply (inverse ?30) ?26) ?28) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17066 with 16156 at 1,2,2,1,2,2
Id : 17068, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (multiply (inverse ?30) (multiply ?26 ?28)) ?29) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17067 with 16156 at 1,1,2,1,2,2,1,2,2
Id : 17069, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (multiply (inverse ?30) (multiply (multiply ?26 ?28) ?29)) ?31))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17068 with 16156 at 1,2,1,2,2,1,2,2
Id : 17070, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (inverse (multiply (inverse ?27) (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31)))))) (inverse ?27)) =>= ?30 [30, 27, 31, 29, 28, 26] by Demod 17069 with 16156 at 2,1,2,2,1,2,2
Id : 17075, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (inverse ?30) (multiply (multiply (multiply ?26 ?28) ?29) ?31))) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17070 with 12807 at 2,2,1,2,2
Id : 17076, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) ?30) ?27))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17075 with 12807 at 1,2,2,1,2,2
Id : 17077, {_}: multiply ?26 (multiply (multiply ?28 (multiply (multiply ?29 ?31) (multiply (inverse (multiply (multiply (multiply ?26 ?28) ?29) ?31)) (multiply ?30 ?27)))) (inverse ?27)) =>= ?30 [27, 30, 31, 29, 28, 26] by Demod 17076 with 16156 at 2,2,1,2,2
Id : 14023, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse (inverse (inverse ?33638))) ?33638 [33638, 33635] by Demod 4117 with 13691 at 1,2
Id : 14024, {_}: multiply (inverse ?33635) ?33635 =?= multiply (inverse ?33638) ?33638 [33638, 33635] by Demod 14023 with 13691 at 1,3
Id : 14053, {_}: multiply (inverse ?93965) ?93965 =?= multiply ?93966 (inverse ?93966) [93966, 93965] by Super 14024 with 13691 at 1,3
Id : 19206, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply (multiply ?108861 ?108862) (multiply ?108863 (inverse ?108863)))) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108863, 108862, 108861, 108860, 108859] by Super 17077 with 14053 at 2,2,1,2,2
Id : 14021, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= inverse (inverse ?70596) [70598, 70596] by Demod 9021 with 13691 at 2,2
Id : 14022, {_}: multiply ?70596 (multiply ?70598 (inverse ?70598)) =>= ?70596 [70598, 70596] by Demod 14021 with 13691 at 3
Id : 19669, {_}: multiply ?108859 (multiply (multiply ?108860 (multiply ?108861 ?108862)) (inverse ?108862)) =>= multiply (multiply ?108859 ?108860) ?108861 [108862, 108861, 108860, 108859] by Demod 19206 with 14022 at 2,1,2,2
Id : 14028, {_}: inverse (multiply (multiply (inverse (inverse (inverse ?2585))) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 12069 with 13691 at 2
Id : 14029, {_}: inverse (multiply (multiply (inverse ?2585) ?2586) (inverse (multiply ?2587 ?2586))) =>= multiply ?2587 ?2585 [2587, 2586, 2585] by Demod 14028 with 13691 at 1,1,1,2
Id : 15108, {_}: multiply (multiply ?2587 ?2586) (inverse (multiply (inverse ?2585) ?2586)) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 14029 with 14272 at 2
Id : 15134, {_}: multiply (multiply ?2587 ?2586) (multiply (inverse ?2586) ?2585) =>= multiply ?2587 ?2585 [2585, 2586, 2587] by Demod 15108 with 12807 at 2,2
Id : 15575, {_}: multiply (inverse (multiply ?101486 ?101487)) ?101486 =>= inverse ?101487 [101487, 101486] by Demod 15574 with 12807 at 2
Id : 16032, {_}: multiply (multiply ?103052 (multiply ?103053 ?103054)) (inverse ?103054) =>= multiply ?103052 ?103053 [103054, 103053, 103052] by Super 15134 with 15575 at 2,2
Id : 32860, {_}: multiply ?108859 (multiply ?108860 ?108861) =?= multiply (multiply ?108859 ?108860) ?108861 [108861, 108860, 108859] by Demod 19669 with 16032 at 2,2
Id : 33337, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 32860 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP429-1.p
23653: solved GRP429-1.p in 11.596724 using nrkbo
23653: status Unsatisfiable for GRP429-1.p
NO CLASH, using fixed ground order
23669: Facts:
23669:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23669: Goal:
23669:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23669: Order:
23669:   nrkbo
23669: Leaf order:
23669:  a3 2 0 2 1,1,2
23669:  b3 2 0 2 2,1,2
23669:  c3 2 0 2 2,2
23669:  inverse 3 1 0 
23669:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23670: Facts:
23670:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23670: Goal:
23670:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23670: Order:
23670:   kbo
23670: Leaf order:
23670:  a3 2 0 2 1,1,2
23670:  b3 2 0 2 2,1,2
23670:  c3 2 0 2 2,2
23670:  inverse 3 1 0 
23670:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
23671: Facts:
23671:  Id :   2, {_}:
          inverse
            (multiply ?2
              (multiply ?3
                (multiply (multiply ?4 (inverse ?4))
                  (inverse (multiply ?5 (multiply ?2 ?3))))))
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23671: Goal:
23671:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23671: Order:
23671:   lpo
23671: Leaf order:
23671:  a3 2 0 2 1,1,2
23671:  b3 2 0 2 2,1,2
23671:  c3 2 0 2 2,2
23671:  inverse 3 1 0 
23671:  multiply 10 2 4 0,2
Statistics :
Max weight : 52
Found proof, 56.465480s
% SZS status Unsatisfiable for GRP444-1.p
% SZS output start CNFRefutation for GRP444-1.p
Id :   3, {_}: inverse (multiply ?7 (multiply ?8 (multiply (multiply ?9 (inverse ?9)) (inverse (multiply ?10 (multiply ?7 ?8)))))) =>= ?10 [10, 9, 8, 7] by single_axiom ?7 ?8 ?9 ?10
Id :   2, {_}: inverse (multiply ?2 (multiply ?3 (multiply (multiply ?4 (inverse ?4)) (inverse (multiply ?5 (multiply ?2 ?3)))))) =>= ?5 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   5, {_}: inverse (multiply ?18 (multiply ?19 (multiply (multiply (multiply ?20 (multiply ?21 (multiply (multiply ?22 (inverse ?22)) (inverse (multiply ?23 (multiply ?20 ?21)))))) ?23) (inverse (multiply ?24 (multiply ?18 ?19)))))) =>= ?24 [24, 23, 22, 21, 20, 19, 18] by Super 3 with 2 at 2,1,2,2,1,2
Id :   4, {_}: inverse (multiply ?12 (multiply (multiply (multiply ?13 (inverse ?13)) (inverse (multiply ?14 (multiply ?15 ?12)))) (multiply (multiply ?16 (inverse ?16)) ?14))) =>= ?15 [16, 15, 14, 13, 12] by Super 3 with 2 at 2,2,2,1,2
Id :   7, {_}: inverse (multiply (multiply (multiply ?28 (inverse ?28)) (inverse (multiply ?29 (multiply ?30 ?31)))) (multiply (multiply (multiply ?32 (inverse ?32)) ?29) (multiply (multiply ?33 (inverse ?33)) ?30))) =>= ?31 [33, 32, 31, 30, 29, 28] by Super 2 with 4 at 2,2,2,1,2
Id :   9, {_}: inverse (multiply ?44 (multiply (multiply (multiply ?45 (inverse ?45)) (inverse (multiply ?46 (multiply ?47 ?44)))) (multiply (multiply ?48 (inverse ?48)) ?46))) =>= ?47 [48, 47, 46, 45, 44] by Super 3 with 2 at 2,2,2,1,2
Id :  13, {_}: inverse (multiply (multiply (multiply ?76 (inverse ?76)) ?77) (multiply (multiply (multiply ?78 (inverse ?78)) ?79) (multiply (multiply ?80 (inverse ?80)) ?81))) =?= multiply (multiply ?82 (inverse ?82)) (inverse (multiply ?77 (multiply ?79 ?81))) [82, 81, 80, 79, 78, 77, 76] by Super 9 with 4 at 2,1,2,1,2
Id : 178, {_}: multiply (multiply ?1864 (inverse ?1864)) (inverse (multiply (inverse (multiply ?1865 (multiply ?1866 ?1867))) (multiply ?1865 ?1866))) =>= ?1867 [1867, 1866, 1865, 1864] by Super 7 with 13 at 2
Id : 184, {_}: multiply (multiply ?1909 (inverse ?1909)) (inverse (multiply ?1910 (multiply ?1911 (multiply (multiply ?1912 (inverse ?1912)) (inverse (multiply ?1913 (multiply ?1910 ?1911))))))) =?= multiply (multiply ?1914 (inverse ?1914)) ?1913 [1914, 1913, 1912, 1911, 1910, 1909] by Super 178 with 4 at 1,1,2,2
Id : 205, {_}: multiply (multiply ?1909 (inverse ?1909)) ?1913 =?= multiply (multiply ?1914 (inverse ?1914)) ?1913 [1914, 1913, 1909] by Demod 184 with 2 at 2,2
Id : 277, {_}: inverse (multiply ?2556 (multiply ?2557 (multiply (multiply (multiply ?2558 (multiply ?2559 (multiply (multiply ?2560 (inverse ?2560)) (inverse (multiply ?2561 (multiply ?2558 ?2559)))))) ?2561) (inverse (multiply (multiply ?2562 (inverse ?2562)) (multiply ?2556 ?2557)))))) =?= multiply ?2563 (inverse ?2563) [2563, 2562, 2561, 2560, 2559, 2558, 2557, 2556] by Super 5 with 205 at 1,2,2,2,1,2
Id : 348, {_}: multiply ?2562 (inverse ?2562) =?= multiply ?2563 (inverse ?2563) [2563, 2562] by Demod 277 with 5 at 2
Id : 1129, {_}: inverse (multiply ?9239 (multiply (inverse ?9239) (multiply (multiply ?9240 (inverse ?9240)) (inverse (multiply ?9241 (multiply ?9242 (inverse ?9242))))))) =>= ?9241 [9242, 9241, 9240, 9239] by Super 2 with 348 at 2,1,2,2,2,1,2
Id :  86, {_}: multiply (multiply ?817 (inverse ?817)) (inverse (multiply (inverse (multiply ?818 (multiply ?819 ?820))) (multiply ?818 ?819))) =>= ?820 [820, 819, 818, 817] by Super 7 with 13 at 2
Id : 1168, {_}: inverse (multiply ?9548 (multiply (inverse ?9548) ?9549)) =?= inverse (multiply ?9550 (multiply (inverse ?9550) ?9549)) [9550, 9549, 9548] by Super 1129 with 86 at 2,2,1,2
Id : 3826, {_}: inverse (multiply (inverse ?28880) (multiply ?28881 (multiply (multiply ?28882 (inverse ?28882)) (inverse (multiply ?28883 (multiply (inverse ?28883) ?28881)))))) =>= ?28880 [28883, 28882, 28881, 28880] by Super 2 with 1168 at 2,2,2,1,2
Id : 529, {_}: multiply (multiply ?4511 (inverse ?4511)) (inverse (multiply (inverse (multiply ?4512 (multiply (inverse ?4512) ?4513))) (multiply ?4514 (inverse ?4514)))) =>= ?4513 [4514, 4513, 4512, 4511] by Super 86 with 348 at 2,1,2,2
Id : 3910, {_}: inverse (multiply (inverse ?29502) (multiply (inverse (inverse (inverse (multiply ?29503 (multiply (inverse ?29503) ?29504))))) ?29504)) =>= ?29502 [29504, 29503, 29502] by Super 3826 with 529 at 2,2,1,2
Id : 5137, {_}: inverse (multiply (inverse (inverse (inverse (multiply ?39280 (multiply (inverse ?39280) ?39281))))) (multiply ?39281 (multiply (multiply ?39282 (inverse ?39282)) ?39283))) =>= inverse ?39283 [39283, 39282, 39281, 39280] by Super 2 with 3910 at 2,2,2,1,2
Id : 17340, {_}: inverse (inverse (multiply ?127629 (multiply (inverse (inverse (inverse (multiply ?127630 (multiply (inverse ?127630) ?127631))))) ?127631))) =>= ?127629 [127631, 127630, 127629] by Super 2 with 5137 at 2
Id : 5128, {_}: multiply (multiply ?39206 (inverse ?39206)) (multiply (inverse (inverse (inverse (multiply ?39207 (multiply (inverse ?39207) ?39208))))) (multiply ?39208 ?39209)) =>= ?39209 [39209, 39208, 39207, 39206] by Super 86 with 3910 at 2,2
Id : 3928, {_}: inverse (multiply (inverse (multiply ?29660 (multiply (inverse ?29660) ?29661))) (multiply ?29662 (multiply (multiply ?29663 (inverse ?29663)) (inverse (multiply ?29664 (multiply (inverse ?29664) ?29662)))))) =?= multiply ?29665 (multiply (inverse ?29665) ?29661) [29665, 29664, 29663, 29662, 29661, 29660] by Super 3826 with 1168 at 1,1,2
Id : 1246, {_}: inverse (multiply (inverse ?10029) (multiply ?10030 (multiply (multiply ?10031 (inverse ?10031)) (inverse (multiply ?10032 (multiply (inverse ?10032) ?10030)))))) =>= ?10029 [10032, 10031, 10030, 10029] by Super 2 with 1168 at 2,2,2,1,2
Id : 3958, {_}: multiply ?29660 (multiply (inverse ?29660) ?29661) =?= multiply ?29665 (multiply (inverse ?29665) ?29661) [29665, 29661, 29660] by Demod 3928 with 1246 at 2
Id : 531, {_}: multiply (multiply ?4521 (inverse ?4521)) (inverse (multiply (inverse (multiply ?4522 (multiply ?4523 (inverse ?4523)))) (multiply ?4522 ?4524))) =>= inverse ?4524 [4524, 4523, 4522, 4521] by Super 86 with 348 at 2,1,1,1,2,2
Id : 737, {_}: multiply (multiply ?5774 (inverse ?5774)) (inverse (multiply (inverse (multiply ?5775 (multiply ?5776 (inverse ?5776)))) (multiply ?5775 ?5777))) =>= inverse ?5777 [5777, 5776, 5775, 5774] by Super 86 with 348 at 2,1,1,1,2,2
Id : 1911, {_}: multiply (multiply ?15350 (inverse ?15350)) (inverse (multiply (inverse (multiply ?15351 (multiply ?15352 (inverse ?15352)))) (multiply ?15353 (inverse ?15353)))) =>= inverse (inverse ?15351) [15353, 15352, 15351, 15350] by Super 737 with 348 at 2,1,2,2
Id : 1956, {_}: multiply (multiply ?15717 (inverse ?15717)) (inverse (multiply (inverse (multiply (multiply ?15718 (inverse ?15718)) (multiply ?15719 (inverse ?15719)))) (multiply ?15720 (inverse ?15720)))) =?= inverse (inverse (multiply ?15721 (inverse ?15721))) [15721, 15720, 15719, 15718, 15717] by Super 1911 with 205 at 1,1,1,2,2
Id : 740, {_}: multiply (multiply ?5792 (inverse ?5792)) (inverse (multiply (inverse (multiply ?5793 (multiply ?5794 (inverse ?5794)))) (multiply ?5795 (inverse ?5795)))) =>= inverse (inverse ?5793) [5795, 5794, 5793, 5792] by Super 737 with 348 at 2,1,2,2
Id : 2009, {_}: inverse (inverse (multiply ?15718 (inverse ?15718))) =?= inverse (inverse (multiply ?15721 (inverse ?15721))) [15721, 15718] by Demod 1956 with 740 at 2
Id : 2083, {_}: multiply ?16427 (inverse ?16427) =?= multiply (inverse (multiply ?16428 (inverse ?16428))) (inverse (inverse (multiply ?16429 (inverse ?16429)))) [16429, 16428, 16427] by Super 348 with 2009 at 2,3
Id : 2187, {_}: multiply (multiply ?17062 (inverse ?17062)) (inverse (multiply (inverse (multiply (inverse (multiply ?17063 (inverse ?17063))) (multiply ?17064 (inverse ?17064)))) (multiply ?17065 (inverse ?17065)))) =?= inverse (inverse (inverse (multiply ?17066 (inverse ?17066)))) [17066, 17065, 17064, 17063, 17062] by Super 531 with 2083 at 2,1,2,2
Id : 2437, {_}: inverse (inverse (inverse (multiply ?17063 (inverse ?17063)))) =?= inverse (inverse (inverse (multiply ?17066 (inverse ?17066)))) [17066, 17063] by Demod 2187 with 740 at 2
Id : 2507, {_}: multiply ?19079 (inverse ?19079) =?= multiply (inverse (inverse (multiply ?19080 (inverse ?19080)))) (inverse (inverse (inverse (multiply ?19081 (inverse ?19081))))) [19081, 19080, 19079] by Super 348 with 2437 at 2,3
Id : 5155, {_}: multiply (multiply ?39417 (inverse ?39417)) (multiply (inverse (inverse (inverse (multiply ?39418 (multiply (inverse ?39418) ?39419))))) (multiply ?39420 (inverse ?39420))) =>= inverse ?39419 [39420, 39419, 39418, 39417] by Super 531 with 3910 at 2,2
Id : 21348, {_}: inverse (inverse (inverse (multiply ?158881 (inverse ?158881)))) =?= multiply ?158882 (inverse ?158882) [158882, 158881] by Super 17340 with 5155 at 1,1,2
Id : 21903, {_}: multiply ?162370 (inverse ?162370) =?= multiply (inverse (inverse (multiply ?162371 (inverse ?162371)))) (multiply ?162372 (inverse ?162372)) [162372, 162371, 162370] by Super 2507 with 21348 at 2,3
Id : 27319, {_}: multiply ?194055 (multiply (inverse ?194055) (inverse (inverse (inverse (inverse (multiply ?194056 (inverse ?194056))))))) =?= multiply ?194057 (inverse ?194057) [194057, 194056, 194055] by Super 3958 with 21903 at 3
Id : 38543, {_}: multiply (multiply ?266891 (inverse ?266891)) (multiply (inverse (inverse (inverse (multiply ?266892 (multiply (inverse ?266892) ?266893))))) (multiply ?266894 (inverse ?266894))) =?= multiply (inverse ?266893) (inverse (inverse (inverse (inverse (multiply ?266895 (inverse ?266895)))))) [266895, 266894, 266893, 266892, 266891] by Super 5128 with 27319 at 2,2,2
Id : 39135, {_}: inverse ?270165 =<= multiply (inverse ?270165) (inverse (inverse (inverse (inverse (multiply ?270166 (inverse ?270166)))))) [270166, 270165] by Demod 38543 with 5155 at 2
Id : 39578, {_}: inverse ?271815 =<= multiply (inverse ?271815) (inverse (multiply ?271816 (inverse ?271816))) [271816, 271815] by Super 39135 with 21348 at 1,2,3
Id : 39704, {_}: inverse (multiply ?272432 (multiply ?272433 (multiply (multiply ?272434 (inverse ?272434)) (inverse (multiply ?272435 (multiply ?272432 ?272433)))))) =?= multiply ?272435 (inverse (multiply ?272436 (inverse ?272436))) [272436, 272435, 272434, 272433, 272432] by Super 39578 with 2 at 1,3
Id : 39842, {_}: ?272435 =<= multiply ?272435 (inverse (multiply ?272436 (inverse ?272436))) [272436, 272435] by Demod 39704 with 2 at 2
Id : 40136, {_}: inverse (inverse (multiply ?274147 (multiply (inverse (inverse (inverse (multiply ?274148 (inverse ?274148))))) (inverse (multiply ?274149 (inverse ?274149)))))) =>= ?274147 [274149, 274148, 274147] by Super 17340 with 39842 at 2,1,1,1,1,2,1,1,2
Id : 42233, {_}: inverse (inverse (multiply ?290970 (inverse (inverse (inverse (multiply ?290971 (inverse ?290971))))))) =>= ?290970 [290971, 290970] by Demod 40136 with 39842 at 2,1,1,2
Id : 42325, {_}: inverse (inverse (multiply ?291465 (inverse (inverse (inverse (inverse (inverse (inverse (multiply ?291466 (inverse ?291466)))))))))) =>= ?291465 [291466, 291465] by Super 42233 with 21348 at 1,1,1,2,1,1,2
Id : 3911, {_}: inverse (multiply (inverse ?29506) (multiply (inverse (inverse (inverse (multiply ?29507 (multiply ?29508 (inverse ?29508)))))) (inverse (inverse ?29507)))) =>= ?29506 [29508, 29507, 29506] by Super 3826 with 740 at 2,2,1,2
Id : 42355, {_}: inverse (inverse (multiply ?291566 (multiply ?291567 (inverse ?291567)))) =>= ?291566 [291567, 291566] by Super 42233 with 21348 at 2,1,1,2
Id : 42465, {_}: inverse (multiply (inverse ?29506) (multiply (inverse ?29507) (inverse (inverse ?29507)))) =>= ?29506 [29507, 29506] by Demod 3911 with 42355 at 1,1,2,1,2
Id : 42659, {_}: inverse (multiply (inverse ?292844) (multiply (inverse (inverse (multiply ?292845 (multiply ?292846 (inverse ?292846))))) (inverse ?292845))) =>= ?292844 [292846, 292845, 292844] by Super 42465 with 42355 at 1,2,2,1,2
Id : 42797, {_}: inverse (multiply (inverse ?292844) (multiply ?292845 (inverse ?292845))) =>= ?292844 [292845, 292844] by Demod 42659 with 42355 at 1,2,1,2
Id : 42874, {_}: multiply (multiply ?5792 (inverse ?5792)) (multiply ?5793 (multiply ?5794 (inverse ?5794))) =>= inverse (inverse ?5793) [5794, 5793, 5792] by Demod 740 with 42797 at 2,2
Id : 46254, {_}: ?309013 =<= multiply ?309013 (inverse (multiply (inverse (multiply ?309014 (multiply ?309015 (inverse ?309015)))) ?309014)) [309015, 309014, 309013] by Super 39842 with 42355 at 2,1,2,3
Id : 46402, {_}: ?309842 =<= multiply ?309842 (multiply (multiply ?309843 (inverse ?309843)) (multiply ?309844 (inverse ?309844))) [309844, 309843, 309842] by Super 46254 with 42797 at 2,3
Id : 46563, {_}: multiply ?309963 (inverse ?309963) =?= inverse (inverse (multiply ?309964 (inverse ?309964))) [309964, 309963] by Super 42874 with 46402 at 2
Id : 47597, {_}: inverse (inverse (multiply ?315584 (inverse (inverse (inverse (inverse (multiply ?315585 (inverse ?315585)))))))) =>= ?315584 [315585, 315584] by Super 42325 with 46563 at 1,1,1,1,2,1,1,2
Id : 39281, {_}: inverse (multiply ?270847 (multiply ?270848 (multiply (multiply ?270849 (inverse ?270849)) (inverse (multiply ?270850 (multiply ?270847 ?270848)))))) =?= multiply ?270850 (inverse (inverse (inverse (inverse (multiply ?270851 (inverse ?270851)))))) [270851, 270850, 270849, 270848, 270847] by Super 39135 with 2 at 1,3
Id : 39433, {_}: ?270850 =<= multiply ?270850 (inverse (inverse (inverse (inverse (multiply ?270851 (inverse ?270851)))))) [270851, 270850] by Demod 39281 with 2 at 2
Id : 47849, {_}: inverse (inverse ?315584) =>= ?315584 [315584] by Demod 47597 with 39433 at 1,1,2
Id : 48100, {_}: multiply (multiply ?5792 (inverse ?5792)) (multiply ?5793 (multiply ?5794 (inverse ?5794))) =>= ?5793 [5794, 5793, 5792] by Demod 42874 with 47849 at 3
Id : 48103, {_}: multiply ?291465 (inverse (inverse (inverse (inverse (inverse (inverse (multiply ?291466 (inverse ?291466)))))))) =>= ?291465 [291466, 291465] by Demod 42325 with 47849 at 2
Id : 48104, {_}: multiply ?291465 (inverse (inverse (inverse (inverse (multiply ?291466 (inverse ?291466)))))) =>= ?291465 [291466, 291465] by Demod 48103 with 47849 at 2,2
Id : 48105, {_}: multiply ?291465 (inverse (inverse (multiply ?291466 (inverse ?291466)))) =>= ?291465 [291466, 291465] by Demod 48104 with 47849 at 2,2
Id : 48106, {_}: multiply ?291465 (multiply ?291466 (inverse ?291466)) =>= ?291465 [291466, 291465] by Demod 48105 with 47849 at 2,2
Id : 48126, {_}: multiply (multiply ?5792 (inverse ?5792)) ?5793 =>= ?5793 [5793, 5792] by Demod 48100 with 48106 at 2,2
Id : 48146, {_}: inverse (multiply ?2 (multiply ?3 (inverse (multiply ?5 (multiply ?2 ?3))))) =>= ?5 [5, 3, 2] by Demod 2 with 48126 at 2,2,1,2
Id : 48243, {_}: multiply (multiply (inverse ?316807) ?316807) ?316808 =>= ?316808 [316808, 316807] by Super 48126 with 47849 at 2,1,2
Id : 48369, {_}: inverse (multiply (multiply (inverse ?317633) ?317633) (multiply ?317634 (inverse (multiply ?317635 ?317634)))) =>= ?317635 [317635, 317634, 317633] by Super 48146 with 48243 at 2,1,2,2,1,2
Id : 48458, {_}: inverse (multiply ?317634 (inverse (multiply ?317635 ?317634))) =>= ?317635 [317635, 317634] by Demod 48369 with 48243 at 1,2
Id : 49027, {_}: inverse ?319864 =<= multiply ?319865 (inverse (multiply ?319864 ?319865)) [319865, 319864] by Super 47849 with 48458 at 1,2
Id : 48054, {_}: multiply (multiply ?39206 (inverse ?39206)) (multiply (inverse (multiply ?39207 (multiply (inverse ?39207) ?39208))) (multiply ?39208 ?39209)) =>= ?39209 [39209, 39208, 39207, 39206] by Demod 5128 with 47849 at 1,2,2
Id : 48214, {_}: multiply (inverse (multiply ?39207 (multiply (inverse ?39207) ?39208))) (multiply ?39208 ?39209) =>= ?39209 [39209, 39208, 39207] by Demod 48054 with 48126 at 2
Id : 42875, {_}: multiply (multiply ?4511 (inverse ?4511)) (multiply ?4512 (multiply (inverse ?4512) ?4513)) =>= ?4513 [4513, 4512, 4511] by Demod 529 with 42797 at 2,2
Id : 48128, {_}: multiply ?4512 (multiply (inverse ?4512) ?4513) =>= ?4513 [4513, 4512] by Demod 42875 with 48126 at 2
Id : 48215, {_}: multiply (inverse ?39208) (multiply ?39208 ?39209) =>= ?39209 [39209, 39208] by Demod 48214 with 48128 at 1,1,2
Id : 49034, {_}: inverse (inverse ?319885) =<= multiply (multiply ?319885 ?319886) (inverse ?319886) [319886, 319885] by Super 49027 with 48215 at 1,2,3
Id : 49824, {_}: ?323338 =<= multiply (multiply ?323338 ?323339) (inverse ?323339) [323339, 323338] by Demod 49034 with 47849 at 2
Id : 48152, {_}: inverse (multiply (inverse (multiply ?818 (multiply ?819 ?820))) (multiply ?818 ?819)) =>= ?820 [820, 819, 818] by Demod 86 with 48126 at 2
Id : 48896, {_}: inverse ?319286 =<= multiply ?319287 (inverse (multiply ?319286 ?319287)) [319287, 319286] by Super 47849 with 48458 at 1,2
Id : 49169, {_}: multiply (inverse ?320479) (inverse ?320480) =>= inverse (multiply ?320480 ?320479) [320480, 320479] by Super 48215 with 48896 at 2,2
Id : 49171, {_}: multiply (inverse ?320486) ?320487 =<= inverse (multiply (inverse ?320487) ?320486) [320487, 320486] by Super 49169 with 47849 at 2,2
Id : 49369, {_}: multiply (inverse (multiply ?818 ?819)) (multiply ?818 (multiply ?819 ?820)) =>= ?820 [820, 819, 818] by Demod 48152 with 49171 at 2
Id : 49850, {_}: inverse (multiply ?323494 ?323495) =<= multiply ?323496 (inverse (multiply ?323494 (multiply ?323495 ?323496))) [323496, 323495, 323494] by Super 49824 with 49369 at 1,3
Id : 49041, {_}: inverse ?319906 =<= multiply (inverse (multiply ?319907 ?319906)) (inverse (inverse ?319907)) [319907, 319906] by Super 49027 with 48896 at 1,2,3
Id : 49999, {_}: inverse ?323996 =<= multiply (inverse (multiply ?323997 ?323996)) ?323997 [323997, 323996] by Demod 49041 with 47849 at 2,3
Id : 50016, {_}: inverse (multiply ?324063 (inverse (multiply ?324064 (multiply ?324065 ?324063)))) =>= multiply ?324064 ?324065 [324065, 324064, 324063] by Super 49999 with 48146 at 1,3
Id : 49025, {_}: multiply ?319858 (inverse ?319859) =<= inverse (multiply ?319859 (inverse ?319858)) [319859, 319858] by Super 48128 with 48896 at 2,2
Id : 53578, {_}: multiply (multiply ?332164 (multiply ?332165 ?332166)) (inverse ?332166) =>= multiply ?332164 ?332165 [332166, 332165, 332164] by Demod 50016 with 49025 at 2
Id : 49088, {_}: inverse ?319906 =<= multiply (inverse (multiply ?319907 ?319906)) ?319907 [319907, 319906] by Demod 49041 with 47849 at 2,3
Id : 53621, {_}: multiply (inverse ?332348) (inverse ?332349) =<= multiply (inverse (multiply (multiply ?332350 ?332349) ?332348)) ?332350 [332350, 332349, 332348] by Super 53578 with 49088 at 1,2
Id : 48971, {_}: multiply (inverse ?319476) (inverse ?319477) =>= inverse (multiply ?319477 ?319476) [319477, 319476] by Super 48215 with 48896 at 2,2
Id : 53698, {_}: inverse (multiply ?332349 ?332348) =<= multiply (inverse (multiply (multiply ?332350 ?332349) ?332348)) ?332350 [332350, 332348, 332349] by Demod 53621 with 48971 at 2
Id : 55617, {_}: inverse (multiply (inverse (multiply (multiply (multiply ?335716 ?335717) ?335718) ?335719)) ?335716) =>= multiply ?335717 (inverse (inverse (multiply ?335718 ?335719))) [335719, 335718, 335717, 335716] by Super 49850 with 53698 at 1,2,3
Id : 55728, {_}: multiply (inverse ?335716) (multiply (multiply (multiply ?335716 ?335717) ?335718) ?335719) =>= multiply ?335717 (inverse (inverse (multiply ?335718 ?335719))) [335719, 335718, 335717, 335716] by Demod 55617 with 49171 at 2
Id : 55729, {_}: multiply (inverse ?335716) (multiply (multiply (multiply ?335716 ?335717) ?335718) ?335719) =>= multiply ?335717 (multiply ?335718 ?335719) [335719, 335718, 335717, 335716] by Demod 55728 with 47849 at 2,3
Id : 53403, {_}: inverse (multiply ?331872 ?331873) =<= multiply ?331874 (inverse (multiply ?331872 (multiply ?331873 ?331874))) [331874, 331873, 331872] by Super 49824 with 49369 at 1,3
Id : 49375, {_}: multiply (inverse ?321009) (multiply (inverse ?321010) ?321011) =>= inverse (multiply (multiply (inverse ?321011) ?321010) ?321009) [321011, 321010, 321009] by Super 48971 with 49171 at 2,2
Id : 53436, {_}: inverse (multiply (inverse ?332006) (inverse ?332007)) =<= multiply ?332008 (inverse (inverse (multiply (multiply (inverse ?332008) ?332007) ?332006))) [332008, 332007, 332006] by Super 53403 with 49375 at 1,2,3
Id : 53542, {_}: multiply ?332007 (inverse (inverse ?332006)) =<= multiply ?332008 (inverse (inverse (multiply (multiply (inverse ?332008) ?332007) ?332006))) [332008, 332006, 332007] by Demod 53436 with 49025 at 2
Id : 53543, {_}: multiply ?332007 (inverse (inverse ?332006)) =<= multiply ?332008 (multiply (multiply (inverse ?332008) ?332007) ?332006) [332008, 332006, 332007] by Demod 53542 with 47849 at 2,3
Id : 53544, {_}: multiply ?332007 ?332006 =<= multiply ?332008 (multiply (multiply (inverse ?332008) ?332007) ?332006) [332008, 332006, 332007] by Demod 53543 with 47849 at 2,2
Id : 54357, {_}: multiply (inverse ?333550) (multiply ?333551 ?333552) =<= multiply (multiply (inverse ?333550) ?333551) ?333552 [333552, 333551, 333550] by Super 48215 with 53544 at 2,2
Id : 53440, {_}: inverse (multiply (inverse (multiply (multiply ?332022 ?332023) ?332024)) ?332022) =>= multiply ?332023 (inverse (inverse ?332024)) [332024, 332023, 332022] by Super 53403 with 49088 at 1,2,3
Id : 53553, {_}: multiply (inverse ?332022) (multiply (multiply ?332022 ?332023) ?332024) =>= multiply ?332023 (inverse (inverse ?332024)) [332024, 332023, 332022] by Demod 53440 with 49171 at 2
Id : 53554, {_}: multiply (inverse ?332022) (multiply (multiply ?332022 ?332023) ?332024) =>= multiply ?332023 ?332024 [332024, 332023, 332022] by Demod 53553 with 47849 at 2,3
Id : 54857, {_}: multiply (inverse ?334428) (multiply (multiply (multiply ?334428 ?334429) ?334430) ?334431) =>= multiply (multiply ?334429 ?334430) ?334431 [334431, 334430, 334429, 334428] by Super 54357 with 53554 at 1,3
Id : 81835, {_}: multiply (multiply ?335717 ?335718) ?335719 =?= multiply ?335717 (multiply ?335718 ?335719) [335719, 335718, 335717] by Demod 55729 with 54857 at 2
Id : 82672, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 81835 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP444-1.p
23669: solved GRP444-1.p in 49.195074 using nrkbo
23669: status Unsatisfiable for GRP444-1.p
NO CLASH, using fixed ground order
23734: Facts:
23734:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23734:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
23734:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
23734: Goal:
23734:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23734: Order:
23734:   nrkbo
23734: Leaf order:
23734:  b2 2 0 2 1,1,1,2
23734:  a2 2 0 2 2,2
23734:  inverse 2 1 1 0,1,1,2
23734:  multiply 3 2 2 0,2
23734:  divide 13 2 0 
NO CLASH, using fixed ground order
23735: Facts:
23735:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23735:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
23735:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
23735: Goal:
23735:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23735: Order:
23735:   kbo
23735: Leaf order:
23735:  b2 2 0 2 1,1,1,2
23735:  a2 2 0 2 2,2
23735:  inverse 2 1 1 0,1,1,2
23735:  multiply 3 2 2 0,2
23735:  divide 13 2 0 
NO CLASH, using fixed ground order
23736: Facts:
23736:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
23736:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
23736:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
23736: Goal:
23736:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23736: Order:
23736:   lpo
23736: Leaf order:
23736:  b2 2 0 2 1,1,1,2
23736:  a2 2 0 2 2,2
23736:  inverse 2 1 1 0,1,1,2
23736:  multiply 3 2 2 0,2
23736:  divide 13 2 0 
Statistics :
Max weight : 38
Found proof, 0.373646s
% SZS status Unsatisfiable for GRP452-1.p
% SZS output start CNFRefutation for GRP452-1.p
Id :   5, {_}: divide (divide (divide ?13 ?13) (divide ?13 (divide ?14 (divide (divide (divide ?13 ?13) ?13) ?15)))) ?15 =>= ?14 [15, 14, 13] by single_axiom ?13 ?14 ?15
Id :  35, {_}: inverse ?90 =<= divide (divide ?91 ?91) ?90 [91, 90] by inverse ?90 ?91
Id :   2, {_}: divide (divide (divide ?2 ?2) (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   4, {_}: inverse ?10 =<= divide (divide ?11 ?11) ?10 [11, 10] by inverse ?10 ?11
Id :   3, {_}: multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7) [8, 7, 6] by multiply ?6 ?7 ?8
Id :  29, {_}: multiply ?6 ?7 =<= divide ?6 (inverse ?7) [7, 6] by Demod 3 with 4 at 2,3
Id :  41, {_}: multiply (divide ?104 ?104) ?105 =>= inverse (inverse ?105) [105, 104] by Super 29 with 4 at 3
Id :  43, {_}: multiply (multiply (inverse ?110) ?110) ?111 =>= inverse (inverse ?111) [111, 110] by Super 41 with 29 at 1,2
Id :  13, {_}: divide (multiply (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50))) ?50 =>= ?49 [50, 49, 48] by Super 2 with 3 at 1,2
Id :  32, {_}: multiply (divide ?79 ?79) ?80 =>= inverse (inverse ?80) [80, 79] by Super 29 with 4 at 3
Id : 205, {_}: divide (inverse (inverse (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 13 with 32 at 1,2
Id : 206, {_}: divide (inverse (inverse (divide ?49 (divide (inverse (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 205 with 4 at 1,2,1,1,1,2
Id :  36, {_}: inverse ?93 =<= divide (inverse (divide ?94 ?94)) ?93 [94, 93] by Super 35 with 4 at 1,3
Id : 207, {_}: divide (inverse (inverse (divide ?49 (inverse ?50)))) ?50 =>= ?49 [50, 49] by Demod 206 with 36 at 2,1,1,1,2
Id : 208, {_}: divide (inverse (inverse (multiply ?49 ?50))) ?50 =>= ?49 [50, 49] by Demod 207 with 29 at 1,1,1,2
Id :   6, {_}: divide (divide (divide ?17 ?17) (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Super 5 with 2 at 2,2,1,2
Id :  61, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 6 with 4 at 1,2
Id :  62, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 61 with 4 at 3
Id :  63, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 62 with 4 at 1,2,2,1,3
Id :  68, {_}: divide (inverse (divide ?170 ?171)) ?172 =<= inverse (divide ?173 (divide ?171 (divide (inverse ?173) (divide (inverse ?170) ?172)))) [173, 172, 171, 170] by Demod 63 with 4 at 1,2,2,2,1,3
Id :  75, {_}: divide (inverse (divide ?213 ?214)) ?215 =<= inverse (divide (divide ?216 ?216) (divide ?214 (inverse (divide (inverse ?213) ?215)))) [216, 215, 214, 213] by Super 68 with 36 at 2,2,1,3
Id :  85, {_}: divide (inverse (divide ?213 ?214)) ?215 =<= inverse (inverse (divide ?214 (inverse (divide (inverse ?213) ?215)))) [215, 214, 213] by Demod 75 with 4 at 1,3
Id : 329, {_}: divide (inverse (divide ?884 ?885)) ?886 =<= inverse (inverse (multiply ?885 (divide (inverse ?884) ?886))) [886, 885, 884] by Demod 85 with 29 at 1,1,3
Id : 336, {_}: divide (inverse (divide (divide ?919 ?919) ?920)) ?921 =>= inverse (inverse (multiply ?920 (inverse ?921))) [921, 920, 919] by Super 329 with 36 at 2,1,1,3
Id : 348, {_}: divide (inverse (inverse ?920)) ?921 =<= inverse (inverse (multiply ?920 (inverse ?921))) [921, 920] by Demod 336 with 4 at 1,1,2
Id : 435, {_}: divide (inverse (inverse ?1126)) ?1127 =<= inverse (inverse (multiply ?1126 (inverse ?1127))) [1127, 1126] by Demod 336 with 4 at 1,1,2
Id : 439, {_}: divide (inverse (inverse (divide ?1144 ?1144))) ?1145 =>= inverse (inverse (inverse (inverse (inverse ?1145)))) [1145, 1144] by Super 435 with 32 at 1,1,3
Id :  46, {_}: inverse ?115 =<= divide (inverse (inverse (divide ?116 ?116))) ?115 [116, 115] by Super 4 with 36 at 1,3
Id : 452, {_}: inverse ?1145 =<= inverse (inverse (inverse (inverse (inverse ?1145)))) [1145] by Demod 439 with 46 at 2
Id : 461, {_}: multiply ?1187 (inverse (inverse (inverse (inverse ?1188)))) =>= divide ?1187 (inverse ?1188) [1188, 1187] by Super 29 with 452 at 2,3
Id : 480, {_}: multiply ?1187 (inverse (inverse (inverse (inverse ?1188)))) =>= multiply ?1187 ?1188 [1188, 1187] by Demod 461 with 29 at 3
Id : 490, {_}: divide (inverse (inverse ?1237)) (inverse (inverse (inverse ?1238))) =>= inverse (inverse (multiply ?1237 ?1238)) [1238, 1237] by Super 348 with 480 at 1,1,3
Id : 543, {_}: multiply (inverse (inverse ?1237)) (inverse (inverse ?1238)) =>= inverse (inverse (multiply ?1237 ?1238)) [1238, 1237] by Demod 490 with 29 at 2
Id : 564, {_}: divide (inverse (inverse (inverse (inverse ?1361)))) (inverse ?1362) =>= inverse (inverse (inverse (inverse (multiply ?1361 ?1362)))) [1362, 1361] by Super 348 with 543 at 1,1,3
Id : 586, {_}: multiply (inverse (inverse (inverse (inverse ?1361)))) ?1362 =>= inverse (inverse (inverse (inverse (multiply ?1361 ?1362)))) [1362, 1361] by Demod 564 with 29 at 2
Id : 608, {_}: divide (inverse (inverse (inverse (inverse (inverse (inverse (multiply ?1454 ?1455))))))) ?1455 =>= inverse (inverse (inverse (inverse ?1454))) [1455, 1454] by Super 208 with 586 at 1,1,1,2
Id : 633, {_}: divide (inverse (inverse (multiply ?1454 ?1455))) ?1455 =>= inverse (inverse (inverse (inverse ?1454))) [1455, 1454] by Demod 608 with 452 at 1,2
Id : 634, {_}: ?1454 =<= inverse (inverse (inverse (inverse ?1454))) [1454] by Demod 633 with 208 at 2
Id : 755, {_}: multiply ?1763 (inverse (inverse (inverse ?1764))) =>= divide ?1763 ?1764 [1764, 1763] by Super 29 with 634 at 2,3
Id : 797, {_}: divide (inverse (inverse ?1873)) (inverse (inverse ?1874)) =>= inverse (inverse (divide ?1873 ?1874)) [1874, 1873] by Super 348 with 755 at 1,1,3
Id : 816, {_}: multiply (inverse (inverse ?1873)) (inverse ?1874) =>= inverse (inverse (divide ?1873 ?1874)) [1874, 1873] by Demod 797 with 29 at 2
Id : 868, {_}: divide (inverse (inverse (inverse (inverse (divide ?1957 ?1958))))) (inverse ?1958) =>= inverse (inverse ?1957) [1958, 1957] by Super 208 with 816 at 1,1,1,2
Id : 892, {_}: multiply (inverse (inverse (inverse (inverse (divide ?1957 ?1958))))) ?1958 =>= inverse (inverse ?1957) [1958, 1957] by Demod 868 with 29 at 2
Id : 915, {_}: multiply (divide ?2055 ?2056) ?2056 =>= inverse (inverse ?2055) [2056, 2055] by Demod 892 with 634 at 1,2
Id : 921, {_}: multiply (multiply ?2076 ?2077) (inverse ?2077) =>= inverse (inverse ?2076) [2077, 2076] by Super 915 with 29 at 1,2
Id : 872, {_}: multiply (inverse (inverse ?1970)) (inverse ?1971) =>= inverse (inverse (divide ?1970 ?1971)) [1971, 1970] by Demod 797 with 29 at 2
Id : 885, {_}: multiply ?2028 (inverse ?2029) =<= inverse (inverse (divide (inverse (inverse ?2028)) ?2029)) [2029, 2028] by Super 872 with 634 at 1,2
Id :  86, {_}: divide (inverse (divide ?213 ?214)) ?215 =<= inverse (inverse (multiply ?214 (divide (inverse ?213) ?215))) [215, 214, 213] by Demod 85 with 29 at 1,1,3
Id :  64, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (inverse ?17) ?19)))) [20, 19, 18, 17] by Demod 63 with 4 at 1,2,2,2,1,3
Id : 893, {_}: multiply (divide ?1957 ?1958) ?1958 =>= inverse (inverse ?1957) [1958, 1957] by Demod 892 with 634 at 1,2
Id : 910, {_}: inverse (inverse ?2040) =<= divide (divide ?2040 (inverse (inverse (inverse ?2041)))) ?2041 [2041, 2040] by Super 755 with 893 at 2
Id : 1447, {_}: inverse (inverse ?3326) =<= divide (multiply ?3326 (inverse (inverse ?3327))) ?3327 [3327, 3326] by Demod 910 with 29 at 1,3
Id :  51, {_}: multiply (inverse (inverse (divide ?133 ?133))) ?134 =>= inverse (inverse ?134) [134, 133] by Super 32 with 36 at 1,2
Id : 1463, {_}: inverse (inverse (inverse (inverse (divide ?3389 ?3389)))) =?= divide (inverse (inverse (inverse (inverse ?3390)))) ?3390 [3390, 3389] by Super 1447 with 51 at 1,3
Id : 1498, {_}: divide ?3389 ?3389 =?= divide (inverse (inverse (inverse (inverse ?3390)))) ?3390 [3390, 3389] by Demod 1463 with 634 at 2
Id : 1499, {_}: divide ?3389 ?3389 =?= divide ?3390 ?3390 [3390, 3389] by Demod 1498 with 634 at 1,3
Id : 1548, {_}: divide (inverse (divide ?3530 (divide (inverse ?3531) (divide (inverse ?3530) ?3532)))) ?3532 =?= inverse (divide ?3531 (divide ?3533 ?3533)) [3533, 3532, 3531, 3530] by Super 64 with 1499 at 2,1,3
Id :  30, {_}: divide (inverse (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 2 with 4 at 1,2
Id :  31, {_}: divide (inverse (divide ?2 (divide ?3 (divide (inverse ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 30 with 4 at 1,2,2,1,1,2
Id : 1619, {_}: inverse ?3531 =<= inverse (divide ?3531 (divide ?3533 ?3533)) [3533, 3531] by Demod 1548 with 31 at 2
Id : 1667, {_}: divide ?3815 (divide ?3816 ?3816) =>= inverse (inverse (inverse (inverse ?3815))) [3816, 3815] by Super 634 with 1619 at 1,1,1,3
Id : 1711, {_}: divide ?3815 (divide ?3816 ?3816) =>= ?3815 [3816, 3815] by Demod 1667 with 634 at 3
Id : 1774, {_}: divide (inverse (divide ?4058 ?4059)) (divide ?4060 ?4060) =>= inverse (inverse (multiply ?4059 (inverse ?4058))) [4060, 4059, 4058] by Super 86 with 1711 at 2,1,1,3
Id : 1809, {_}: inverse (divide ?4058 ?4059) =<= inverse (inverse (multiply ?4059 (inverse ?4058))) [4059, 4058] by Demod 1774 with 1711 at 2
Id : 1810, {_}: inverse (divide ?4058 ?4059) =<= divide (inverse (inverse ?4059)) ?4058 [4059, 4058] by Demod 1809 with 348 at 3
Id : 1856, {_}: multiply ?2028 (inverse ?2029) =<= inverse (inverse (inverse (divide ?2029 ?2028))) [2029, 2028] by Demod 885 with 1810 at 1,1,3
Id :  52, {_}: inverse ?136 =<= divide (inverse (divide ?137 ?137)) ?136 [137, 136] by Super 35 with 4 at 1,3
Id :  55, {_}: inverse ?145 =<= divide (inverse (inverse (inverse (divide ?146 ?146)))) ?145 [146, 145] by Super 52 with 36 at 1,1,3
Id : 1858, {_}: inverse ?145 =<= inverse (divide ?145 (inverse (divide ?146 ?146))) [146, 145] by Demod 55 with 1810 at 3
Id : 1862, {_}: inverse ?145 =<= inverse (multiply ?145 (divide ?146 ?146)) [146, 145] by Demod 1858 with 29 at 1,3
Id : 1778, {_}: multiply ?4073 (divide ?4074 ?4074) =>= inverse (inverse ?4073) [4074, 4073] by Super 893 with 1711 at 1,2
Id : 2425, {_}: inverse ?145 =<= inverse (inverse (inverse ?145)) [145] by Demod 1862 with 1778 at 1,3
Id : 2428, {_}: multiply ?2028 (inverse ?2029) =>= inverse (divide ?2029 ?2028) [2029, 2028] by Demod 1856 with 2425 at 3
Id : 2431, {_}: inverse (divide ?2077 (multiply ?2076 ?2077)) =>= inverse (inverse ?2076) [2076, 2077] by Demod 921 with 2428 at 2
Id : 1860, {_}: inverse (divide ?50 (multiply ?49 ?50)) =>= ?49 [49, 50] by Demod 208 with 1810 at 2
Id : 2432, {_}: ?2076 =<= inverse (inverse ?2076) [2076] by Demod 2431 with 1860 at 2
Id : 2437, {_}: multiply (multiply (inverse ?110) ?110) ?111 =>= ?111 [111, 110] by Demod 43 with 2432 at 3
Id : 2539, {_}: a2 === a2 [] by Demod 1 with 2437 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP452-1.p
23734: solved GRP452-1.p in 0.388023 using nrkbo
23734: status Unsatisfiable for GRP452-1.p
NO CLASH, using fixed ground order
23741: Facts:
23741:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
NO CLASH, using fixed ground order
23742: Facts:
23742:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23742:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23742: Goal:
23742:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23742: Order:
23742:   kbo
23742: Leaf order:
23742:  a1 2 0 2 1,1,2
23742:  b1 2 0 2 1,1,3
23742:  inverse 4 1 2 0,1,2
23742:  multiply 3 2 2 0,2
23742:  divide 7 2 0 
NO CLASH, using fixed ground order
23743: Facts:
23743:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23743:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23743: Goal:
23743:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23743: Order:
23743:   lpo
23743: Leaf order:
23743:  a1 2 0 2 1,1,2
23743:  b1 2 0 2 1,1,3
23743:  inverse 4 1 2 0,1,2
23743:  multiply 3 2 2 0,2
23743:  divide 7 2 0 
23741:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23741: Goal:
23741:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23741: Order:
23741:   nrkbo
23741: Leaf order:
23741:  a1 2 0 2 1,1,2
23741:  b1 2 0 2 1,1,3
23741:  inverse 4 1 2 0,1,2
23741:  multiply 3 2 2 0,2
23741:  divide 7 2 0 
% SZS status Timeout for GRP469-1.p
NO CLASH, using fixed ground order
23763: Facts:
23763:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23763:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23763: Goal:
23763:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23763: Order:
23763:   nrkbo
23763: Leaf order:
23763:  b2 2 0 2 1,1,1,2
23763:  a2 2 0 2 2,2
23763:  inverse 3 1 1 0,1,1,2
23763:  multiply 3 2 2 0,2
23763:  divide 7 2 0 
NO CLASH, using fixed ground order
23764: Facts:
23764:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23764:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23764: Goal:
23764:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23764: Order:
23764:   kbo
23764: Leaf order:
23764:  b2 2 0 2 1,1,1,2
23764:  a2 2 0 2 2,2
23764:  inverse 3 1 1 0,1,1,2
23764:  multiply 3 2 2 0,2
23764:  divide 7 2 0 
NO CLASH, using fixed ground order
23765: Facts:
23765:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23765:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23765: Goal:
23765:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23765: Order:
23765:   lpo
23765: Leaf order:
23765:  b2 2 0 2 1,1,1,2
23765:  a2 2 0 2 2,2
23765:  inverse 3 1 1 0,1,1,2
23765:  multiply 3 2 2 0,2
23765:  divide 7 2 0 
% SZS status Timeout for GRP470-1.p
NO CLASH, using fixed ground order
23801: Facts:
23801:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23801:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23801: Goal:
23801:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23801: Order:
23801:   nrkbo
23801: Leaf order:
23801:  a3 2 0 2 1,1,2
23801:  b3 2 0 2 2,1,2
23801:  c3 2 0 2 2,2
23801:  inverse 2 1 0 
23801:  multiply 5 2 4 0,2
23801:  divide 7 2 0 
NO CLASH, using fixed ground order
23802: Facts:
23802:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23802:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23802: Goal:
23802:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23802: Order:
23802:   kbo
23802: Leaf order:
23802:  a3 2 0 2 1,1,2
23802:  b3 2 0 2 2,1,2
23802:  c3 2 0 2 2,2
23802:  inverse 2 1 0 
23802:  multiply 5 2 4 0,2
23802:  divide 7 2 0 
NO CLASH, using fixed ground order
23803: Facts:
23803:  Id :   2, {_}:
          divide (inverse (divide ?2 (divide ?3 (divide ?4 ?5))))
            (divide (divide ?5 ?4) ?2)
          =>=
          ?3
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23803:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23803: Goal:
23803:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23803: Order:
23803:   lpo
23803: Leaf order:
23803:  a3 2 0 2 1,1,2
23803:  b3 2 0 2 2,1,2
23803:  c3 2 0 2 2,2
23803:  inverse 2 1 0 
23803:  multiply 5 2 4 0,2
23803:  divide 7 2 0 
% SZS status Timeout for GRP471-1.p
NO CLASH, using fixed ground order
23910: Facts:
23910:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23910:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23910: Goal:
23910:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23910: Order:
23910:   nrkbo
23910: Leaf order:
23910:  a1 2 0 2 1,1,2
23910:  b1 2 0 2 1,1,3
23910:  inverse 4 1 2 0,1,2
23910:  multiply 3 2 2 0,2
23910:  divide 7 2 0 
NO CLASH, using fixed ground order
23911: Facts:
23911:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23911:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23911: Goal:
23911:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23911: Order:
23911:   kbo
23911: Leaf order:
23911:  a1 2 0 2 1,1,2
23911:  b1 2 0 2 1,1,3
23911:  inverse 4 1 2 0,1,2
23911:  multiply 3 2 2 0,2
23911:  divide 7 2 0 
NO CLASH, using fixed ground order
23912: Facts:
23912:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23912:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23912: Goal:
23912:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23912: Order:
23912:   lpo
23912: Leaf order:
23912:  a1 2 0 2 1,1,2
23912:  b1 2 0 2 1,1,3
23912:  inverse 4 1 2 0,1,2
23912:  multiply 3 2 2 0,2
23912:  divide 7 2 0 
% SZS status Timeout for GRP475-1.p
NO CLASH, using fixed ground order
23945: Facts:
23945:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23945:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23945: Goal:
23945:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23945: Order:
23945:   nrkbo
23945: Leaf order:
23945:  b2 2 0 2 1,1,1,2
23945:  a2 2 0 2 2,2
23945:  inverse 3 1 1 0,1,1,2
23945:  multiply 3 2 2 0,2
23945:  divide 7 2 0 
NO CLASH, using fixed ground order
23946: Facts:
23946:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23946:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23946: Goal:
23946:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23946: Order:
23946:   kbo
23946: Leaf order:
23946:  b2 2 0 2 1,1,1,2
23946:  a2 2 0 2 2,2
23946:  inverse 3 1 1 0,1,1,2
23946:  multiply 3 2 2 0,2
23946:  divide 7 2 0 
NO CLASH, using fixed ground order
23947: Facts:
23947:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23947:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23947: Goal:
23947:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23947: Order:
23947:   lpo
23947: Leaf order:
23947:  b2 2 0 2 1,1,1,2
23947:  a2 2 0 2 2,2
23947:  inverse 3 1 1 0,1,1,2
23947:  multiply 3 2 2 0,2
23947:  divide 7 2 0 
Statistics :
Max weight : 50
Found proof, 11.024829s
% SZS status Unsatisfiable for GRP476-1.p
% SZS output start CNFRefutation for GRP476-1.p
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?3 ?2) =>= ?5 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?11) ?12) (divide ?13 ?12))) (divide ?11 ?10) =>= ?13 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   5, {_}: divide (inverse (divide (divide (divide (divide ?15 ?16) (inverse (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17)))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2
Id :  17, {_}: divide (inverse (divide (divide (multiply (divide ?15 ?16) (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,1,2
Id :  18, {_}: multiply (inverse (divide (divide (multiply (divide ?64 ?65) (divide (divide (divide ?65 ?64) ?66) (divide (inverse ?67) ?66))) ?68) (divide ?69 ?68))) ?67 =>= ?69 [69, 68, 67, 66, 65, 64] by Super 3 with 17 at 3
Id :  20, {_}: divide (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?81 ?80) =?= inverse (divide (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?83 ?87)) [87, 86, 85, 84, 83, 82, 81, 80] by Super 2 with 17 at 2,1,1,2
Id : 863, {_}: multiply (divide (inverse (divide (divide (divide ?4853 ?4854) (inverse ?4855)) ?4856)) (divide ?4854 ?4853)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Super 18 with 20 at 1,2
Id : 978, {_}: multiply (divide (inverse (divide (multiply (divide ?4853 ?4854) ?4855) ?4856)) (divide ?4854 ?4853)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Demod 863 with 3 at 1,1,1,1,2
Id : 1168, {_}: divide (divide (inverse (divide (divide (divide ?6497 ?6498) ?6499) ?6500)) (divide ?6498 ?6497)) ?6499 =>= ?6500 [6500, 6499, 6498, 6497] by Super 17 with 20 at 1,2
Id : 1637, {_}: divide (divide (inverse (divide (divide (divide (inverse ?8641) ?8642) ?8643) ?8644)) (multiply ?8642 ?8641)) ?8643 =>= ?8644 [8644, 8643, 8642, 8641] by Super 1168 with 3 at 2,1,2
Id : 1659, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?8819) ?8820) ?8821) ?8822)) (multiply (inverse ?8820) ?8819)) ?8821 =>= ?8822 [8822, 8821, 8820, 8819] by Super 1637 with 3 at 1,1,1,1,1,2
Id :   7, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (divide (divide ?32 ?33) (inverse (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34)))) =>= ?31 [34, 33, 32, 31, 30, 29] by Super 4 with 2 at 1,1,1,1,2
Id : 292, {_}: divide (inverse (divide (divide ?1415 ?1416) (divide ?1417 ?1416))) (multiply (divide ?1418 ?1419) (divide (divide (divide ?1419 ?1418) ?1420) (divide ?1415 ?1420))) =>= ?1417 [1420, 1419, 1418, 1417, 1416, 1415] by Demod 7 with 3 at 2,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?23) (divide ?24 ?25)) ?26)) (divide ?23 ?22) =?= inverse (divide (divide (divide ?25 ?24) ?27) (divide ?26 ?27)) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 117, {_}: inverse (divide (divide (divide ?560 ?561) ?562) (divide (divide ?563 (divide ?561 ?560)) ?562)) =>= ?563 [563, 562, 561, 560] by Super 2 with 6 at 2
Id : 329, {_}: divide ?1764 (multiply (divide ?1765 ?1766) (divide (divide (divide ?1766 ?1765) ?1767) (divide (divide ?1768 ?1769) ?1767))) =>= divide ?1764 (divide ?1769 ?1768) [1769, 1768, 1767, 1766, 1765, 1764] by Super 292 with 117 at 1,2
Id : 13692, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?74151) ?74152) ?74153) (divide ?74154 ?74155))) (multiply (inverse ?74152) ?74151)) ?74153 =?= multiply (divide ?74156 ?74157) (divide (divide (divide ?74157 ?74156) ?74158) (divide (divide ?74155 ?74154) ?74158)) [74158, 74157, 74156, 74155, 74154, 74153, 74152, 74151] by Super 1659 with 329 at 1,1,1,2
Id : 13926, {_}: divide ?74154 ?74155 =<= multiply (divide ?74156 ?74157) (divide (divide (divide ?74157 ?74156) ?74158) (divide (divide ?74155 ?74154) ?74158)) [74158, 74157, 74156, 74155, 74154] by Demod 13692 with 1659 at 2
Id : 1195, {_}: divide (divide (inverse (multiply (divide (divide ?6697 ?6698) ?6699) ?6700)) (divide ?6698 ?6697)) ?6699 =>= inverse ?6700 [6700, 6699, 6698, 6697] by Super 1168 with 3 at 1,1,1,2
Id : 14284, {_}: divide (divide (inverse (divide ?76258 ?76259)) (divide ?76260 ?76261)) ?76262 =<= inverse (divide (divide (divide ?76262 (divide ?76261 ?76260)) ?76263) (divide (divide ?76259 ?76258) ?76263)) [76263, 76262, 76261, 76260, 76259, 76258] by Super 1195 with 13926 at 1,1,1,2
Id : 14590, {_}: divide (divide (divide (inverse (divide ?77679 ?77680)) (divide ?77681 ?77682)) ?77683) (divide (divide ?77682 ?77681) ?77683) =>= divide ?77680 ?77679 [77683, 77682, 77681, 77680, 77679] by Super 2 with 14284 at 1,2
Id : 21451, {_}: divide ?110293 ?110294 =<= multiply (divide (divide ?110293 ?110294) (inverse (divide ?110295 ?110296))) (divide ?110296 ?110295) [110296, 110295, 110294, 110293] by Super 13926 with 14590 at 2,3
Id : 22065, {_}: divide ?114187 ?114188 =<= multiply (multiply (divide ?114187 ?114188) (divide ?114189 ?114190)) (divide ?114190 ?114189) [114190, 114189, 114188, 114187] by Demod 21451 with 3 at 1,3
Id : 22122, {_}: divide (inverse (divide (divide (divide ?114646 ?114647) ?114648) (divide ?114649 ?114648))) (divide ?114647 ?114646) =?= multiply (multiply ?114649 (divide ?114650 ?114651)) (divide ?114651 ?114650) [114651, 114650, 114649, 114648, 114647, 114646] by Super 22065 with 2 at 1,1,3
Id : 22268, {_}: ?114649 =<= multiply (multiply ?114649 (divide ?114650 ?114651)) (divide ?114651 ?114650) [114651, 114650, 114649] by Demod 22122 with 2 at 2
Id : 202, {_}: inverse (divide (divide (divide ?946 ?947) ?948) (divide (divide ?949 (divide ?947 ?946)) ?948)) =>= ?949 [949, 948, 947, 946] by Super 2 with 6 at 2
Id : 213, {_}: inverse (divide (divide (divide ?1024 ?1025) (inverse ?1026)) (multiply (divide ?1027 (divide ?1025 ?1024)) ?1026)) =>= ?1027 [1027, 1026, 1025, 1024] by Super 202 with 3 at 2,1,2
Id : 232, {_}: inverse (divide (multiply (divide ?1024 ?1025) ?1026) (multiply (divide ?1027 (divide ?1025 ?1024)) ?1026)) =>= ?1027 [1027, 1026, 1025, 1024] by Demod 213 with 3 at 1,1,2
Id : 21617, {_}: divide (divide (inverse (divide ?111842 ?111843)) (divide ?111843 ?111842)) (inverse (divide ?111844 ?111845)) =>= inverse (divide ?111845 ?111844) [111845, 111844, 111843, 111842] by Super 14284 with 14590 at 1,3
Id : 21801, {_}: multiply (divide (inverse (divide ?111842 ?111843)) (divide ?111843 ?111842)) (divide ?111844 ?111845) =>= inverse (divide ?111845 ?111844) [111845, 111844, 111843, 111842] by Demod 21617 with 3 at 2
Id : 24938, {_}: inverse (divide (inverse (divide ?127750 ?127751)) (multiply (divide ?127752 (divide (divide ?127753 ?127754) (inverse (divide ?127754 ?127753)))) (divide ?127751 ?127750))) =>= ?127752 [127754, 127753, 127752, 127751, 127750] by Super 232 with 21801 at 1,1,2
Id :   9, {_}: divide (inverse (divide (divide (divide (inverse ?38) ?39) ?40) (divide ?41 ?40))) (multiply ?39 ?38) =>= ?41 [41, 40, 39, 38] by Super 2 with 3 at 2,2
Id : 21516, {_}: divide (inverse (divide ?110895 ?110896)) (multiply (divide ?110897 ?110898) (divide ?110896 ?110895)) =>= divide ?110898 ?110897 [110898, 110897, 110896, 110895] by Super 9 with 14590 at 1,1,2
Id : 25207, {_}: inverse (divide (divide (divide ?127753 ?127754) (inverse (divide ?127754 ?127753))) ?127752) =>= ?127752 [127752, 127754, 127753] by Demod 24938 with 21516 at 1,2
Id : 25208, {_}: inverse (divide (multiply (divide ?127753 ?127754) (divide ?127754 ?127753)) ?127752) =>= ?127752 [127752, 127754, 127753] by Demod 25207 with 3 at 1,1,2
Id : 25416, {_}: multiply (divide ?129668 (divide ?129669 ?129670)) (divide ?129669 ?129670) =>= ?129668 [129670, 129669, 129668] by Super 232 with 25208 at 2
Id : 25599, {_}: divide ?130543 (divide ?130544 ?130545) =>= multiply ?130543 (divide ?130545 ?130544) [130545, 130544, 130543] by Super 22268 with 25416 at 1,3
Id : 25966, {_}: multiply (multiply (inverse (divide (multiply (divide ?4853 ?4854) ?4855) ?4856)) (divide ?4853 ?4854)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Demod 978 with 25599 at 1,2
Id : 26300, {_}: multiply (multiply (inverse (multiply (multiply (divide ?133704 ?133705) ?133706) (divide ?133707 ?133708))) (divide ?133704 ?133705)) ?133706 =>= divide ?133708 ?133707 [133708, 133707, 133706, 133705, 133704] by Super 25966 with 25599 at 1,1,1,2
Id : 1261, {_}: multiply (divide (inverse (divide (multiply (divide ?6852 ?6853) ?6854) ?6855)) (divide ?6853 ?6852)) ?6854 =>= ?6855 [6855, 6854, 6853, 6852] by Demod 863 with 3 at 1,1,1,1,2
Id : 1287, {_}: multiply (divide (inverse (multiply (multiply (divide ?7047 ?7048) ?7049) ?7050)) (divide ?7048 ?7047)) ?7049 =>= inverse ?7050 [7050, 7049, 7048, 7047] by Super 1261 with 3 at 1,1,1,2
Id : 25965, {_}: multiply (multiply (inverse (multiply (multiply (divide ?7047 ?7048) ?7049) ?7050)) (divide ?7047 ?7048)) ?7049 =>= inverse ?7050 [7050, 7049, 7048, 7047] by Demod 1287 with 25599 at 1,2
Id : 26721, {_}: inverse (divide ?134526 ?134527) =>= divide ?134527 ?134526 [134527, 134526] by Demod 26300 with 25965 at 2
Id : 26764, {_}: inverse (multiply ?134789 ?134790) =<= divide (inverse ?134790) ?134789 [134790, 134789] by Super 26721 with 3 at 1,2
Id : 26966, {_}: multiply (inverse ?135418) ?135419 =<= inverse (multiply (inverse ?135419) ?135418) [135419, 135418] by Super 3 with 26764 at 3
Id : 26405, {_}: inverse (divide ?133707 ?133708) =>= divide ?133708 ?133707 [133708, 133707] by Demod 26300 with 25965 at 2
Id : 26641, {_}: divide ?127752 (multiply (divide ?127753 ?127754) (divide ?127754 ?127753)) =>= ?127752 [127754, 127753, 127752] by Demod 25208 with 26405 at 2
Id : 656, {_}: inverse (divide (divide (divide (inverse ?3361) ?3362) ?3363) (divide (divide ?3364 (multiply ?3362 ?3361)) ?3363)) =>= ?3364 [3364, 3363, 3362, 3361] by Super 202 with 3 at 2,1,2,1,2
Id : 272, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (multiply (divide ?32 ?33) (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34))) =>= ?31 [34, 33, 32, 31, 30, 29] by Demod 7 with 3 at 2,2
Id : 661, {_}: inverse (divide (divide (divide (inverse (divide (divide (divide ?3396 ?3397) ?3398) (divide ?3399 ?3398))) (divide ?3397 ?3396)) ?3400) (divide ?3401 ?3400)) =?= inverse (divide (divide ?3399 ?3402) (divide ?3401 ?3402)) [3402, 3401, 3400, 3399, 3398, 3397, 3396] by Super 656 with 272 at 1,2,1,2
Id : 5809, {_}: inverse (divide (divide ?31363 ?31364) (divide ?31365 ?31364)) =?= inverse (divide (divide ?31363 ?31366) (divide ?31365 ?31366)) [31366, 31365, 31364, 31363] by Demod 661 with 2 at 1,1,1,2
Id : 5810, {_}: inverse (divide (divide ?31368 ?31369) (divide (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))) ?31369)) =>= inverse (divide (divide ?31368 (divide ?31371 ?31370)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Super 5809 with 2 at 2,1,3
Id : 25948, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))))) =>= inverse (divide (divide ?31368 (divide ?31371 ?31370)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 5810 with 25599 at 1,2
Id : 25949, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25948 with 25599 at 1,1,3
Id : 25950, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373))))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25949 with 25599 at 1,2,2,1,2
Id : 26071, {_}: inverse (multiply (divide ?31368 ?31369) (multiply ?31369 (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373)))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25950 with 3 at 2,1,2
Id : 26655, {_}: inverse (multiply (divide ?31368 ?31369) (multiply ?31369 (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373)))) =>= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 26071 with 26405 at 3
Id : 5834, {_}: inverse (divide (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31561 ?31560)) =>= inverse (divide ?31559 (divide ?31561 (divide ?31557 ?31556))) [31561, 31560, 31559, 31558, 31557, 31556] by Super 5809 with 2 at 1,1,3
Id : 25943, {_}: inverse (multiply (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31560 ?31561)) =>= inverse (divide ?31559 (divide ?31561 (divide ?31557 ?31556))) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 5834 with 25599 at 1,2
Id : 25944, {_}: inverse (multiply (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 25943 with 25599 at 1,3
Id : 25945, {_}: inverse (multiply (divide (inverse (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) ?31560) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 25944 with 25599 at 1,1,1,1,2
Id : 26832, {_}: inverse (multiply (inverse (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559)))) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31559, 31558, 31557, 31556, 31560] by Demod 25945 with 26764 at 1,1,2
Id : 27298, {_}: multiply (inverse (divide ?31560 ?31561)) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31559, 31558, 31557, 31556, 31561, 31560] by Demod 26832 with 26966 at 2
Id : 27299, {_}: multiply (divide ?31561 ?31560) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31559, 31558, 31557, 31556, 31560, 31561] by Demod 27298 with 26405 at 1,2
Id : 27300, {_}: inverse (inverse (multiply ?31373 (divide (divide ?31371 ?31370) ?31368))) =>= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31368, 31370, 31371, 31373] by Demod 26655 with 27299 at 1,2
Id : 26900, {_}: inverse (inverse (multiply ?134958 ?134959)) =>= divide ?134958 (inverse ?134959) [134959, 134958] by Super 26405 with 26764 at 1,2
Id : 27254, {_}: inverse (inverse (multiply ?134958 ?134959)) =>= multiply ?134958 ?134959 [134959, 134958] by Demod 26900 with 3 at 3
Id : 27506, {_}: multiply ?31373 (divide (divide ?31371 ?31370) ?31368) =<= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31368, 31370, 31371, 31373] by Demod 27300 with 27254 at 2
Id : 27507, {_}: multiply ?127752 (divide (divide ?127753 ?127754) (divide ?127753 ?127754)) =>= ?127752 [127754, 127753, 127752] by Demod 26641 with 27506 at 2
Id : 27516, {_}: multiply ?127752 (multiply (divide ?127753 ?127754) (divide ?127754 ?127753)) =>= ?127752 [127754, 127753, 127752] by Demod 27507 with 25599 at 2,2
Id : 22416, {_}: ?115848 =<= multiply (multiply ?115848 (divide ?115849 ?115850)) (divide ?115850 ?115849) [115850, 115849, 115848] by Demod 22122 with 2 at 2
Id : 22472, {_}: ?116246 =<= multiply (multiply ?116246 (multiply ?116247 ?116248)) (divide (inverse ?116248) ?116247) [116248, 116247, 116246] by Super 22416 with 3 at 2,1,3
Id : 26848, {_}: ?116246 =<= multiply (multiply ?116246 (multiply ?116247 ?116248)) (inverse (multiply ?116247 ?116248)) [116248, 116247, 116246] by Demod 22472 with 26764 at 2,3
Id : 27552, {_}: inverse (inverse (multiply ?137012 ?137013)) =>= multiply ?137012 ?137013 [137013, 137012] by Demod 26900 with 3 at 3
Id : 25980, {_}: multiply (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?2 ?3) =>= ?5 [5, 4, 3, 2] by Demod 2 with 25599 at 2
Id : 25981, {_}: multiply (inverse (multiply (divide (divide ?2 ?3) ?4) (divide ?4 ?5))) (divide ?2 ?3) =>= ?5 [5, 4, 3, 2] by Demod 25980 with 25599 at 1,1,2
Id : 27556, {_}: inverse (inverse ?137032) =<= multiply (inverse (multiply (divide (divide ?137033 ?137034) ?137035) (divide ?137035 ?137032))) (divide ?137033 ?137034) [137035, 137034, 137033, 137032] by Super 27552 with 25981 at 1,1,2
Id : 27632, {_}: inverse (inverse ?137032) =>= ?137032 [137032] by Demod 27556 with 25981 at 3
Id : 27734, {_}: multiply ?137511 (inverse ?137512) =>= divide ?137511 ?137512 [137512, 137511] by Super 3 with 27632 at 2,3
Id : 27823, {_}: ?116246 =<= divide (multiply ?116246 (multiply ?116247 ?116248)) (multiply ?116247 ?116248) [116248, 116247, 116246] by Demod 26848 with 27734 at 3
Id :  22, {_}: divide (inverse (divide (divide (multiply (divide ?98 ?99) (divide (divide (divide ?99 ?98) ?100) (divide ?101 ?100))) ?102) (divide ?103 ?102))) ?101 =>= ?103 [103, 102, 101, 100, 99, 98] by Demod 5 with 3 at 1,1,1,1,2
Id :  26, {_}: divide (inverse (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) (inverse (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139))) =>= ?138 [139, 138, 137, 136, 135, 134, 133, 132] by Super 22 with 2 at 2,2,1,1,1,1,2
Id :  42, {_}: multiply (inverse (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 138, 137, 136, 135, 134, 133, 132] by Demod 26 with 3 at 2
Id : 26984, {_}: inverse (multiply (divide ?135518 ?135519) ?135520) =<= multiply (inverse ?135520) (divide ?135519 ?135518) [135520, 135519, 135518] by Super 25599 with 26764 at 2
Id : 31736, {_}: inverse (multiply (divide (divide ?136 ?139) (divide (divide ?135 ?134) ?139)) (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) =>= ?138 [138, 137, 133, 132, 134, 135, 139, 136] by Demod 42 with 26984 at 2
Id : 26724, {_}: inverse (multiply ?134539 (divide ?134540 ?134541)) =>= divide (divide ?134541 ?134540) ?134539 [134541, 134540, 134539] by Super 26721 with 25599 at 1,2
Id : 31737, {_}: divide (divide (divide ?138 ?137) (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137)) (divide (divide ?136 ?139) (divide (divide ?135 ?134) ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31736 with 26724 at 2
Id : 31738, {_}: multiply (divide (divide ?138 ?137) (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137)) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31737 with 25599 at 2
Id : 31739, {_}: multiply (multiply (divide ?138 ?137) (divide ?137 (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)))) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31738 with 25599 at 1,2
Id : 31740, {_}: multiply (multiply (divide ?138 ?137) (divide ?137 (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31739 with 25599 at 2,2
Id : 31741, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (divide (divide ?136 (divide (divide ?133 ?132) (divide ?134 ?135))) (divide ?132 ?133)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 135, 134, 132, 133, 136, 137, 138] by Demod 31740 with 27506 at 2,1,2
Id : 31742, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (divide ?136 (divide (divide ?133 ?132) (divide ?134 ?135))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 135, 134, 132, 133, 136, 137, 138] by Demod 31741 with 25599 at 2,2,1,2
Id : 31743, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (multiply ?136 (divide (divide ?134 ?135) (divide ?133 ?132))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 132, 133, 135, 134, 136, 137, 138] by Demod 31742 with 25599 at 1,2,2,1,2
Id : 31744, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (multiply ?136 (multiply (divide ?134 ?135) (divide ?132 ?133))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 133, 132, 135, 134, 136, 137, 138] by Demod 31743 with 25599 at 2,1,2,2,1,2
Id : 31832, {_}: ?147291 =<= divide (multiply ?147291 (multiply (multiply (divide ?147292 ?147293) (multiply ?147293 (multiply (multiply ?147294 (multiply (divide ?147295 ?147296) (divide ?147297 ?147298))) (divide ?147298 ?147297)))) (multiply (divide (divide ?147296 ?147295) ?147299) (divide ?147299 ?147294)))) ?147292 [147299, 147298, 147297, 147296, 147295, 147294, 147293, 147292, 147291] by Super 27823 with 31744 at 2,3
Id : 32203, {_}: ?147291 =<= divide (multiply ?147291 ?147292) ?147292 [147292, 147291] by Demod 31832 with 31744 at 2,1,3
Id : 33094, {_}: inverse ?153200 =<= divide ?153201 (multiply ?153200 ?153201) [153201, 153200] by Super 26405 with 32203 at 1,2
Id : 33479, {_}: multiply ?154885 (multiply (divide (multiply ?154886 ?154887) ?154887) (inverse ?154886)) =>= ?154885 [154887, 154886, 154885] by Super 27516 with 33094 at 2,2,2
Id : 33980, {_}: multiply ?154885 (divide (divide (multiply ?154886 ?154887) ?154887) ?154886) =>= ?154885 [154887, 154886, 154885] by Demod 33479 with 27734 at 2,2
Id : 33981, {_}: multiply ?154885 (divide ?154886 ?154886) =>= ?154885 [154886, 154885] by Demod 33980 with 32203 at 1,2,2
Id : 34313, {_}: multiply (inverse (divide ?156478 ?156478)) ?156479 =>= inverse (inverse ?156479) [156479, 156478] by Super 26966 with 33981 at 1,3
Id : 34773, {_}: multiply (divide ?156478 ?156478) ?156479 =>= inverse (inverse ?156479) [156479, 156478] by Demod 34313 with 26405 at 1,2
Id : 36051, {_}: multiply (divide ?160644 ?160644) ?160645 =>= ?160645 [160645, 160644] by Demod 34773 with 27632 at 3
Id : 36066, {_}: multiply (multiply (inverse ?160721) ?160721) ?160722 =>= ?160722 [160722, 160721] by Super 36051 with 3 at 1,2
Id : 39894, {_}: a2 === a2 [] by Demod 1 with 36066 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP476-1.p
23945: solved GRP476-1.p in 11.032689 using nrkbo
23945: status Unsatisfiable for GRP476-1.p
NO CLASH, using fixed ground order
23952: Facts:
23952:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23952:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23952: Goal:
23952:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23952: Order:
23952:   nrkbo
23952: Leaf order:
23952:  a3 2 0 2 1,1,2
23952:  b3 2 0 2 2,1,2
23952:  c3 2 0 2 2,2
23952:  inverse 2 1 0 
23952:  multiply 5 2 4 0,2
23952:  divide 7 2 0 
NO CLASH, using fixed ground order
23953: Facts:
23953:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23953:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23953: Goal:
23953:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23953: Order:
23953:   kbo
23953: Leaf order:
23953:  a3 2 0 2 1,1,2
23953:  b3 2 0 2 2,1,2
23953:  c3 2 0 2 2,2
23953:  inverse 2 1 0 
23953:  multiply 5 2 4 0,2
23953:  divide 7 2 0 
NO CLASH, using fixed ground order
23954: Facts:
23954:  Id :   2, {_}:
          divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4)))
            (divide ?3 ?2)
          =>=
          ?5
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23954:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23954: Goal:
23954:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
23954: Order:
23954:   lpo
23954: Leaf order:
23954:  a3 2 0 2 1,1,2
23954:  b3 2 0 2 2,1,2
23954:  c3 2 0 2 2,2
23954:  inverse 2 1 0 
23954:  multiply 5 2 4 0,2
23954:  divide 7 2 0 
Statistics :
Max weight : 50
Found proof, 32.327095s
% SZS status Unsatisfiable for GRP477-1.p
% SZS output start CNFRefutation for GRP477-1.p
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?3 ?2) =>= ?5 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?11) ?12) (divide ?13 ?12))) (divide ?11 ?10) =>= ?13 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   5, {_}: divide (inverse (divide (divide (divide (divide ?15 ?16) (inverse (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17)))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2
Id :  17, {_}: divide (inverse (divide (divide (multiply (divide ?15 ?16) (divide (divide (divide ?16 ?15) ?17) (divide ?18 ?17))) ?19) (divide ?20 ?19))) ?18 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,1,2
Id :  20, {_}: divide (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?81 ?80) =?= inverse (divide (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?83 ?87)) [87, 86, 85, 84, 83, 82, 81, 80] by Super 2 with 17 at 2,1,1,2
Id : 1168, {_}: divide (divide (inverse (divide (divide (divide ?6497 ?6498) ?6499) ?6500)) (divide ?6498 ?6497)) ?6499 =>= ?6500 [6500, 6499, 6498, 6497] by Super 17 with 20 at 1,2
Id : 1637, {_}: divide (divide (inverse (divide (divide (divide (inverse ?8641) ?8642) ?8643) ?8644)) (multiply ?8642 ?8641)) ?8643 =>= ?8644 [8644, 8643, 8642, 8641] by Super 1168 with 3 at 2,1,2
Id : 1659, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?8819) ?8820) ?8821) ?8822)) (multiply (inverse ?8820) ?8819)) ?8821 =>= ?8822 [8822, 8821, 8820, 8819] by Super 1637 with 3 at 1,1,1,1,1,2
Id :   7, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (divide (divide ?32 ?33) (inverse (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34)))) =>= ?31 [34, 33, 32, 31, 30, 29] by Super 4 with 2 at 1,1,1,1,2
Id : 292, {_}: divide (inverse (divide (divide ?1415 ?1416) (divide ?1417 ?1416))) (multiply (divide ?1418 ?1419) (divide (divide (divide ?1419 ?1418) ?1420) (divide ?1415 ?1420))) =>= ?1417 [1420, 1419, 1418, 1417, 1416, 1415] by Demod 7 with 3 at 2,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?23) (divide ?24 ?25)) ?26)) (divide ?23 ?22) =?= inverse (divide (divide (divide ?25 ?24) ?27) (divide ?26 ?27)) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 117, {_}: inverse (divide (divide (divide ?560 ?561) ?562) (divide (divide ?563 (divide ?561 ?560)) ?562)) =>= ?563 [563, 562, 561, 560] by Super 2 with 6 at 2
Id : 329, {_}: divide ?1764 (multiply (divide ?1765 ?1766) (divide (divide (divide ?1766 ?1765) ?1767) (divide (divide ?1768 ?1769) ?1767))) =>= divide ?1764 (divide ?1769 ?1768) [1769, 1768, 1767, 1766, 1765, 1764] by Super 292 with 117 at 1,2
Id : 13692, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?74151) ?74152) ?74153) (divide ?74154 ?74155))) (multiply (inverse ?74152) ?74151)) ?74153 =?= multiply (divide ?74156 ?74157) (divide (divide (divide ?74157 ?74156) ?74158) (divide (divide ?74155 ?74154) ?74158)) [74158, 74157, 74156, 74155, 74154, 74153, 74152, 74151] by Super 1659 with 329 at 1,1,1,2
Id : 13926, {_}: divide ?74154 ?74155 =<= multiply (divide ?74156 ?74157) (divide (divide (divide ?74157 ?74156) ?74158) (divide (divide ?74155 ?74154) ?74158)) [74158, 74157, 74156, 74155, 74154] by Demod 13692 with 1659 at 2
Id : 1195, {_}: divide (divide (inverse (multiply (divide (divide ?6697 ?6698) ?6699) ?6700)) (divide ?6698 ?6697)) ?6699 =>= inverse ?6700 [6700, 6699, 6698, 6697] by Super 1168 with 3 at 1,1,1,2
Id : 14284, {_}: divide (divide (inverse (divide ?76258 ?76259)) (divide ?76260 ?76261)) ?76262 =<= inverse (divide (divide (divide ?76262 (divide ?76261 ?76260)) ?76263) (divide (divide ?76259 ?76258) ?76263)) [76263, 76262, 76261, 76260, 76259, 76258] by Super 1195 with 13926 at 1,1,1,2
Id : 14590, {_}: divide (divide (divide (inverse (divide ?77679 ?77680)) (divide ?77681 ?77682)) ?77683) (divide (divide ?77682 ?77681) ?77683) =>= divide ?77680 ?77679 [77683, 77682, 77681, 77680, 77679] by Super 2 with 14284 at 1,2
Id : 21451, {_}: divide ?110293 ?110294 =<= multiply (divide (divide ?110293 ?110294) (inverse (divide ?110295 ?110296))) (divide ?110296 ?110295) [110296, 110295, 110294, 110293] by Super 13926 with 14590 at 2,3
Id : 22065, {_}: divide ?114187 ?114188 =<= multiply (multiply (divide ?114187 ?114188) (divide ?114189 ?114190)) (divide ?114190 ?114189) [114190, 114189, 114188, 114187] by Demod 21451 with 3 at 1,3
Id : 22122, {_}: divide (inverse (divide (divide (divide ?114646 ?114647) ?114648) (divide ?114649 ?114648))) (divide ?114647 ?114646) =?= multiply (multiply ?114649 (divide ?114650 ?114651)) (divide ?114651 ?114650) [114651, 114650, 114649, 114648, 114647, 114646] by Super 22065 with 2 at 1,1,3
Id : 22416, {_}: ?115848 =<= multiply (multiply ?115848 (divide ?115849 ?115850)) (divide ?115850 ?115849) [115850, 115849, 115848] by Demod 22122 with 2 at 2
Id : 22444, {_}: ?116047 =<= multiply (multiply ?116047 (divide (inverse ?116048) ?116049)) (multiply ?116049 ?116048) [116049, 116048, 116047] by Super 22416 with 3 at 2,3
Id :  18, {_}: multiply (inverse (divide (divide (multiply (divide ?64 ?65) (divide (divide (divide ?65 ?64) ?66) (divide (inverse ?67) ?66))) ?68) (divide ?69 ?68))) ?67 =>= ?69 [69, 68, 67, 66, 65, 64] by Super 3 with 17 at 3
Id : 863, {_}: multiply (divide (inverse (divide (divide (divide ?4853 ?4854) (inverse ?4855)) ?4856)) (divide ?4854 ?4853)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Super 18 with 20 at 1,2
Id : 978, {_}: multiply (divide (inverse (divide (multiply (divide ?4853 ?4854) ?4855) ?4856)) (divide ?4854 ?4853)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Demod 863 with 3 at 1,1,1,1,2
Id : 22268, {_}: ?114649 =<= multiply (multiply ?114649 (divide ?114650 ?114651)) (divide ?114651 ?114650) [114651, 114650, 114649] by Demod 22122 with 2 at 2
Id : 202, {_}: inverse (divide (divide (divide ?946 ?947) ?948) (divide (divide ?949 (divide ?947 ?946)) ?948)) =>= ?949 [949, 948, 947, 946] by Super 2 with 6 at 2
Id : 213, {_}: inverse (divide (divide (divide ?1024 ?1025) (inverse ?1026)) (multiply (divide ?1027 (divide ?1025 ?1024)) ?1026)) =>= ?1027 [1027, 1026, 1025, 1024] by Super 202 with 3 at 2,1,2
Id : 232, {_}: inverse (divide (multiply (divide ?1024 ?1025) ?1026) (multiply (divide ?1027 (divide ?1025 ?1024)) ?1026)) =>= ?1027 [1027, 1026, 1025, 1024] by Demod 213 with 3 at 1,1,2
Id : 21617, {_}: divide (divide (inverse (divide ?111842 ?111843)) (divide ?111843 ?111842)) (inverse (divide ?111844 ?111845)) =>= inverse (divide ?111845 ?111844) [111845, 111844, 111843, 111842] by Super 14284 with 14590 at 1,3
Id : 21801, {_}: multiply (divide (inverse (divide ?111842 ?111843)) (divide ?111843 ?111842)) (divide ?111844 ?111845) =>= inverse (divide ?111845 ?111844) [111845, 111844, 111843, 111842] by Demod 21617 with 3 at 2
Id : 24938, {_}: inverse (divide (inverse (divide ?127750 ?127751)) (multiply (divide ?127752 (divide (divide ?127753 ?127754) (inverse (divide ?127754 ?127753)))) (divide ?127751 ?127750))) =>= ?127752 [127754, 127753, 127752, 127751, 127750] by Super 232 with 21801 at 1,1,2
Id :   9, {_}: divide (inverse (divide (divide (divide (inverse ?38) ?39) ?40) (divide ?41 ?40))) (multiply ?39 ?38) =>= ?41 [41, 40, 39, 38] by Super 2 with 3 at 2,2
Id : 21516, {_}: divide (inverse (divide ?110895 ?110896)) (multiply (divide ?110897 ?110898) (divide ?110896 ?110895)) =>= divide ?110898 ?110897 [110898, 110897, 110896, 110895] by Super 9 with 14590 at 1,1,2
Id : 25207, {_}: inverse (divide (divide (divide ?127753 ?127754) (inverse (divide ?127754 ?127753))) ?127752) =>= ?127752 [127752, 127754, 127753] by Demod 24938 with 21516 at 1,2
Id : 25208, {_}: inverse (divide (multiply (divide ?127753 ?127754) (divide ?127754 ?127753)) ?127752) =>= ?127752 [127752, 127754, 127753] by Demod 25207 with 3 at 1,1,2
Id : 25416, {_}: multiply (divide ?129668 (divide ?129669 ?129670)) (divide ?129669 ?129670) =>= ?129668 [129670, 129669, 129668] by Super 232 with 25208 at 2
Id : 25599, {_}: divide ?130543 (divide ?130544 ?130545) =>= multiply ?130543 (divide ?130545 ?130544) [130545, 130544, 130543] by Super 22268 with 25416 at 1,3
Id : 25966, {_}: multiply (multiply (inverse (divide (multiply (divide ?4853 ?4854) ?4855) ?4856)) (divide ?4853 ?4854)) ?4855 =>= ?4856 [4856, 4855, 4854, 4853] by Demod 978 with 25599 at 1,2
Id : 26300, {_}: multiply (multiply (inverse (multiply (multiply (divide ?133704 ?133705) ?133706) (divide ?133707 ?133708))) (divide ?133704 ?133705)) ?133706 =>= divide ?133708 ?133707 [133708, 133707, 133706, 133705, 133704] by Super 25966 with 25599 at 1,1,1,2
Id : 1261, {_}: multiply (divide (inverse (divide (multiply (divide ?6852 ?6853) ?6854) ?6855)) (divide ?6853 ?6852)) ?6854 =>= ?6855 [6855, 6854, 6853, 6852] by Demod 863 with 3 at 1,1,1,1,2
Id : 1287, {_}: multiply (divide (inverse (multiply (multiply (divide ?7047 ?7048) ?7049) ?7050)) (divide ?7048 ?7047)) ?7049 =>= inverse ?7050 [7050, 7049, 7048, 7047] by Super 1261 with 3 at 1,1,1,2
Id : 25965, {_}: multiply (multiply (inverse (multiply (multiply (divide ?7047 ?7048) ?7049) ?7050)) (divide ?7047 ?7048)) ?7049 =>= inverse ?7050 [7050, 7049, 7048, 7047] by Demod 1287 with 25599 at 1,2
Id : 26721, {_}: inverse (divide ?134526 ?134527) =>= divide ?134527 ?134526 [134527, 134526] by Demod 26300 with 25965 at 2
Id : 26764, {_}: inverse (multiply ?134789 ?134790) =<= divide (inverse ?134790) ?134789 [134790, 134789] by Super 26721 with 3 at 1,2
Id : 26849, {_}: ?116047 =<= multiply (multiply ?116047 (inverse (multiply ?116049 ?116048))) (multiply ?116049 ?116048) [116048, 116049, 116047] by Demod 22444 with 26764 at 2,1,3
Id : 26405, {_}: inverse (divide ?133707 ?133708) =>= divide ?133708 ?133707 [133708, 133707] by Demod 26300 with 25965 at 2
Id : 26900, {_}: inverse (inverse (multiply ?134958 ?134959)) =>= divide ?134958 (inverse ?134959) [134959, 134958] by Super 26405 with 26764 at 1,2
Id : 27552, {_}: inverse (inverse (multiply ?137012 ?137013)) =>= multiply ?137012 ?137013 [137013, 137012] by Demod 26900 with 3 at 3
Id : 25980, {_}: multiply (inverse (divide (divide (divide ?2 ?3) ?4) (divide ?5 ?4))) (divide ?2 ?3) =>= ?5 [5, 4, 3, 2] by Demod 2 with 25599 at 2
Id : 25981, {_}: multiply (inverse (multiply (divide (divide ?2 ?3) ?4) (divide ?4 ?5))) (divide ?2 ?3) =>= ?5 [5, 4, 3, 2] by Demod 25980 with 25599 at 1,1,2
Id : 27556, {_}: inverse (inverse ?137032) =<= multiply (inverse (multiply (divide (divide ?137033 ?137034) ?137035) (divide ?137035 ?137032))) (divide ?137033 ?137034) [137035, 137034, 137033, 137032] by Super 27552 with 25981 at 1,1,2
Id : 27632, {_}: inverse (inverse ?137032) =>= ?137032 [137032] by Demod 27556 with 25981 at 3
Id : 27734, {_}: multiply ?137511 (inverse ?137512) =>= divide ?137511 ?137512 [137512, 137511] by Super 3 with 27632 at 2,3
Id : 27821, {_}: ?116047 =<= multiply (divide ?116047 (multiply ?116049 ?116048)) (multiply ?116049 ?116048) [116048, 116049, 116047] by Demod 26849 with 27734 at 1,3
Id :  22, {_}: divide (inverse (divide (divide (multiply (divide ?98 ?99) (divide (divide (divide ?99 ?98) ?100) (divide ?101 ?100))) ?102) (divide ?103 ?102))) ?101 =>= ?103 [103, 102, 101, 100, 99, 98] by Demod 5 with 3 at 1,1,1,1,2
Id :  26, {_}: divide (inverse (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) (inverse (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139))) =>= ?138 [139, 138, 137, 136, 135, 134, 133, 132] by Super 22 with 2 at 2,2,1,1,1,1,2
Id :  42, {_}: multiply (inverse (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 138, 137, 136, 135, 134, 133, 132] by Demod 26 with 3 at 2
Id : 26984, {_}: inverse (multiply (divide ?135518 ?135519) ?135520) =<= multiply (inverse ?135520) (divide ?135519 ?135518) [135520, 135519, 135518] by Super 25599 with 26764 at 2
Id : 31736, {_}: inverse (multiply (divide (divide ?136 ?139) (divide (divide ?135 ?134) ?139)) (divide (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137) (divide ?138 ?137))) =>= ?138 [138, 137, 133, 132, 134, 135, 139, 136] by Demod 42 with 26984 at 2
Id : 26724, {_}: inverse (multiply ?134539 (divide ?134540 ?134541)) =>= divide (divide ?134541 ?134540) ?134539 [134541, 134540, 134539] by Super 26721 with 25599 at 1,2
Id : 31737, {_}: divide (divide (divide ?138 ?137) (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137)) (divide (divide ?136 ?139) (divide (divide ?135 ?134) ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31736 with 26724 at 2
Id : 31738, {_}: multiply (divide (divide ?138 ?137) (divide (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)) ?137)) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31737 with 25599 at 2
Id : 31739, {_}: multiply (multiply (divide ?138 ?137) (divide ?137 (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)))) (divide (divide (divide ?135 ?134) ?139) (divide ?136 ?139)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31738 with 25599 at 1,2
Id : 31740, {_}: multiply (multiply (divide ?138 ?137) (divide ?137 (multiply (divide ?132 ?133) (divide (divide (divide ?133 ?132) (divide ?134 ?135)) ?136)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 136, 135, 134, 133, 132, 137, 138] by Demod 31739 with 25599 at 2,2
Id : 656, {_}: inverse (divide (divide (divide (inverse ?3361) ?3362) ?3363) (divide (divide ?3364 (multiply ?3362 ?3361)) ?3363)) =>= ?3364 [3364, 3363, 3362, 3361] by Super 202 with 3 at 2,1,2,1,2
Id : 272, {_}: divide (inverse (divide (divide ?29 ?30) (divide ?31 ?30))) (multiply (divide ?32 ?33) (divide (divide (divide ?33 ?32) ?34) (divide ?29 ?34))) =>= ?31 [34, 33, 32, 31, 30, 29] by Demod 7 with 3 at 2,2
Id : 661, {_}: inverse (divide (divide (divide (inverse (divide (divide (divide ?3396 ?3397) ?3398) (divide ?3399 ?3398))) (divide ?3397 ?3396)) ?3400) (divide ?3401 ?3400)) =?= inverse (divide (divide ?3399 ?3402) (divide ?3401 ?3402)) [3402, 3401, 3400, 3399, 3398, 3397, 3396] by Super 656 with 272 at 1,2,1,2
Id : 5809, {_}: inverse (divide (divide ?31363 ?31364) (divide ?31365 ?31364)) =?= inverse (divide (divide ?31363 ?31366) (divide ?31365 ?31366)) [31366, 31365, 31364, 31363] by Demod 661 with 2 at 1,1,1,2
Id : 5810, {_}: inverse (divide (divide ?31368 ?31369) (divide (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))) ?31369)) =>= inverse (divide (divide ?31368 (divide ?31371 ?31370)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Super 5809 with 2 at 2,1,3
Id : 25948, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))))) =>= inverse (divide (divide ?31368 (divide ?31371 ?31370)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 5810 with 25599 at 1,2
Id : 25949, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (divide (divide (divide ?31370 ?31371) ?31372) (divide ?31373 ?31372))))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25948 with 25599 at 1,1,3
Id : 25950, {_}: inverse (multiply (divide ?31368 ?31369) (divide ?31369 (inverse (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373))))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25949 with 25599 at 1,2,2,1,2
Id : 26071, {_}: inverse (multiply (divide ?31368 ?31369) (multiply ?31369 (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373)))) =>= inverse (divide (multiply ?31368 (divide ?31370 ?31371)) ?31373) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 25950 with 3 at 2,1,2
Id : 26655, {_}: inverse (multiply (divide ?31368 ?31369) (multiply ?31369 (multiply (divide (divide ?31370 ?31371) ?31372) (divide ?31372 ?31373)))) =>= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31373, 31372, 31371, 31370, 31369, 31368] by Demod 26071 with 26405 at 3
Id : 5834, {_}: inverse (divide (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31561 ?31560)) =>= inverse (divide ?31559 (divide ?31561 (divide ?31557 ?31556))) [31561, 31560, 31559, 31558, 31557, 31556] by Super 5809 with 2 at 1,1,3
Id : 25943, {_}: inverse (multiply (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31560 ?31561)) =>= inverse (divide ?31559 (divide ?31561 (divide ?31557 ?31556))) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 5834 with 25599 at 1,2
Id : 25944, {_}: inverse (multiply (divide (inverse (divide (divide (divide ?31556 ?31557) ?31558) (divide ?31559 ?31558))) ?31560) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 25943 with 25599 at 1,3
Id : 25945, {_}: inverse (multiply (divide (inverse (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) ?31560) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31560, 31559, 31558, 31557, 31556] by Demod 25944 with 25599 at 1,1,1,1,2
Id : 26832, {_}: inverse (multiply (inverse (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559)))) (divide ?31560 ?31561)) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31561, 31559, 31558, 31557, 31556, 31560] by Demod 25945 with 26764 at 1,1,2
Id : 26966, {_}: multiply (inverse ?135418) ?135419 =<= inverse (multiply (inverse ?135419) ?135418) [135419, 135418] by Super 3 with 26764 at 3
Id : 27298, {_}: multiply (inverse (divide ?31560 ?31561)) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31559, 31558, 31557, 31556, 31561, 31560] by Demod 26832 with 26966 at 2
Id : 27299, {_}: multiply (divide ?31561 ?31560) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= inverse (multiply ?31559 (divide (divide ?31557 ?31556) ?31561)) [31559, 31558, 31557, 31556, 31560, 31561] by Demod 27298 with 26405 at 1,2
Id : 27300, {_}: inverse (inverse (multiply ?31373 (divide (divide ?31371 ?31370) ?31368))) =>= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31368, 31370, 31371, 31373] by Demod 26655 with 27299 at 1,2
Id : 27254, {_}: inverse (inverse (multiply ?134958 ?134959)) =>= multiply ?134958 ?134959 [134959, 134958] by Demod 26900 with 3 at 3
Id : 27506, {_}: multiply ?31373 (divide (divide ?31371 ?31370) ?31368) =<= divide ?31373 (multiply ?31368 (divide ?31370 ?31371)) [31368, 31370, 31371, 31373] by Demod 27300 with 27254 at 2
Id : 31741, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (divide (divide ?136 (divide (divide ?133 ?132) (divide ?134 ?135))) (divide ?132 ?133)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 135, 134, 132, 133, 136, 137, 138] by Demod 31740 with 27506 at 2,1,2
Id : 31742, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (divide ?136 (divide (divide ?133 ?132) (divide ?134 ?135))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 135, 134, 132, 133, 136, 137, 138] by Demod 31741 with 25599 at 2,2,1,2
Id : 31743, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (multiply ?136 (divide (divide ?134 ?135) (divide ?133 ?132))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 132, 133, 135, 134, 136, 137, 138] by Demod 31742 with 25599 at 1,2,2,1,2
Id : 31744, {_}: multiply (multiply (divide ?138 ?137) (multiply ?137 (multiply (multiply ?136 (multiply (divide ?134 ?135) (divide ?132 ?133))) (divide ?133 ?132)))) (multiply (divide (divide ?135 ?134) ?139) (divide ?139 ?136)) =>= ?138 [139, 133, 132, 135, 134, 136, 137, 138] by Demod 31743 with 25599 at 2,1,2,2,1,2
Id : 31835, {_}: ?147320 =<= multiply (divide ?147320 (multiply (multiply (divide ?147321 ?147322) (multiply ?147322 (multiply (multiply ?147323 (multiply (divide ?147324 ?147325) (divide ?147326 ?147327))) (divide ?147327 ?147326)))) (multiply (divide (divide ?147325 ?147324) ?147328) (divide ?147328 ?147323)))) ?147321 [147328, 147327, 147326, 147325, 147324, 147323, 147322, 147321, 147320] by Super 27821 with 31744 at 2,3
Id : 32201, {_}: ?147320 =<= multiply (divide ?147320 ?147321) ?147321 [147321, 147320] by Demod 31835 with 31744 at 2,1,3
Id : 835, {_}: divide (divide (inverse (divide (divide (divide ?4527 ?4528) ?4529) ?4530)) (divide ?4528 ?4527)) ?4529 =>= ?4530 [4530, 4529, 4528, 4527] by Super 17 with 20 at 1,2
Id : 25994, {_}: divide (multiply (inverse (divide (divide (divide ?4527 ?4528) ?4529) ?4530)) (divide ?4527 ?4528)) ?4529 =>= ?4530 [4530, 4529, 4528, 4527] by Demod 835 with 25599 at 1,2
Id : 26651, {_}: divide (multiply (divide ?4530 (divide (divide ?4527 ?4528) ?4529)) (divide ?4527 ?4528)) ?4529 =>= ?4530 [4529, 4528, 4527, 4530] by Demod 25994 with 26405 at 1,1,2
Id : 26667, {_}: divide (multiply (multiply ?4530 (divide ?4529 (divide ?4527 ?4528))) (divide ?4527 ?4528)) ?4529 =>= ?4530 [4528, 4527, 4529, 4530] by Demod 26651 with 25599 at 1,1,2
Id : 26668, {_}: divide (multiply (multiply ?4530 (multiply ?4529 (divide ?4528 ?4527))) (divide ?4527 ?4528)) ?4529 =>= ?4530 [4527, 4528, 4529, 4530] by Demod 26667 with 25599 at 2,1,1,2
Id : 32718, {_}: divide (multiply ?151970 (divide ?151971 ?151972)) ?151973 =?= divide ?151970 (multiply ?151973 (divide ?151972 ?151971)) [151973, 151972, 151971, 151970] by Super 26668 with 32201 at 1,1,2
Id : 42767, {_}: divide (multiply ?174190 (divide ?174191 ?174192)) ?174193 =>= multiply ?174190 (divide (divide ?174191 ?174192) ?174193) [174193, 174192, 174191, 174190] by Demod 32718 with 27506 at 3
Id : 25986, {_}: inverse (divide (multiply (divide ?1024 ?1025) ?1026) (multiply (multiply ?1027 (divide ?1024 ?1025)) ?1026)) =>= ?1027 [1027, 1026, 1025, 1024] by Demod 232 with 25599 at 1,2,1,2
Id : 26619, {_}: divide (multiply (multiply ?1027 (divide ?1024 ?1025)) ?1026) (multiply (divide ?1024 ?1025) ?1026) =>= ?1027 [1026, 1025, 1024, 1027] by Demod 25986 with 26405 at 2
Id : 42770, {_}: divide (multiply ?174208 ?174209) ?174210 =<= multiply ?174208 (divide (divide (multiply (multiply ?174209 (divide ?174211 ?174212)) ?174213) (multiply (divide ?174211 ?174212) ?174213)) ?174210) [174213, 174212, 174211, 174210, 174209, 174208] by Super 42767 with 26619 at 2,1,2
Id : 43287, {_}: divide (multiply ?174208 ?174209) ?174210 =>= multiply ?174208 (divide ?174209 ?174210) [174210, 174209, 174208] by Demod 42770 with 26619 at 1,2,3
Id : 45294, {_}: multiply ?177592 ?177593 =<= multiply (multiply ?177592 (divide ?177593 ?177594)) ?177594 [177594, 177593, 177592] by Super 32201 with 43287 at 1,3
Id : 25967, {_}: multiply (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?80 ?81) =?= inverse (divide (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?83 ?87)) [87, 86, 85, 84, 83, 82, 81, 80] by Demod 20 with 25599 at 2
Id : 25968, {_}: multiply (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?80 ?81) =?= inverse (multiply (divide (multiply (divide ?84 ?85) (divide (divide (divide ?85 ?84) ?86) (divide ?82 ?86))) ?87) (divide ?87 ?83)) [87, 86, 85, 84, 83, 82, 81, 80] by Demod 25967 with 25599 at 1,3
Id : 25969, {_}: multiply (inverse (divide (divide (divide ?80 ?81) ?82) ?83)) (divide ?80 ?81) =?= inverse (multiply (divide (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82))) ?87) (divide ?87 ?83)) [87, 86, 85, 84, 83, 82, 81, 80] by Demod 25968 with 25599 at 2,1,1,1,3
Id : 26616, {_}: multiply (divide ?83 (divide (divide ?80 ?81) ?82)) (divide ?80 ?81) =?= inverse (multiply (divide (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82))) ?87) (divide ?87 ?83)) [87, 86, 85, 84, 82, 81, 80, 83] by Demod 25969 with 26405 at 1,2
Id : 26679, {_}: multiply (multiply ?83 (divide ?82 (divide ?80 ?81))) (divide ?80 ?81) =?= inverse (multiply (divide (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82))) ?87) (divide ?87 ?83)) [87, 86, 85, 84, 81, 80, 82, 83] by Demod 26616 with 25599 at 1,2
Id : 26680, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= inverse (multiply (divide (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82))) ?87) (divide ?87 ?83)) [87, 86, 85, 84, 80, 81, 82, 83] by Demod 26679 with 25599 at 2,1,2
Id : 28666, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= divide (divide ?83 ?87) (divide (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82))) ?87) [86, 85, 84, 87, 80, 81, 82, 83] by Demod 26680 with 26724 at 3
Id : 28715, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply (divide ?83 ?87) (divide ?87 (multiply (divide ?84 ?85) (multiply (divide (divide ?85 ?84) ?86) (divide ?86 ?82)))) [86, 85, 84, 87, 80, 81, 82, 83] by Demod 28666 with 25599 at 3
Id : 28664, {_}: multiply (divide ?31561 ?31560) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= divide (divide ?31561 (divide ?31557 ?31556)) ?31559 [31559, 31558, 31557, 31556, 31560, 31561] by Demod 27299 with 26724 at 3
Id : 28717, {_}: multiply (divide ?31561 ?31560) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= divide (multiply ?31561 (divide ?31556 ?31557)) ?31559 [31559, 31558, 31557, 31556, 31560, 31561] by Demod 28664 with 25599 at 1,3
Id : 32902, {_}: divide (multiply ?151970 (divide ?151971 ?151972)) ?151973 =>= multiply ?151970 (divide (divide ?151971 ?151972) ?151973) [151973, 151972, 151971, 151970] by Demod 32718 with 27506 at 3
Id : 42552, {_}: multiply (divide ?31561 ?31560) (multiply ?31560 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559))) =>= multiply ?31561 (divide (divide ?31556 ?31557) ?31559) [31559, 31558, 31557, 31556, 31560, 31561] by Demod 28717 with 32902 at 3
Id :  10, {_}: divide (inverse (divide (divide (divide ?43 ?44) (inverse ?45)) (multiply ?46 ?45))) (divide ?44 ?43) =>= ?46 [46, 45, 44, 43] by Super 2 with 3 at 2,1,1,2
Id :  58, {_}: divide (inverse (divide (multiply (divide ?293 ?294) ?295) (multiply ?296 ?295))) (divide ?294 ?293) =>= ?296 [296, 295, 294, 293] by Demod 10 with 3 at 1,1,1,2
Id :  66, {_}: divide (inverse (divide (multiply (multiply ?349 ?350) ?351) (multiply ?352 ?351))) (divide (inverse ?350) ?349) =>= ?352 [352, 351, 350, 349] by Super 58 with 3 at 1,1,1,1,2
Id : 5845, {_}: inverse (divide (divide (inverse (divide (multiply (multiply ?31653 ?31654) ?31655) (multiply ?31656 ?31655))) ?31657) (divide ?31658 ?31657)) =>= inverse (divide ?31656 (divide ?31658 (divide (inverse ?31654) ?31653))) [31658, 31657, 31656, 31655, 31654, 31653] by Super 5809 with 66 at 1,1,3
Id : 25939, {_}: inverse (multiply (divide (inverse (divide (multiply (multiply ?31653 ?31654) ?31655) (multiply ?31656 ?31655))) ?31657) (divide ?31657 ?31658)) =>= inverse (divide ?31656 (divide ?31658 (divide (inverse ?31654) ?31653))) [31658, 31657, 31656, 31655, 31654, 31653] by Demod 5845 with 25599 at 1,2
Id : 25940, {_}: inverse (multiply (divide (inverse (divide (multiply (multiply ?31653 ?31654) ?31655) (multiply ?31656 ?31655))) ?31657) (divide ?31657 ?31658)) =>= inverse (multiply ?31656 (divide (divide (inverse ?31654) ?31653) ?31658)) [31658, 31657, 31656, 31655, 31654, 31653] by Demod 25939 with 25599 at 1,3
Id : 26656, {_}: inverse (multiply (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) (divide ?31657 ?31658)) =>= inverse (multiply ?31656 (divide (divide (inverse ?31654) ?31653) ?31658)) [31658, 31657, 31654, 31653, 31655, 31656] by Demod 25940 with 26405 at 1,1,1,2
Id : 26874, {_}: inverse (multiply (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) (divide ?31657 ?31658)) =>= inverse (multiply ?31656 (divide (inverse (multiply ?31653 ?31654)) ?31658)) [31658, 31657, 31654, 31653, 31655, 31656] by Demod 26656 with 26764 at 1,2,1,3
Id : 26875, {_}: inverse (multiply (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) (divide ?31657 ?31658)) =>= inverse (multiply ?31656 (inverse (multiply ?31658 (multiply ?31653 ?31654)))) [31658, 31657, 31654, 31653, 31655, 31656] by Demod 26874 with 26764 at 2,1,3
Id :  11, {_}: divide (inverse (divide (divide (multiply ?48 ?49) ?50) (divide ?51 ?50))) (divide (inverse ?49) ?48) =>= ?51 [51, 50, 49, 48] by Super 2 with 3 at 1,1,1,1,2
Id : 5813, {_}: inverse (divide (divide ?31391 ?31392) (divide (inverse (divide (divide (multiply ?31393 ?31394) ?31395) (divide ?31396 ?31395))) ?31392)) =>= inverse (divide (divide ?31391 (divide (inverse ?31394) ?31393)) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Super 5809 with 11 at 2,1,3
Id : 26012, {_}: inverse (multiply (divide ?31391 ?31392) (divide ?31392 (inverse (divide (divide (multiply ?31393 ?31394) ?31395) (divide ?31396 ?31395))))) =>= inverse (divide (divide ?31391 (divide (inverse ?31394) ?31393)) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 5813 with 25599 at 1,2
Id : 26013, {_}: inverse (multiply (divide ?31391 ?31392) (divide ?31392 (inverse (divide (divide (multiply ?31393 ?31394) ?31395) (divide ?31396 ?31395))))) =>= inverse (divide (multiply ?31391 (divide ?31393 (inverse ?31394))) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 26012 with 25599 at 1,1,3
Id : 26014, {_}: inverse (multiply (divide ?31391 ?31392) (divide ?31392 (inverse (multiply (divide (multiply ?31393 ?31394) ?31395) (divide ?31395 ?31396))))) =>= inverse (divide (multiply ?31391 (divide ?31393 (inverse ?31394))) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 26013 with 25599 at 1,2,2,1,2
Id : 26060, {_}: inverse (multiply (divide ?31391 ?31392) (multiply ?31392 (multiply (divide (multiply ?31393 ?31394) ?31395) (divide ?31395 ?31396)))) =>= inverse (divide (multiply ?31391 (divide ?31393 (inverse ?31394))) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 26014 with 3 at 2,1,2
Id : 26061, {_}: inverse (multiply (divide ?31391 ?31392) (multiply ?31392 (multiply (divide (multiply ?31393 ?31394) ?31395) (divide ?31395 ?31396)))) =>= inverse (divide (multiply ?31391 (multiply ?31393 ?31394)) ?31396) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 26060 with 3 at 2,1,1,3
Id : 26649, {_}: inverse (multiply (divide ?31391 ?31392) (multiply ?31392 (multiply (divide (multiply ?31393 ?31394) ?31395) (divide ?31395 ?31396)))) =>= divide ?31396 (multiply ?31391 (multiply ?31393 ?31394)) [31396, 31395, 31394, 31393, 31392, 31391] by Demod 26061 with 26405 at 3
Id : 5837, {_}: inverse (divide (divide (inverse (divide (divide (multiply ?31579 ?31580) ?31581) (divide ?31582 ?31581))) ?31583) (divide ?31584 ?31583)) =>= inverse (divide ?31582 (divide ?31584 (divide (inverse ?31580) ?31579))) [31584, 31583, 31582, 31581, 31580, 31579] by Super 5809 with 11 at 1,1,3
Id : 26017, {_}: inverse (multiply (divide (inverse (divide (divide (multiply ?31579 ?31580) ?31581) (divide ?31582 ?31581))) ?31583) (divide ?31583 ?31584)) =>= inverse (divide ?31582 (divide ?31584 (divide (inverse ?31580) ?31579))) [31584, 31583, 31582, 31581, 31580, 31579] by Demod 5837 with 25599 at 1,2
Id : 26018, {_}: inverse (multiply (divide (inverse (divide (divide (multiply ?31579 ?31580) ?31581) (divide ?31582 ?31581))) ?31583) (divide ?31583 ?31584)) =>= inverse (multiply ?31582 (divide (divide (inverse ?31580) ?31579) ?31584)) [31584, 31583, 31582, 31581, 31580, 31579] by Demod 26017 with 25599 at 1,3
Id : 26019, {_}: inverse (multiply (divide (inverse (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582))) ?31583) (divide ?31583 ?31584)) =>= inverse (multiply ?31582 (divide (divide (inverse ?31580) ?31579) ?31584)) [31584, 31583, 31582, 31581, 31580, 31579] by Demod 26018 with 25599 at 1,1,1,1,2
Id : 26844, {_}: inverse (multiply (inverse (multiply ?31583 (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582)))) (divide ?31583 ?31584)) =>= inverse (multiply ?31582 (divide (divide (inverse ?31580) ?31579) ?31584)) [31584, 31582, 31581, 31580, 31579, 31583] by Demod 26019 with 26764 at 1,1,2
Id : 26845, {_}: inverse (multiply (inverse (multiply ?31583 (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582)))) (divide ?31583 ?31584)) =>= inverse (multiply ?31582 (divide (inverse (multiply ?31579 ?31580)) ?31584)) [31584, 31582, 31581, 31580, 31579, 31583] by Demod 26844 with 26764 at 1,2,1,3
Id : 26846, {_}: inverse (multiply (inverse (multiply ?31583 (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582)))) (divide ?31583 ?31584)) =>= inverse (multiply ?31582 (inverse (multiply ?31584 (multiply ?31579 ?31580)))) [31584, 31582, 31581, 31580, 31579, 31583] by Demod 26845 with 26764 at 2,1,3
Id : 27296, {_}: multiply (inverse (divide ?31583 ?31584)) (multiply ?31583 (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582))) =>= inverse (multiply ?31582 (inverse (multiply ?31584 (multiply ?31579 ?31580)))) [31582, 31581, 31580, 31579, 31584, 31583] by Demod 26846 with 26966 at 2
Id : 27301, {_}: multiply (divide ?31584 ?31583) (multiply ?31583 (multiply (divide (multiply ?31579 ?31580) ?31581) (divide ?31581 ?31582))) =>= inverse (multiply ?31582 (inverse (multiply ?31584 (multiply ?31579 ?31580)))) [31582, 31581, 31580, 31579, 31583, 31584] by Demod 27296 with 26405 at 1,2
Id : 27302, {_}: inverse (inverse (multiply ?31396 (inverse (multiply ?31391 (multiply ?31393 ?31394))))) =>= divide ?31396 (multiply ?31391 (multiply ?31393 ?31394)) [31394, 31393, 31391, 31396] by Demod 26649 with 27301 at 1,2
Id : 27505, {_}: multiply ?31396 (inverse (multiply ?31391 (multiply ?31393 ?31394))) =>= divide ?31396 (multiply ?31391 (multiply ?31393 ?31394)) [31394, 31393, 31391, 31396] by Demod 27302 with 27254 at 2
Id : 27520, {_}: inverse (multiply (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) (divide ?31657 ?31658)) =>= inverse (divide ?31656 (multiply ?31658 (multiply ?31653 ?31654))) [31658, 31657, 31654, 31653, 31655, 31656] by Demod 26875 with 27505 at 1,3
Id : 27523, {_}: inverse (multiply (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) (divide ?31657 ?31658)) =>= divide (multiply ?31658 (multiply ?31653 ?31654)) ?31656 [31658, 31657, 31654, 31653, 31655, 31656] by Demod 27520 with 26405 at 3
Id : 28682, {_}: divide (divide ?31658 ?31657) (divide (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655)) ?31657) =>= divide (multiply ?31658 (multiply ?31653 ?31654)) ?31656 [31654, 31653, 31655, 31656, 31657, 31658] by Demod 27523 with 26724 at 2
Id : 28683, {_}: multiply (divide ?31658 ?31657) (divide ?31657 (divide (multiply ?31656 ?31655) (multiply (multiply ?31653 ?31654) ?31655))) =>= divide (multiply ?31658 (multiply ?31653 ?31654)) ?31656 [31654, 31653, 31655, 31656, 31657, 31658] by Demod 28682 with 25599 at 2
Id : 28684, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (divide (multiply (multiply ?31653 ?31654) ?31655) (multiply ?31656 ?31655))) =>= divide (multiply ?31658 (multiply ?31653 ?31654)) ?31656 [31656, 31655, 31654, 31653, 31657, 31658] by Demod 28683 with 25599 at 2,2
Id : 43520, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (multiply (multiply ?31653 ?31654) (divide ?31655 (multiply ?31656 ?31655)))) =>= divide (multiply ?31658 (multiply ?31653 ?31654)) ?31656 [31656, 31655, 31654, 31653, 31657, 31658] by Demod 28684 with 43287 at 2,2,2
Id : 43521, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (multiply (multiply ?31653 ?31654) (divide ?31655 (multiply ?31656 ?31655)))) =>= multiply ?31658 (divide (multiply ?31653 ?31654) ?31656) [31656, 31655, 31654, 31653, 31657, 31658] by Demod 43520 with 43287 at 3
Id : 43522, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (multiply (multiply ?31653 ?31654) (divide ?31655 (multiply ?31656 ?31655)))) =>= multiply ?31658 (multiply ?31653 (divide ?31654 ?31656)) [31656, 31655, 31654, 31653, 31657, 31658] by Demod 43521 with 43287 at 2,3
Id : 22472, {_}: ?116246 =<= multiply (multiply ?116246 (multiply ?116247 ?116248)) (divide (inverse ?116248) ?116247) [116248, 116247, 116246] by Super 22416 with 3 at 2,1,3
Id : 26848, {_}: ?116246 =<= multiply (multiply ?116246 (multiply ?116247 ?116248)) (inverse (multiply ?116247 ?116248)) [116248, 116247, 116246] by Demod 22472 with 26764 at 2,3
Id : 27823, {_}: ?116246 =<= divide (multiply ?116246 (multiply ?116247 ?116248)) (multiply ?116247 ?116248) [116248, 116247, 116246] by Demod 26848 with 27734 at 3
Id : 31832, {_}: ?147291 =<= divide (multiply ?147291 (multiply (multiply (divide ?147292 ?147293) (multiply ?147293 (multiply (multiply ?147294 (multiply (divide ?147295 ?147296) (divide ?147297 ?147298))) (divide ?147298 ?147297)))) (multiply (divide (divide ?147296 ?147295) ?147299) (divide ?147299 ?147294)))) ?147292 [147299, 147298, 147297, 147296, 147295, 147294, 147293, 147292, 147291] by Super 27823 with 31744 at 2,3
Id : 32203, {_}: ?147291 =<= divide (multiply ?147291 ?147292) ?147292 [147292, 147291] by Demod 31832 with 31744 at 2,1,3
Id : 33094, {_}: inverse ?153200 =<= divide ?153201 (multiply ?153200 ?153201) [153201, 153200] by Super 26405 with 32203 at 1,2
Id : 43571, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (multiply (multiply ?31653 ?31654) (inverse ?31656))) =>= multiply ?31658 (multiply ?31653 (divide ?31654 ?31656)) [31656, 31654, 31653, 31657, 31658] by Demod 43522 with 33094 at 2,2,2,2
Id : 43572, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (divide (multiply ?31653 ?31654) ?31656)) =>= multiply ?31658 (multiply ?31653 (divide ?31654 ?31656)) [31656, 31654, 31653, 31657, 31658] by Demod 43571 with 27734 at 2,2,2
Id : 43573, {_}: multiply (divide ?31658 ?31657) (multiply ?31657 (multiply ?31653 (divide ?31654 ?31656))) =>= multiply ?31658 (multiply ?31653 (divide ?31654 ?31656)) [31656, 31654, 31653, 31657, 31658] by Demod 43572 with 43287 at 2,2,2
Id : 43575, {_}: multiply ?31561 (multiply (divide (divide ?31556 ?31557) ?31558) (divide ?31558 ?31559)) =>= multiply ?31561 (divide (divide ?31556 ?31557) ?31559) [31559, 31558, 31557, 31556, 31561] by Demod 42552 with 43573 at 2
Id : 43578, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply (divide ?83 ?87) (divide ?87 (multiply (divide ?84 ?85) (divide (divide ?85 ?84) ?82))) [85, 84, 87, 80, 81, 82, 83] by Demod 28715 with 43575 at 2,2,3
Id : 43604, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply (divide ?83 ?87) (multiply ?87 (divide (divide ?82 (divide ?85 ?84)) (divide ?84 ?85))) [84, 85, 87, 80, 81, 82, 83] by Demod 43578 with 27506 at 2,3
Id : 243, {_}: inverse (divide (multiply (divide ?1104 ?1105) ?1106) (multiply (divide ?1107 (divide ?1105 ?1104)) ?1106)) =>= ?1107 [1107, 1106, 1105, 1104] by Demod 213 with 3 at 1,1,2
Id : 748, {_}: inverse (divide (multiply (divide (inverse ?3864) ?3865) ?3866) (multiply (divide ?3867 (multiply ?3865 ?3864)) ?3866)) =>= ?3867 [3867, 3866, 3865, 3864] by Super 243 with 3 at 2,1,2,1,2
Id : 753, {_}: inverse (divide (multiply (divide (inverse (divide (divide (divide ?3899 ?3900) ?3901) (divide ?3902 ?3901))) (divide ?3900 ?3899)) ?3903) (multiply ?3904 ?3903)) =?= inverse (divide (divide ?3902 ?3905) (divide ?3904 ?3905)) [3905, 3904, 3903, 3902, 3901, 3900, 3899] by Super 748 with 272 at 1,2,1,2
Id : 773, {_}: inverse (divide (multiply ?3902 ?3903) (multiply ?3904 ?3903)) =?= inverse (divide (divide ?3902 ?3905) (divide ?3904 ?3905)) [3905, 3904, 3903, 3902] by Demod 753 with 2 at 1,1,1,2
Id : 15665, {_}: inverse (divide (multiply (divide ?84988 (divide ?84989 ?84990)) ?84991) (multiply (divide ?84992 ?84993) ?84991)) =>= divide (divide (inverse (divide ?84993 ?84992)) (divide ?84990 ?84989)) ?84988 [84993, 84992, 84991, 84990, 84989, 84988] by Super 773 with 14284 at 3
Id : 15692, {_}: inverse (divide (multiply (divide ?85261 (divide ?85262 ?85263)) ?85264) (multiply (multiply ?85265 ?85266) ?85264)) =>= divide (divide (inverse (divide (inverse ?85266) ?85265)) (divide ?85263 ?85262)) ?85261 [85266, 85265, 85264, 85263, 85262, 85261] by Super 15665 with 3 at 1,2,1,2
Id : 25923, {_}: inverse (divide (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) (multiply (multiply ?85265 ?85266) ?85264)) =>= divide (divide (inverse (divide (inverse ?85266) ?85265)) (divide ?85263 ?85262)) ?85261 [85266, 85265, 85264, 85262, 85263, 85261] by Demod 15692 with 25599 at 1,1,1,2
Id : 25924, {_}: inverse (divide (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) (multiply (multiply ?85265 ?85266) ?85264)) =>= divide (multiply (inverse (divide (inverse ?85266) ?85265)) (divide ?85262 ?85263)) ?85261 [85266, 85265, 85264, 85262, 85263, 85261] by Demod 25923 with 25599 at 1,3
Id : 26606, {_}: divide (multiply (multiply ?85265 ?85266) ?85264) (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) =>= divide (multiply (inverse (divide (inverse ?85266) ?85265)) (divide ?85262 ?85263)) ?85261 [85262, 85263, 85261, 85264, 85266, 85265] by Demod 25924 with 26405 at 2
Id : 26607, {_}: divide (multiply (multiply ?85265 ?85266) ?85264) (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) =>= divide (multiply (divide ?85265 (inverse ?85266)) (divide ?85262 ?85263)) ?85261 [85262, 85263, 85261, 85264, 85266, 85265] by Demod 26606 with 26405 at 1,1,3
Id : 26682, {_}: divide (multiply (multiply ?85265 ?85266) ?85264) (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) =>= divide (multiply (multiply ?85265 ?85266) (divide ?85262 ?85263)) ?85261 [85262, 85263, 85261, 85264, 85266, 85265] by Demod 26607 with 3 at 1,1,3
Id : 42547, {_}: divide (multiply (multiply ?85265 ?85266) ?85264) (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264) =>= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85262, 85263, 85261, 85264, 85266, 85265] by Demod 26682 with 32902 at 3
Id : 43537, {_}: multiply (multiply ?85265 ?85266) (divide ?85264 (multiply (multiply ?85261 (divide ?85263 ?85262)) ?85264)) =>= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85262, 85263, 85261, 85264, 85266, 85265] by Demod 42547 with 43287 at 2
Id : 43538, {_}: multiply (multiply ?85265 ?85266) (inverse (multiply ?85261 (divide ?85263 ?85262))) =>= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85262, 85263, 85261, 85266, 85265] by Demod 43537 with 33094 at 2,2
Id : 43539, {_}: divide (multiply ?85265 ?85266) (multiply ?85261 (divide ?85263 ?85262)) =>= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85262, 85263, 85261, 85266, 85265] by Demod 43538 with 27734 at 2
Id : 43540, {_}: multiply ?85265 (divide ?85266 (multiply ?85261 (divide ?85263 ?85262))) =?= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85262, 85263, 85261, 85266, 85265] by Demod 43539 with 43287 at 2
Id : 43541, {_}: multiply ?85265 (multiply ?85266 (divide (divide ?85262 ?85263) ?85261)) =?= multiply (multiply ?85265 ?85266) (divide (divide ?85262 ?85263) ?85261) [85261, 85263, 85262, 85266, 85265] by Demod 43540 with 27506 at 2,2
Id : 43605, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply (multiply (divide ?83 ?87) ?87) (divide (divide ?82 (divide ?85 ?84)) (divide ?84 ?85)) [84, 85, 87, 80, 81, 82, 83] by Demod 43604 with 43541 at 3
Id : 43606, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply ?83 (divide (divide ?82 (divide ?85 ?84)) (divide ?84 ?85)) [84, 85, 80, 81, 82, 83] by Demod 43605 with 32201 at 1,3
Id : 43607, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =?= multiply ?83 (multiply (divide ?82 (divide ?85 ?84)) (divide ?85 ?84)) [84, 85, 80, 81, 82, 83] by Demod 43606 with 25599 at 2,3
Id : 43608, {_}: multiply (multiply ?83 (multiply ?82 (divide ?81 ?80))) (divide ?80 ?81) =>= multiply ?83 ?82 [80, 81, 82, 83] by Demod 43607 with 32201 at 2,3
Id : 45322, {_}: multiply (multiply ?177731 (multiply ?177732 (divide ?177733 ?177734))) ?177734 =>= multiply (multiply ?177731 ?177732) ?177733 [177734, 177733, 177732, 177731] by Super 45294 with 43608 at 1,3
Id : 45299, {_}: multiply ?177614 (multiply ?177615 ?177616) =<= multiply (multiply ?177614 (multiply ?177615 (divide ?177616 ?177617))) ?177617 [177617, 177616, 177615, 177614] by Super 45294 with 43287 at 2,1,3
Id : 64505, {_}: multiply ?177731 (multiply ?177732 ?177733) =?= multiply (multiply ?177731 ?177732) ?177733 [177733, 177732, 177731] by Demod 45322 with 45299 at 2
Id : 64928, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 64505 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP477-1.p
23952: solved GRP477-1.p in 16.221013 using nrkbo
23952: status Unsatisfiable for GRP477-1.p
NO CLASH, using fixed ground order
23966: Facts:
23966:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23966:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23966: Goal:
23966:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23966: Order:
23966:   nrkbo
23966: Leaf order:
23966:  a1 2 0 2 1,1,2
23966:  b1 2 0 2 1,1,3
23966:  inverse 4 1 2 0,1,2
23966:  multiply 3 2 2 0,2
23966:  divide 7 2 0 
NO CLASH, using fixed ground order
23967: Facts:
23967:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23967:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23967: Goal:
23967:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23967: Order:
23967:   kbo
23967: Leaf order:
23967:  a1 2 0 2 1,1,2
23967:  b1 2 0 2 1,1,3
23967:  inverse 4 1 2 0,1,2
23967:  multiply 3 2 2 0,2
23967:  divide 7 2 0 
NO CLASH, using fixed ground order
23968: Facts:
23968:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23968:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23968: Goal:
23968:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
23968: Order:
23968:   lpo
23968: Leaf order:
23968:  a1 2 0 2 1,1,2
23968:  b1 2 0 2 1,1,3
23968:  inverse 4 1 2 0,1,2
23968:  multiply 3 2 2 0,2
23968:  divide 7 2 0 
% SZS status Timeout for GRP478-1.p
NO CLASH, using fixed ground order
23995: Facts:
23995:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23995:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23995: Goal:
23995:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23995: Order:
23995:   nrkbo
23995: Leaf order:
23995:  b2 2 0 2 1,1,1,2
23995:  a2 2 0 2 2,2
23995:  inverse 3 1 1 0,1,1,2
23995:  multiply 3 2 2 0,2
23995:  divide 7 2 0 
NO CLASH, using fixed ground order
23996: Facts:
23996:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23996:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23996: Goal:
23996:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23996: Order:
23996:   kbo
23996: Leaf order:
23996:  b2 2 0 2 1,1,1,2
23996:  a2 2 0 2 2,2
23996:  inverse 3 1 1 0,1,1,2
23996:  multiply 3 2 2 0,2
23996:  divide 7 2 0 
NO CLASH, using fixed ground order
23997: Facts:
23997:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
23997:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
23997: Goal:
23997:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
23997: Order:
23997:   lpo
23997: Leaf order:
23997:  b2 2 0 2 1,1,1,2
23997:  a2 2 0 2 2,2
23997:  inverse 3 1 1 0,1,1,2
23997:  multiply 3 2 2 0,2
23997:  divide 7 2 0 
Statistics :
Max weight : 78
Found proof, 37.151334s
% SZS status Unsatisfiable for GRP479-1.p
% SZS output start CNFRefutation for GRP479-1.p
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5)))) ?5 =>= ?4 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?10) ?11) (divide ?12 (divide ?11 ?13)))) ?13 =>= ?12 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   5, {_}: divide (inverse (divide (divide (divide ?15 ?15) (inverse (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19))))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2,1,1,2
Id :  22, {_}: divide (inverse (divide (multiply (divide ?87 ?87) (divide (divide (divide ?88 ?88) ?89) (divide ?90 (divide ?89 ?91)))) (divide ?92 ?90))) ?91 =>= ?92 [92, 91, 90, 89, 88, 87] by Demod 5 with 3 at 1,1,1,2
Id :  18, {_}: divide (inverse (divide (multiply (divide ?15 ?15) (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19)))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,2
Id :  30, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (divide ?161 (inverse (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165)))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Super 22 with 18 at 2,2,1,1,1,2
Id :  42, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (multiply ?161 (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Demod 30 with 3 at 2,1,1,2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?22) ?23) ?24)) ?25 =?= inverse (divide (divide (divide ?26 ?26) ?27) (divide ?24 (divide ?27 (divide ?23 ?25)))) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id : 202, {_}: divide (divide (inverse (divide (divide (divide ?974 ?974) ?975) ?976)) ?977) (divide ?975 ?977) =>= ?976 [977, 976, 975, 974] by Super 2 with 6 at 1,2
Id : 208, {_}: divide (divide (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) (inverse ?1021)) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Super 202 with 3 at 2,2
Id : 372, {_}: divide (multiply (inverse (divide (divide (divide ?1664 ?1664) ?1665) ?1666)) ?1667) (multiply ?1665 ?1667) =>= ?1666 [1667, 1666, 1665, 1664] by Demod 208 with 3 at 1,2
Id : 378, {_}: divide (multiply (inverse (divide (multiply (divide ?1702 ?1702) ?1703) ?1704)) ?1705) (multiply (inverse ?1703) ?1705) =>= ?1704 [1705, 1704, 1703, 1702] by Super 372 with 3 at 1,1,1,1,2
Id :   8, {_}: divide (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) (inverse ?34) =>= ?33 [34, 33, 32, 31] by Super 2 with 3 at 2,2,1,1,2
Id :  15, {_}: multiply (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) ?34 =>= ?33 [34, 33, 32, 31] by Demod 8 with 3 at 2
Id :  86, {_}: divide (divide (inverse (divide (divide (divide ?404 ?404) ?405) ?406)) ?407) (divide ?405 ?407) =>= ?406 [407, 406, 405, 404] by Super 2 with 6 at 1,2
Id : 193, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (divide ?904 (inverse (divide (divide (divide ?905 ?905) ?904) ?902))) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Super 15 with 86 at 1,1,1,2
Id : 223, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (multiply ?904 (divide (divide (divide ?905 ?905) ?904) ?902)) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Demod 193 with 3 at 1,2,2,1,1,2
Id : 88082, {_}: divide ?485240 (multiply (inverse ?485241) ?485242) =<= divide ?485240 (multiply (multiply ?485243 (divide (divide (divide ?485244 ?485244) ?485243) (multiply (divide ?485245 ?485245) ?485241))) ?485242) [485245, 485244, 485243, 485242, 485241, 485240] by Super 378 with 223 at 1,2
Id : 89234, {_}: divide (inverse (divide (multiply (divide ?494319 ?494319) (divide (divide (divide ?494320 ?494320) ?494321) ?494322)) (multiply (inverse ?494323) (divide (multiply (divide ?494324 ?494324) (divide (divide (divide ?494325 ?494325) ?494326) (divide ?494327 (divide ?494326 (divide ?494321 ?494328))))) (divide ?494322 ?494327))))) ?494328 =?= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494328, 494327, 494326, 494325, 494324, 494323, 494322, 494321, 494320, 494319] by Super 42 with 88082 at 1,1,2
Id : 89554, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494323] by Demod 89234 with 42 at 2
Id :  23, {_}: divide (inverse (divide (multiply (divide ?94 ?94) (divide (divide (divide ?95 ?95) ?96) (divide ?97 (divide ?96 ?98)))) ?99)) ?98 =?= inverse (divide (divide (divide ?100 ?100) ?101) (divide ?99 (divide ?101 ?97))) [101, 100, 99, 98, 97, 96, 95, 94] by Super 22 with 2 at 2,1,1,2
Id : 1304, {_}: inverse (divide (divide (divide ?6515 ?6515) ?6516) (divide (divide ?6517 ?6518) (divide ?6516 ?6518))) =>= ?6517 [6518, 6517, 6516, 6515] by Super 18 with 23 at 2
Id : 2998, {_}: inverse (divide (divide (multiply (inverse ?16319) ?16319) ?16320) (divide (divide ?16321 ?16322) (divide ?16320 ?16322))) =>= ?16321 [16322, 16321, 16320, 16319] by Super 1304 with 3 at 1,1,1,2
Id : 3072, {_}: inverse (divide (multiply (multiply (inverse ?16865) ?16865) ?16866) (divide (divide ?16867 ?16868) (divide (inverse ?16866) ?16868))) =>= ?16867 [16868, 16867, 16866, 16865] by Super 2998 with 3 at 1,1,2
Id : 1319, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (divide ?6632 (inverse ?6633)) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Super 1304 with 3 at 2,2,1,2
Id : 1369, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (multiply ?6632 ?6633) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Demod 1319 with 3 at 1,2,1,2
Id : 1389, {_}: multiply ?6881 (divide (divide (divide ?6882 ?6882) ?6883) (divide (multiply ?6884 ?6885) (multiply ?6883 ?6885))) =>= divide ?6881 ?6884 [6885, 6884, 6883, 6882, 6881] by Super 3 with 1369 at 2,3
Id : 90512, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide (divide (divide ?497371 ?497371) (multiply ?497372 (divide (divide (divide ?497373 ?497373) ?497372) ?497368))) (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497373, 497372, 497371, 497370, 497369, 497368] by Super 223 with 89554 at 2,2,1,1,2
Id : 196, {_}: divide (inverse (divide (divide (divide ?925 ?925) ?926) (divide (inverse (divide (divide (divide ?927 ?927) ?928) ?929)) (divide ?926 ?930)))) ?930 =?= inverse (divide (divide (divide ?931 ?931) ?928) ?929) [931, 930, 929, 928, 927, 926, 925] by Super 6 with 86 at 2,1,3
Id : 6409, {_}: inverse (divide (divide (divide ?34204 ?34204) ?34205) ?34206) =?= inverse (divide (divide (divide ?34207 ?34207) ?34205) ?34206) [34207, 34206, 34205, 34204] by Demod 196 with 2 at 2
Id : 6420, {_}: inverse (divide (divide (divide ?34278 ?34278) (divide ?34279 (inverse (divide (divide (divide ?34280 ?34280) ?34279) ?34281)))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Super 6409 with 86 at 1,1,3
Id : 6497, {_}: inverse (divide (divide (divide ?34278 ?34278) (multiply ?34279 (divide (divide (divide ?34280 ?34280) ?34279) ?34281))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Demod 6420 with 3 at 2,1,1,2
Id : 28325, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= divide ?153090 (inverse (divide ?153094 ?153095)) [153095, 153094, 153093, 153092, 153091, 153090] by Super 3 with 6497 at 2,3
Id : 28522, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= multiply ?153090 (divide ?153094 ?153095) [153095, 153094, 153093, 153092, 153091, 153090] by Demod 28325 with 3 at 3
Id : 91190, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide ?497368 (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497370, 497369, 497368] by Demod 90512 with 28522 at 2
Id : 91665, {_}: multiply (inverse (divide ?503116 (multiply ?503117 ?503118))) (divide ?503116 (multiply (divide ?503119 ?503119) ?503118)) =>= ?503117 [503119, 503118, 503117, 503116] by Demod 91190 with 3 at 2,1,1,2
Id : 231, {_}: divide (multiply (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) ?1021) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Demod 208 with 3 at 1,2
Id : 1057, {_}: inverse (divide (divide (divide ?5280 ?5280) ?5281) (divide (divide ?5282 ?5283) (divide ?5281 ?5283))) =>= ?5282 [5283, 5282, 5281, 5280] by Super 18 with 23 at 2
Id : 1292, {_}: divide (divide ?6440 ?6441) (divide ?6442 ?6441) =?= divide (divide ?6440 ?6443) (divide ?6442 ?6443) [6443, 6442, 6441, 6440] by Super 86 with 1057 at 1,1,2
Id : 2334, {_}: divide (multiply (inverse (divide (divide (divide ?12626 ?12626) ?12627) (divide ?12628 ?12627))) ?12629) (multiply ?12630 ?12629) =>= divide ?12628 ?12630 [12630, 12629, 12628, 12627, 12626] by Super 231 with 1292 at 1,1,1,2
Id : 91784, {_}: multiply (inverse (divide (multiply (inverse (divide (divide (divide ?504066 ?504066) ?504067) (divide ?504068 ?504067))) ?504069) (multiply ?504070 ?504069))) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504069, 504068, 504067, 504066] by Super 91665 with 2334 at 2,2
Id : 92186, {_}: multiply (inverse (divide ?504068 ?504070)) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504068] by Demod 91784 with 2334 at 1,1,2
Id : 92346, {_}: ?505751 =<= divide (inverse (divide (divide (divide ?505752 ?505752) ?505753) ?505751)) ?505753 [505753, 505752, 505751] by Super 1389 with 92186 at 2
Id : 93111, {_}: divide ?509269 (divide ?509270 ?509270) =>= ?509269 [509270, 509269] by Super 2 with 92346 at 2
Id : 100321, {_}: inverse (multiply (multiply (inverse ?535124) ?535124) ?535125) =>= inverse ?535125 [535125, 535124] by Super 3072 with 93111 at 1,2
Id : 100420, {_}: inverse (inverse ?535740) =<= inverse (divide (divide (divide ?535741 ?535741) (multiply (inverse ?535742) ?535742)) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535742, 535741, 535740] by Super 100321 with 89554 at 1,2
Id : 94282, {_}: divide ?515515 (divide ?515516 ?515516) =>= ?515515 [515516, 515515] by Super 2 with 92346 at 2
Id : 94361, {_}: divide ?515973 (multiply (inverse ?515974) ?515974) =>= ?515973 [515974, 515973] by Super 94282 with 3 at 2,2
Id : 100488, {_}: inverse (inverse ?535740) =<= inverse (divide (divide ?535741 ?535741) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535741, 535740] by Demod 100420 with 94361 at 1,1,3
Id : 93886, {_}: inverse (divide (divide ?513000 ?513000) ?513001) =>= ?513001 [513001, 513000] by Super 1369 with 93111 at 1,2
Id : 100489, {_}: inverse (inverse ?535740) =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100488 with 93886 at 3
Id : 100491, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (inverse (inverse ?494323))) [494330, 494329, 494323] by Demod 89554 with 100489 at 2,2,3
Id : 100612, {_}: inverse ?494323 =<= multiply ?494329 (multiply (divide (divide ?494330 ?494330) ?494329) (inverse ?494323)) [494330, 494329, 494323] by Demod 100491 with 3 at 2,3
Id : 1348, {_}: inverse (divide (multiply (divide ?6830 ?6830) ?6831) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831, 6830] by Super 1304 with 3 at 1,1,2
Id : 3107, {_}: multiply ?16917 (divide (multiply (divide ?16918 ?16918) ?16919) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16918, 16917] by Super 3 with 1348 at 2,3
Id : 100541, {_}: multiply ?16917 (divide (inverse (inverse ?16919)) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 3107 with 100489 at 1,2,2
Id : 100747, {_}: inverse (inverse (divide (inverse (inverse ?536517)) (divide (divide ?536518 ?536519) (divide (inverse ?536517) ?536519)))) =?= divide (divide ?536520 ?536520) ?536518 [536520, 536519, 536518, 536517] by Super 100541 with 100489 at 2
Id : 100526, {_}: inverse (divide (inverse (inverse ?6831)) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831] by Demod 1348 with 100489 at 1,1,2
Id : 100849, {_}: inverse ?536518 =<= divide (divide ?536520 ?536520) ?536518 [536520, 536518] by Demod 100747 with 100526 at 1,2
Id : 101341, {_}: inverse ?494323 =<= multiply ?494329 (multiply (inverse ?494329) (inverse ?494323)) [494329, 494323] by Demod 100612 with 100849 at 1,2,3
Id : 101328, {_}: inverse (inverse ?513001) =>= ?513001 [513001] by Demod 93886 with 100849 at 1,2
Id : 101357, {_}: multiply ?16917 (divide ?16919 (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 100541 with 101328 at 1,2,2
Id : 210, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?1032) ?1032) ?1033) ?1034)) ?1035) (divide ?1033 ?1035) =>= ?1034 [1035, 1034, 1033, 1032] by Super 202 with 3 at 1,1,1,1,1,2
Id : 2224, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?11772) ?11772) ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773, 11772] by Super 210 with 1292 at 1,1,1,2
Id : 778, {_}: divide (inverse (divide (divide (divide ?3892 ?3892) ?3893) (divide (inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896)) (divide ?3893 ?3897)))) ?3897 =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3897, 3896, 3895, 3894, 3893, 3892] by Super 6 with 210 at 2,1,3
Id : 811, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3896, 3895, 3894] by Demod 778 with 2 at 2
Id : 101312, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =>= inverse (divide (inverse ?3895) ?3896) [3896, 3895, 3894] by Demod 811 with 100849 at 1,1,3
Id : 101430, {_}: divide (divide (inverse (divide (inverse ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773] by Demod 2224 with 101312 at 1,1,2
Id : 375, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?1685) ?1685) ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686, 1685] by Super 372 with 3 at 1,1,1,1,1,2
Id : 2362, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?12860) ?12860) ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861, 12860] by Super 375 with 1292 at 1,1,1,2
Id : 101423, {_}: divide (multiply (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861] by Demod 2362 with 101312 at 1,1,2
Id : 1298, {_}: divide (multiply ?6472 ?6473) (multiply ?6474 ?6473) =?= divide (divide ?6472 ?6475) (divide ?6474 ?6475) [6475, 6474, 6473, 6472] by Super 231 with 1057 at 1,1,2
Id : 2653, {_}: divide (multiply (inverse (divide (multiply (divide ?14473 ?14473) ?14474) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474, 14473] by Super 231 with 1298 at 1,1,1,2
Id : 100505, {_}: divide (multiply (inverse (divide (inverse (inverse ?14474)) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 2653 with 100489 at 1,1,1,1,2
Id : 101382, {_}: divide (multiply (inverse (divide ?14474 (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 100505 with 101328 at 1,1,1,1,2
Id : 101429, {_}: divide (multiply (inverse (divide (inverse ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686] by Demod 375 with 101312 at 1,1,2
Id : 101386, {_}: ?535740 =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100489 with 101328 at 2
Id : 101594, {_}: ?537458 =<= multiply (inverse (divide ?537459 ?537459)) ?537458 [537459, 537458] by Super 101386 with 100849 at 1,3
Id : 101980, {_}: divide ?538112 (multiply ?538113 ?538112) =>= inverse ?538113 [538113, 538112] by Super 101429 with 101594 at 1,2
Id : 102412, {_}: divide (multiply (inverse (inverse ?14475)) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 101382 with 101980 at 1,1,1,2
Id : 102413, {_}: divide (multiply ?14475 ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 102412 with 101328 at 1,1,2
Id : 102434, {_}: divide (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12864 =>= divide ?12862 ?12864 [12864, 12862, 12861] by Demod 101423 with 102413 at 2
Id : 102436, {_}: divide (divide ?11774 ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774] by Demod 101430 with 102434 at 1,2
Id : 102441, {_}: multiply ?16917 (divide ?16919 (divide ?16920 (inverse ?16919))) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 101357 with 102436 at 2,2,2
Id : 102470, {_}: multiply ?16917 (divide ?16919 (multiply ?16920 ?16919)) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 102441 with 3 at 2,2,2
Id : 102471, {_}: multiply ?16917 (inverse ?16920) =>= divide ?16917 ?16920 [16920, 16917] by Demod 102470 with 101980 at 2,2
Id : 102472, {_}: inverse ?494323 =<= multiply ?494329 (divide (inverse ?494329) ?494323) [494329, 494323] by Demod 101341 with 102471 at 2,3
Id : 102516, {_}: inverse (multiply ?538987 (inverse ?538988)) =>= multiply ?538988 (inverse ?538987) [538988, 538987] by Super 102472 with 101980 at 2,3
Id : 102787, {_}: inverse (divide ?538987 ?538988) =<= multiply ?538988 (inverse ?538987) [538988, 538987] by Demod 102516 with 102471 at 1,2
Id : 102959, {_}: inverse (divide ?539857 ?539858) =>= divide ?539858 ?539857 [539858, 539857] by Demod 102787 with 102471 at 3
Id : 102980, {_}: inverse (multiply ?539955 ?539956) =<= divide (inverse ?539956) ?539955 [539956, 539955] by Super 102959 with 3 at 1,2
Id : 103330, {_}: multiply (inverse ?540510) ?540511 =<= inverse (multiply (inverse ?540511) ?540510) [540511, 540510] by Super 3 with 102980 at 3
Id : 93587, {_}: multiply (inverse (divide ?504068 ?504070)) ?504068 =>= ?504070 [504070, 504068] by Demod 92186 with 93111 at 2,2
Id : 96346, {_}: multiply ?522565 (divide ?522566 ?522566) =>= ?522565 [522566, 522565] by Super 93587 with 93886 at 1,2
Id : 96425, {_}: multiply ?523023 (multiply (inverse ?523024) ?523024) =>= ?523023 [523024, 523023] by Super 96346 with 3 at 2,2
Id : 103339, {_}: multiply (inverse (multiply (inverse ?540545) ?540545)) ?540546 =>= inverse (inverse ?540546) [540546, 540545] by Super 103330 with 96425 at 1,3
Id : 103110, {_}: multiply (inverse ?540161) ?540162 =<= inverse (multiply (inverse ?540162) ?540161) [540162, 540161] by Super 3 with 102980 at 3
Id : 103424, {_}: multiply (multiply (inverse ?540545) ?540545) ?540546 =>= inverse (inverse ?540546) [540546, 540545] by Demod 103339 with 103110 at 1,2
Id : 103425, {_}: multiply (multiply (inverse ?540545) ?540545) ?540546 =>= ?540546 [540546, 540545] by Demod 103424 with 101328 at 3
Id : 104863, {_}: a2 === a2 [] by Demod 1 with 103425 at 2
Id :   1, {_}: multiply (multiply (inverse b2) b2) a2 =>= a2 [] by prove_these_axioms_2
% SZS output end CNFRefutation for GRP479-1.p
23995: solved GRP479-1.p in 37.162321 using nrkbo
23995: status Unsatisfiable for GRP479-1.p
NO CLASH, using fixed ground order
24007: Facts:
24007:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
24007:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
24007: Goal:
24007:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
24007: Order:
24007:   nrkbo
24007: Leaf order:
24007:  a3 2 0 2 1,1,2
24007:  b3 2 0 2 2,1,2
24007:  c3 2 0 2 2,2
24007:  inverse 2 1 0 
24007:  multiply 5 2 4 0,2
24007:  divide 7 2 0 
NO CLASH, using fixed ground order
24008: Facts:
24008:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
24008:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
24008: Goal:
24008:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
24008: Order:
24008:   kbo
24008: Leaf order:
24008:  a3 2 0 2 1,1,2
24008:  b3 2 0 2 2,1,2
24008:  c3 2 0 2 2,2
24008:  inverse 2 1 0 
24008:  multiply 5 2 4 0,2
24008:  divide 7 2 0 
NO CLASH, using fixed ground order
24009: Facts:
24009:  Id :   2, {_}:
          divide
            (inverse
              (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5))))
            ?5
          =>=
          ?4
          [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
24009:  Id :   3, {_}:
          multiply ?7 ?8 =<= divide ?7 (inverse ?8)
          [8, 7] by multiply ?7 ?8
24009: Goal:
24009:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
24009: Order:
24009:   lpo
24009: Leaf order:
24009:  a3 2 0 2 1,1,2
24009:  b3 2 0 2 2,1,2
24009:  c3 2 0 2 2,2
24009:  inverse 2 1 0 
24009:  multiply 5 2 4 0,2
24009:  divide 7 2 0 
Statistics :
Max weight : 78
Found proof, 40.781292s
% SZS status Unsatisfiable for GRP480-1.p
% SZS output start CNFRefutation for GRP480-1.p
Id :   3, {_}: multiply ?7 ?8 =<= divide ?7 (inverse ?8) [8, 7] by multiply ?7 ?8
Id :   2, {_}: divide (inverse (divide (divide (divide ?2 ?2) ?3) (divide ?4 (divide ?3 ?5)))) ?5 =>= ?4 [5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5
Id :   4, {_}: divide (inverse (divide (divide (divide ?10 ?10) ?11) (divide ?12 (divide ?11 ?13)))) ?13 =>= ?12 [13, 12, 11, 10] by single_axiom ?10 ?11 ?12 ?13
Id :   5, {_}: divide (inverse (divide (divide (divide ?15 ?15) (inverse (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19))))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Super 4 with 2 at 2,2,1,1,2
Id :  22, {_}: divide (inverse (divide (multiply (divide ?87 ?87) (divide (divide (divide ?88 ?88) ?89) (divide ?90 (divide ?89 ?91)))) (divide ?92 ?90))) ?91 =>= ?92 [92, 91, 90, 89, 88, 87] by Demod 5 with 3 at 1,1,1,2
Id :  23, {_}: divide (inverse (divide (multiply (divide ?94 ?94) (divide (divide (divide ?95 ?95) ?96) (divide ?97 (divide ?96 ?98)))) ?99)) ?98 =?= inverse (divide (divide (divide ?100 ?100) ?101) (divide ?99 (divide ?101 ?97))) [101, 100, 99, 98, 97, 96, 95, 94] by Super 22 with 2 at 2,1,1,2
Id :  18, {_}: divide (inverse (divide (multiply (divide ?15 ?15) (divide (divide (divide ?16 ?16) ?17) (divide ?18 (divide ?17 ?19)))) (divide ?20 ?18))) ?19 =>= ?20 [20, 19, 18, 17, 16, 15] by Demod 5 with 3 at 1,1,1,2
Id : 1304, {_}: inverse (divide (divide (divide ?6515 ?6515) ?6516) (divide (divide ?6517 ?6518) (divide ?6516 ?6518))) =>= ?6517 [6518, 6517, 6516, 6515] by Super 18 with 23 at 2
Id : 2998, {_}: inverse (divide (divide (multiply (inverse ?16319) ?16319) ?16320) (divide (divide ?16321 ?16322) (divide ?16320 ?16322))) =>= ?16321 [16322, 16321, 16320, 16319] by Super 1304 with 3 at 1,1,1,2
Id : 3072, {_}: inverse (divide (multiply (multiply (inverse ?16865) ?16865) ?16866) (divide (divide ?16867 ?16868) (divide (inverse ?16866) ?16868))) =>= ?16867 [16868, 16867, 16866, 16865] by Super 2998 with 3 at 1,1,2
Id : 1319, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (divide ?6632 (inverse ?6633)) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Super 1304 with 3 at 2,2,1,2
Id : 1369, {_}: inverse (divide (divide (divide ?6630 ?6630) ?6631) (divide (multiply ?6632 ?6633) (multiply ?6631 ?6633))) =>= ?6632 [6633, 6632, 6631, 6630] by Demod 1319 with 3 at 1,2,1,2
Id : 1389, {_}: multiply ?6881 (divide (divide (divide ?6882 ?6882) ?6883) (divide (multiply ?6884 ?6885) (multiply ?6883 ?6885))) =>= divide ?6881 ?6884 [6885, 6884, 6883, 6882, 6881] by Super 3 with 1369 at 2,3
Id :   8, {_}: divide (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) (inverse ?34) =>= ?33 [34, 33, 32, 31] by Super 2 with 3 at 2,2,1,1,2
Id :  15, {_}: multiply (inverse (divide (divide (divide ?31 ?31) ?32) (divide ?33 (multiply ?32 ?34)))) ?34 =>= ?33 [34, 33, 32, 31] by Demod 8 with 3 at 2
Id :   6, {_}: divide (inverse (divide (divide (divide ?22 ?22) ?23) ?24)) ?25 =?= inverse (divide (divide (divide ?26 ?26) ?27) (divide ?24 (divide ?27 (divide ?23 ?25)))) [27, 26, 25, 24, 23, 22] by Super 4 with 2 at 2,1,1,2
Id :  86, {_}: divide (divide (inverse (divide (divide (divide ?404 ?404) ?405) ?406)) ?407) (divide ?405 ?407) =>= ?406 [407, 406, 405, 404] by Super 2 with 6 at 1,2
Id : 193, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (divide ?904 (inverse (divide (divide (divide ?905 ?905) ?904) ?902))) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Super 15 with 86 at 1,1,1,2
Id : 223, {_}: multiply (inverse (divide ?902 (divide ?903 (multiply (multiply ?904 (divide (divide (divide ?905 ?905) ?904) ?902)) ?906)))) ?906 =>= ?903 [906, 905, 904, 903, 902] by Demod 193 with 3 at 1,2,2,1,1,2
Id :  30, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (divide ?161 (inverse (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165)))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Super 22 with 18 at 2,2,1,1,1,2
Id :  42, {_}: divide (inverse (divide (multiply (divide ?157 ?157) (divide (divide (divide ?158 ?158) ?159) ?160)) (multiply ?161 (divide (multiply (divide ?162 ?162) (divide (divide (divide ?163 ?163) ?164) (divide ?165 (divide ?164 (divide ?159 ?166))))) (divide ?160 ?165))))) ?166 =>= ?161 [166, 165, 164, 163, 162, 161, 160, 159, 158, 157] by Demod 30 with 3 at 2,1,1,2
Id : 202, {_}: divide (divide (inverse (divide (divide (divide ?974 ?974) ?975) ?976)) ?977) (divide ?975 ?977) =>= ?976 [977, 976, 975, 974] by Super 2 with 6 at 1,2
Id : 208, {_}: divide (divide (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) (inverse ?1021)) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Super 202 with 3 at 2,2
Id : 372, {_}: divide (multiply (inverse (divide (divide (divide ?1664 ?1664) ?1665) ?1666)) ?1667) (multiply ?1665 ?1667) =>= ?1666 [1667, 1666, 1665, 1664] by Demod 208 with 3 at 1,2
Id : 378, {_}: divide (multiply (inverse (divide (multiply (divide ?1702 ?1702) ?1703) ?1704)) ?1705) (multiply (inverse ?1703) ?1705) =>= ?1704 [1705, 1704, 1703, 1702] by Super 372 with 3 at 1,1,1,1,2
Id : 88082, {_}: divide ?485240 (multiply (inverse ?485241) ?485242) =<= divide ?485240 (multiply (multiply ?485243 (divide (divide (divide ?485244 ?485244) ?485243) (multiply (divide ?485245 ?485245) ?485241))) ?485242) [485245, 485244, 485243, 485242, 485241, 485240] by Super 378 with 223 at 1,2
Id : 89234, {_}: divide (inverse (divide (multiply (divide ?494319 ?494319) (divide (divide (divide ?494320 ?494320) ?494321) ?494322)) (multiply (inverse ?494323) (divide (multiply (divide ?494324 ?494324) (divide (divide (divide ?494325 ?494325) ?494326) (divide ?494327 (divide ?494326 (divide ?494321 ?494328))))) (divide ?494322 ?494327))))) ?494328 =?= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494328, 494327, 494326, 494325, 494324, 494323, 494322, 494321, 494320, 494319] by Super 42 with 88082 at 1,1,2
Id : 89554, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (multiply (divide ?494331 ?494331) ?494323)) [494331, 494330, 494329, 494323] by Demod 89234 with 42 at 2
Id : 90512, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide (divide (divide ?497371 ?497371) (multiply ?497372 (divide (divide (divide ?497373 ?497373) ?497372) ?497368))) (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497373, 497372, 497371, 497370, 497369, 497368] by Super 223 with 89554 at 2,2,1,1,2
Id : 196, {_}: divide (inverse (divide (divide (divide ?925 ?925) ?926) (divide (inverse (divide (divide (divide ?927 ?927) ?928) ?929)) (divide ?926 ?930)))) ?930 =?= inverse (divide (divide (divide ?931 ?931) ?928) ?929) [931, 930, 929, 928, 927, 926, 925] by Super 6 with 86 at 2,1,3
Id : 6409, {_}: inverse (divide (divide (divide ?34204 ?34204) ?34205) ?34206) =?= inverse (divide (divide (divide ?34207 ?34207) ?34205) ?34206) [34207, 34206, 34205, 34204] by Demod 196 with 2 at 2
Id : 6420, {_}: inverse (divide (divide (divide ?34278 ?34278) (divide ?34279 (inverse (divide (divide (divide ?34280 ?34280) ?34279) ?34281)))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Super 6409 with 86 at 1,1,3
Id : 6497, {_}: inverse (divide (divide (divide ?34278 ?34278) (multiply ?34279 (divide (divide (divide ?34280 ?34280) ?34279) ?34281))) ?34282) =>= inverse (divide ?34281 ?34282) [34282, 34281, 34280, 34279, 34278] by Demod 6420 with 3 at 2,1,1,2
Id : 28325, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= divide ?153090 (inverse (divide ?153094 ?153095)) [153095, 153094, 153093, 153092, 153091, 153090] by Super 3 with 6497 at 2,3
Id : 28522, {_}: multiply ?153090 (divide (divide (divide ?153091 ?153091) (multiply ?153092 (divide (divide (divide ?153093 ?153093) ?153092) ?153094))) ?153095) =>= multiply ?153090 (divide ?153094 ?153095) [153095, 153094, 153093, 153092, 153091, 153090] by Demod 28325 with 3 at 3
Id : 91190, {_}: multiply (inverse (divide ?497368 (divide ?497369 (inverse ?497370)))) (divide ?497368 (multiply (divide ?497374 ?497374) ?497370)) =>= ?497369 [497374, 497370, 497369, 497368] by Demod 90512 with 28522 at 2
Id : 91665, {_}: multiply (inverse (divide ?503116 (multiply ?503117 ?503118))) (divide ?503116 (multiply (divide ?503119 ?503119) ?503118)) =>= ?503117 [503119, 503118, 503117, 503116] by Demod 91190 with 3 at 2,1,1,2
Id : 231, {_}: divide (multiply (inverse (divide (divide (divide ?1018 ?1018) ?1019) ?1020)) ?1021) (multiply ?1019 ?1021) =>= ?1020 [1021, 1020, 1019, 1018] by Demod 208 with 3 at 1,2
Id : 1057, {_}: inverse (divide (divide (divide ?5280 ?5280) ?5281) (divide (divide ?5282 ?5283) (divide ?5281 ?5283))) =>= ?5282 [5283, 5282, 5281, 5280] by Super 18 with 23 at 2
Id : 1292, {_}: divide (divide ?6440 ?6441) (divide ?6442 ?6441) =?= divide (divide ?6440 ?6443) (divide ?6442 ?6443) [6443, 6442, 6441, 6440] by Super 86 with 1057 at 1,1,2
Id : 2334, {_}: divide (multiply (inverse (divide (divide (divide ?12626 ?12626) ?12627) (divide ?12628 ?12627))) ?12629) (multiply ?12630 ?12629) =>= divide ?12628 ?12630 [12630, 12629, 12628, 12627, 12626] by Super 231 with 1292 at 1,1,1,2
Id : 91784, {_}: multiply (inverse (divide (multiply (inverse (divide (divide (divide ?504066 ?504066) ?504067) (divide ?504068 ?504067))) ?504069) (multiply ?504070 ?504069))) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504069, 504068, 504067, 504066] by Super 91665 with 2334 at 2,2
Id : 92186, {_}: multiply (inverse (divide ?504068 ?504070)) (divide ?504068 (divide ?504071 ?504071)) =>= ?504070 [504071, 504070, 504068] by Demod 91784 with 2334 at 1,1,2
Id : 92346, {_}: ?505751 =<= divide (inverse (divide (divide (divide ?505752 ?505752) ?505753) ?505751)) ?505753 [505753, 505752, 505751] by Super 1389 with 92186 at 2
Id : 93111, {_}: divide ?509269 (divide ?509270 ?509270) =>= ?509269 [509270, 509269] by Super 2 with 92346 at 2
Id : 100321, {_}: inverse (multiply (multiply (inverse ?535124) ?535124) ?535125) =>= inverse ?535125 [535125, 535124] by Super 3072 with 93111 at 1,2
Id : 100420, {_}: inverse (inverse ?535740) =<= inverse (divide (divide (divide ?535741 ?535741) (multiply (inverse ?535742) ?535742)) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535742, 535741, 535740] by Super 100321 with 89554 at 1,2
Id : 94282, {_}: divide ?515515 (divide ?515516 ?515516) =>= ?515515 [515516, 515515] by Super 2 with 92346 at 2
Id : 94361, {_}: divide ?515973 (multiply (inverse ?515974) ?515974) =>= ?515973 [515974, 515973] by Super 94282 with 3 at 2,2
Id : 100488, {_}: inverse (inverse ?535740) =<= inverse (divide (divide ?535741 ?535741) (multiply (divide ?535743 ?535743) ?535740)) [535743, 535741, 535740] by Demod 100420 with 94361 at 1,1,3
Id : 93886, {_}: inverse (divide (divide ?513000 ?513000) ?513001) =>= ?513001 [513001, 513000] by Super 1369 with 93111 at 1,2
Id : 100489, {_}: inverse (inverse ?535740) =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100488 with 93886 at 3
Id : 100522, {_}: divide (inverse (divide (inverse (inverse (divide (divide (divide ?95 ?95) ?96) (divide ?97 (divide ?96 ?98))))) ?99)) ?98 =?= inverse (divide (divide (divide ?100 ?100) ?101) (divide ?99 (divide ?101 ?97))) [101, 100, 99, 98, 97, 96, 95] by Demod 23 with 100489 at 1,1,1,2
Id : 1348, {_}: inverse (divide (multiply (divide ?6830 ?6830) ?6831) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831, 6830] by Super 1304 with 3 at 1,1,2
Id : 3107, {_}: multiply ?16917 (divide (multiply (divide ?16918 ?16918) ?16919) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16918, 16917] by Super 3 with 1348 at 2,3
Id : 100541, {_}: multiply ?16917 (divide (inverse (inverse ?16919)) (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 3107 with 100489 at 1,2,2
Id : 100747, {_}: inverse (inverse (divide (inverse (inverse ?536517)) (divide (divide ?536518 ?536519) (divide (inverse ?536517) ?536519)))) =?= divide (divide ?536520 ?536520) ?536518 [536520, 536519, 536518, 536517] by Super 100541 with 100489 at 2
Id : 100526, {_}: inverse (divide (inverse (inverse ?6831)) (divide (divide ?6832 ?6833) (divide (inverse ?6831) ?6833))) =>= ?6832 [6833, 6832, 6831] by Demod 1348 with 100489 at 1,1,2
Id : 100849, {_}: inverse ?536518 =<= divide (divide ?536520 ?536520) ?536518 [536520, 536518] by Demod 100747 with 100526 at 1,2
Id : 101259, {_}: divide (inverse (divide (inverse (inverse (divide (inverse ?96) (divide ?97 (divide ?96 ?98))))) ?99)) ?98 =?= inverse (divide (divide (divide ?100 ?100) ?101) (divide ?99 (divide ?101 ?97))) [101, 100, 99, 98, 97, 96] by Demod 100522 with 100849 at 1,1,1,1,1,1,2
Id : 101260, {_}: divide (inverse (divide (inverse (inverse (divide (inverse ?96) (divide ?97 (divide ?96 ?98))))) ?99)) ?98 =?= inverse (divide (inverse ?101) (divide ?99 (divide ?101 ?97))) [101, 99, 98, 97, 96] by Demod 101259 with 100849 at 1,1,3
Id : 101328, {_}: inverse (inverse ?513001) =>= ?513001 [513001] by Demod 93886 with 100849 at 1,2
Id : 101498, {_}: divide (inverse (divide (divide (inverse ?96) (divide ?97 (divide ?96 ?98))) ?99)) ?98 =?= inverse (divide (inverse ?101) (divide ?99 (divide ?101 ?97))) [101, 99, 98, 97, 96] by Demod 101260 with 101328 at 1,1,1,2
Id : 100491, {_}: inverse ?494323 =<= multiply ?494329 (divide (divide (divide ?494330 ?494330) ?494329) (inverse (inverse ?494323))) [494330, 494329, 494323] by Demod 89554 with 100489 at 2,2,3
Id : 100612, {_}: inverse ?494323 =<= multiply ?494329 (multiply (divide (divide ?494330 ?494330) ?494329) (inverse ?494323)) [494330, 494329, 494323] by Demod 100491 with 3 at 2,3
Id : 101341, {_}: inverse ?494323 =<= multiply ?494329 (multiply (inverse ?494329) (inverse ?494323)) [494329, 494323] by Demod 100612 with 100849 at 1,2,3
Id : 101357, {_}: multiply ?16917 (divide ?16919 (divide (divide ?16920 ?16921) (divide (inverse ?16919) ?16921))) =>= divide ?16917 ?16920 [16921, 16920, 16919, 16917] by Demod 100541 with 101328 at 1,2,2
Id : 210, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?1032) ?1032) ?1033) ?1034)) ?1035) (divide ?1033 ?1035) =>= ?1034 [1035, 1034, 1033, 1032] by Super 202 with 3 at 1,1,1,1,1,2
Id : 2224, {_}: divide (divide (inverse (divide (divide (multiply (inverse ?11772) ?11772) ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773, 11772] by Super 210 with 1292 at 1,1,1,2
Id : 778, {_}: divide (inverse (divide (divide (divide ?3892 ?3892) ?3893) (divide (inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896)) (divide ?3893 ?3897)))) ?3897 =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3897, 3896, 3895, 3894, 3893, 3892] by Super 6 with 210 at 2,1,3
Id : 811, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =?= inverse (divide (divide (divide ?3898 ?3898) ?3895) ?3896) [3898, 3896, 3895, 3894] by Demod 778 with 2 at 2
Id : 101312, {_}: inverse (divide (divide (multiply (inverse ?3894) ?3894) ?3895) ?3896) =>= inverse (divide (inverse ?3895) ?3896) [3896, 3895, 3894] by Demod 811 with 100849 at 1,1,3
Id : 101430, {_}: divide (divide (inverse (divide (inverse ?11773) (divide ?11774 ?11773))) ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774, 11773] by Demod 2224 with 101312 at 1,1,2
Id : 375, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?1685) ?1685) ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686, 1685] by Super 372 with 3 at 1,1,1,1,1,2
Id : 2362, {_}: divide (multiply (inverse (divide (divide (multiply (inverse ?12860) ?12860) ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861, 12860] by Super 375 with 1292 at 1,1,1,2
Id : 101423, {_}: divide (multiply (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12863) (multiply ?12864 ?12863) =>= divide ?12862 ?12864 [12864, 12863, 12862, 12861] by Demod 2362 with 101312 at 1,1,2
Id : 1298, {_}: divide (multiply ?6472 ?6473) (multiply ?6474 ?6473) =?= divide (divide ?6472 ?6475) (divide ?6474 ?6475) [6475, 6474, 6473, 6472] by Super 231 with 1057 at 1,1,2
Id : 2653, {_}: divide (multiply (inverse (divide (multiply (divide ?14473 ?14473) ?14474) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474, 14473] by Super 231 with 1298 at 1,1,1,2
Id : 100505, {_}: divide (multiply (inverse (divide (inverse (inverse ?14474)) (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 2653 with 100489 at 1,1,1,1,2
Id : 101382, {_}: divide (multiply (inverse (divide ?14474 (multiply ?14475 ?14474))) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475, 14474] by Demod 100505 with 101328 at 1,1,1,1,2
Id : 101429, {_}: divide (multiply (inverse (divide (inverse ?1686) ?1687)) ?1688) (multiply ?1686 ?1688) =>= ?1687 [1688, 1687, 1686] by Demod 375 with 101312 at 1,1,2
Id : 101386, {_}: ?535740 =<= multiply (divide ?535743 ?535743) ?535740 [535743, 535740] by Demod 100489 with 101328 at 2
Id : 101594, {_}: ?537458 =<= multiply (inverse (divide ?537459 ?537459)) ?537458 [537459, 537458] by Super 101386 with 100849 at 1,3
Id : 101980, {_}: divide ?538112 (multiply ?538113 ?538112) =>= inverse ?538113 [538113, 538112] by Super 101429 with 101594 at 1,2
Id : 102412, {_}: divide (multiply (inverse (inverse ?14475)) ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 101382 with 101980 at 1,1,1,2
Id : 102413, {_}: divide (multiply ?14475 ?14476) (multiply ?14477 ?14476) =>= divide ?14475 ?14477 [14477, 14476, 14475] by Demod 102412 with 101328 at 1,1,2
Id : 102434, {_}: divide (inverse (divide (inverse ?12861) (divide ?12862 ?12861))) ?12864 =>= divide ?12862 ?12864 [12864, 12862, 12861] by Demod 101423 with 102413 at 2
Id : 102436, {_}: divide (divide ?11774 ?11775) (divide ?11776 ?11775) =>= divide ?11774 ?11776 [11776, 11775, 11774] by Demod 101430 with 102434 at 1,2
Id : 102441, {_}: multiply ?16917 (divide ?16919 (divide ?16920 (inverse ?16919))) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 101357 with 102436 at 2,2,2
Id : 102470, {_}: multiply ?16917 (divide ?16919 (multiply ?16920 ?16919)) =>= divide ?16917 ?16920 [16920, 16919, 16917] by Demod 102441 with 3 at 2,2,2
Id : 102471, {_}: multiply ?16917 (inverse ?16920) =>= divide ?16917 ?16920 [16920, 16917] by Demod 102470 with 101980 at 2,2
Id : 102472, {_}: inverse ?494323 =<= multiply ?494329 (divide (inverse ?494329) ?494323) [494329, 494323] by Demod 101341 with 102471 at 2,3
Id : 102516, {_}: inverse (multiply ?538987 (inverse ?538988)) =>= multiply ?538988 (inverse ?538987) [538988, 538987] by Super 102472 with 101980 at 2,3
Id : 102787, {_}: inverse (divide ?538987 ?538988) =<= multiply ?538988 (inverse ?538987) [538988, 538987] by Demod 102516 with 102471 at 1,2
Id : 102788, {_}: inverse (divide ?538987 ?538988) =>= divide ?538988 ?538987 [538988, 538987] by Demod 102787 with 102471 at 3
Id : 102815, {_}: divide (divide ?99 (divide (inverse ?96) (divide ?97 (divide ?96 ?98)))) ?98 =?= inverse (divide (inverse ?101) (divide ?99 (divide ?101 ?97))) [101, 98, 97, 96, 99] by Demod 101498 with 102788 at 1,2
Id : 102816, {_}: divide (divide ?99 (divide (inverse ?96) (divide ?97 (divide ?96 ?98)))) ?98 =?= divide (divide ?99 (divide ?101 ?97)) (inverse ?101) [101, 98, 97, 96, 99] by Demod 102815 with 102788 at 3
Id : 2390, {_}: divide (divide ?13180 ?13181) (divide ?13182 ?13181) =?= divide (divide ?13180 ?13183) (divide ?13182 ?13183) [13183, 13182, 13181, 13180] by Super 86 with 1057 at 1,1,2
Id : 212, {_}: divide (divide (inverse (divide (multiply (divide ?1043 ?1043) ?1044) ?1045)) ?1046) (divide (inverse ?1044) ?1046) =>= ?1045 [1046, 1045, 1044, 1043] by Super 202 with 3 at 1,1,1,1,2
Id : 2401, {_}: divide (divide ?13273 ?13274) (divide (divide (inverse (divide (multiply (divide ?13275 ?13275) ?13276) ?13277)) ?13278) ?13274) =>= divide (divide ?13273 (divide (inverse ?13276) ?13278)) ?13277 [13278, 13277, 13276, 13275, 13274, 13273] by Super 2390 with 212 at 2,3
Id : 100530, {_}: divide (divide ?13273 ?13274) (divide (divide (inverse (divide (inverse (inverse ?13276)) ?13277)) ?13278) ?13274) =>= divide (divide ?13273 (divide (inverse ?13276) ?13278)) ?13277 [13278, 13277, 13276, 13274, 13273] by Demod 2401 with 100489 at 1,1,1,1,2,2
Id : 101375, {_}: divide (divide ?13273 ?13274) (divide (divide (inverse (divide ?13276 ?13277)) ?13278) ?13274) =>= divide (divide ?13273 (divide (inverse ?13276) ?13278)) ?13277 [13278, 13277, 13276, 13274, 13273] by Demod 100530 with 101328 at 1,1,1,1,2,2
Id : 102446, {_}: divide ?13273 (divide (inverse (divide ?13276 ?13277)) ?13278) =?= divide (divide ?13273 (divide (inverse ?13276) ?13278)) ?13277 [13278, 13277, 13276, 13273] by Demod 101375 with 102436 at 2
Id : 102862, {_}: divide ?13273 (divide (divide ?13277 ?13276) ?13278) =<= divide (divide ?13273 (divide (inverse ?13276) ?13278)) ?13277 [13278, 13276, 13277, 13273] by Demod 102446 with 102788 at 1,2,2
Id : 102906, {_}: divide ?99 (divide (divide ?98 ?96) (divide ?97 (divide ?96 ?98))) =?= divide (divide ?99 (divide ?101 ?97)) (inverse ?101) [101, 97, 96, 98, 99] by Demod 102816 with 102862 at 2
Id : 102907, {_}: divide ?99 (divide (divide ?98 ?96) (divide ?97 (divide ?96 ?98))) =?= multiply (divide ?99 (divide ?101 ?97)) ?101 [101, 97, 96, 98, 99] by Demod 102906 with 3 at 3
Id : 102924, {_}: multiply ?539666 (divide ?539667 ?539668) =<= divide ?539666 (divide ?539668 ?539667) [539668, 539667, 539666] by Super 102471 with 102788 at 2,2
Id : 103472, {_}: multiply ?99 (divide (divide ?97 (divide ?96 ?98)) (divide ?98 ?96)) =?= multiply (divide ?99 (divide ?101 ?97)) ?101 [101, 98, 96, 97, 99] by Demod 102907 with 102924 at 2
Id : 103473, {_}: multiply ?99 (divide (divide ?97 (divide ?96 ?98)) (divide ?98 ?96)) =?= multiply (multiply ?99 (divide ?97 ?101)) ?101 [101, 98, 96, 97, 99] by Demod 103472 with 102924 at 1,3
Id : 103474, {_}: multiply ?99 (multiply (divide ?97 (divide ?96 ?98)) (divide ?96 ?98)) =?= multiply (multiply ?99 (divide ?97 ?101)) ?101 [101, 98, 96, 97, 99] by Demod 103473 with 102924 at 2,2
Id : 103475, {_}: multiply ?99 (multiply (multiply ?97 (divide ?98 ?96)) (divide ?96 ?98)) =?= multiply (multiply ?99 (divide ?97 ?101)) ?101 [101, 96, 98, 97, 99] by Demod 103474 with 102924 at 1,2,2
Id :   9, {_}: divide (inverse (divide (divide (multiply (inverse ?36) ?36) ?37) (divide ?38 (divide ?37 ?39)))) ?39 =>= ?38 [39, 38, 37, 36] by Super 2 with 3 at 1,1,1,1,2
Id : 101427, {_}: divide (inverse (divide (inverse ?37) (divide ?38 (divide ?37 ?39)))) ?39 =>= ?38 [39, 38, 37] by Demod 9 with 101312 at 1,2
Id : 102819, {_}: divide (divide (divide ?38 (divide ?37 ?39)) (inverse ?37)) ?39 =>= ?38 [39, 37, 38] by Demod 101427 with 102788 at 1,2
Id : 102903, {_}: divide (multiply (divide ?38 (divide ?37 ?39)) ?37) ?39 =>= ?38 [39, 37, 38] by Demod 102819 with 3 at 1,2
Id : 103476, {_}: divide (multiply (multiply ?38 (divide ?39 ?37)) ?37) ?39 =>= ?38 [37, 39, 38] by Demod 102903 with 102924 at 1,1,2
Id : 2408, {_}: divide (divide ?13322 ?13323) (divide (multiply (inverse (divide (multiply (divide ?13324 ?13324) ?13325) ?13326)) ?13327) ?13323) =>= divide (divide ?13322 (multiply (inverse ?13325) ?13327)) ?13326 [13327, 13326, 13325, 13324, 13323, 13322] by Super 2390 with 378 at 2,3
Id : 100531, {_}: divide (divide ?13322 ?13323) (divide (multiply (inverse (divide (inverse (inverse ?13325)) ?13326)) ?13327) ?13323) =>= divide (divide ?13322 (multiply (inverse ?13325) ?13327)) ?13326 [13327, 13326, 13325, 13323, 13322] by Demod 2408 with 100489 at 1,1,1,1,2,2
Id : 101355, {_}: divide (divide ?13322 ?13323) (divide (multiply (inverse (divide ?13325 ?13326)) ?13327) ?13323) =>= divide (divide ?13322 (multiply (inverse ?13325) ?13327)) ?13326 [13327, 13326, 13325, 13323, 13322] by Demod 100531 with 101328 at 1,1,1,1,2,2
Id : 102440, {_}: divide ?13322 (multiply (inverse (divide ?13325 ?13326)) ?13327) =?= divide (divide ?13322 (multiply (inverse ?13325) ?13327)) ?13326 [13327, 13326, 13325, 13322] by Demod 101355 with 102436 at 2
Id : 102864, {_}: divide ?13322 (multiply (divide ?13326 ?13325) ?13327) =<= divide (divide ?13322 (multiply (inverse ?13325) ?13327)) ?13326 [13327, 13325, 13326, 13322] by Demod 102440 with 102788 at 1,2,2
Id : 102611, {_}: divide ?539467 (multiply ?539468 ?539467) =>= inverse ?539468 [539468, 539467] by Super 101429 with 101594 at 1,2
Id : 102625, {_}: divide (inverse ?539525) (divide ?539526 ?539525) =>= inverse ?539526 [539526, 539525] by Super 102611 with 102471 at 2,2
Id : 103817, {_}: multiply (inverse ?539525) (divide ?539525 ?539526) =>= inverse ?539526 [539526, 539525] by Demod 102625 with 102924 at 2
Id : 103831, {_}: divide ?541233 (multiply (divide ?541234 ?541235) (divide ?541235 ?541236)) =>= divide (divide ?541233 (inverse ?541236)) ?541234 [541236, 541235, 541234, 541233] by Super 102864 with 103817 at 2,1,3
Id : 103478, {_}: multiply (divide ?11774 ?11775) (divide ?11775 ?11776) =>= divide ?11774 ?11776 [11776, 11775, 11774] by Demod 102436 with 102924 at 2
Id : 103925, {_}: divide ?541233 (divide ?541234 ?541236) =<= divide (divide ?541233 (inverse ?541236)) ?541234 [541236, 541234, 541233] by Demod 103831 with 103478 at 2,2
Id : 103926, {_}: divide ?541233 (divide ?541234 ?541236) =?= divide (multiply ?541233 ?541236) ?541234 [541236, 541234, 541233] by Demod 103925 with 3 at 1,3
Id : 103927, {_}: multiply ?541233 (divide ?541236 ?541234) =<= divide (multiply ?541233 ?541236) ?541234 [541234, 541236, 541233] by Demod 103926 with 102924 at 2
Id : 103998, {_}: multiply (multiply ?38 (divide ?39 ?37)) (divide ?37 ?39) =>= ?38 [37, 39, 38] by Demod 103476 with 103927 at 2
Id : 104001, {_}: multiply ?99 ?97 =<= multiply (multiply ?99 (divide ?97 ?101)) ?101 [101, 97, 99] by Demod 103475 with 103998 at 2,2
Id : 104034, {_}: multiply ?541526 (multiply ?541527 ?541528) =<= multiply (multiply ?541526 (multiply ?541527 (divide ?541528 ?541529))) ?541529 [541529, 541528, 541527, 541526] by Super 104001 with 103927 at 2,1,3
Id :  44, {_}: multiply (inverse (divide (divide (divide ?198 ?198) ?199) (divide ?200 (multiply ?199 ?201)))) ?201 =>= ?200 [201, 200, 199, 198] by Demod 8 with 3 at 2
Id :  46, {_}: multiply (inverse (divide (divide (divide ?210 ?210) ?211) ?212)) ?213 =?= inverse (divide (divide (divide ?214 ?214) ?215) (divide ?212 (divide ?215 (multiply ?211 ?213)))) [215, 214, 213, 212, 211, 210] by Super 44 with 2 at 2,1,1,2
Id : 104145, {_}: multiply (divide ?212 (divide (divide ?210 ?210) ?211)) ?213 =?= inverse (divide (divide (divide ?214 ?214) ?215) (divide ?212 (divide ?215 (multiply ?211 ?213)))) [215, 214, 213, 211, 210, 212] by Demod 46 with 102788 at 1,2
Id : 104146, {_}: multiply (divide ?212 (divide (divide ?210 ?210) ?211)) ?213 =?= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide (divide ?214 ?214) ?215) [214, 215, 213, 211, 210, 212] by Demod 104145 with 102788 at 3
Id : 104147, {_}: multiply (multiply ?212 (divide ?211 (divide ?210 ?210))) ?213 =?= divide (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide (divide ?214 ?214) ?215) [214, 215, 213, 210, 211, 212] by Demod 104146 with 102924 at 1,2
Id : 104148, {_}: multiply (multiply ?212 (divide ?211 (divide ?210 ?210))) ?213 =?= multiply (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide ?215 (divide ?214 ?214)) [214, 215, 213, 210, 211, 212] by Demod 104147 with 102924 at 3
Id : 104149, {_}: multiply (multiply ?212 (multiply ?211 (divide ?210 ?210))) ?213 =?= multiply (divide ?212 (divide ?215 (multiply ?211 ?213))) (divide ?215 (divide ?214 ?214)) [214, 215, 213, 210, 211, 212] by Demod 104148 with 102924 at 2,1,2
Id : 104150, {_}: multiply (multiply ?212 (multiply ?211 (divide ?210 ?210))) ?213 =?= multiply (multiply ?212 (divide (multiply ?211 ?213) ?215)) (divide ?215 (divide ?214 ?214)) [214, 215, 213, 210, 211, 212] by Demod 104149 with 102924 at 1,3
Id : 104151, {_}: multiply (multiply ?212 (multiply ?211 (divide ?210 ?210))) ?213 =?= multiply (multiply ?212 (divide (multiply ?211 ?213) ?215)) (multiply ?215 (divide ?214 ?214)) [214, 215, 213, 210, 211, 212] by Demod 104150 with 102924 at 2,3
Id : 93587, {_}: multiply (inverse (divide ?504068 ?504070)) ?504068 =>= ?504070 [504070, 504068] by Demod 92186 with 93111 at 2,2
Id : 95434, {_}: multiply ?517965 (divide ?517966 ?517966) =>= ?517965 [517966, 517965] by Super 93587 with 93886 at 1,2
Id : 104152, {_}: multiply (multiply ?212 ?211) ?213 =<= multiply (multiply ?212 (divide (multiply ?211 ?213) ?215)) (multiply ?215 (divide ?214 ?214)) [214, 215, 213, 211, 212] by Demod 104151 with 95434 at 2,1,2
Id : 104153, {_}: multiply (multiply ?212 ?211) ?213 =<= multiply (multiply ?212 (multiply ?211 (divide ?213 ?215))) (multiply ?215 (divide ?214 ?214)) [214, 215, 213, 211, 212] by Demod 104152 with 103927 at 2,1,3
Id : 104154, {_}: multiply (multiply ?212 ?211) ?213 =<= multiply (multiply ?212 (multiply ?211 (divide ?213 ?215))) ?215 [215, 213, 211, 212] by Demod 104153 with 95434 at 2,3
Id : 115019, {_}: multiply ?541526 (multiply ?541527 ?541528) =?= multiply (multiply ?541526 ?541527) ?541528 [541528, 541527, 541526] by Demod 104034 with 104154 at 3
Id : 115288, {_}: multiply a3 (multiply b3 c3) === multiply a3 (multiply b3 c3) [] by Demod 1 with 115019 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP480-1.p
24007: solved GRP480-1.p in 40.758547 using nrkbo
24007: status Unsatisfiable for GRP480-1.p
NO CLASH, using fixed ground order
24021: Facts:
24021:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24021:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24021:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24021:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24021:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24021:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24021:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24021:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24021:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
24021: Goal:
24021:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24021: Order:
24021:   nrkbo
24021: Leaf order:
24021:  c 2 0 2 2,2,2
24021:  a 4 0 4 1,2
24021:  b 4 0 4 1,2,2
24021:  meet 17 2 4 0,2
24021:  join 19 2 4 0,2,2
NO CLASH, using fixed ground order
24022: Facts:
24022:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24022:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24022:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24022:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24022:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24022:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24022:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24022:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24022:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
24022: Goal:
24022:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24022: Order:
24022:   kbo
24022: Leaf order:
24022:  c 2 0 2 2,2,2
24022:  a 4 0 4 1,2
24022:  b 4 0 4 1,2,2
24022:  meet 17 2 4 0,2
24022:  join 19 2 4 0,2,2
NO CLASH, using fixed ground order
24023: Facts:
24023:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
24023:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
24023:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
24023:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
24023:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
24023:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
24023:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
24023:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
24023:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
24023: Goal:
24023:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
24023: Order:
24023:   lpo
24023: Leaf order:
24023:  c 2 0 2 2,2,2
24023:  a 4 0 4 1,2
24023:  b 4 0 4 1,2,2
24023:  meet 17 2 4 0,2
24023:  join 19 2 4 0,2,2
% SZS status Timeout for LAT168-1.p
NO CLASH, using fixed ground order
24053: Facts:
24053:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24053:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24053:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24053:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24053: Goal:
24053:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
24053: Order:
24053:   kbo
24053: Leaf order:
24053:  a 3 0 3 1,1,1,2
24053:  b 3 0 3 2,1,1,2
24053:  truth 4 0 1 3
24053:  not 2 1 0 
24053:  implies 18 2 5 0,2
NO CLASH, using fixed ground order
24054: Facts:
24054:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24054:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24054:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24054:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24054: Goal:
24054:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
24054: Order:
24054:   lpo
24054: Leaf order:
24054:  a 3 0 3 1,1,1,2
24054:  b 3 0 3 2,1,1,2
24054:  truth 4 0 1 3
24054:  not 2 1 0 
24054:  implies 18 2 5 0,2
NO CLASH, using fixed ground order
24052: Facts:
24052:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24052:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24052:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24052:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24052: Goal:
24052:  Id :   1, {_}:
          implies (implies (implies a b) (implies b a)) (implies b a) =>= truth
          [] by prove_wajsberg_mv_4
24052: Order:
24052:   nrkbo
24052: Leaf order:
24052:  a 3 0 3 1,1,1,2
24052:  b 3 0 3 2,1,1,2
24052:  truth 4 0 1 3
24052:  not 2 1 0 
24052:  implies 18 2 5 0,2
% SZS status Timeout for LCL109-2.p
NO CLASH, using fixed ground order
24075: Facts:
24075:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24075:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24075:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24075:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24075: Goal:
24075:  Id :   1, {_}:
          implies x (implies y z) =<= implies y (implies x z)
          [] by prove_wajsberg_lemma
24075: Order:
24075:   nrkbo
24075: Leaf order:
24075:  x 2 0 2 1,2
24075:  y 2 0 2 1,2,2
24075:  z 2 0 2 2,2,2
24075:  truth 3 0 0 
24075:  not 2 1 0 
24075:  implies 17 2 4 0,2
NO CLASH, using fixed ground order
24076: Facts:
24076:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24076:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24076:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24076:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24076: Goal:
24076:  Id :   1, {_}:
          implies x (implies y z) =<= implies y (implies x z)
          [] by prove_wajsberg_lemma
24076: Order:
24076:   kbo
24076: Leaf order:
24076:  x 2 0 2 1,2
24076:  y 2 0 2 1,2,2
24076:  z 2 0 2 2,2,2
24076:  truth 3 0 0 
24076:  not 2 1 0 
24076:  implies 17 2 4 0,2
NO CLASH, using fixed ground order
24077: Facts:
24077:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24077:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24077:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24077:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24077: Goal:
24077:  Id :   1, {_}:
          implies x (implies y z) =<= implies y (implies x z)
          [] by prove_wajsberg_lemma
24077: Order:
24077:   lpo
24077: Leaf order:
24077:  x 2 0 2 1,2
24077:  y 2 0 2 1,2,2
24077:  z 2 0 2 2,2,2
24077:  truth 3 0 0 
24077:  not 2 1 0 
24077:  implies 17 2 4 0,2
% SZS status Timeout for LCL138-1.p
NO CLASH, using fixed ground order
24160: Facts:
24160:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24160:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24160:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24160:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24160:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
24160:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
24160:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
24160:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
24160:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
24160:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
24160:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
24160:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
24160:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
24160:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =?= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
24160:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
24160:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
24160: Goal:
24160:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
24160: Order:
24160:   nrkbo
24160: Leaf order:
24160:  falsehood 1 0 0 
24160:  x 2 0 2 1,2
24160:  y 2 0 2 2,2,2
24160:  truth 6 0 2 1,2,2
24160:  not 12 1 0 
24160:  and_star 7 2 0 
24160:  xor 7 2 4 0,2
24160:  and 9 2 0 
24160:  or 10 2 0 
24160:  implies 14 2 0 
NO CLASH, using fixed ground order
24161: Facts:
24161:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24161:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24161:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24161:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24161:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
24161:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
24161:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
24161:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
24161:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
24161:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
24161:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
24161:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
24161:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
24161:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
24161:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
24161:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
24161: Goal:
24161:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
24161: Order:
24161:   kbo
24161: Leaf order:
24161:  falsehood 1 0 0 
24161:  x 2 0 2 1,2
24161:  y 2 0 2 2,2,2
24161:  truth 6 0 2 1,2,2
24161:  not 12 1 0 
24161:  and_star 7 2 0 
24161:  xor 7 2 4 0,2
24161:  and 9 2 0 
24161:  or 10 2 0 
24161:  implies 14 2 0 
NO CLASH, using fixed ground order
24162: Facts:
24162:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
24162:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
24162:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
24162:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
24162:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
24162:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
24162:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
24162:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
24162:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
24162:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
24162:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
24162:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
24162:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
24162:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
24162:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
24162:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
24162: Goal:
24162:  Id :   1, {_}:
          xor x (xor truth y) =<= xor (xor x truth) y
          [] by prove_alternative_wajsberg_axiom
24162: Order:
24162:   lpo
24162: Leaf order:
24162:  falsehood 1 0 0 
24162:  x 2 0 2 1,2
24162:  y 2 0 2 2,2,2
24162:  truth 6 0 2 1,2,2
24162:  not 12 1 0 
24162:  and_star 7 2 0 
24162:  xor 7 2 4 0,2
24162:  and 9 2 0 
24162:  or 10 2 0 
24162:  implies 14 2 0 
Statistics :
Max weight : 32
Found proof, 8.845379s
% SZS status Unsatisfiable for LCL159-1.p
% SZS output start CNFRefutation for LCL159-1.p
Id :  11, {_}: and ?31 ?32 =?= and ?32 ?31 [32, 31] by and_commutativity ?31 ?32
Id :  10, {_}: and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29) [29, 28, 27] by and_associativity ?27 ?28 ?29
Id :  13, {_}: xor ?37 ?38 =?= xor ?38 ?37 [38, 37] by xor_commutativity ?37 ?38
Id :   5, {_}: implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth [12, 11] by wajsberg_4 ?11 ?12
Id :   7, {_}: or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19) [19, 18, 17] by or_associativity ?17 ?18 ?19
Id :  39, {_}: implies (implies ?111 ?112) ?112 =?= implies (implies ?112 ?111) ?111 [112, 111] by wajsberg_3 ?111 ?112
Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
Id :   3, {_}: implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6)) =>= truth [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
Id :  20, {_}: implies (implies ?55 ?56) (implies (implies ?56 ?57) (implies ?55 ?57)) =>= truth [57, 56, 55] by wajsberg_2 ?55 ?56 ?57
Id :  17, {_}: not truth =>= falsehood [] by false_definition
Id :   4, {_}: implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8 [9, 8] by wajsberg_3 ?8 ?9
Id :   6, {_}: or ?14 ?15 =<= implies (not ?14) ?15 [15, 14] by or_definition ?14 ?15
Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
Id :   9, {_}: and ?24 ?25 =<= not (or (not ?24) (not ?25)) [25, 24] by and_definition ?24 ?25
Id :  14, {_}: and_star ?40 ?41 =<= not (or (not ?40) (not ?41)) [41, 40] by and_star_definition ?40 ?41
Id :  12, {_}: xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35) [35, 34] by xor_definition ?34 ?35
Id : 154, {_}: and_star ?40 ?41 =<= and ?40 ?41 [41, 40] by Demod 14 with 9 at 3
Id : 162, {_}: xor ?34 ?35 =<= or (and_star ?34 (not ?35)) (and (not ?34) ?35) [35, 34] by Demod 12 with 154 at 1,3
Id : 163, {_}: xor ?34 ?35 =<= or (and_star ?34 (not ?35)) (and_star (not ?34) ?35) [35, 34] by Demod 162 with 154 at 2,3
Id : 173, {_}: or truth ?418 =<= implies falsehood ?418 [418] by Super 6 with 17 at 1,3
Id : 183, {_}: implies (implies ?424 falsehood) falsehood =>= implies (or truth ?424) ?424 [424] by Super 4 with 173 at 1,3
Id :  22, {_}: implies (implies (implies ?62 ?63) ?64) (implies (implies ?64 (implies (implies ?63 ?65) (implies ?62 ?65))) truth) =>= truth [65, 64, 63, 62] by Super 20 with 3 at 2,2,2
Id : 437, {_}: implies (implies ?923 truth) (implies ?924 (implies ?923 ?924)) =>= truth [924, 923] by Super 20 with 2 at 1,2,2
Id : 438, {_}: implies (implies truth truth) (implies ?926 ?926) =>= truth [926] by Super 437 with 2 at 2,2,2
Id : 471, {_}: implies truth (implies ?926 ?926) =>= truth [926] by Demod 438 with 2 at 1,2
Id : 472, {_}: implies ?926 ?926 =>= truth [926] by Demod 471 with 2 at 2
Id : 501, {_}: implies (implies (implies ?1003 ?1003) ?1004) (implies (implies ?1004 truth) truth) =>= truth [1004, 1003] by Super 22 with 472 at 2,1,2,2
Id : 529, {_}: implies (implies truth ?1004) (implies (implies ?1004 truth) truth) =>= truth [1004] by Demod 501 with 472 at 1,1,2
Id :  40, {_}: implies (implies ?114 truth) truth =>= implies ?114 ?114 [114] by Super 39 with 2 at 1,3
Id : 495, {_}: implies (implies ?114 truth) truth =>= truth [114] by Demod 40 with 472 at 3
Id : 530, {_}: implies (implies truth ?1004) truth =>= truth [1004] by Demod 529 with 495 at 2,2
Id : 531, {_}: implies ?1004 truth =>= truth [1004] by Demod 530 with 2 at 1,2
Id : 567, {_}: or ?1050 truth =>= truth [1050] by Super 6 with 531 at 3
Id : 621, {_}: or truth ?1090 =>= truth [1090] by Super 8 with 567 at 3
Id : 637, {_}: implies (implies ?424 falsehood) falsehood =>= implies truth ?424 [424] by Demod 183 with 621 at 1,3
Id : 638, {_}: implies (implies ?424 falsehood) falsehood =>= ?424 [424] by Demod 637 with 2 at 3
Id : 157, {_}: and_star ?24 ?25 =<= not (or (not ?24) (not ?25)) [25, 24] by Demod 9 with 154 at 2
Id : 327, {_}: and_star truth ?755 =<= not (or falsehood (not ?755)) [755] by Super 157 with 17 at 1,1,3
Id : 328, {_}: and_star truth truth =<= not (or falsehood falsehood) [] by Super 327 with 17 at 2,1,3
Id : 341, {_}: or (or falsehood falsehood) ?773 =<= implies (and_star truth truth) ?773 [773] by Super 6 with 328 at 1,3
Id : 346, {_}: or falsehood (or falsehood ?773) =<= implies (and_star truth truth) ?773 [773] by Demod 341 with 7 at 2
Id : 750, {_}: implies (or falsehood (or falsehood falsehood)) falsehood =>= and_star truth truth [] by Super 638 with 346 at 1,2
Id :  69, {_}: implies (or ?11 (not ?12)) (implies ?12 ?11) =>= truth [12, 11] by Demod 5 with 6 at 1,2
Id : 174, {_}: implies (or ?420 falsehood) (implies truth ?420) =>= truth [420] by Super 69 with 17 at 2,1,2
Id : 177, {_}: implies (or ?420 falsehood) ?420 =>= truth [420] by Demod 174 with 2 at 2,2
Id : 777, {_}: implies truth falsehood =>= or falsehood falsehood [] by Super 638 with 177 at 1,2
Id : 799, {_}: falsehood =<= or falsehood falsehood [] by Demod 777 with 2 at 2
Id : 805, {_}: and_star truth truth =>= not falsehood [] by Demod 328 with 799 at 1,3
Id : 809, {_}: or falsehood (or falsehood ?773) =<= implies (not falsehood) ?773 [773] by Demod 346 with 805 at 1,3
Id : 810, {_}: or falsehood (or falsehood ?773) =>= or falsehood ?773 [773] by Demod 809 with 6 at 3
Id : 898, {_}: implies (or falsehood falsehood) falsehood =>= and_star truth truth [] by Demod 750 with 810 at 1,2
Id : 899, {_}: implies (or falsehood falsehood) falsehood =>= not falsehood [] by Demod 898 with 805 at 3
Id : 900, {_}: truth =<= not falsehood [] by Demod 899 with 177 at 2
Id : 904, {_}: or falsehood ?1384 =<= implies truth ?1384 [1384] by Super 6 with 900 at 1,3
Id : 919, {_}: or falsehood ?1384 =>= ?1384 [1384] by Demod 904 with 2 at 3
Id : 1209, {_}: or ?1836 falsehood =>= ?1836 [1836] by Super 8 with 919 at 3
Id : 908, {_}: and_star falsehood ?1392 =<= not (or truth (not ?1392)) [1392] by Super 157 with 900 at 1,1,3
Id : 916, {_}: and_star falsehood ?1392 =>= not truth [1392] by Demod 908 with 621 at 1,3
Id : 917, {_}: and_star falsehood ?1392 =>= falsehood [1392] by Demod 916 with 17 at 3
Id : 1175, {_}: xor falsehood ?1822 =<= or falsehood (and_star (not falsehood) ?1822) [1822] by Super 163 with 917 at 1,3
Id : 1182, {_}: xor falsehood ?1822 =<= or falsehood (and_star truth ?1822) [1822] by Demod 1175 with 900 at 1,2,3
Id : 907, {_}: and_star ?1390 falsehood =<= not (or (not ?1390) truth) [1390] by Super 157 with 900 at 2,1,3
Id : 913, {_}: and_star ?1390 falsehood =<= not (or truth (not ?1390)) [1390] by Demod 907 with 8 at 1,3
Id : 914, {_}: and_star ?1390 falsehood =>= not truth [1390] by Demod 913 with 621 at 1,3
Id : 915, {_}: and_star ?1390 falsehood =>= falsehood [1390] by Demod 914 with 17 at 3
Id : 1144, {_}: xor ?1792 falsehood =<= or (and_star ?1792 (not falsehood)) falsehood [1792] by Super 163 with 915 at 2,3
Id : 1161, {_}: xor ?1792 falsehood =<= or falsehood (and_star ?1792 (not falsehood)) [1792] by Demod 1144 with 8 at 3
Id : 1162, {_}: xor ?1792 falsehood =<= or falsehood (and_star ?1792 truth) [1792] by Demod 1161 with 900 at 2,2,3
Id : 1257, {_}: xor ?1792 falsehood =>= and_star ?1792 truth [1792] by Demod 1162 with 919 at 3
Id : 1258, {_}: xor falsehood ?1880 =>= and_star ?1880 truth [1880] by Super 13 with 1257 at 3
Id : 1283, {_}: and_star ?1822 truth =<= or falsehood (and_star truth ?1822) [1822] by Demod 1182 with 1258 at 2
Id : 1284, {_}: and_star ?1822 truth =?= and_star truth ?1822 [1822] by Demod 1283 with 919 at 3
Id : 170, {_}: and_star truth ?412 =<= not (or falsehood (not ?412)) [412] by Super 157 with 17 at 1,1,3
Id : 1193, {_}: and_star truth ?412 =>= not (not ?412) [412] by Demod 170 with 919 at 1,3
Id : 1285, {_}: and_star ?1822 truth =>= not (not ?1822) [1822] by Demod 1284 with 1193 at 3
Id : 158, {_}: and_star (and ?27 ?28) ?29 =<= and ?27 (and ?28 ?29) [29, 28, 27] by Demod 10 with 154 at 2
Id : 159, {_}: and_star (and ?27 ?28) ?29 =?= and_star ?27 (and ?28 ?29) [29, 28, 27] by Demod 158 with 154 at 3
Id : 160, {_}: and_star (and_star ?27 ?28) ?29 =?= and_star ?27 (and ?28 ?29) [29, 28, 27] by Demod 159 with 154 at 1,2
Id : 161, {_}: and_star (and_star ?27 ?28) ?29 =>= and_star ?27 (and_star ?28 ?29) [29, 28, 27] by Demod 160 with 154 at 2,3
Id : 1290, {_}: and_star (not (not ?1909)) ?1910 =>= and_star ?1909 (and_star truth ?1910) [1910, 1909] by Super 161 with 1285 at 1,2
Id : 1306, {_}: and_star (not (not ?1909)) ?1910 =>= and_star ?1909 (not (not ?1910)) [1910, 1909] by Demod 1290 with 1193 at 2,3
Id : 1659, {_}: and_star ?2411 (not (not truth)) =>= not (not (not (not ?2411))) [2411] by Super 1285 with 1306 at 2
Id : 1669, {_}: and_star ?2411 (not falsehood) =>= not (not (not (not ?2411))) [2411] by Demod 1659 with 17 at 1,2,2
Id : 1670, {_}: and_star ?2411 truth =>= not (not (not (not ?2411))) [2411] by Demod 1669 with 900 at 2,2
Id : 1671, {_}: not (not ?2411) =<= not (not (not (not ?2411))) [2411] by Demod 1670 with 1285 at 2
Id : 1703, {_}: or (not (not (not ?2451))) ?2452 =<= implies (not (not ?2451)) ?2452 [2452, 2451] by Super 6 with 1671 at 1,3
Id : 1722, {_}: or (not (not (not ?2451))) ?2452 =>= or (not ?2451) ?2452 [2452, 2451] by Demod 1703 with 6 at 3
Id : 1999, {_}: or (not ?2759) falsehood =>= not (not (not ?2759)) [2759] by Super 1209 with 1722 at 2
Id : 2014, {_}: or falsehood (not ?2759) =>= not (not (not ?2759)) [2759] by Demod 1999 with 8 at 2
Id : 2015, {_}: not ?2759 =<= not (not (not ?2759)) [2759] by Demod 2014 with 919 at 2
Id : 2063, {_}: or (not (not ?2816)) ?2817 =<= implies (not ?2816) ?2817 [2817, 2816] by Super 6 with 2015 at 1,3
Id : 2088, {_}: or (not (not ?2816)) ?2817 =>= or ?2816 ?2817 [2817, 2816] by Demod 2063 with 6 at 3
Id : 2169, {_}: or ?2929 falsehood =>= not (not ?2929) [2929] by Super 1209 with 2088 at 2
Id : 2202, {_}: ?2929 =<= not (not ?2929) [2929] by Demod 2169 with 1209 at 2
Id : 2232, {_}: and_star ?2997 (not ?2998) =<= not (or (not ?2997) ?2998) [2998, 2997] by Super 157 with 2202 at 2,1,3
Id : 2716, {_}: or (not ?3623) ?3624 =>= not (and_star ?3623 (not ?3624)) [3624, 3623] by Super 2202 with 2232 at 1,3
Id : 2722, {_}: or ?3642 ?3643 =>= not (and_star (not ?3642) (not ?3643)) [3643, 3642] by Super 2716 with 2202 at 1,2
Id : 2787, {_}: xor ?34 ?35 =>= not (and_star (not (and_star ?34 (not ?35))) (not (and_star (not ?34) ?35))) [35, 34] by Demod 163 with 2722 at 3
Id : 2819, {_}: not (and_star (not (and_star ?37 (not ?38))) (not (and_star (not ?37) ?38))) =<= xor ?38 ?37 [38, 37] by Demod 13 with 2787 at 2
Id : 2820, {_}: not (and_star (not (and_star ?37 (not ?38))) (not (and_star (not ?37) ?38))) =?= not (and_star (not (and_star ?38 (not ?37))) (not (and_star (not ?38) ?37))) [38, 37] by Demod 2819 with 2787 at 3
Id : 2785, {_}: not (and_star (not ?21) (not ?22)) =<= or ?22 ?21 [22, 21] by Demod 8 with 2722 at 2
Id : 2786, {_}: not (and_star (not ?21) (not ?22)) =?= not (and_star (not ?22) (not ?21)) [22, 21] by Demod 2785 with 2722 at 3
Id : 155, {_}: and_star ?31 ?32 =<= and ?32 ?31 [32, 31] by Demod 11 with 154 at 2
Id : 156, {_}: and_star ?31 ?32 =?= and_star ?32 ?31 [32, 31] by Demod 155 with 154 at 3
Id : 2226, {_}: and_star truth ?412 =>= ?412 [412] by Demod 1193 with 2202 at 3
Id : 2228, {_}: and_star ?1822 truth =>= ?1822 [1822] by Demod 1285 with 2202 at 3
Id : 2921, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) === not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) [] by Demod 2920 with 156 at 1,1,1,3
Id : 2920, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) =<= not (and_star (not (and_star y x)) (not (and_star (not x) (not y)))) [] by Demod 2919 with 2786 at 2,1,3
Id : 2919, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) =<= not (and_star (not (and_star y x)) (not (and_star (not y) (not x)))) [] by Demod 2918 with 2228 at 2,1,1,1,3
Id : 2918, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) =<= not (and_star (not (and_star y (and_star x truth))) (not (and_star (not y) (not x)))) [] by Demod 2917 with 2228 at 1,2,1,2,1,3
Id : 2917, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) =<= not (and_star (not (and_star y (and_star x truth))) (not (and_star (not y) (not (and_star x truth))))) [] by Demod 2916 with 900 at 2,2,1,1,1,3
Id : 2916, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not y)))) =<= not (and_star (not (and_star y (and_star x (not falsehood)))) (not (and_star (not y) (not (and_star x truth))))) [] by Demod 2915 with 2228 at 1,2,1,2,1,2
Id : 2915, {_}: not (and_star (not (and_star x y)) (not (and_star (not x) (not (and_star y truth))))) =<= not (and_star (not (and_star y (and_star x (not falsehood)))) (not (and_star (not y) (not (and_star x truth))))) [] by Demod 2914 with 2228 at 2,1,1,1,2
Id : 2914, {_}: not (and_star (not (and_star x (and_star y truth))) (not (and_star (not x) (not (and_star y truth))))) =<= not (and_star (not (and_star y (and_star x (not falsehood)))) (not (and_star (not y) (not (and_star x truth))))) [] by Demod 2913 with 2786 at 3
Id : 2913, {_}: not (and_star (not (and_star x (and_star y truth))) (not (and_star (not x) (not (and_star y truth))))) =<= not (and_star (not (and_star (not y) (not (and_star x truth)))) (not (and_star y (and_star x (not falsehood))))) [] by Demod 2912 with 900 at 2,1,2,1,2,1,2
Id : 2912, {_}: not (and_star (not (and_star x (and_star y truth))) (not (and_star (not x) (not (and_star y (not falsehood)))))) =<= not (and_star (not (and_star (not y) (not (and_star x truth)))) (not (and_star y (and_star x (not falsehood))))) [] by Demod 2911 with 900 at 2,2,1,1,1,2
Id : 2911, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star y (not falsehood)))))) =<= not (and_star (not (and_star (not y) (not (and_star x truth)))) (not (and_star y (and_star x (not falsehood))))) [] by Demod 2910 with 917 at 1,2,2,1,2,1,3
Id : 2910, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star y (not falsehood)))))) =<= not (and_star (not (and_star (not y) (not (and_star x truth)))) (not (and_star y (and_star x (not (and_star falsehood x)))))) [] by Demod 2909 with 2202 at 1,2,1,2,1,3
Id : 2909, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star y (not falsehood)))))) =<= not (and_star (not (and_star (not y) (not (and_star x truth)))) (not (and_star y (and_star (not (not x)) (not (and_star falsehood x)))))) [] by Demod 2908 with 900 at 2,1,2,1,1,1,3
Id : 2908, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star y (not falsehood)))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not falsehood))))) (not (and_star y (and_star (not (not x)) (not (and_star falsehood x)))))) [] by Demod 2907 with 917 at 1,2,1,2,1,2,1,2
Id : 2907, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star y (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not falsehood))))) (not (and_star y (and_star (not (not x)) (not (and_star falsehood x)))))) [] by Demod 2906 with 2202 at 1,1,2,1,2,1,2
Id : 2906, {_}: not (and_star (not (and_star x (and_star y (not falsehood)))) (not (and_star (not x) (not (and_star (not (not y)) (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not falsehood))))) (not (and_star y (and_star (not (not x)) (not (and_star falsehood x)))))) [] by Demod 2905 with 917 at 1,2,2,1,1,1,2
Id : 2905, {_}: not (and_star (not (and_star x (and_star y (not (and_star falsehood y))))) (not (and_star (not x) (not (and_star (not (not y)) (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not falsehood))))) (not (and_star y (and_star (not (not x)) (not (and_star falsehood x)))))) [] by Demod 2904 with 156 at 2,1,2,1,3
Id : 2904, {_}: not (and_star (not (and_star x (and_star y (not (and_star falsehood y))))) (not (and_star (not x) (not (and_star (not (not y)) (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not falsehood))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (not x)))))) [] by Demod 2903 with 917 at 1,2,1,2,1,1,1,3
Id : 2903, {_}: not (and_star (not (and_star x (and_star y (not (and_star falsehood y))))) (not (and_star (not x) (not (and_star (not (not y)) (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star x (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (not x)))))) [] by Demod 2902 with 2202 at 1,1,2,1,1,1,3
Id : 2902, {_}: not (and_star (not (and_star x (and_star y (not (and_star falsehood y))))) (not (and_star (not x) (not (and_star (not (not y)) (not (and_star falsehood y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (not x)) (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (not x)))))) [] by Demod 2901 with 2786 at 2,1,2,1,2
Id : 2901, {_}: not (and_star (not (and_star x (and_star y (not (and_star falsehood y))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (not y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (not x)) (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (not x)))))) [] by Demod 2900 with 156 at 1,2,2,1,1,1,2
Id : 2900, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (not y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (not x)) (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (not x)))))) [] by Demod 2899 with 2226 at 1,2,2,1,2,1,3
Id : 2899, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (not y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (not x)) (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star falsehood x)) (not (and_star truth (not x))))))) [] by Demod 2898 with 156 at 1,1,2,1,2,1,3
Id : 2898, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (not y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (not x)) (not (and_star falsehood x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2897 with 2786 at 2,1,1,1,3
Id : 2897, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (not y))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2896 with 2226 at 1,2,1,2,1,2,1,2
Id : 2896, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star falsehood y)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2895 with 156 at 1,1,1,2,1,2,1,2
Id : 2895, {_}: not (and_star (not (and_star x (and_star y (not (and_star y falsehood))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2894 with 17 at 2,1,2,2,1,1,1,2
Id : 2894, {_}: not (and_star (not (and_star x (and_star y (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2893 with 2202 at 1,2,1,1,1,2
Id : 2893, {_}: not (and_star (not (and_star x (and_star (not (not y)) (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) [] by Demod 2892 with 156 at 1,2,2,1,2,1,3
Id : 2892, {_}: not (and_star (not (and_star x (and_star (not (not y)) (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x falsehood)) (not (and_star (not x) truth)))))) [] by Demod 2891 with 17 at 2,1,1,2,1,2,1,3
Id : 2891, {_}: not (and_star (not (and_star x (and_star (not (not y)) (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (not x)))))) (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth)))))) [] by Demod 2890 with 2226 at 1,2,1,2,1,1,1,3
Id : 2890, {_}: not (and_star (not (and_star x (and_star (not (not y)) (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star falsehood x)) (not (and_star truth (not x))))))) (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth)))))) [] by Demod 2889 with 156 at 1,1,1,2,1,1,1,3
Id : 2889, {_}: not (and_star (not (and_star x (and_star (not (not y)) (not (and_star y (not truth)))))) (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y)))))))) =<= not (and_star (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth)))))) [] by Demod 2888 with 2786 at 2
Id : 2888, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y))))))) (not (and_star x (and_star (not (not y)) (not (and_star y (not truth))))))) =>= not (and_star (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x))))))) (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth)))))) [] by Demod 2887 with 2786 at 3
Id : 2887, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y))))))) (not (and_star x (and_star (not (not y)) (not (and_star y (not truth))))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x)))))))) [] by Demod 2886 with 156 at 1,2,2,1,2,1,2
Id : 2886, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y))))))) (not (and_star x (and_star (not (not y)) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x)))))))) [] by Demod 2885 with 2226 at 1,1,2,1,2,1,2
Id : 2885, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star truth (not y))))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x)))))))) [] by Demod 2884 with 156 at 1,2,1,2,1,1,1,2
Id : 2884, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y falsehood)) (not (and_star (not y) truth)))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x)))))))) [] by Demod 2883 with 17 at 2,1,1,1,2,1,1,1,2
Id : 2883, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth)))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star truth (not x)))))))) [] by Demod 2882 with 156 at 1,2,1,2,1,2,1,3
Id : 2882, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth)))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x falsehood)) (not (and_star (not x) truth))))))) [] by Demod 2881 with 17 at 2,1,1,1,2,1,2,1,3
Id : 2881, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth)))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))) (not (and_star (not y) (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) [] by Demod 2880 with 2202 at 2,1,1,1,3
Id : 2880, {_}: not (and_star (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth)))))) (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y)))))) =>= not (and_star (not (and_star y (not (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) (not (and_star (not y) (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) [] by Demod 2879 with 2786 at 2
Id : 2879, {_}: not (and_star (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))) (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth))))))) =>= not (and_star (not (and_star y (not (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) (not (and_star (not y) (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) [] by Demod 2878 with 2787 at 2,1,2,1,3
Id : 2878, {_}: not (and_star (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))) (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth))))))) =<= not (and_star (not (and_star y (not (not (and_star (not (and_star x (not truth))) (not (and_star (not x) truth))))))) (not (and_star (not y) (xor x truth)))) [] by Demod 2877 with 2787 at 1,2,1,1,1,3
Id : 2877, {_}: not (and_star (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))) (not (and_star (not x) (not (and_star (not (and_star y (not truth))) (not (and_star (not y) truth))))))) =<= not (and_star (not (and_star y (not (xor x truth)))) (not (and_star (not y) (xor x truth)))) [] by Demod 2876 with 2820 at 2,1,2,1,2
Id : 2876, {_}: not (and_star (not (and_star x (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))) (not (and_star (not x) (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) =<= not (and_star (not (and_star y (not (xor x truth)))) (not (and_star (not y) (xor x truth)))) [] by Demod 2875 with 2202 at 2,1,1,1,2
Id : 2875, {_}: not (and_star (not (and_star x (not (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) (not (and_star (not x) (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) =<= not (and_star (not (and_star y (not (xor x truth)))) (not (and_star (not y) (xor x truth)))) [] by Demod 2874 with 2820 at 3
Id : 2874, {_}: not (and_star (not (and_star x (not (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) (not (and_star (not x) (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) =<= not (and_star (not (and_star (xor x truth) (not y))) (not (and_star (not (xor x truth)) y))) [] by Demod 2873 with 2787 at 2,1,2,1,2
Id : 2873, {_}: not (and_star (not (and_star x (not (not (and_star (not (and_star truth (not y))) (not (and_star (not truth) y))))))) (not (and_star (not x) (xor truth y)))) =>= not (and_star (not (and_star (xor x truth) (not y))) (not (and_star (not (xor x truth)) y))) [] by Demod 2872 with 2787 at 1,2,1,1,1,2
Id : 2872, {_}: not (and_star (not (and_star x (not (xor truth y)))) (not (and_star (not x) (xor truth y)))) =>= not (and_star (not (and_star (xor x truth) (not y))) (not (and_star (not (xor x truth)) y))) [] by Demod 2871 with 2787 at 3
Id : 2871, {_}: not (and_star (not (and_star x (not (xor truth y)))) (not (and_star (not x) (xor truth y)))) =<= xor (xor x truth) y [] by Demod 1 with 2787 at 2
Id :   1, {_}: xor x (xor truth y) =<= xor (xor x truth) y [] by prove_alternative_wajsberg_axiom
% SZS output end CNFRefutation for LCL159-1.p
24162: solved LCL159-1.p in 4.49628 using lpo
24162: status Unsatisfiable for LCL159-1.p
NO CLASH, using fixed ground order
24168: Facts:
24168:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24168:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24168:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24168:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24168:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24168:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24168:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24168:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24168:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24168:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24168:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24168:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
NO CLASH, using fixed ground order
24169: Facts:
24169:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24169:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24169:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24169:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24169:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24169:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24169:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24169:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24169:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24169:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24169:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24169:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24169:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24169:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24169:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24169: Goal:
24169:  Id :   1, {_}:
          associator x y (add u v)
          =>=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
24169: Order:
24169:   lpo
24169: Leaf order:
24169:  u 2 0 2 1,3,2
24169:  v 2 0 2 2,3,2
24169:  x 3 0 3 1,2
24169:  y 3 0 3 2,2
24169:  additive_identity 8 0 0 
24169:  additive_inverse 6 1 0 
24169:  commutator 1 2 0 
24169:  add 18 2 2 0,3,2
24169:  multiply 22 2 0 
24169:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
24167: Facts:
24167:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24167:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24167:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24167:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24167:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24167:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24167:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24167:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24167:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24167:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24167:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24167:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24167:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24167:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24167:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24167: Goal:
24167:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
24167: Order:
24167:   nrkbo
24167: Leaf order:
24167:  u 2 0 2 1,3,2
24167:  v 2 0 2 2,3,2
24167:  x 3 0 3 1,2
24167:  y 3 0 3 2,2
24167:  additive_identity 8 0 0 
24167:  additive_inverse 6 1 0 
24167:  commutator 1 2 0 
24167:  add 18 2 2 0,3,2
24167:  multiply 22 2 0 
24167:  associator 4 3 3 0,2
24168:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24168:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24168:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24168: Goal:
24168:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
24168: Order:
24168:   kbo
24168: Leaf order:
24168:  u 2 0 2 1,3,2
24168:  v 2 0 2 2,3,2
24168:  x 3 0 3 1,2
24168:  y 3 0 3 2,2
24168:  additive_identity 8 0 0 
24168:  additive_inverse 6 1 0 
24168:  commutator 1 2 0 
24168:  add 18 2 2 0,3,2
24168:  multiply 22 2 0 
24168:  associator 4 3 3 0,2
% SZS status Timeout for RNG019-6.p
NO CLASH, using fixed ground order
24186: Facts:
24186:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24186:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24186:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24186:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24186:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24186:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24186:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24186:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24186:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24186:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24186:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24186:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24186:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24186:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24186:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24186: Goal:
24186:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
24186: Order:
24186:   kbo
24186: Leaf order:
24186:  u 2 0 2 1,1,2
24186:  v 2 0 2 2,1,2
24186:  x 3 0 3 2,2
24186:  y 3 0 3 3,2
24186:  additive_identity 8 0 0 
24186:  additive_inverse 6 1 0 
24186:  commutator 1 2 0 
24186:  add 18 2 2 0,1,2
24186:  multiply 22 2 0 
24186:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
24185: Facts:
24185:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24185:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24185:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24185:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24185:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24185:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24185:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24185:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24185:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24185:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24185:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24185:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24185:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24185:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24185:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24185: Goal:
24185:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
24185: Order:
24185:   nrkbo
24185: Leaf order:
24185:  u 2 0 2 1,1,2
24185:  v 2 0 2 2,1,2
24185:  x 3 0 3 2,2
24185:  y 3 0 3 3,2
24185:  additive_identity 8 0 0 
24185:  additive_inverse 6 1 0 
24185:  commutator 1 2 0 
24185:  add 18 2 2 0,1,2
24185:  multiply 22 2 0 
24185:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
24187: Facts:
24187:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24187:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24187:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24187:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24187:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24187:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24187:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24187:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24187:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24187:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24187:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24187:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24187:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24187:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24187:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24187: Goal:
24187:  Id :   1, {_}:
          associator (add u v) x y
          =>=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
24187: Order:
24187:   lpo
24187: Leaf order:
24187:  u 2 0 2 1,1,2
24187:  v 2 0 2 2,1,2
24187:  x 3 0 3 2,2
24187:  y 3 0 3 3,2
24187:  additive_identity 8 0 0 
24187:  additive_inverse 6 1 0 
24187:  commutator 1 2 0 
24187:  add 18 2 2 0,1,2
24187:  multiply 22 2 0 
24187:  associator 4 3 3 0,2
% SZS status Timeout for RNG021-6.p
NO CLASH, using fixed ground order
24214: Facts:
24214:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24214:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24214:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24214:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24214:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24214:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24214:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24214:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24214:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24214:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24214:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24214:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24214:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24214:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24214:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24214: Goal:
24214:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
24214: Order:
24214:   nrkbo
24214: Leaf order:
24214:  y 1 0 1 2,2
24214:  x 2 0 2 1,2
24214:  additive_identity 9 0 1 3
24214:  additive_inverse 6 1 0 
24214:  commutator 1 2 0 
24214:  add 16 2 0 
24214:  multiply 22 2 0 
24214:  associator 2 3 1 0,2
NO CLASH, using fixed ground order
24215: Facts:
24215:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24215:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24215:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24215:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24215:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24215:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24215:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24215:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24215:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24215:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24215:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24215:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24215:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24215:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24215:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24215: Goal:
24215:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
24215: Order:
24215:   kbo
24215: Leaf order:
24215:  y 1 0 1 2,2
24215:  x 2 0 2 1,2
24215:  additive_identity 9 0 1 3
24215:  additive_inverse 6 1 0 
24215:  commutator 1 2 0 
24215:  add 16 2 0 
24215:  multiply 22 2 0 
24215:  associator 2 3 1 0,2
NO CLASH, using fixed ground order
24216: Facts:
24216:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24216:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24216:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24216:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24216:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24216:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24216:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24216:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24216:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24216:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24216:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24216:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24216:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24216:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24216:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24216: Goal:
24216:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
24216: Order:
24216:   lpo
24216: Leaf order:
24216:  y 1 0 1 2,2
24216:  x 2 0 2 1,2
24216:  additive_identity 9 0 1 3
24216:  additive_inverse 6 1 0 
24216:  commutator 1 2 0 
24216:  add 16 2 0 
24216:  multiply 22 2 0 
24216:  associator 2 3 1 0,2
% SZS status Timeout for RNG025-6.p
NO CLASH, using fixed ground order
24240: Facts:
24240:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
24240:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
24240:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
24240:  Id :   5, {_}: add c c =>= c [] by idempotence
24240: Goal:
24240:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
24240: Order:
24240:   kbo
24240: Leaf order:
24240:  a 2 0 2 1,1,1,2
24240:  c 3 0 0 
24240:  b 3 0 3 1,2,1,1,2
24240:  negate 9 1 5 0,1,2
24240:  add 13 2 3 0,2
NO CLASH, using fixed ground order
24239: Facts:
24239:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
24239:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
24239:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
24239:  Id :   5, {_}: add c c =>= c [] by idempotence
24239: Goal:
24239:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
24239: Order:
24239:   nrkbo
24239: Leaf order:
24239:  a 2 0 2 1,1,1,2
24239:  c 3 0 0 
24239:  b 3 0 3 1,2,1,1,2
24239:  negate 9 1 5 0,1,2
24239:  add 13 2 3 0,2
NO CLASH, using fixed ground order
24241: Facts:
24241:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
24241:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
24241:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
24241:  Id :   5, {_}: add c c =>= c [] by idempotence
24241: Goal:
24241:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
24241: Order:
24241:   lpo
24241: Leaf order:
24241:  a 2 0 2 1,1,1,2
24241:  c 3 0 0 
24241:  b 3 0 3 1,2,1,1,2
24241:  negate 9 1 5 0,1,2
24241:  add 13 2 3 0,2
% SZS status Timeout for ROB005-1.p
NO CLASH, using fixed ground order
24337: Facts:
24337:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
24337:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
24337:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
24337:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
24337: Goal:
24337:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
24337: Order:
24337:   nrkbo
24337: Leaf order:
24337:  y 1 0 1 1,2
24337:  x 3 0 3 2,2
24337:  inverse 2 1 0 
24337:  multiply 9 3 1 0,2
NO CLASH, using fixed ground order
24338: Facts:
24338:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
24338:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
24338:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
24338:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
24338: Goal:
24338:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
24338: Order:
24338:   kbo
24338: Leaf order:
24338:  y 1 0 1 1,2
24338:  x 3 0 3 2,2
24338:  inverse 2 1 0 
24338:  multiply 9 3 1 0,2
NO CLASH, using fixed ground order
24339: Facts:
24339:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
24339:  Id :   3, {_}: multiply ?8 ?8 ?9 =>= ?8 [9, 8] by ternary_multiply_2 ?8 ?9
24339:  Id :   4, {_}:
          multiply (inverse ?11) ?11 ?12 =>= ?12
          [12, 11] by left_inverse ?11 ?12
24339:  Id :   5, {_}:
          multiply ?14 ?15 (inverse ?15) =>= ?14
          [15, 14] by right_inverse ?14 ?15
24339: Goal:
24339:  Id :   1, {_}: multiply y x x =>= x [] by prove_ternary_multiply_1_independant
24339: Order:
24339:   lpo
24339: Leaf order:
24339:  y 1 0 1 1,2
24339:  x 3 0 3 2,2
24339:  inverse 2 1 0 
24339:  multiply 9 3 1 0,2
% SZS status Timeout for BOO019-1.p
CLASH, statistics insufficient
25312: Facts:
25312:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25312:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25312:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
25312:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
25312:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
25312:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
25312: Goal:
25312:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25312: Order:
25312:   nrkbo
25312: Leaf order:
25312:  a 2 0 2 1,1,2
25312:  inverse 3 1 2 0,2
25312:  multiply 11 2 0 
25312:  add 11 2 0 
CLASH, statistics insufficient
25313: Facts:
25313:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25313:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25313:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
25313:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
25313:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
25313:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
25313: Goal:
25313:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25313: Order:
25313:   kbo
25313: Leaf order:
25313:  a 2 0 2 1,1,2
25313:  inverse 3 1 2 0,2
25313:  multiply 11 2 0 
25313:  add 11 2 0 
CLASH, statistics insufficient
25314: Facts:
25314:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25314:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25314:  Id :   4, {_}:
          multiply (add ?10 ?11) (add ?10 (inverse ?11)) =>= ?10
          [11, 10] by b1 ?10 ?11
25314:  Id :   5, {_}:
          multiply (add (multiply ?13 ?14) ?13) (add ?13 ?14) =>= ?13
          [14, 13] by majority1 ?13 ?14
25314:  Id :   6, {_}:
          multiply (add (multiply ?16 ?16) ?17) (add ?16 ?16) =>= ?16
          [17, 16] by majority2 ?16 ?17
25314:  Id :   7, {_}:
          multiply (add (multiply ?19 ?20) ?20) (add ?19 ?20) =>= ?20
          [20, 19] by majority3 ?19 ?20
25314: Goal:
25314:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25314: Order:
25314:   lpo
25314: Leaf order:
25314:  a 2 0 2 1,1,2
25314:  inverse 3 1 2 0,2
25314:  multiply 11 2 0 
25314:  add 11 2 0 
% SZS status Timeout for BOO030-1.p
CLASH, statistics insufficient
25341: Facts:
25341:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25341:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25341:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
25341:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
25341:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
25341:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
25341:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
25341:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
25341:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
25341:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
25341:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
25341:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
25341: Goal:
25341:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25341: Order:
25341:   nrkbo
25341: Leaf order:
25341:  a 2 0 2 1,1,2
25341:  inverse 4 1 2 0,2
25341:  multiply 21 2 0 
25341:  add 21 2 0 
CLASH, statistics insufficient
25342: Facts:
25342:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25342:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25342:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
25342:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
25342:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
25342:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
25342:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
25342:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
25342:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
25342:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
25342:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
25342:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
25342: Goal:
25342:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25342: Order:
25342:   kbo
25342: Leaf order:
25342:  a 2 0 2 1,1,2
25342:  inverse 4 1 2 0,2
25342:  multiply 21 2 0 
25342:  add 21 2 0 
CLASH, statistics insufficient
25343: Facts:
25343:  Id :   2, {_}:
          add ?2 (multiply ?3 (multiply ?2 ?4)) =>= ?2
          [4, 3, 2] by l1 ?2 ?3 ?4
25343:  Id :   3, {_}:
          add (add (multiply ?6 ?7) (multiply ?7 ?8)) ?7 =>= ?7
          [8, 7, 6] by l3 ?6 ?7 ?8
25343:  Id :   4, {_}:
          multiply (add ?10 (inverse ?10)) ?11 =>= ?11
          [11, 10] by property3 ?10 ?11
25343:  Id :   5, {_}:
          multiply ?13 (add ?14 (add ?13 ?15)) =>= ?13
          [15, 14, 13] by l2 ?13 ?14 ?15
25343:  Id :   6, {_}:
          multiply (multiply (add ?17 ?18) (add ?18 ?19)) ?18 =>= ?18
          [19, 18, 17] by l4 ?17 ?18 ?19
25343:  Id :   7, {_}:
          add (multiply ?21 (inverse ?21)) ?22 =>= ?22
          [22, 21] by property3_dual ?21 ?22
25343:  Id :   8, {_}:
          add (multiply (add ?24 ?25) ?24) (multiply ?24 ?25) =>= ?24
          [25, 24] by majority1 ?24 ?25
25343:  Id :   9, {_}:
          add (multiply (add ?27 ?27) ?28) (multiply ?27 ?27) =>= ?27
          [28, 27] by majority2 ?27 ?28
25343:  Id :  10, {_}:
          add (multiply (add ?30 ?31) ?31) (multiply ?30 ?31) =>= ?31
          [31, 30] by majority3 ?30 ?31
25343:  Id :  11, {_}:
          multiply (add (multiply ?33 ?34) ?33) (add ?33 ?34) =>= ?33
          [34, 33] by majority1_dual ?33 ?34
25343:  Id :  12, {_}:
          multiply (add (multiply ?36 ?36) ?37) (add ?36 ?36) =>= ?36
          [37, 36] by majority2_dual ?36 ?37
25343:  Id :  13, {_}:
          multiply (add (multiply ?39 ?40) ?40) (add ?39 ?40) =>= ?40
          [40, 39] by majority3_dual ?39 ?40
25343: Goal:
25343:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25343: Order:
25343:   lpo
25343: Leaf order:
25343:  a 2 0 2 1,1,2
25343:  inverse 4 1 2 0,2
25343:  multiply 21 2 0 
25343:  add 21 2 0 
% SZS status Timeout for BOO032-1.p
NO CLASH, using fixed ground order
25370: Facts:
25370:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
25370:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
25370:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
25370:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
25370:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
25370:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
25370:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
25370: Goal:
25370:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25370: Order:
25370:   nrkbo
25370: Leaf order:
25370:  a 2 0 2 1,1,2
25370:  inverse 3 1 2 0,2
25370:  add 15 2 0 multiply
25370:  multiply 16 2 0 add
NO CLASH, using fixed ground order
25371: Facts:
25371:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
25371:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
25371:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
25371:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
25371:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
25371:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
25371:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
25371: Goal:
25371:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25371: Order:
25371:   kbo
25371: Leaf order:
25371:  a 2 0 2 1,1,2
25371:  inverse 3 1 2 0,2
25371:  add 15 2 0 multiply
25371:  multiply 16 2 0 add
NO CLASH, using fixed ground order
25372: Facts:
25372:  Id :   2, {_}:
          add (multiply ?2 ?3) (add (multiply ?3 ?4) (multiply ?4 ?2))
          =<=
          multiply (add ?2 ?3) (multiply (add ?3 ?4) (add ?4 ?2))
          [4, 3, 2] by distributivity ?2 ?3 ?4
25372:  Id :   3, {_}:
          add ?6 (multiply ?7 (multiply ?6 ?8)) =>= ?6
          [8, 7, 6] by l1 ?6 ?7 ?8
25372:  Id :   4, {_}:
          add (add (multiply ?10 ?11) (multiply ?11 ?12)) ?11 =>= ?11
          [12, 11, 10] by l3 ?10 ?11 ?12
25372:  Id :   5, {_}:
          multiply (add ?14 (inverse ?14)) ?15 =>= ?15
          [15, 14] by property3 ?14 ?15
25372:  Id :   6, {_}:
          multiply (add (multiply ?17 ?18) ?17) (add ?17 ?18) =>= ?17
          [18, 17] by majority1 ?17 ?18
25372:  Id :   7, {_}:
          multiply (add (multiply ?20 ?20) ?21) (add ?20 ?20) =>= ?20
          [21, 20] by majority2 ?20 ?21
25372:  Id :   8, {_}:
          multiply (add (multiply ?23 ?24) ?24) (add ?23 ?24) =>= ?24
          [24, 23] by majority3 ?23 ?24
25372: Goal:
25372:  Id :   1, {_}: inverse (inverse a) =>= a [] by prove_inverse_involution
25372: Order:
25372:   lpo
25372: Leaf order:
25372:  a 2 0 2 1,1,2
25372:  inverse 3 1 2 0,2
25372:  add 15 2 0 multiply
25372:  multiply 16 2 0 add
% SZS status Timeout for BOO033-1.p
NO CLASH, using fixed ground order
25403: Facts:
25403:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
25403:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
25403:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
25403: Goal:
25403:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
25403: Order:
25403:   nrkbo
25403: Leaf order:
25403:  strong_fixed_point 3 0 2 1,2
25403:  fixed_pt 3 0 3 2,2
25403:  w 4 0 0 
25403:  b 7 0 0 
25403:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
25404: Facts:
25404:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
25404:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
25404:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
25404: Goal:
25404:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
25404: Order:
25404:   kbo
25404: Leaf order:
25404:  strong_fixed_point 3 0 2 1,2
25404:  fixed_pt 3 0 3 2,2
25404:  w 4 0 0 
25404:  b 7 0 0 
25404:  apply 20 2 3 0,2
NO CLASH, using fixed ground order
25405: Facts:
25405:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
25405:  Id :   3, {_}:
          apply (apply w ?6) ?7 =?= apply (apply ?6 ?7) ?7
          [7, 6] by w_definition ?6 ?7
25405:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply (apply b (apply w w))
            (apply (apply b (apply b w)) (apply (apply b b) b))
          [] by strong_fixed_point
25405: Goal:
25405:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
25405: Order:
25405:   lpo
25405: Leaf order:
25405:  strong_fixed_point 3 0 2 1,2
25405:  fixed_pt 3 0 3 2,2
25405:  w 4 0 0 
25405:  b 7 0 0 
25405:  apply 20 2 3 0,2
% SZS status Timeout for COL003-20.p
NO CLASH, using fixed ground order
25421: Facts:
25421:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
25421:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
25421: Goal:
25421:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
25421: Order:
25421:   nrkbo
25421: Leaf order:
25421:  x 3 0 3 2,1,2
25421:  y 3 0 3 2,2
25421:  s 7 0 6 1,1,1,1,2
25421:  k 8 0 7 1,2,1,1,1,2
25421:  apply 25 2 17 0,2
NO CLASH, using fixed ground order
25422: Facts:
25422:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
25422:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
25422: Goal:
25422:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
25422: Order:
25422:   kbo
25422: Leaf order:
25422:  x 3 0 3 2,1,2
25422:  y 3 0 3 2,2
25422:  s 7 0 6 1,1,1,1,2
25422:  k 8 0 7 1,2,1,1,1,2
25422:  apply 25 2 17 0,2
NO CLASH, using fixed ground order
25423: Facts:
25423:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
25423:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
25423: Goal:
25423:  Id :   1, {_}:
          apply
            (apply
              (apply (apply s (apply k (apply s (apply (apply s k) k))))
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)))
              x) y
          =>=
          apply y (apply (apply x x) y)
          [] by prove_u_combinator
25423: Order:
25423:   lpo
25423: Leaf order:
25423:  x 3 0 3 2,1,2
25423:  y 3 0 3 2,2
25423:  s 7 0 6 1,1,1,1,2
25423:  k 8 0 7 1,2,1,1,1,2
25423:  apply 25 2 17 0,2
Statistics :
Max weight : 29
Found proof, 0.116079s
% SZS status Unsatisfiable for COL004-3.p
% SZS output start CNFRefutation for COL004-3.p
Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
Id :   2, {_}: apply (apply (apply s ?2) ?3) ?4 =?= apply (apply ?2 ?4) (apply ?3 ?4) [4, 3, 2] by s_definition ?2 ?3 ?4
Id :  35, {_}: apply y (apply (apply x x) y) === apply y (apply (apply x x) y) [] by Demod 34 with 3 at 1,2
Id :  34, {_}: apply (apply (apply k y) (apply k y)) (apply (apply x x) y) =>= apply y (apply (apply x x) y) [] by Demod 33 with 2 at 1,2
Id :  33, {_}: apply (apply (apply (apply s k) k) y) (apply (apply x x) y) =>= apply y (apply (apply x x) y) [] by Demod 32 with 2 at 2
Id :  32, {_}: apply (apply (apply s (apply (apply s k) k)) (apply x x)) y =>= apply y (apply (apply x x) y) [] by Demod 31 with 3 at 2,2,1,2
Id :  31, {_}: apply (apply (apply s (apply (apply s k) k)) (apply x (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 30 with 3 at 1,2,1,2
Id :  30, {_}: apply (apply (apply s (apply (apply s k) k)) (apply (apply (apply k x) (apply k x)) (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 20 with 3 at 1,1,2
Id :  20, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply k x) (apply k x)) (apply (apply k x) (apply k x)))) y =>= apply y (apply (apply x x) y) [] by Demod 19 with 2 at 2,2,1,2
Id :  19, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply k x) (apply k x)) (apply (apply (apply s k) k) x))) y =>= apply y (apply (apply x x) y) [] by Demod 18 with 2 at 1,2,1,2
Id :  18, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply (apply s k) k) x) (apply (apply (apply s k) k) x))) y =>= apply y (apply (apply x x) y) [] by Demod 17 with 2 at 2,1,2
Id :  17, {_}: apply (apply (apply (apply k (apply s (apply (apply s k) k))) x) (apply (apply (apply s (apply (apply s k) k)) (apply (apply s k) k)) x)) y =>= apply y (apply (apply x x) y) [] by Demod 1 with 2 at 1,2
Id :   1, {_}: apply (apply (apply (apply s (apply k (apply s (apply (apply s k) k)))) (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))) x) y =>= apply y (apply (apply x x) y) [] by prove_u_combinator
% SZS output end CNFRefutation for COL004-3.p
25423: solved COL004-3.p in 0.020001 using lpo
25423: status Unsatisfiable for COL004-3.p
CLASH, statistics insufficient
25428: Facts:
25428:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25428:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
25428: Goal:
25428:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
25428: Order:
25428:   nrkbo
25428: Leaf order:
25428:  s 1 0 0 
25428:  w 1 0 0 
25428:  combinator 1 0 1 1,3
25428:  apply 11 2 1 0,3
CLASH, statistics insufficient
25429: Facts:
25429:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25429:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
25429: Goal:
25429:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
25429: Order:
25429:   kbo
25429: Leaf order:
25429:  s 1 0 0 
25429:  w 1 0 0 
25429:  combinator 1 0 1 1,3
25429:  apply 11 2 1 0,3
CLASH, statistics insufficient
25430: Facts:
25430:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25430:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
25430: Goal:
25430:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_model ?1
25430: Order:
25430:   lpo
25430: Leaf order:
25430:  s 1 0 0 
25430:  w 1 0 0 
25430:  combinator 1 0 1 1,3
25430:  apply 11 2 1 0,3
% SZS status Timeout for COL005-1.p
CLASH, statistics insufficient
25470: Facts:
25470:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25470:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
25470:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
25470: Goal:
CLASH, statistics insufficient
25471: Facts:
25471:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25471:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
25471:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
25471: Goal:
25471:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25471: Order:
25471:   kbo
25471: Leaf order:
25471:  b 1 0 0 
25471:  m 1 0 0 
25471:  v 1 0 0 
25471:  f 3 1 3 0,2,2
25471:  apply 15 2 3 0,2
25470:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25470: Order:
25470:   nrkbo
25470: Leaf order:
25470:  b 1 0 0 
25470:  m 1 0 0 
25470:  v 1 0 0 
25470:  f 3 1 3 0,2,2
25470:  apply 15 2 3 0,2
CLASH, statistics insufficient
25472: Facts:
25472:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25472:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
25472:  Id :   4, {_}:
          apply (apply (apply v ?9) ?10) ?11 =?= apply (apply ?11 ?9) ?10
          [11, 10, 9] by v_definition ?9 ?10 ?11
25472: Goal:
25472:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25472: Order:
25472:   lpo
25472: Leaf order:
25472:  b 1 0 0 
25472:  m 1 0 0 
25472:  v 1 0 0 
25472:  f 3 1 3 0,2,2
25472:  apply 15 2 3 0,2
Goal subsumed
Statistics :
Max weight : 78
Found proof, 6.291189s
% SZS status Unsatisfiable for COL038-1.p
% SZS output start CNFRefutation for COL038-1.p
Id :   4, {_}: apply (apply (apply v ?9) ?10) ?11 =>= apply (apply ?11 ?9) ?10 [11, 10, 9] by v_definition ?9 ?10 ?11
Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by m_definition ?7
Id :  19, {_}: apply (apply (apply v ?47) ?48) ?49 =>= apply (apply ?49 ?47) ?48 [49, 48, 47] by v_definition ?47 ?48 ?49
Id :   5, {_}: apply (apply (apply b ?13) ?14) ?15 =>= apply ?13 (apply ?14 ?15) [15, 14, 13] by b_definition ?13 ?14 ?15
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id :   6, {_}: apply ?17 (apply ?18 ?19) =?= apply ?17 (apply ?18 ?19) [19, 18, 17] by Super 5 with 2 at 2
Id : 1244, {_}: apply (apply m (apply v ?1596)) ?1597 =?= apply (apply ?1597 ?1596) (apply v ?1596) [1597, 1596] by Super 19 with 3 at 1,2
Id :  18, {_}: apply m (apply (apply v ?44) ?45) =<= apply (apply (apply (apply v ?44) ?45) ?44) ?45 [45, 44] by Super 3 with 4 at 3
Id : 224, {_}: apply m (apply (apply v ?485) ?486) =<= apply (apply (apply ?485 ?485) ?486) ?486 [486, 485] by Demod 18 with 4 at 1,3
Id : 232, {_}: apply m (apply (apply v ?509) ?510) =<= apply (apply (apply m ?509) ?510) ?510 [510, 509] by Super 224 with 3 at 1,1,3
Id : 7751, {_}: apply (apply m (apply v ?7787)) (apply (apply m ?7788) ?7787) =<= apply (apply m (apply (apply v ?7788) ?7787)) (apply v ?7787) [7788, 7787] by Super 1244 with 232 at 1,3
Id :   9, {_}: apply (apply (apply m b) ?24) ?25 =>= apply b (apply ?24 ?25) [25, 24] by Super 2 with 3 at 1,1,2
Id : 236, {_}: apply m (apply (apply v (apply v ?521)) ?522) =<= apply (apply (apply ?522 ?521) (apply v ?521)) ?522 [522, 521] by Super 224 with 4 at 1,3
Id : 2866, {_}: apply m (apply (apply v (apply v b)) m) =>= apply b (apply (apply v b) m) [] by Super 9 with 236 at 2
Id : 7790, {_}: apply (apply m (apply v m)) (apply (apply m (apply v b)) m) =>= apply (apply b (apply (apply v b) m)) (apply v m) [] by Super 7751 with 2866 at 1,3
Id :  20, {_}: apply (apply m (apply v ?51)) ?52 =?= apply (apply ?52 ?51) (apply v ?51) [52, 51] by Super 19 with 3 at 1,2
Id : 7860, {_}: apply (apply m (apply v m)) (apply (apply m b) (apply v b)) =>= apply (apply b (apply (apply v b) m)) (apply v m) [] by Demod 7790 with 20 at 2,2
Id :  11, {_}: apply m (apply (apply b ?30) ?31) =<= apply ?30 (apply ?31 (apply (apply b ?30) ?31)) [31, 30] by Super 2 with 3 at 2
Id : 9568, {_}: apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b)) (apply m (apply (apply b (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b))) m)) =?= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b)) (apply m (apply (apply b (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) b))) m)) [] by Super 9567 with 11 at 2
Id : 9567, {_}: apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m)) [8771] by Demod 9566 with 2 at 2,3
Id : 9566, {_}: apply m (apply (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) m) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m) [8771] by Demod 9565 with 2 at 2
Id : 9565, {_}: apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m) [8771] by Demod 9564 with 4 at 1,2,3
Id : 9564, {_}: apply (apply (apply b m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m) [8771] by Demod 9563 with 4 at 1,2
Id : 9563, {_}: apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m) [8771] by Demod 9562 with 4 at 2,3
Id : 9562, {_}: apply (apply (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) b) m =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))))) [8771] by Demod 9561 with 4 at 2
Id : 9561, {_}: apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))))) [8771] by Demod 9560 with 2 at 2,3
Id : 9560, {_}: apply (apply (apply v b) m) (apply (apply v m) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9559 with 2 at 2
Id : 9559, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9558 with 7860 at 1,2,3
Id : 9558, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9557 with 7860 at 2,1,1,1,3
Id : 9557, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9556 with 7860 at 2,1,1,2,2,2
Id : 9556, {_}: apply (apply (apply b (apply (apply v b) m)) (apply v m)) (apply ?8771 (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Demod 9078 with 7860 at 1,2
Id : 9078, {_}: apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771))) =<= apply (f (apply (apply b (apply (apply m (apply v m)) (apply (apply m b) (apply v b)))) ?8771)) (apply (apply (apply m (apply v m)) (apply (apply m b) (apply v b))) (apply ?8771 (f (apply (apply b (apply (apply b (apply (apply v b) m)) (apply v m))) ?8771)))) [8771] by Super 174 with 7860 at 2,1,1,2,2,2,3
Id : 174, {_}: apply (apply ?379 ?380) (apply ?381 (f (apply (apply b (apply ?379 ?380)) ?381))) =<= apply (f (apply (apply b (apply ?379 ?380)) ?381)) (apply (apply ?379 ?380) (apply ?381 (f (apply (apply b (apply ?379 ?380)) ?381)))) [381, 380, 379] by Super 8 with 6 at 1,1,2,2,2,3
Id :   8, {_}: apply ?21 (apply ?22 (f (apply (apply b ?21) ?22))) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Demod 7 with 2 at 2
Id :   7, {_}: apply (apply (apply b ?21) ?22) (f (apply (apply b ?21) ?22)) =<= apply (f (apply (apply b ?21) ?22)) (apply ?21 (apply ?22 (f (apply (apply b ?21) ?22)))) [22, 21] by Super 1 with 2 at 2,3
Id :   1, {_}: apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1)) [1] by prove_fixed_point ?1
% SZS output end CNFRefutation for COL038-1.p
25471: solved COL038-1.p in 3.192199 using kbo
25471: status Unsatisfiable for COL038-1.p
CLASH, statistics insufficient
25477: Facts:
25477:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25477:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25477:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
25477: Goal:
25477:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25477: Order:
25477:   nrkbo
25477: Leaf order:
25477:  s 1 0 0 
25477:  b 1 0 0 
25477:  m 1 0 0 
25477:  f 3 1 3 0,2,2
25477:  apply 16 2 3 0,2
CLASH, statistics insufficient
25478: Facts:
25478:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25478:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25478:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
25478: Goal:
25478:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25478: Order:
25478:   kbo
25478: Leaf order:
25478:  s 1 0 0 
25478:  b 1 0 0 
25478:  m 1 0 0 
25478:  f 3 1 3 0,2,2
25478:  apply 16 2 3 0,2
CLASH, statistics insufficient
25479: Facts:
25479:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25479:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25479:  Id :   4, {_}: apply m ?11 =?= apply ?11 ?11 [11] by m_definition ?11
25479: Goal:
25479:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25479: Order:
25479:   lpo
25479: Leaf order:
25479:  s 1 0 0 
25479:  b 1 0 0 
25479:  m 1 0 0 
25479:  f 3 1 3 0,2,2
25479:  apply 16 2 3 0,2
% SZS status Timeout for COL046-1.p
CLASH, statistics insufficient
25500: Facts:
25500:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
25500:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
25500: Goal:
25500:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
25500: Order:
25500:   nrkbo
25500: Leaf order:
25500:  l 1 0 0 
25500:  q 1 0 0 
25500:  f 3 1 3 0,2,2
25500:  apply 12 2 3 0,2
CLASH, statistics insufficient
25501: Facts:
25501:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
25501:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
25501: Goal:
25501:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
25501: Order:
25501:   kbo
25501: Leaf order:
25501:  l 1 0 0 
25501:  q 1 0 0 
25501:  f 3 1 3 0,2,2
25501:  apply 12 2 3 0,2
CLASH, statistics insufficient
25502: Facts:
25502:  Id :   2, {_}:
          apply (apply l ?3) ?4 =?= apply ?3 (apply ?4 ?4)
          [4, 3] by l_definition ?3 ?4
25502:  Id :   3, {_}:
          apply (apply (apply q ?6) ?7) ?8 =>= apply ?7 (apply ?6 ?8)
          [8, 7, 6] by q_definition ?6 ?7 ?8
25502: Goal:
25502:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_model ?1
25502: Order:
25502:   lpo
25502: Leaf order:
25502:  l 1 0 0 
25502:  q 1 0 0 
25502:  f 3 1 3 0,2,2
25502:  apply 12 2 3 0,2
% SZS status Timeout for COL047-1.p
CLASH, statistics insufficient
25526: Facts:
25526:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25526:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25526: Goal:
25526:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
25526: Order:
25526:   nrkbo
25526: Leaf order:
25526:  b 1 0 0 
25526:  t 1 0 0 
25526:  f 2 1 2 0,2,1,1,2
25526:  g 2 1 2 0,2,1,2
25526:  h 2 1 2 0,2,2
25526:  apply 13 2 5 0,2
CLASH, statistics insufficient
25527: Facts:
25527:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25527:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25527: Goal:
25527:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
25527: Order:
25527:   kbo
25527: Leaf order:
25527:  b 1 0 0 
25527:  t 1 0 0 
25527:  f 2 1 2 0,2,1,1,2
25527:  g 2 1 2 0,2,1,2
25527:  h 2 1 2 0,2,2
25527:  apply 13 2 5 0,2
CLASH, statistics insufficient
25528: Facts:
25528:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25528:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25528: Goal:
25528:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (g ?1) (apply (f ?1) (h ?1))
          [1] by prove_q_combinator ?1
25528: Order:
25528:   lpo
25528: Leaf order:
25528:  b 1 0 0 
25528:  t 1 0 0 
25528:  f 2 1 2 0,2,1,1,2
25528:  g 2 1 2 0,2,1,2
25528:  h 2 1 2 0,2,2
25528:  apply 13 2 5 0,2
Goal subsumed
Statistics :
Max weight : 76
Found proof, 0.356753s
% SZS status Unsatisfiable for COL060-1.p
% SZS output start CNFRefutation for COL060-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 447, {_}: apply (g (apply (apply b (apply t b)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t b)) (apply (apply b b) t))) (h (apply (apply b (apply t b)) (apply (apply b b) t)))) === apply (g (apply (apply b (apply t b)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t b)) (apply (apply b b) t))) (h (apply (apply b (apply t b)) (apply (apply b b) t)))) [] by Super 445 with 2 at 2
Id : 445, {_}: apply (apply (apply ?1404 (g (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (f (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t))) =>= apply (g (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (apply (f (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) [1404] by Super 277 with 3 at 1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (g (apply (apply b ?33) (apply (apply b ?34) ?35))) (apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (h (apply (apply b ?33) (apply (apply b ?34) ?35)))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (g (apply (apply b ?18) ?19)) (apply (f (apply (apply b ?18) ?19)) (h (apply (apply b ?18) ?19))) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (g ?1) (apply (f ?1) (h ?1)) [1] by prove_q_combinator ?1
% SZS output end CNFRefutation for COL060-1.p
25526: solved COL060-1.p in 0.368022 using nrkbo
25526: status Unsatisfiable for COL060-1.p
CLASH, statistics insufficient
25533: Facts:
25533:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25533:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25533: Goal:
25533:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
25533: Order:
25533:   nrkbo
25533: Leaf order:
25533:  b 1 0 0 
25533:  t 1 0 0 
25533:  f 2 1 2 0,2,1,1,2
25533:  g 2 1 2 0,2,1,2
25533:  h 2 1 2 0,2,2
25533:  apply 13 2 5 0,2
CLASH, statistics insufficient
25534: Facts:
25534:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25534:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25534: Goal:
25534:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
25534: Order:
25534:   kbo
25534: Leaf order:
25534:  b 1 0 0 
25534:  t 1 0 0 
25534:  f 2 1 2 0,2,1,1,2
25534:  g 2 1 2 0,2,1,2
25534:  h 2 1 2 0,2,2
25534:  apply 13 2 5 0,2
CLASH, statistics insufficient
25535: Facts:
25535:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25535:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25535: Goal:
25535:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (f ?1) (apply (h ?1) (g ?1))
          [1] by prove_q1_combinator ?1
25535: Order:
25535:   lpo
25535: Leaf order:
25535:  b 1 0 0 
25535:  t 1 0 0 
25535:  f 2 1 2 0,2,1,1,2
25535:  g 2 1 2 0,2,1,2
25535:  h 2 1 2 0,2,2
25535:  apply 13 2 5 0,2
Goal subsumed
Statistics :
Max weight : 76
Found proof, 0.641348s
% SZS status Unsatisfiable for COL061-1.p
% SZS output start CNFRefutation for COL061-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 447, {_}: apply (f (apply (apply b (apply t t)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) b))) (g (apply (apply b (apply t t)) (apply (apply b b) b)))) === apply (f (apply (apply b (apply t t)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) b))) (g (apply (apply b (apply t t)) (apply (apply b b) b)))) [] by Super 446 with 3 at 2,2
Id : 446, {_}: apply (f (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (apply (apply ?1406 (g (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) (h (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) =>= apply (f (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (apply (h (apply (apply b (apply t ?1406)) (apply (apply b b) b))) (g (apply (apply b (apply t ?1406)) (apply (apply b b) b)))) [1406] by Super 277 with 2 at 2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (f (apply (apply b ?18) ?19)) (apply (h (apply (apply b ?18) ?19)) (g (apply (apply b ?18) ?19))) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (f ?1) (apply (h ?1) (g ?1)) [1] by prove_q1_combinator ?1
% SZS output end CNFRefutation for COL061-1.p
25533: solved COL061-1.p in 0.344021 using nrkbo
25533: status Unsatisfiable for COL061-1.p
CLASH, statistics insufficient
25541: Facts:
25541:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25541:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25541: Goal:
25541:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
25541: Order:
25541:   kbo
25541: Leaf order:
25541:  b 1 0 0 
25541:  t 1 0 0 
25541:  f 2 1 2 0,2,1,1,2
25541:  g 2 1 2 0,2,1,2
25541:  h 2 1 2 0,2,2
25541:  apply 13 2 5 0,2
CLASH, statistics insufficient
25540: Facts:
25540:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25540:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25540: Goal:
25540:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
25540: Order:
25540:   nrkbo
25540: Leaf order:
25540:  b 1 0 0 
25540:  t 1 0 0 
25540:  f 2 1 2 0,2,1,1,2
25540:  g 2 1 2 0,2,1,2
25540:  h 2 1 2 0,2,2
25540:  apply 13 2 5 0,2
CLASH, statistics insufficient
25542: Facts:
25542:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25542:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
25542: Goal:
25542:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (h ?1)) (g ?1)
          [1] by prove_c_combinator ?1
25542: Order:
25542:   lpo
25542: Leaf order:
25542:  b 1 0 0 
25542:  t 1 0 0 
25542:  f 2 1 2 0,2,1,1,2
25542:  g 2 1 2 0,2,1,2
25542:  h 2 1 2 0,2,2
25542:  apply 13 2 5 0,2
Goal subsumed
Statistics :
Max weight : 100
Found proof, 1.793493s
% SZS status Unsatisfiable for COL062-1.p
% SZS output start CNFRefutation for COL062-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 1574, {_}: apply (apply (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) === apply (apply (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) t))) [] by Super 1573 with 3 at 2
Id : 1573, {_}: apply (apply ?5215 (g (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) (apply (f (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) =>= apply (apply (f (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b b) ?5215))) (apply (apply b b) t))) [5215] by Super 447 with 2 at 2
Id : 447, {_}: apply (apply (apply ?1408 (apply ?1409 (g (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))))) (f (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t)))) (h (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) =>= apply (apply (f (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) (h (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t)))) (g (apply (apply b (apply t (apply (apply b ?1408) ?1409))) (apply (apply b b) t))) [1409, 1408] by Super 445 with 2 at 1,1,2
Id : 445, {_}: apply (apply (apply ?1404 (g (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (f (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t))) =>= apply (apply (f (apply (apply b (apply t ?1404)) (apply (apply b b) t))) (h (apply (apply b (apply t ?1404)) (apply (apply b b) t)))) (g (apply (apply b (apply t ?1404)) (apply (apply b b) t))) [1404] by Super 277 with 3 at 1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (f (apply (apply b ?33) (apply (apply b ?34) ?35))) (h (apply (apply b ?33) (apply (apply b ?34) ?35)))) (g (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (f (apply (apply b ?18) ?19)) (h (apply (apply b ?18) ?19))) (g (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (f ?1) (h ?1)) (g ?1) [1] by prove_c_combinator ?1
% SZS output end CNFRefutation for COL062-1.p
25540: solved COL062-1.p in 1.808112 using nrkbo
25540: status Unsatisfiable for COL062-1.p
CLASH, statistics insufficient
25547: Facts:
25547:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
25547:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
25547: Goal:
25547:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25547: Order:
25547:   nrkbo
25547: Leaf order:
25547:  n 1 0 0 
25547:  q 1 0 0 
25547:  f 3 1 3 0,2,2
25547:  apply 14 2 3 0,2
CLASH, statistics insufficient
25548: Facts:
25548:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
25548:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
25548: Goal:
25548:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25548: Order:
25548:   kbo
25548: Leaf order:
25548:  n 1 0 0 
25548:  q 1 0 0 
25548:  f 3 1 3 0,2,2
25548:  apply 14 2 3 0,2
CLASH, statistics insufficient
25549: Facts:
25549:  Id :   2, {_}:
          apply (apply (apply n ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?5) ?4) ?5
          [5, 4, 3] by n_definition ?3 ?4 ?5
25549:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
25549: Goal:
25549:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25549: Order:
25549:   lpo
25549: Leaf order:
25549:  n 1 0 0 
25549:  q 1 0 0 
25549:  f 3 1 3 0,2,2
25549:  apply 14 2 3 0,2
% SZS status Timeout for COL071-1.p
CLASH, statistics insufficient
25572: Facts:
25572:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
25572:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25572: Goal:
25572:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
25572: Order:
25572:   nrkbo
25572: Leaf order:
25572:  n1 1 0 0 
25572:  b 1 0 0 
25572:  f 3 1 3 0,2,2
25572:  apply 14 2 3 0,2
CLASH, statistics insufficient
25573: Facts:
25573:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
25573:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25573: Goal:
25573:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
25573: Order:
25573:   kbo
25573: Leaf order:
25573:  n1 1 0 0 
25573:  b 1 0 0 
25573:  f 3 1 3 0,2,2
25573:  apply 14 2 3 0,2
CLASH, statistics insufficient
25574: Facts:
25574:  Id :   2, {_}:
          apply (apply (apply n1 ?3) ?4) ?5
          =?=
          apply (apply (apply ?3 ?4) ?4) ?5
          [5, 4, 3] by n1_definition ?3 ?4 ?5
25574:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25574: Goal:
25574:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
25574: Order:
25574:   lpo
25574: Leaf order:
25574:  n1 1 0 0 
25574:  b 1 0 0 
25574:  f 3 1 3 0,2,2
25574:  apply 14 2 3 0,2
% SZS status Timeout for COL073-1.p
NO CLASH, using fixed ground order
25603: Facts:
25603:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25603:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25603:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25603:  Id :   5, {_}:
          commutator ?10 ?11
          =<=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
25603:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =?=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
25603: Goal:
25603:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
25603: Order:
25603:   nrkbo
25603: Leaf order:
25603:  identity 2 0 0 
25603:  a 2 0 2 1,2
25603:  b 2 0 2 1,2,2
25603:  c 2 0 2 2,2,2
25603:  inverse 3 1 0 
25603:  commutator 7 2 2 0,2,2
25603:  multiply 11 2 2 0,2
NO CLASH, using fixed ground order
25604: Facts:
25604:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25604:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25604:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25604:  Id :   5, {_}:
          commutator ?10 ?11
          =<=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
25604:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =>=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
25604: Goal:
25604:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
25604: Order:
25604:   kbo
25604: Leaf order:
25604:  identity 2 0 0 
25604:  a 2 0 2 1,2
25604:  b 2 0 2 1,2,2
25604:  c 2 0 2 2,2,2
25604:  inverse 3 1 0 
25604:  commutator 7 2 2 0,2,2
25604:  multiply 11 2 2 0,2
NO CLASH, using fixed ground order
25605: Facts:
25605:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25605:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25605:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25605:  Id :   5, {_}:
          commutator ?10 ?11
          =<=
          multiply (inverse ?10) (multiply (inverse ?11) (multiply ?10 ?11))
          [11, 10] by name ?10 ?11
25605:  Id :   6, {_}:
          commutator (commutator ?13 ?14) ?15
          =>=
          commutator ?13 (commutator ?14 ?15)
          [15, 14, 13] by associativity_of_commutator ?13 ?14 ?15
25605: Goal:
25605:  Id :   1, {_}:
          multiply a (commutator b c) =<= multiply (commutator b c) a
          [] by prove_center
25605: Order:
25605:   lpo
25605: Leaf order:
25605:  identity 2 0 0 
25605:  a 2 0 2 1,2
25605:  b 2 0 2 1,2,2
25605:  c 2 0 2 2,2,2
25605:  inverse 3 1 0 
25605:  commutator 7 2 2 0,2,2
25605:  multiply 11 2 2 0,2
% SZS status Timeout for GRP024-5.p
CLASH, statistics insufficient
25668: Facts:
25668:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25668:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25668:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25668:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
25668:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
25668:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =<= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
25668:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
25668:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
25668:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
25668:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
25668:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =?=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
25668:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =?= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
25668:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
25668:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
25668:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =<=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
25668:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =<=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
25668:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =<=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
25668:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =<=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
25668:  Id :  20, {_}:
          positive_part ?56 =<= union ?56 identity
          [56] by positive_part ?56
25668:  Id :  21, {_}:
          negative_part ?58 =<= intersection ?58 identity
          [58] by negative_part ?58
25668: Goal:
25668:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
25668: Order:
25668:   nrkbo
25668: Leaf order:
25668:  a 3 0 3 1,1,2
25668:  identity 6 0 0 
25668:  positive_part 2 1 1 0,1,2
25668:  negative_part 2 1 1 0,2,2
25668:  inverse 7 1 0 
25668:  intersection 14 2 0 
25668:  union 14 2 0 
25668:  multiply 21 2 1 0,2
CLASH, statistics insufficient
25669: Facts:
25669:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25669:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25669:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25669:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
25669:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
25669:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =<= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
25669:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
CLASH, statistics insufficient
25670: Facts:
25670:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25670:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25670:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25670:  Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
25670:  Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
25670:  Id :   7, {_}:
          inverse (multiply ?13 ?14) =?= multiply (inverse ?14) (inverse ?13)
          [14, 13] by inverse_product_lemma ?13 ?14
25670:  Id :   8, {_}: intersection ?16 ?16 =>= ?16 [16] by intersection_idempotent ?16
25669:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
25669:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
25669:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
25669:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =<=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
25669:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =<= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
25669:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
25669:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
25669:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =<=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
25669:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =<=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
25669:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =<=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
25669:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =<=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
25669:  Id :  20, {_}:
          positive_part ?56 =<= union ?56 identity
          [56] by positive_part ?56
25669:  Id :  21, {_}:
          negative_part ?58 =<= intersection ?58 identity
          [58] by negative_part ?58
25669: Goal:
25669:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
25669: Order:
25669:   kbo
25669: Leaf order:
25669:  a 3 0 3 1,1,2
25669:  identity 6 0 0 
25669:  positive_part 2 1 1 0,1,2
25669:  negative_part 2 1 1 0,2,2
25669:  inverse 7 1 0 
25669:  intersection 14 2 0 
25669:  union 14 2 0 
25669:  multiply 21 2 1 0,2
25670:  Id :   9, {_}: union ?18 ?18 =>= ?18 [18] by union_idempotent ?18
25670:  Id :  10, {_}:
          intersection ?20 ?21 =?= intersection ?21 ?20
          [21, 20] by intersection_commutative ?20 ?21
25670:  Id :  11, {_}:
          union ?23 ?24 =?= union ?24 ?23
          [24, 23] by union_commutative ?23 ?24
25670:  Id :  12, {_}:
          intersection ?26 (intersection ?27 ?28)
          =<=
          intersection (intersection ?26 ?27) ?28
          [28, 27, 26] by intersection_associative ?26 ?27 ?28
25670:  Id :  13, {_}:
          union ?30 (union ?31 ?32) =<= union (union ?30 ?31) ?32
          [32, 31, 30] by union_associative ?30 ?31 ?32
25670:  Id :  14, {_}:
          union (intersection ?34 ?35) ?35 =>= ?35
          [35, 34] by union_intersection_absorbtion ?34 ?35
25670:  Id :  15, {_}:
          intersection (union ?37 ?38) ?38 =>= ?38
          [38, 37] by intersection_union_absorbtion ?37 ?38
25670:  Id :  16, {_}:
          multiply ?40 (union ?41 ?42)
          =>=
          union (multiply ?40 ?41) (multiply ?40 ?42)
          [42, 41, 40] by multiply_union1 ?40 ?41 ?42
25670:  Id :  17, {_}:
          multiply ?44 (intersection ?45 ?46)
          =>=
          intersection (multiply ?44 ?45) (multiply ?44 ?46)
          [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
25670:  Id :  18, {_}:
          multiply (union ?48 ?49) ?50
          =>=
          union (multiply ?48 ?50) (multiply ?49 ?50)
          [50, 49, 48] by multiply_union2 ?48 ?49 ?50
25670:  Id :  19, {_}:
          multiply (intersection ?52 ?53) ?54
          =>=
          intersection (multiply ?52 ?54) (multiply ?53 ?54)
          [54, 53, 52] by multiply_intersection2 ?52 ?53 ?54
25670:  Id :  20, {_}:
          positive_part ?56 =>= union ?56 identity
          [56] by positive_part ?56
25670:  Id :  21, {_}:
          negative_part ?58 =>= intersection ?58 identity
          [58] by negative_part ?58
25670: Goal:
25670:  Id :   1, {_}:
          multiply (positive_part a) (negative_part a) =>= a
          [] by prove_product
25670: Order:
25670:   lpo
25670: Leaf order:
25670:  a 3 0 3 1,1,2
25670:  identity 6 0 0 
25670:  positive_part 2 1 1 0,1,2
25670:  negative_part 2 1 1 0,2,2
25670:  inverse 7 1 0 
25670:  intersection 14 2 0 
25670:  union 14 2 0 
25670:  multiply 21 2 1 0,2
Statistics :
Max weight : 16
Found proof, 7.917801s
% SZS status Unsatisfiable for GRP114-1.p
% SZS output start CNFRefutation for GRP114-1.p
Id :  12, {_}: intersection ?26 (intersection ?27 ?28) =?= intersection (intersection ?26 ?27) ?28 [28, 27, 26] by intersection_associative ?26 ?27 ?28
Id :  17, {_}: multiply ?44 (intersection ?45 ?46) =<= intersection (multiply ?44 ?45) (multiply ?44 ?46) [46, 45, 44] by multiply_intersection1 ?44 ?45 ?46
Id :  14, {_}: union (intersection ?34 ?35) ?35 =>= ?35 [35, 34] by union_intersection_absorbtion ?34 ?35
Id :  16, {_}: multiply ?40 (union ?41 ?42) =<= union (multiply ?40 ?41) (multiply ?40 ?42) [42, 41, 40] by multiply_union1 ?40 ?41 ?42
Id :  13, {_}: union ?30 (union ?31 ?32) =?= union (union ?30 ?31) ?32 [32, 31, 30] by union_associative ?30 ?31 ?32
Id : 241, {_}: multiply (union ?684 ?685) ?686 =<= union (multiply ?684 ?686) (multiply ?685 ?686) [686, 685, 684] by multiply_union2 ?684 ?685 ?686
Id :  20, {_}: positive_part ?56 =<= union ?56 identity [56] by positive_part ?56
Id :  11, {_}: union ?23 ?24 =?= union ?24 ?23 [24, 23] by union_commutative ?23 ?24
Id :  15, {_}: intersection (union ?37 ?38) ?38 =>= ?38 [38, 37] by intersection_union_absorbtion ?37 ?38
Id : 205, {_}: multiply ?602 (intersection ?603 ?604) =<= intersection (multiply ?602 ?603) (multiply ?602 ?604) [604, 603, 602] by multiply_intersection1 ?602 ?603 ?604
Id :  21, {_}: negative_part ?58 =<= intersection ?58 identity [58] by negative_part ?58
Id :  10, {_}: intersection ?20 ?21 =?= intersection ?21 ?20 [21, 20] by intersection_commutative ?20 ?21
Id : 276, {_}: multiply (intersection ?769 ?770) ?771 =<= intersection (multiply ?769 ?771) (multiply ?770 ?771) [771, 770, 769] by multiply_intersection2 ?769 ?770 ?771
Id :   6, {_}: inverse (inverse ?11) =>= ?11 [11] by inverse_involution ?11
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   5, {_}: inverse identity =>= identity [] by inverse_of_identity
Id :  58, {_}: inverse (multiply ?149 ?150) =<= multiply (inverse ?150) (inverse ?149) [150, 149] by inverse_product_lemma ?149 ?150
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  26, {_}: multiply (multiply ?67 ?68) ?69 =?= multiply ?67 (multiply ?68 ?69) [69, 68, 67] by associativity ?67 ?68 ?69
Id :  28, {_}: multiply (multiply ?74 (inverse ?75)) ?75 =>= multiply ?74 identity [75, 74] by Super 26 with 3 at 2,3
Id :  59, {_}: inverse (multiply identity ?152) =<= multiply (inverse ?152) identity [152] by Super 58 with 5 at 2,3
Id : 459, {_}: inverse ?1057 =<= multiply (inverse ?1057) identity [1057] by Demod 59 with 2 at 1,2
Id : 461, {_}: inverse (inverse ?1060) =<= multiply ?1060 identity [1060] by Super 459 with 6 at 1,3
Id : 475, {_}: ?1060 =<= multiply ?1060 identity [1060] by Demod 461 with 6 at 2
Id : 570, {_}: multiply (multiply ?74 (inverse ?75)) ?75 =>= ?74 [75, 74] by Demod 28 with 475 at 3
Id :  62, {_}: inverse (multiply ?159 (inverse ?160)) =>= multiply ?160 (inverse ?159) [160, 159] by Super 58 with 6 at 1,3
Id : 283, {_}: multiply (intersection (inverse ?796) ?797) ?796 =>= intersection identity (multiply ?797 ?796) [797, 796] by Super 276 with 3 at 1,3
Id : 329, {_}: intersection identity ?869 =>= negative_part ?869 [869] by Super 10 with 21 at 3
Id : 16231, {_}: multiply (intersection (inverse ?20320) ?20321) ?20320 =>= negative_part (multiply ?20321 ?20320) [20321, 20320] by Demod 283 with 329 at 3
Id : 16259, {_}: multiply (negative_part (inverse ?20413)) ?20413 =>= negative_part (multiply identity ?20413) [20413] by Super 16231 with 21 at 1,2
Id : 16311, {_}: multiply (negative_part (inverse ?20413)) ?20413 =>= negative_part ?20413 [20413] by Demod 16259 with 2 at 1,3
Id : 16342, {_}: inverse (negative_part (inverse ?20447)) =<= multiply ?20447 (inverse (negative_part (inverse (inverse ?20447)))) [20447] by Super 62 with 16311 at 1,2
Id : 16414, {_}: inverse (negative_part (inverse ?20447)) =<= multiply ?20447 (inverse (negative_part ?20447)) [20447] by Demod 16342 with 6 at 1,1,2,3
Id : 16644, {_}: multiply (inverse (negative_part (inverse ?20815))) (negative_part ?20815) =>= ?20815 [20815] by Super 570 with 16414 at 1,2
Id :  60, {_}: inverse (multiply (inverse ?154) ?155) =>= multiply (inverse ?155) ?154 [155, 154] by Super 58 with 6 at 2,3
Id : 207, {_}: multiply (inverse ?609) (intersection ?610 ?609) =>= intersection (multiply (inverse ?609) ?610) identity [610, 609] by Super 205 with 3 at 2,3
Id : 228, {_}: multiply (inverse ?609) (intersection ?610 ?609) =>= intersection identity (multiply (inverse ?609) ?610) [610, 609] by Demod 207 with 10 at 3
Id : 10379, {_}: multiply (inverse ?609) (intersection ?610 ?609) =>= negative_part (multiply (inverse ?609) ?610) [610, 609] by Demod 228 with 329 at 3
Id : 10396, {_}: inverse (negative_part (multiply (inverse ?14999) ?15000)) =<= multiply (inverse (intersection ?15000 ?14999)) ?14999 [15000, 14999] by Super 60 with 10379 at 1,2
Id : 309, {_}: union identity ?834 =>= positive_part ?834 [834] by Super 11 with 20 at 3
Id : 360, {_}: intersection (positive_part ?914) ?914 =>= ?914 [914] by Super 15 with 309 at 1,2
Id : 686, {_}: intersection ?1353 (positive_part ?1353) =>= ?1353 [1353] by Super 10 with 360 at 3
Id : 248, {_}: multiply (union (inverse ?711) ?712) ?711 =>= union identity (multiply ?712 ?711) [712, 711] by Super 241 with 3 at 1,3
Id : 10542, {_}: multiply (union (inverse ?15313) ?15314) ?15313 =>= positive_part (multiply ?15314 ?15313) [15314, 15313] by Demod 248 with 309 at 3
Id : 359, {_}: union identity (union ?911 ?912) =>= union (positive_part ?911) ?912 [912, 911] by Super 13 with 309 at 1,3
Id : 367, {_}: positive_part (union ?911 ?912) =>= union (positive_part ?911) ?912 [912, 911] by Demod 359 with 309 at 2
Id : 312, {_}: union ?841 (union ?842 identity) =>= positive_part (union ?841 ?842) [842, 841] by Super 13 with 20 at 3
Id : 324, {_}: union ?841 (positive_part ?842) =<= positive_part (union ?841 ?842) [842, 841] by Demod 312 with 20 at 2,2
Id : 709, {_}: union ?911 (positive_part ?912) =?= union (positive_part ?911) ?912 [912, 911] by Demod 367 with 324 at 2
Id : 487, {_}: multiply ?1085 (union ?1086 identity) =?= union (multiply ?1085 ?1086) ?1085 [1086, 1085] by Super 16 with 475 at 2,3
Id : 2720, {_}: multiply ?5029 (positive_part ?5030) =<= union (multiply ?5029 ?5030) ?5029 [5030, 5029] by Demod 487 with 20 at 2,2
Id : 2722, {_}: multiply (inverse ?5034) (positive_part ?5034) =>= union identity (inverse ?5034) [5034] by Super 2720 with 3 at 1,3
Id : 2784, {_}: multiply (inverse ?5160) (positive_part ?5160) =>= positive_part (inverse ?5160) [5160] by Demod 2722 with 309 at 3
Id : 307, {_}: positive_part (intersection ?831 identity) =>= identity [831] by Super 14 with 20 at 2
Id : 514, {_}: positive_part (negative_part ?831) =>= identity [831] by Demod 307 with 21 at 1,2
Id : 2786, {_}: multiply (inverse (negative_part ?5163)) identity =>= positive_part (inverse (negative_part ?5163)) [5163] by Super 2784 with 514 at 2,2
Id : 2807, {_}: inverse (negative_part ?5163) =<= positive_part (inverse (negative_part ?5163)) [5163] by Demod 2786 with 475 at 2
Id : 2823, {_}: union (inverse (negative_part ?5198)) (positive_part ?5199) =>= union (inverse (negative_part ?5198)) ?5199 [5199, 5198] by Super 709 with 2807 at 1,3
Id : 10564, {_}: multiply (union (inverse (negative_part ?15386)) ?15387) (negative_part ?15386) =>= positive_part (multiply (positive_part ?15387) (negative_part ?15386)) [15387, 15386] by Super 10542 with 2823 at 1,2
Id : 10509, {_}: multiply (union (inverse ?711) ?712) ?711 =>= positive_part (multiply ?712 ?711) [712, 711] by Demod 248 with 309 at 3
Id : 10604, {_}: positive_part (multiply ?15387 (negative_part ?15386)) =<= positive_part (multiply (positive_part ?15387) (negative_part ?15386)) [15386, 15387] by Demod 10564 with 10509 at 2
Id : 481, {_}: multiply ?1071 (intersection ?1072 identity) =?= intersection (multiply ?1071 ?1072) ?1071 [1072, 1071] by Super 17 with 475 at 2,3
Id : 505, {_}: multiply ?1071 (negative_part ?1072) =<= intersection (multiply ?1071 ?1072) ?1071 [1072, 1071] by Demod 481 with 21 at 2,2
Id : 10568, {_}: multiply (positive_part (inverse ?15398)) ?15398 =>= positive_part (multiply identity ?15398) [15398] by Super 10542 with 20 at 1,2
Id : 10608, {_}: multiply (positive_part (inverse ?15398)) ?15398 =>= positive_part ?15398 [15398] by Demod 10568 with 2 at 1,3
Id : 10645, {_}: multiply (positive_part (inverse ?15507)) (negative_part ?15507) =>= intersection (positive_part ?15507) (positive_part (inverse ?15507)) [15507] by Super 505 with 10608 at 1,3
Id : 11493, {_}: positive_part (multiply (inverse ?16415) (negative_part ?16415)) =<= positive_part (intersection (positive_part ?16415) (positive_part (inverse ?16415))) [16415] by Super 10604 with 10645 at 1,3
Id : 3426, {_}: multiply ?5989 (negative_part ?5990) =<= intersection (multiply ?5989 ?5990) ?5989 [5990, 5989] by Demod 481 with 21 at 2,2
Id : 3428, {_}: multiply (inverse ?5994) (negative_part ?5994) =>= intersection identity (inverse ?5994) [5994] by Super 3426 with 3 at 1,3
Id : 3468, {_}: multiply (inverse ?5994) (negative_part ?5994) =>= negative_part (inverse ?5994) [5994] by Demod 3428 with 329 at 3
Id : 11531, {_}: positive_part (negative_part (inverse ?16415)) =<= positive_part (intersection (positive_part ?16415) (positive_part (inverse ?16415))) [16415] by Demod 11493 with 3468 at 1,2
Id : 11532, {_}: identity =<= positive_part (intersection (positive_part ?16415) (positive_part (inverse ?16415))) [16415] by Demod 11531 with 514 at 2
Id : 52635, {_}: intersection (intersection (positive_part ?60922) (positive_part (inverse ?60922))) identity =>= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Super 686 with 11532 at 2,2
Id : 52914, {_}: intersection identity (intersection (positive_part ?60922) (positive_part (inverse ?60922))) =>= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52635 with 10 at 2
Id : 52915, {_}: negative_part (intersection (positive_part ?60922) (positive_part (inverse ?60922))) =>= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52914 with 329 at 2
Id : 332, {_}: intersection ?876 (intersection ?877 identity) =>= negative_part (intersection ?876 ?877) [877, 876] by Super 12 with 21 at 3
Id : 344, {_}: intersection ?876 (negative_part ?877) =<= negative_part (intersection ?876 ?877) [877, 876] by Demod 332 with 21 at 2,2
Id : 52916, {_}: intersection (positive_part ?60922) (negative_part (positive_part (inverse ?60922))) =>= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52915 with 344 at 2
Id : 52917, {_}: intersection (negative_part (positive_part (inverse ?60922))) (positive_part ?60922) =>= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52916 with 10 at 2
Id : 421, {_}: intersection identity (intersection ?1000 ?1001) =>= intersection (negative_part ?1000) ?1001 [1001, 1000] by Super 12 with 329 at 1,3
Id : 435, {_}: negative_part (intersection ?1000 ?1001) =>= intersection (negative_part ?1000) ?1001 [1001, 1000] by Demod 421 with 329 at 2
Id : 903, {_}: intersection ?1965 (negative_part ?1966) =?= intersection (negative_part ?1965) ?1966 [1966, 1965] by Demod 435 with 344 at 2
Id : 327, {_}: negative_part (union ?866 identity) =>= identity [866] by Super 15 with 21 at 2
Id : 346, {_}: negative_part (positive_part ?866) =>= identity [866] by Demod 327 with 20 at 1,2
Id : 914, {_}: intersection (positive_part ?1997) (negative_part ?1998) =>= intersection identity ?1998 [1998, 1997] by Super 903 with 346 at 1,2
Id : 945, {_}: intersection (negative_part ?1998) (positive_part ?1997) =>= intersection identity ?1998 [1997, 1998] by Demod 914 with 10 at 2
Id : 946, {_}: intersection (negative_part ?1998) (positive_part ?1997) =>= negative_part ?1998 [1997, 1998] by Demod 945 with 329 at 3
Id : 52918, {_}: negative_part (positive_part (inverse ?60922)) =<= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52917 with 946 at 2
Id : 52919, {_}: identity =<= intersection (positive_part ?60922) (positive_part (inverse ?60922)) [60922] by Demod 52918 with 346 at 2
Id : 53306, {_}: inverse (negative_part (multiply (inverse (positive_part (inverse ?61296))) (positive_part ?61296))) =>= multiply (inverse identity) (positive_part (inverse ?61296)) [61296] by Super 10396 with 52919 at 1,1,3
Id : 10642, {_}: inverse (positive_part (inverse ?15501)) =<= multiply ?15501 (inverse (positive_part (inverse (inverse ?15501)))) [15501] by Super 62 with 10608 at 1,2
Id : 10686, {_}: inverse (positive_part (inverse ?15501)) =<= multiply ?15501 (inverse (positive_part ?15501)) [15501] by Demod 10642 with 6 at 1,1,2,3
Id : 10895, {_}: multiply (inverse (positive_part (inverse ?15767))) (positive_part ?15767) =>= ?15767 [15767] by Super 570 with 10686 at 1,2
Id : 53366, {_}: inverse (negative_part ?61296) =<= multiply (inverse identity) (positive_part (inverse ?61296)) [61296] by Demod 53306 with 10895 at 1,1,2
Id : 53367, {_}: inverse (negative_part ?61296) =<= multiply identity (positive_part (inverse ?61296)) [61296] by Demod 53366 with 5 at 1,3
Id : 53816, {_}: inverse (negative_part ?61700) =<= positive_part (inverse ?61700) [61700] by Demod 53367 with 2 at 3
Id : 53819, {_}: inverse (negative_part (multiply (inverse ?61705) ?61706)) =>= positive_part (multiply (inverse ?61706) ?61705) [61706, 61705] by Super 53816 with 60 at 1,3
Id : 62826, {_}: inverse (positive_part (multiply (inverse ?68982) ?68983)) =>= negative_part (multiply (inverse ?68983) ?68982) [68983, 68982] by Super 6 with 53819 at 1,2
Id : 62827, {_}: inverse (positive_part (multiply identity ?68985)) =<= negative_part (multiply (inverse ?68985) identity) [68985] by Super 62826 with 5 at 1,1,1,2
Id : 63051, {_}: inverse (positive_part ?68985) =<= negative_part (multiply (inverse ?68985) identity) [68985] by Demod 62827 with 2 at 1,1,2
Id : 63052, {_}: inverse (positive_part ?68985) =<= negative_part (inverse ?68985) [68985] by Demod 63051 with 475 at 1,3
Id : 66930, {_}: multiply (inverse (inverse (positive_part ?20815))) (negative_part ?20815) =>= ?20815 [20815] by Demod 16644 with 63052 at 1,1,2
Id : 66931, {_}: multiply (positive_part ?20815) (negative_part ?20815) =>= ?20815 [20815] by Demod 66930 with 6 at 1,2
Id : 67152, {_}: a === a [] by Demod 1 with 66931 at 2
Id :   1, {_}: multiply (positive_part a) (negative_part a) =>= a [] by prove_product
% SZS output end CNFRefutation for GRP114-1.p
25668: solved GRP114-1.p in 7.932495 using nrkbo
25668: status Unsatisfiable for GRP114-1.p
NO CLASH, using fixed ground order
25676: Facts:
25676:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25676:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25676:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25676:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25676:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25676:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25676:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25676:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25676:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25676:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25676:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25676:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25676:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25676:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25676:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25676:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
25676:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
25676:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
25676: Goal:
25676:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
25676: Order:
25676:   kbo
25676: Leaf order:
25676:  a 3 0 3 2
25676:  identity 6 0 2 2,1,3
25676:  inverse 7 1 0 
25676:  least_upper_bound 14 2 1 0,1,3
25676:  greatest_lower_bound 14 2 1 0,2,3
25676:  multiply 21 2 1 0,3
NO CLASH, using fixed ground order
25675: Facts:
25675:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25675:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25675:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25675:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25675:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25675:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25675:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25675:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25675:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25675:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25675:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25675:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25675:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25675:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25675:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25675:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
25675:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
25675:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
25675: Goal:
25675:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
25675: Order:
25675:   nrkbo
25675: Leaf order:
25675:  a 3 0 3 2
25675:  identity 6 0 2 2,1,3
25675:  inverse 7 1 0 
25675:  least_upper_bound 14 2 1 0,1,3
25675:  greatest_lower_bound 14 2 1 0,2,3
25675:  multiply 21 2 1 0,3
NO CLASH, using fixed ground order
25677: Facts:
25677:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25677:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25677:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25677:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25677:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25677:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25677:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25677:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25677:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25677:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25677:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25677:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25677:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25677:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25677:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25677:  Id :  17, {_}: inverse identity =>= identity [] by p19_1
25677:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p19_2 ?51
25677:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p19_3 ?53 ?54
25677: Goal:
25677:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
25677: Order:
25677:   lpo
25677: Leaf order:
25677:  a 3 0 3 2
25677:  identity 6 0 2 2,1,3
25677:  inverse 7 1 0 
25677:  least_upper_bound 14 2 1 0,1,3
25677:  greatest_lower_bound 14 2 1 0,2,3
25677:  multiply 21 2 1 0,3
% SZS status Timeout for GRP167-4.p
NO CLASH, using fixed ground order
25699: Facts:
25699:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25699:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25699:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25699:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25699:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25699:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25699:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25699:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25699:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25699:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25699:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25699:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25699:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25699:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25699:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25699:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
25699:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
25699:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
25699: Goal:
25699:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
25699: Order:
25699:   nrkbo
25699: Leaf order:
25699:  b 4 0 3 1,2,1,2
25699:  c 4 0 3 2,2,1,2
25699:  a 5 0 4 1,1,2
25699:  identity 8 0 0 
25699:  inverse 1 1 0 
25699:  least_upper_bound 13 2 0 
25699:  multiply 21 2 3 0,2,1,2
25699:  greatest_lower_bound 21 2 5 0,2
NO CLASH, using fixed ground order
25700: Facts:
25700:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25700:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25700:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25700:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25700:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25700:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25700:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25700:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25700:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25700:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25700:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25700:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25700:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25700:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25700:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25700:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
25700:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
25700:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
25700: Goal:
25700:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
25700: Order:
25700:   kbo
25700: Leaf order:
25700:  b 4 0 3 1,2,1,2
25700:  c 4 0 3 2,2,1,2
25700:  a 5 0 4 1,1,2
25700:  identity 8 0 0 
25700:  inverse 1 1 0 
25700:  least_upper_bound 13 2 0 
25700:  multiply 21 2 3 0,2,1,2
25700:  greatest_lower_bound 21 2 5 0,2
NO CLASH, using fixed ground order
25701: Facts:
25701:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25701:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25701:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25701:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25701:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25701:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25701:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25701:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25701:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25701:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25701:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25701:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25701:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25701:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25701:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25701:  Id :  17, {_}: greatest_lower_bound identity a =>= identity [] by p08b_1
25701:  Id :  18, {_}: greatest_lower_bound identity b =>= identity [] by p08b_2
25701:  Id :  19, {_}: greatest_lower_bound identity c =>= identity [] by p08b_3
25701: Goal:
25701:  Id :   1, {_}:
          greatest_lower_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          greatest_lower_bound a (multiply b c)
          [] by prove_p08b
25701: Order:
25701:   lpo
25701: Leaf order:
25701:  b 4 0 3 1,2,1,2
25701:  c 4 0 3 2,2,1,2
25701:  a 5 0 4 1,1,2
25701:  identity 8 0 0 
25701:  inverse 1 1 0 
25701:  least_upper_bound 13 2 0 
25701:  multiply 21 2 3 0,2,1,2
25701:  greatest_lower_bound 21 2 5 0,2
% SZS status Timeout for GRP177-2.p
NO CLASH, using fixed ground order
25723: Facts:
NO CLASH, using fixed ground order
25724: Facts:
25724:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25724:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25724:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25724:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25724:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25724:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25724:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25724:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
NO CLASH, using fixed ground order
25725: Facts:
25725:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25725:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25725:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25725:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25725:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25725:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25725:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25725:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25725:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25725:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25723:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25725:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25723:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25725:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25725:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25725:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25723:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25723:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25725:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25723:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25725:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
25725:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
25723:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25725:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
25725: Goal:
25725:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
25725: Order:
25725:   lpo
25725: Leaf order:
25725:  a 2 0 2 1,1,2
25725:  identity 6 0 2 2,2
25725:  inverse 9 1 2 0,1,2
25725:  greatest_lower_bound 14 2 1 0,1,3
25725:  least_upper_bound 14 2 1 0,2
25723:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25723:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25723:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25723:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25723:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25723:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25723:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25723:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25723:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25723:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
25723:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
25723:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
25723: Goal:
25723:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
25723: Order:
25723:   nrkbo
25723: Leaf order:
25723:  a 2 0 2 1,1,2
25723:  identity 6 0 2 2,2
25723:  inverse 9 1 2 0,1,2
25723:  greatest_lower_bound 14 2 1 0,1,3
25723:  least_upper_bound 14 2 1 0,2
25723:  multiply 20 2 0 
25724:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25725:  multiply 20 2 0 
25724:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25724:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25724:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25724:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25724:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25724:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25724:  Id :  17, {_}: inverse identity =>= identity [] by p18_1
25724:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p18_2 ?51
25724:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p18_3 ?53 ?54
25724: Goal:
25724:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
25724: Order:
25724:   kbo
25724: Leaf order:
25724:  a 2 0 2 1,1,2
25724:  identity 6 0 2 2,2
25724:  inverse 9 1 2 0,1,2
25724:  greatest_lower_bound 14 2 1 0,1,3
25724:  least_upper_bound 14 2 1 0,2
25724:  multiply 20 2 0 
% SZS status Timeout for GRP179-3.p
NO CLASH, using fixed ground order
25752: Facts:
25752:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25752:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25752:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25752:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25752:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25752:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25752:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25752:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25752:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25752:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25752:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25752:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25752:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25752:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25752:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25752:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
25752:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
25752:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
25752: Goal:
25752:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
25752: Order:
25752:   nrkbo
25752: Leaf order:
25752:  a 3 0 3 1,2
25752:  b 3 0 3 2,1,1,2,2
25752:  identity 4 0 0 
25752:  inverse 8 1 1 0,1,2,2
25752:  greatest_lower_bound 14 2 1 0,1,1,2,2
25752:  least_upper_bound 14 2 1 0,3
25752:  multiply 22 2 2 0,2
NO CLASH, using fixed ground order
25753: Facts:
25753:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25753:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25753:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25753:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25753:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25753:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25753:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25753:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25753:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25753:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25753:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25753:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25753:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25753:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25753:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25753:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
25753:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
25753:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
25753: Goal:
25753:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
25753: Order:
25753:   kbo
25753: Leaf order:
25753:  a 3 0 3 1,2
25753:  b 3 0 3 2,1,1,2,2
25753:  identity 4 0 0 
25753:  inverse 8 1 1 0,1,2,2
25753:  greatest_lower_bound 14 2 1 0,1,1,2,2
25753:  least_upper_bound 14 2 1 0,3
25753:  multiply 22 2 2 0,2
NO CLASH, using fixed ground order
25754: Facts:
25754:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25754:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25754:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25754:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25754:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25754:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25754:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25754:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25754:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25754:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25754:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25754:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25754:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25754:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25754:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25754:  Id :  17, {_}: inverse identity =>= identity [] by p11_1
25754:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p11_2 ?51
25754:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p11_3 ?53 ?54
25754: Goal:
25754:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
25754: Order:
25754:   lpo
25754: Leaf order:
25754:  a 3 0 3 1,2
25754:  b 3 0 3 2,1,1,2,2
25754:  identity 4 0 0 
25754:  inverse 8 1 1 0,1,2,2
25754:  greatest_lower_bound 14 2 1 0,1,1,2,2
25754:  least_upper_bound 14 2 1 0,3
25754:  multiply 22 2 2 0,2
% SZS status Timeout for GRP180-2.p
CLASH, statistics insufficient
25775: Facts:
25775:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25775:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25775:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25775:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25775:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25775:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25775:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25775:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25775:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25775:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25775:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25775:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25775:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25775:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25775:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25775:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
25775:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
25775:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
25775:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
25775:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
25775:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =<=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
25775:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =<=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
25775: Goal:
25775:  Id :   1, {_}: a =>= b [] by prove_p12x
25775: Order:
25775:   nrkbo
25775: Leaf order:
25775:  a 3 0 1 2
25775:  b 3 0 1 3
25775:  identity 4 0 0 
25775:  c 4 0 0 
25775:  inverse 13 1 0 
25775:  greatest_lower_bound 17 2 0 
25775:  least_upper_bound 17 2 0 
25775:  multiply 20 2 0 
CLASH, statistics insufficient
25776: Facts:
25776:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25776:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25776:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25776:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25776:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25776:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25776:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25776:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25776:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25776:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25776:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25776:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25776:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25776:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25776:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25776:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
25776:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
25776:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
25776:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
25776:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
25776:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =<=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
25776:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =<=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
25776: Goal:
25776:  Id :   1, {_}: a =>= b [] by prove_p12x
25776: Order:
25776:   kbo
25776: Leaf order:
25776:  a 3 0 1 2
25776:  b 3 0 1 3
25776:  identity 4 0 0 
25776:  c 4 0 0 
25776:  inverse 13 1 0 
25776:  greatest_lower_bound 17 2 0 
25776:  least_upper_bound 17 2 0 
25776:  multiply 20 2 0 
CLASH, statistics insufficient
25777: Facts:
25777:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25777:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25777:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25777:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25777:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25777:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25777:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25777:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25777:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25777:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25777:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25777:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25777:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25777:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25777:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25777:  Id :  17, {_}: inverse identity =>= identity [] by p12x_1
25777:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
25777:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12x_3 ?53 ?54
25777:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12x_4
25777:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
25777:  Id :  22, {_}:
          inverse (greatest_lower_bound ?58 ?59)
          =>=
          least_upper_bound (inverse ?58) (inverse ?59)
          [59, 58] by p12x_6 ?58 ?59
25777:  Id :  23, {_}:
          inverse (least_upper_bound ?61 ?62)
          =>=
          greatest_lower_bound (inverse ?61) (inverse ?62)
          [62, 61] by p12x_7 ?61 ?62
25777: Goal:
25777:  Id :   1, {_}: a =>= b [] by prove_p12x
25777: Order:
25777:   lpo
25777: Leaf order:
25777:  a 3 0 1 2
25777:  b 3 0 1 3
25777:  identity 4 0 0 
25777:  c 4 0 0 
25777:  inverse 13 1 0 
25777:  greatest_lower_bound 17 2 0 
25777:  least_upper_bound 17 2 0 
25777:  multiply 20 2 0 
Statistics :
Max weight : 16
Found proof, 8.150042s
% SZS status Unsatisfiable for GRP181-4.p
% SZS output start CNFRefutation for GRP181-4.p
Id :   5, {_}: greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10 [11, 10] by symmetry_of_glb ?10 ?11
Id :  20, {_}: greatest_lower_bound a c =>= greatest_lower_bound b c [] by p12x_4
Id : 188, {_}: multiply ?586 (greatest_lower_bound ?587 ?588) =<= greatest_lower_bound (multiply ?586 ?587) (multiply ?586 ?588) [588, 587, 586] by monotony_glb1 ?586 ?587 ?588
Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12x_5
Id : 364, {_}: inverse (least_upper_bound ?929 ?930) =<= greatest_lower_bound (inverse ?929) (inverse ?930) [930, 929] by p12x_7 ?929 ?930
Id : 342, {_}: inverse (greatest_lower_bound ?890 ?891) =<= least_upper_bound (inverse ?890) (inverse ?891) [891, 890] by p12x_6 ?890 ?891
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 158, {_}: multiply ?515 (least_upper_bound ?516 ?517) =<= least_upper_bound (multiply ?515 ?516) (multiply ?515 ?517) [517, 516, 515] by monotony_lub1 ?515 ?516 ?517
Id :   4, {_}: multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8) [8, 7, 6] by associativity ?6 ?7 ?8
Id :  19, {_}: inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53) [54, 53] by p12x_3 ?53 ?54
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :  17, {_}: inverse identity =>= identity [] by p12x_1
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  28, {_}: multiply (multiply ?71 ?72) ?73 =?= multiply ?71 (multiply ?72 ?73) [73, 72, 71] by associativity ?71 ?72 ?73
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12x_2 ?51
Id : 302, {_}: inverse (multiply ?845 ?846) =<= multiply (inverse ?846) (inverse ?845) [846, 845] by p12x_3 ?845 ?846
Id : 803, {_}: inverse (multiply ?1561 (inverse ?1562)) =>= multiply ?1562 (inverse ?1561) [1562, 1561] by Super 302 with 18 at 1,3
Id :  30, {_}: multiply (multiply ?78 (inverse ?79)) ?79 =>= multiply ?78 identity [79, 78] by Super 28 with 3 at 2,3
Id : 303, {_}: inverse (multiply identity ?848) =<= multiply (inverse ?848) identity [848] by Super 302 with 17 at 2,3
Id : 394, {_}: inverse ?984 =<= multiply (inverse ?984) identity [984] by Demod 303 with 2 at 1,2
Id : 396, {_}: inverse (inverse ?987) =<= multiply ?987 identity [987] by Super 394 with 18 at 1,3
Id : 406, {_}: ?987 =<= multiply ?987 identity [987] by Demod 396 with 18 at 2
Id : 638, {_}: multiply (multiply ?78 (inverse ?79)) ?79 =>= ?78 [79, 78] by Demod 30 with 406 at 3
Id : 816, {_}: inverse ?1599 =<= multiply ?1600 (inverse (multiply ?1599 (inverse (inverse ?1600)))) [1600, 1599] by Super 803 with 638 at 1,2
Id : 306, {_}: inverse (multiply ?855 (inverse ?856)) =>= multiply ?856 (inverse ?855) [856, 855] by Super 302 with 18 at 1,3
Id : 837, {_}: inverse ?1599 =<= multiply ?1600 (multiply (inverse ?1600) (inverse ?1599)) [1600, 1599] by Demod 816 with 306 at 2,3
Id : 838, {_}: inverse ?1599 =<= multiply ?1600 (inverse (multiply ?1599 ?1600)) [1600, 1599] by Demod 837 with 19 at 2,3
Id : 285, {_}: multiply ?794 (inverse ?794) =>= identity [794] by Super 3 with 18 at 1,2
Id : 607, {_}: multiply (multiply ?1261 ?1262) (inverse ?1262) =>= multiply ?1261 identity [1262, 1261] by Super 4 with 285 at 2,3
Id : 19344, {_}: multiply (multiply ?27523 ?27524) (inverse ?27524) =>= ?27523 [27524, 27523] by Demod 607 with 406 at 3
Id : 160, {_}: multiply (inverse ?522) (least_upper_bound ?523 ?522) =>= least_upper_bound (multiply (inverse ?522) ?523) identity [523, 522] by Super 158 with 3 at 2,3
Id : 177, {_}: multiply (inverse ?522) (least_upper_bound ?523 ?522) =>= least_upper_bound identity (multiply (inverse ?522) ?523) [523, 522] by Demod 160 with 6 at 3
Id : 345, {_}: inverse (greatest_lower_bound identity ?898) =>= least_upper_bound identity (inverse ?898) [898] by Super 342 with 17 at 1,3
Id : 487, {_}: inverse (multiply (greatest_lower_bound identity ?1114) ?1115) =<= multiply (inverse ?1115) (least_upper_bound identity (inverse ?1114)) [1115, 1114] by Super 19 with 345 at 2,3
Id : 11534, {_}: inverse (multiply (greatest_lower_bound identity ?15482) (inverse ?15482)) =>= least_upper_bound identity (multiply (inverse (inverse ?15482)) identity) [15482] by Super 177 with 487 at 2
Id : 11607, {_}: multiply ?15482 (inverse (greatest_lower_bound identity ?15482)) =?= least_upper_bound identity (multiply (inverse (inverse ?15482)) identity) [15482] by Demod 11534 with 306 at 2
Id : 11608, {_}: multiply ?15482 (inverse (greatest_lower_bound identity ?15482)) =>= least_upper_bound identity (inverse (inverse ?15482)) [15482] by Demod 11607 with 406 at 2,3
Id : 11609, {_}: multiply ?15482 (least_upper_bound identity (inverse ?15482)) =>= least_upper_bound identity (inverse (inverse ?15482)) [15482] by Demod 11608 with 345 at 2,2
Id : 11610, {_}: multiply ?15482 (least_upper_bound identity (inverse ?15482)) =>= least_upper_bound identity ?15482 [15482] by Demod 11609 with 18 at 2,3
Id : 19409, {_}: multiply (least_upper_bound identity ?27743) (inverse (least_upper_bound identity (inverse ?27743))) =>= ?27743 [27743] by Super 19344 with 11610 at 1,2
Id : 366, {_}: inverse (least_upper_bound ?934 (inverse ?935)) =>= greatest_lower_bound (inverse ?934) ?935 [935, 934] by Super 364 with 18 at 2,3
Id : 19451, {_}: multiply (least_upper_bound identity ?27743) (greatest_lower_bound (inverse identity) ?27743) =>= ?27743 [27743] by Demod 19409 with 366 at 2,2
Id : 44019, {_}: multiply (least_upper_bound identity ?52011) (greatest_lower_bound identity ?52011) =>= ?52011 [52011] by Demod 19451 with 17 at 1,2,2
Id : 367, {_}: inverse (least_upper_bound identity ?937) =>= greatest_lower_bound identity (inverse ?937) [937] by Super 364 with 17 at 1,3
Id : 8913, {_}: multiply (inverse ?11632) (least_upper_bound ?11632 ?11633) =>= least_upper_bound identity (multiply (inverse ?11632) ?11633) [11633, 11632] by Super 158 with 3 at 1,3
Id : 326, {_}: least_upper_bound c a =<= least_upper_bound b c [] by Demod 21 with 6 at 2
Id : 327, {_}: least_upper_bound c a =>= least_upper_bound c b [] by Demod 326 with 6 at 3
Id : 8921, {_}: multiply (inverse c) (least_upper_bound c b) =>= least_upper_bound identity (multiply (inverse c) a) [] by Super 8913 with 327 at 2,2
Id : 164, {_}: multiply (inverse ?538) (least_upper_bound ?538 ?539) =>= least_upper_bound identity (multiply (inverse ?538) ?539) [539, 538] by Super 158 with 3 at 1,3
Id : 9001, {_}: least_upper_bound identity (multiply (inverse c) b) =<= least_upper_bound identity (multiply (inverse c) a) [] by Demod 8921 with 164 at 2
Id : 9081, {_}: inverse (least_upper_bound identity (multiply (inverse c) b)) =>= greatest_lower_bound identity (inverse (multiply (inverse c) a)) [] by Super 367 with 9001 at 1,2
Id : 9110, {_}: greatest_lower_bound identity (inverse (multiply (inverse c) b)) =<= greatest_lower_bound identity (inverse (multiply (inverse c) a)) [] by Demod 9081 with 367 at 2
Id : 304, {_}: inverse (multiply (inverse ?850) ?851) =>= multiply (inverse ?851) ?850 [851, 850] by Super 302 with 18 at 2,3
Id : 9111, {_}: greatest_lower_bound identity (inverse (multiply (inverse c) b)) =>= greatest_lower_bound identity (multiply (inverse a) c) [] by Demod 9110 with 304 at 2,3
Id : 9112, {_}: greatest_lower_bound identity (multiply (inverse b) c) =<= greatest_lower_bound identity (multiply (inverse a) c) [] by Demod 9111 with 304 at 2,2
Id : 44043, {_}: multiply (least_upper_bound identity (multiply (inverse a) c)) (greatest_lower_bound identity (multiply (inverse b) c)) =>= multiply (inverse a) c [] by Super 44019 with 9112 at 2,2
Id : 10178, {_}: multiply (inverse ?13641) (greatest_lower_bound ?13641 ?13642) =>= greatest_lower_bound identity (multiply (inverse ?13641) ?13642) [13642, 13641] by Super 188 with 3 at 1,3
Id : 315, {_}: greatest_lower_bound c a =<= greatest_lower_bound b c [] by Demod 20 with 5 at 2
Id : 316, {_}: greatest_lower_bound c a =>= greatest_lower_bound c b [] by Demod 315 with 5 at 3
Id : 10190, {_}: multiply (inverse c) (greatest_lower_bound c b) =>= greatest_lower_bound identity (multiply (inverse c) a) [] by Super 10178 with 316 at 2,2
Id : 194, {_}: multiply (inverse ?609) (greatest_lower_bound ?609 ?610) =>= greatest_lower_bound identity (multiply (inverse ?609) ?610) [610, 609] by Super 188 with 3 at 1,3
Id : 10270, {_}: greatest_lower_bound identity (multiply (inverse c) b) =<= greatest_lower_bound identity (multiply (inverse c) a) [] by Demod 10190 with 194 at 2
Id : 10361, {_}: inverse (greatest_lower_bound identity (multiply (inverse c) b)) =>= least_upper_bound identity (inverse (multiply (inverse c) a)) [] by Super 345 with 10270 at 1,2
Id : 10393, {_}: least_upper_bound identity (inverse (multiply (inverse c) b)) =<= least_upper_bound identity (inverse (multiply (inverse c) a)) [] by Demod 10361 with 345 at 2
Id : 10394, {_}: least_upper_bound identity (inverse (multiply (inverse c) b)) =>= least_upper_bound identity (multiply (inverse a) c) [] by Demod 10393 with 304 at 2,3
Id : 10395, {_}: least_upper_bound identity (multiply (inverse b) c) =<= least_upper_bound identity (multiply (inverse a) c) [] by Demod 10394 with 304 at 2,2
Id : 44130, {_}: multiply (least_upper_bound identity (multiply (inverse b) c)) (greatest_lower_bound identity (multiply (inverse b) c)) =>= multiply (inverse a) c [] by Demod 44043 with 10395 at 1,2
Id : 19452, {_}: multiply (least_upper_bound identity ?27743) (greatest_lower_bound identity ?27743) =>= ?27743 [27743] by Demod 19451 with 17 at 1,2,2
Id : 44131, {_}: multiply (inverse b) c =<= multiply (inverse a) c [] by Demod 44130 with 19452 at 2
Id : 44165, {_}: inverse (inverse a) =<= multiply c (inverse (multiply (inverse b) c)) [] by Super 838 with 44131 at 1,2,3
Id : 44200, {_}: a =<= multiply c (inverse (multiply (inverse b) c)) [] by Demod 44165 with 18 at 2
Id : 44201, {_}: a =<= inverse (inverse b) [] by Demod 44200 with 838 at 3
Id : 44202, {_}: a =>= b [] by Demod 44201 with 18 at 3
Id : 44399, {_}: b === b [] by Demod 1 with 44202 at 2
Id :   1, {_}: a =>= b [] by prove_p12x
% SZS output end CNFRefutation for GRP181-4.p
25775: solved GRP181-4.p in 8.112506 using nrkbo
25775: status Unsatisfiable for GRP181-4.p
NO CLASH, using fixed ground order
25788: Facts:
25788:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25788:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25788:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25788:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25788:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25788:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25788:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25788:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25788:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25788:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25788:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25788:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25788:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25788:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25788:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25788: Goal:
25788:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
25788: Order:
25788:   nrkbo
25788: Leaf order:
25788:  a 2 0 2 1,1,2
25788:  identity 5 0 3 2,1,2
25788:  inverse 2 1 1 0,2,2
25788:  least_upper_bound 14 2 1 0,1,2
25788:  greatest_lower_bound 15 2 2 0,2
25788:  multiply 18 2 0 
NO CLASH, using fixed ground order
25789: Facts:
25789:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25789:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25789:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25789:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25789:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25789:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25789:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25789:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25789:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25789:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25789:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25789:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
NO CLASH, using fixed ground order
25790: Facts:
25790:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25790:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25790:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25790:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25790:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25790:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25790:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25790:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25790:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25790:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25790:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25790:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25790:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25790:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25790:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25790: Goal:
25790:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
25790: Order:
25790:   lpo
25790: Leaf order:
25790:  a 2 0 2 1,1,2
25790:  identity 5 0 3 2,1,2
25790:  inverse 2 1 1 0,2,2
25790:  least_upper_bound 14 2 1 0,1,2
25790:  greatest_lower_bound 15 2 2 0,2
25790:  multiply 18 2 0 
25789:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25789:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25789:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25789: Goal:
25789:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
25789: Order:
25789:   kbo
25789: Leaf order:
25789:  a 2 0 2 1,1,2
25789:  identity 5 0 3 2,1,2
25789:  inverse 2 1 1 0,2,2
25789:  least_upper_bound 14 2 1 0,1,2
25789:  greatest_lower_bound 15 2 2 0,2
25789:  multiply 18 2 0 
% SZS status Timeout for GRP183-1.p
NO CLASH, using fixed ground order
25806: Facts:
25806:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25806:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25806:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25806:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25806:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25806:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25806:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25806:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25806:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25806:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25806:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25806:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25806:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25806:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25806:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25806: Goal:
25806:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25806: Order:
25806:   nrkbo
25806: Leaf order:
25806:  a 2 0 2 1,1,2
25806:  identity 5 0 3 2,1,2
25806:  inverse 2 1 1 0,1,2,2
25806:  greatest_lower_bound 14 2 1 0,2
25806:  least_upper_bound 15 2 2 0,1,2
25806:  multiply 18 2 0 
NO CLASH, using fixed ground order
25807: Facts:
25807:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25807:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25807:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25807:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25807:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25807:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25807:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25807:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25807:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25807:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25807:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25807:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25807:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25807:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25807:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25807: Goal:
25807:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25807: Order:
25807:   kbo
25807: Leaf order:
25807:  a 2 0 2 1,1,2
25807:  identity 5 0 3 2,1,2
25807:  inverse 2 1 1 0,1,2,2
25807:  greatest_lower_bound 14 2 1 0,2
25807:  least_upper_bound 15 2 2 0,1,2
25807:  multiply 18 2 0 
NO CLASH, using fixed ground order
25808: Facts:
25808:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25808:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25808:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25808:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25808:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25808:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25808:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25808:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25808:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25808:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25808:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25808:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25808:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25808:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25808:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25808: Goal:
25808:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25808: Order:
25808:   lpo
25808: Leaf order:
25808:  a 2 0 2 1,1,2
25808:  identity 5 0 3 2,1,2
25808:  inverse 2 1 1 0,1,2,2
25808:  greatest_lower_bound 14 2 1 0,2
25808:  least_upper_bound 15 2 2 0,1,2
25808:  multiply 18 2 0 
% SZS status Timeout for GRP183-3.p
NO CLASH, using fixed ground order
25839: Facts:
25839:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25839:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25839:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25839:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25839:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25839:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25839:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25839:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25839:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25839:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25839:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25839:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25839:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25839:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25839:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25839:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
25839:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
25839:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
25839: Goal:
25839:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25839: Order:
25839:   nrkbo
25839: Leaf order:
25839:  a 2 0 2 1,1,2
25839:  identity 7 0 3 2,1,2
25839:  inverse 8 1 1 0,1,2,2
25839:  greatest_lower_bound 14 2 1 0,2
25839:  least_upper_bound 15 2 2 0,1,2
25839:  multiply 20 2 0 
NO CLASH, using fixed ground order
25840: Facts:
25840:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25840:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25840:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25840:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
NO CLASH, using fixed ground order
25841: Facts:
25841:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25841:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25841:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25841:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25841:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25841:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25841:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25841:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25841:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25841:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25841:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25841:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25841:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25841:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25841:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25841:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
25841:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
25841:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
25841: Goal:
25841:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25841: Order:
25841:   lpo
25841: Leaf order:
25841:  a 2 0 2 1,1,2
25841:  identity 7 0 3 2,1,2
25841:  inverse 8 1 1 0,1,2,2
25841:  greatest_lower_bound 14 2 1 0,2
25841:  least_upper_bound 15 2 2 0,1,2
25841:  multiply 20 2 0 
25840:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25840:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25840:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25840:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25840:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25840:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25840:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25840:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25840:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25840:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25840:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25840:  Id :  17, {_}: inverse identity =>= identity [] by p20x_1
25840:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20x_1 ?51
25840:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20x_3 ?53 ?54
25840: Goal:
25840:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (least_upper_bound (inverse a) identity)
          =>=
          identity
          [] by prove_20x
25840: Order:
25840:   kbo
25840: Leaf order:
25840:  a 2 0 2 1,1,2
25840:  identity 7 0 3 2,1,2
25840:  inverse 8 1 1 0,1,2,2
25840:  greatest_lower_bound 14 2 1 0,2
25840:  least_upper_bound 15 2 2 0,1,2
25840:  multiply 20 2 0 
% SZS status Timeout for GRP183-4.p
NO CLASH, using fixed ground order
25861: Facts:
25861:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25861:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25861:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25861:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25861:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25861:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25861:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25861:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25861:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25861:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25861:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25861:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25861:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25861:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25861:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25861: Goal:
25861:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
25861: Order:
25861:   nrkbo
25861: Leaf order:
25861:  a 4 0 4 1,1,2
25861:  identity 6 0 4 2,1,2
25861:  inverse 3 1 2 0,2,2
25861:  least_upper_bound 15 2 2 0,1,2
25861:  greatest_lower_bound 15 2 2 0,1,2,2
25861:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
25862: Facts:
25862:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25862:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25862:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25862:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25862:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25862:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25862:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25862:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25862:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25862:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25862:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25862:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25862:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25862:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25862:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25862: Goal:
25862:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
25862: Order:
25862:   kbo
25862: Leaf order:
25862:  a 4 0 4 1,1,2
25862:  identity 6 0 4 2,1,2
25862:  inverse 3 1 2 0,2,2
25862:  least_upper_bound 15 2 2 0,1,2
25862:  greatest_lower_bound 15 2 2 0,1,2,2
25862:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
25863: Facts:
25863:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25863:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25863:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25863:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25863:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25863:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25863:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25863:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25863:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25863:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25863:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25863:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25863:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25863:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25863:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25863: Goal:
25863:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21
25863: Order:
25863:   lpo
25863: Leaf order:
25863:  a 4 0 4 1,1,2
25863:  identity 6 0 4 2,1,2
25863:  inverse 3 1 2 0,2,2
25863:  least_upper_bound 15 2 2 0,1,2
25863:  greatest_lower_bound 15 2 2 0,1,2,2
25863:  multiply 20 2 2 0,2
% SZS status Timeout for GRP184-1.p
NO CLASH, using fixed ground order
25898: Facts:
25898:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25898:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25898:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25898:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25898:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25898:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25898:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25898:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25898:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25898:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25898:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25898:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25898:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25898:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25898:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25898: Goal:
25898:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
25898: Order:
25898:   nrkbo
25898: Leaf order:
25898:  a 4 0 4 1,1,2
25898:  identity 6 0 4 2,1,2
25898:  inverse 3 1 2 0,2,2
25898:  least_upper_bound 15 2 2 0,1,2
25898:  greatest_lower_bound 15 2 2 0,1,2,2
25898:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
25899: Facts:
25899:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25899:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25899:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25899:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25899:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25899:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25899:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25899:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25899:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25899:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25899:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25899:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25899:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25899:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25899:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25899: Goal:
25899:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
25899: Order:
25899:   kbo
25899: Leaf order:
25899:  a 4 0 4 1,1,2
25899:  identity 6 0 4 2,1,2
25899:  inverse 3 1 2 0,2,2
25899:  least_upper_bound 15 2 2 0,1,2
25899:  greatest_lower_bound 15 2 2 0,1,2,2
25899:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
25900: Facts:
25900:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25900:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25900:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25900:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25900:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25900:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25900:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25900:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25900:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25900:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25900:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25900:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25900:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25900:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25900:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25900: Goal:
25900:  Id :   1, {_}:
          multiply (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =<=
          multiply (inverse (greatest_lower_bound a identity))
            (least_upper_bound a identity)
          [] by prove_p21x
25900: Order:
25900:   lpo
25900: Leaf order:
25900:  a 4 0 4 1,1,2
25900:  identity 6 0 4 2,1,2
25900:  inverse 3 1 2 0,2,2
25900:  least_upper_bound 15 2 2 0,1,2
25900:  greatest_lower_bound 15 2 2 0,1,2,2
25900:  multiply 20 2 2 0,2
% SZS status Timeout for GRP184-3.p
NO CLASH, using fixed ground order
25933: Facts:
25933:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25933:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25933:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25933:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25933:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25933:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25933:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25933:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25933:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25933:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25933:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25933:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25933:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
NO CLASH, using fixed ground order
25934: Facts:
25934:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25934:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25934:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25934:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25934:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25934:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25934:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25934:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25934:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25934:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25934:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25934:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25934:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25934:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25934:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25934: Goal:
25934:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25934: Order:
25934:   lpo
25934: Leaf order:
25934:  a 3 0 3 1,1,1,2
25934:  b 3 0 3 2,1,1,2
25934:  identity 6 0 4 2,1,2
25934:  inverse 1 1 0 
25934:  greatest_lower_bound 14 2 1 0,2
25934:  least_upper_bound 17 2 4 0,1,2
25934:  multiply 21 2 3 0,1,1,2
NO CLASH, using fixed ground order
25932: Facts:
25932:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25932:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25932:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25932:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25932:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25932:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25932:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25932:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25932:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25932:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25932:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25932:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25932:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25932:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25932:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25932: Goal:
25932:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25932: Order:
25932:   nrkbo
25932: Leaf order:
25932:  a 3 0 3 1,1,1,2
25932:  b 3 0 3 2,1,1,2
25932:  identity 6 0 4 2,1,2
25932:  inverse 1 1 0 
25932:  greatest_lower_bound 14 2 1 0,2
25932:  least_upper_bound 17 2 4 0,1,2
25932:  multiply 21 2 3 0,1,1,2
25933:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25933:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25933: Goal:
25933:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25933: Order:
25933:   kbo
25933: Leaf order:
25933:  a 3 0 3 1,1,1,2
25933:  b 3 0 3 2,1,1,2
25933:  identity 6 0 4 2,1,2
25933:  inverse 1 1 0 
25933:  greatest_lower_bound 14 2 1 0,2
25933:  least_upper_bound 17 2 4 0,1,2
25933:  multiply 21 2 3 0,1,1,2
Statistics :
Max weight : 21
Found proof, 1.351481s
% SZS status Unsatisfiable for GRP185-3.p
% SZS output start CNFRefutation for GRP185-3.p
Id : 108, {_}: greatest_lower_bound ?251 (least_upper_bound ?251 ?252) =>= ?251 [252, 251] by glb_absorbtion ?251 ?252
Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
Id :  21, {_}: multiply (multiply ?57 ?58) ?59 =>= multiply ?57 (multiply ?58 ?59) [59, 58, 57] by associativity ?57 ?58 ?59
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id :  23, {_}: multiply identity ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Super 21 with 3 at 1,2
Id : 392, {_}: ?594 =<= multiply (inverse ?595) (multiply ?595 ?594) [595, 594] by Demod 23 with 2 at 2
Id : 394, {_}: ?599 =<= multiply (inverse (inverse ?599)) identity [599] by Super 392 with 3 at 2,3
Id :  27, {_}: ?64 =<= multiply (inverse ?65) (multiply ?65 ?64) [65, 64] by Demod 23 with 2 at 2
Id : 400, {_}: multiply ?621 ?622 =<= multiply (inverse (inverse ?621)) ?622 [622, 621] by Super 392 with 27 at 2,3
Id : 525, {_}: ?599 =<= multiply ?599 identity [599] by Demod 394 with 400 at 3
Id : 815, {_}: greatest_lower_bound ?1092 (least_upper_bound ?1093 ?1092) =>= ?1092 [1093, 1092] by Super 108 with 6 at 2,2
Id : 822, {_}: greatest_lower_bound ?1112 (least_upper_bound ?1113 (least_upper_bound ?1114 ?1112)) =>= ?1112 [1114, 1113, 1112] by Super 815 with 8 at 2,2
Id : 2353, {_}: least_upper_bound identity (multiply a b) === least_upper_bound identity (multiply a b) [] by Demod 2352 with 822 at 2
Id : 2352, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2351 with 8 at 2,2,2
Id : 2351, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound b (least_upper_bound (least_upper_bound a identity) (multiply a b))) =>= least_upper_bound identity (multiply a b) [] by Demod 2350 with 8 at 2,2
Id : 2350, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b)) =>= least_upper_bound identity (multiply a b) [] by Demod 2349 with 6 at 2,2
Id : 2349, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity))) =>= least_upper_bound identity (multiply a b) [] by Demod 2348 with 2 at 2,2,2,2,2
Id : 2348, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2347 with 525 at 1,2,2,2,2
Id : 2347, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2346 with 2 at 1,2,2,2
Id : 2346, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 2345 with 8 at 2,2
Id : 2345, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity))) =>= least_upper_bound identity (multiply a b) [] by Demod 2344 with 15 at 2,2,2
Id : 2344, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 2343 with 15 at 1,2,2
Id : 2343, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 2342 with 6 at 3
Id : 2342, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 2341 with 13 at 2,2
Id : 2341, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 1 with 6 at 1,2
Id :   1, {_}: greatest_lower_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by prove_p22b
% SZS output end CNFRefutation for GRP185-3.p
25934: solved GRP185-3.p in 0.66004 using lpo
25934: status Unsatisfiable for GRP185-3.p
NO CLASH, using fixed ground order
25939: Facts:
25939:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25939:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25939:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25939:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25939:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25939:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25939:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25939:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25939:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25939:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25939:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25939:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25939:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25939:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25939:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25939:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
25939:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
25939:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
25939: Goal:
25939:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25939: Order:
25939:   nrkbo
25939: Leaf order:
25939:  a 3 0 3 1,1,1,2
25939:  b 3 0 3 2,1,1,2
25939:  identity 8 0 4 2,1,2
25939:  inverse 7 1 0 
25939:  greatest_lower_bound 14 2 1 0,2
25939:  least_upper_bound 17 2 4 0,1,2
25939:  multiply 23 2 3 0,1,1,2
NO CLASH, using fixed ground order
25940: Facts:
25940:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25940:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25940:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25940:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25940:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25940:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25940:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25940:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25940:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25940:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25940:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25940:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25940:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25940:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25940:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25940:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
25940:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
25940:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
25940: Goal:
25940:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25940: Order:
25940:   kbo
25940: Leaf order:
25940:  a 3 0 3 1,1,1,2
25940:  b 3 0 3 2,1,1,2
25940:  identity 8 0 4 2,1,2
25940:  inverse 7 1 0 
25940:  greatest_lower_bound 14 2 1 0,2
25940:  least_upper_bound 17 2 4 0,1,2
25940:  multiply 23 2 3 0,1,1,2
NO CLASH, using fixed ground order
25941: Facts:
25941:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25941:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25941:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25941:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25941:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25941:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25941:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25941:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25941:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25941:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25941:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25941:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25941:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25941:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25941:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25941:  Id :  17, {_}: inverse identity =>= identity [] by p22b_1
25941:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
25941:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p22b_3 ?53 ?54
25941: Goal:
25941:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound (multiply a b) identity)
            (multiply (least_upper_bound a identity)
              (least_upper_bound b identity))
          =>=
          least_upper_bound (multiply a b) identity
          [] by prove_p22b
25941: Order:
25941:   lpo
25941: Leaf order:
25941:  a 3 0 3 1,1,1,2
25941:  b 3 0 3 2,1,1,2
25941:  identity 8 0 4 2,1,2
25941:  inverse 7 1 0 
25941:  greatest_lower_bound 14 2 1 0,2
25941:  least_upper_bound 17 2 4 0,1,2
25941:  multiply 23 2 3 0,1,1,2
Statistics :
Max weight : 21
Found proof, 0.930082s
% SZS status Unsatisfiable for GRP185-4.p
% SZS output start CNFRefutation for GRP185-4.p
Id : 111, {_}: greatest_lower_bound ?257 (least_upper_bound ?257 ?258) =>= ?257 [258, 257] by glb_absorbtion ?257 ?258
Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p22b_2 ?51
Id :  17, {_}: inverse identity =>= identity [] by p22b_1
Id : 338, {_}: inverse (multiply ?520 ?521) =?= multiply (inverse ?521) (inverse ?520) [521, 520] by p22b_3 ?520 ?521
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   8, {_}: least_upper_bound ?20 (least_upper_bound ?21 ?22) =<= least_upper_bound (least_upper_bound ?20 ?21) ?22 [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
Id :  15, {_}: multiply (least_upper_bound ?42 ?43) ?44 =>= least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44) [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
Id :  13, {_}: multiply ?34 (least_upper_bound ?35 ?36) =>= least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36) [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
Id :   6, {_}: least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13 [14, 13] by symmetry_of_lub ?13 ?14
Id : 339, {_}: inverse (multiply identity ?523) =<= multiply (inverse ?523) identity [523] by Super 338 with 17 at 2,3
Id : 372, {_}: inverse ?569 =<= multiply (inverse ?569) identity [569] by Demod 339 with 2 at 1,2
Id : 374, {_}: inverse (inverse ?572) =<= multiply ?572 identity [572] by Super 372 with 18 at 1,3
Id : 382, {_}: ?572 =<= multiply ?572 identity [572] by Demod 374 with 18 at 2
Id : 704, {_}: greatest_lower_bound ?881 (least_upper_bound ?882 ?881) =>= ?881 [882, 881] by Super 111 with 6 at 2,2
Id : 711, {_}: greatest_lower_bound ?901 (least_upper_bound ?902 (least_upper_bound ?903 ?901)) =>= ?901 [903, 902, 901] by Super 704 with 8 at 2,2
Id : 1908, {_}: least_upper_bound identity (multiply a b) === least_upper_bound identity (multiply a b) [] by Demod 1907 with 711 at 2
Id : 1907, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound b (least_upper_bound a (least_upper_bound identity (multiply a b)))) =>= least_upper_bound identity (multiply a b) [] by Demod 1906 with 8 at 2,2,2
Id : 1906, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound b (least_upper_bound (least_upper_bound a identity) (multiply a b))) =>= least_upper_bound identity (multiply a b) [] by Demod 1905 with 8 at 2,2
Id : 1905, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound b (least_upper_bound a identity)) (multiply a b)) =>= least_upper_bound identity (multiply a b) [] by Demod 1904 with 6 at 2,2
Id : 1904, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a identity))) =>= least_upper_bound identity (multiply a b) [] by Demod 1903 with 2 at 2,2,2,2,2
Id : 1903, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound a (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 1902 with 382 at 1,2,2,2,2
Id : 1902, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound b (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 1901 with 2 at 1,2,2,2
Id : 1901, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply a b) (least_upper_bound (multiply identity b) (least_upper_bound (multiply a identity) (multiply identity identity)))) =>= least_upper_bound identity (multiply a b) [] by Demod 1900 with 8 at 2,2
Id : 1900, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (least_upper_bound (multiply a identity) (multiply identity identity))) =>= least_upper_bound identity (multiply a b) [] by Demod 1899 with 15 at 2,2,2
Id : 1899, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (least_upper_bound (multiply a b) (multiply identity b)) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 1898 with 15 at 1,2,2
Id : 1898, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound identity (multiply a b) [] by Demod 1897 with 6 at 3
Id : 1897, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (least_upper_bound (multiply (least_upper_bound a identity) b) (multiply (least_upper_bound a identity) identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 1896 with 13 at 2,2
Id : 1896, {_}: greatest_lower_bound (least_upper_bound identity (multiply a b)) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by Demod 1 with 6 at 1,2
Id :   1, {_}: greatest_lower_bound (least_upper_bound (multiply a b) identity) (multiply (least_upper_bound a identity) (least_upper_bound b identity)) =>= least_upper_bound (multiply a b) identity [] by prove_p22b
% SZS output end CNFRefutation for GRP185-4.p
25941: solved GRP185-4.p in 0.432027 using lpo
25941: status Unsatisfiable for GRP185-4.p
NO CLASH, using fixed ground order
25948: Facts:
25948:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25948:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25948:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25948:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25948:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25948:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25948:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25948:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25948:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25948:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25948:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25948:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25948:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25948:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25948:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25948:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
25948:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
25948:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
25948: Goal:
25948:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
25948: Order:
25948:   nrkbo
25948: Leaf order:
25948:  b 2 0 2 2,1,2
25948:  a 3 0 3 1,1,2
25948:  identity 5 0 1 2,2
25948:  inverse 9 1 2 0,2,3
25948:  greatest_lower_bound 14 2 1 0,1,2,3
25948:  least_upper_bound 14 2 1 0,2
25948:  multiply 22 2 2 0,1,2
NO CLASH, using fixed ground order
25950: Facts:
25950:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25950:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25950:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25950:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25950:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25950:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25950:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25950:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25950:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25950:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25950:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25950:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25950:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25950:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25950:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25950:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
25950:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
25950:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
25950: Goal:
25950:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
25950: Order:
25950:   lpo
25950: Leaf order:
25950:  b 2 0 2 2,1,2
25950:  a 3 0 3 1,1,2
25950:  identity 5 0 1 2,2
25950:  inverse 9 1 2 0,2,3
25950:  greatest_lower_bound 14 2 1 0,1,2,3
25950:  least_upper_bound 14 2 1 0,2
25950:  multiply 22 2 2 0,1,2
NO CLASH, using fixed ground order
25949: Facts:
25949:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25949:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25949:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25949:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25949:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25949:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25949:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25949:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25949:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25949:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25949:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25949:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25949:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25949:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25949:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25949:  Id :  17, {_}: inverse identity =>= identity [] by p23_1
25949:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p23_2 ?51
25949:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p23_3 ?53 ?54
25949: Goal:
25949:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
25949: Order:
25949:   kbo
25949: Leaf order:
25949:  b 2 0 2 2,1,2
25949:  a 3 0 3 1,1,2
25949:  identity 5 0 1 2,2
25949:  inverse 9 1 2 0,2,3
25949:  greatest_lower_bound 14 2 1 0,1,2,3
25949:  least_upper_bound 14 2 1 0,2
25949:  multiply 22 2 2 0,1,2
% SZS status Timeout for GRP186-2.p
NO CLASH, using fixed ground order
26073: Facts:
26073:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26073:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
26073:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =?=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
26073: Goal:
26073:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
26073: Order:
26073:   nrkbo
26073: Leaf order:
26073:  identity 2 0 0 
26073:  a 2 0 2 1,1,1,2
26073:  c 2 0 2 2,1,2
26073:  b 4 0 4 2,1,1,2
26073:  left_inverse 1 1 0 
26073:  multiply 14 2 6 0,2
NO CLASH, using fixed ground order
26074: Facts:
26074:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26074:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
26074:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =>=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
26074: Goal:
26074:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
26074: Order:
26074:   kbo
26074: Leaf order:
26074:  identity 2 0 0 
26074:  a 2 0 2 1,1,1,2
26074:  c 2 0 2 2,1,2
26074:  b 4 0 4 2,1,1,2
26074:  left_inverse 1 1 0 
26074:  multiply 14 2 6 0,2
NO CLASH, using fixed ground order
26075: Facts:
26075:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26075:  Id :   3, {_}:
          multiply (left_inverse ?4) ?4 =>= identity
          [4] by left_inverse ?4
26075:  Id :   4, {_}:
          multiply (multiply ?6 (multiply ?7 ?8)) ?6
          =>=
          multiply (multiply ?6 ?7) (multiply ?8 ?6)
          [8, 7, 6] by moufang1 ?6 ?7 ?8
26075: Goal:
26075:  Id :   1, {_}:
          multiply (multiply (multiply a b) c) b
          =>=
          multiply a (multiply b (multiply c b))
          [] by prove_moufang2
26075: Order:
26075:   lpo
26075: Leaf order:
26075:  identity 2 0 0 
26075:  a 2 0 2 1,1,1,2
26075:  c 2 0 2 2,1,2
26075:  b 4 0 4 2,1,1,2
26075:  left_inverse 1 1 0 
26075:  multiply 14 2 6 0,2
% SZS status Timeout for GRP204-1.p
CLASH, statistics insufficient
26204: Facts:
26204:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26204:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
26204:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
26204:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
26204:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
26204:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
26204:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
26204:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
26204:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =?=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
26204: Goal:
26204:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
26204: Order:
26204:   nrkbo
26204: Leaf order:
26204:  y 2 0 2 1,1,2,2
26204:  z 2 0 2 2,1,2,2
26204:  identity 4 0 0 
26204:  x 4 0 4 1,2
26204:  right_inverse 1 1 0 
26204:  left_inverse 1 1 0 
26204:  left_division 2 2 0 
26204:  right_division 2 2 0 
26204:  multiply 20 2 6 0,2
CLASH, statistics insufficient
26205: Facts:
26205:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26205:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
26205:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
26205:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
26205:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
26205:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
26205:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
26205:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
26205:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
26205: Goal:
26205:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
26205: Order:
26205:   kbo
26205: Leaf order:
26205:  y 2 0 2 1,1,2,2
26205:  z 2 0 2 2,1,2,2
26205:  identity 4 0 0 
26205:  x 4 0 4 1,2
26205:  right_inverse 1 1 0 
26205:  left_inverse 1 1 0 
26205:  left_division 2 2 0 
26205:  right_division 2 2 0 
26205:  multiply 20 2 6 0,2
CLASH, statistics insufficient
26206: Facts:
26206:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
26206:  Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
26206:  Id :   4, {_}:
          multiply ?6 (left_division ?6 ?7) =>= ?7
          [7, 6] by multiply_left_division ?6 ?7
26206:  Id :   5, {_}:
          left_division ?9 (multiply ?9 ?10) =>= ?10
          [10, 9] by left_division_multiply ?9 ?10
26206:  Id :   6, {_}:
          multiply (right_division ?12 ?13) ?13 =>= ?12
          [13, 12] by multiply_right_division ?12 ?13
26206:  Id :   7, {_}:
          right_division (multiply ?15 ?16) ?16 =>= ?15
          [16, 15] by right_division_multiply ?15 ?16
26206:  Id :   8, {_}:
          multiply ?18 (right_inverse ?18) =>= identity
          [18] by right_inverse ?18
26206:  Id :   9, {_}:
          multiply (left_inverse ?20) ?20 =>= identity
          [20] by left_inverse ?20
26206:  Id :  10, {_}:
          multiply (multiply (multiply ?22 ?23) ?22) ?24
          =>=
          multiply ?22 (multiply ?23 (multiply ?22 ?24))
          [24, 23, 22] by moufang3 ?22 ?23 ?24
26206: Goal:
26206:  Id :   1, {_}:
          multiply x (multiply (multiply y z) x)
          =<=
          multiply (multiply x y) (multiply z x)
          [] by prove_moufang4
26206: Order:
26206:   lpo
26206: Leaf order:
26206:  y 2 0 2 1,1,2,2
26206:  z 2 0 2 2,1,2,2
26206:  identity 4 0 0 
26206:  x 4 0 4 1,2
26206:  right_inverse 1 1 0 
26206:  left_inverse 1 1 0 
26206:  left_division 2 2 0 
26206:  right_division 2 2 0 
26206:  multiply 20 2 6 0,2
Statistics :
Max weight : 20
Found proof, 29.317631s
% SZS status Unsatisfiable for GRP205-1.p
% SZS output start CNFRefutation for GRP205-1.p
Id :  56, {_}: multiply (multiply (multiply ?126 ?127) ?126) ?128 =>= multiply ?126 (multiply ?127 (multiply ?126 ?128)) [128, 127, 126] by moufang3 ?126 ?127 ?128
Id :   4, {_}: multiply ?6 (left_division ?6 ?7) =>= ?7 [7, 6] by multiply_left_division ?6 ?7
Id :   9, {_}: multiply (left_inverse ?20) ?20 =>= identity [20] by left_inverse ?20
Id :  22, {_}: left_division ?48 (multiply ?48 ?49) =>= ?49 [49, 48] by left_division_multiply ?48 ?49
Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
Id :   5, {_}: left_division ?9 (multiply ?9 ?10) =>= ?10 [10, 9] by left_division_multiply ?9 ?10
Id :   8, {_}: multiply ?18 (right_inverse ?18) =>= identity [18] by right_inverse ?18
Id :   6, {_}: multiply (right_division ?12 ?13) ?13 =>= ?12 [13, 12] by multiply_right_division ?12 ?13
Id :  10, {_}: multiply (multiply (multiply ?22 ?23) ?22) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by moufang3 ?22 ?23 ?24
Id :   3, {_}: multiply ?4 identity =>= ?4 [4] by right_identity ?4
Id :   7, {_}: right_division (multiply ?15 ?16) ?16 =>= ?15 [16, 15] by right_division_multiply ?15 ?16
Id :  53, {_}: multiply ?115 (multiply ?116 (multiply ?115 identity)) =>= multiply (multiply ?115 ?116) ?115 [116, 115] by Super 3 with 10 at 2
Id :  70, {_}: multiply ?115 (multiply ?116 ?115) =<= multiply (multiply ?115 ?116) ?115 [116, 115] by Demod 53 with 3 at 2,2,2
Id : 889, {_}: right_division (multiply ?1099 (multiply ?1100 ?1099)) ?1099 =>= multiply ?1099 ?1100 [1100, 1099] by Super 7 with 70 at 1,2
Id : 895, {_}: right_division (multiply ?1115 ?1116) ?1115 =<= multiply ?1115 (right_division ?1116 ?1115) [1116, 1115] by Super 889 with 6 at 2,1,2
Id :  55, {_}: right_division (multiply ?122 (multiply ?123 (multiply ?122 ?124))) ?124 =>= multiply (multiply ?122 ?123) ?122 [124, 123, 122] by Super 7 with 10 at 1,2
Id : 2553, {_}: right_division (multiply ?3478 (multiply ?3479 (multiply ?3478 ?3480))) ?3480 =>= multiply ?3478 (multiply ?3479 ?3478) [3480, 3479, 3478] by Demod 55 with 70 at 3
Id : 647, {_}: multiply ?831 (multiply ?832 ?831) =<= multiply (multiply ?831 ?832) ?831 [832, 831] by Demod 53 with 3 at 2,2,2
Id : 654, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= multiply identity ?850 [850] by Super 647 with 8 at 1,3
Id : 677, {_}: multiply ?850 (multiply (right_inverse ?850) ?850) =>= ?850 [850] by Demod 654 with 2 at 3
Id : 763, {_}: left_division ?991 ?991 =<= multiply (right_inverse ?991) ?991 [991] by Super 5 with 677 at 2,2
Id :  24, {_}: left_division ?53 ?53 =>= identity [53] by Super 22 with 3 at 2,2
Id : 789, {_}: identity =<= multiply (right_inverse ?991) ?991 [991] by Demod 763 with 24 at 2
Id : 816, {_}: right_division identity ?1047 =>= right_inverse ?1047 [1047] by Super 7 with 789 at 1,2
Id :  45, {_}: right_division identity ?99 =>= left_inverse ?99 [99] by Super 7 with 9 at 1,2
Id : 843, {_}: left_inverse ?1047 =<= right_inverse ?1047 [1047] by Demod 816 with 45 at 2
Id : 857, {_}: multiply ?18 (left_inverse ?18) =>= identity [18] by Demod 8 with 843 at 2,2
Id : 2562, {_}: right_division (multiply ?3513 (multiply ?3514 identity)) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Super 2553 with 857 at 2,2,1,2
Id : 2621, {_}: right_division (multiply ?3513 ?3514) (left_inverse ?3513) =>= multiply ?3513 (multiply ?3514 ?3513) [3514, 3513] by Demod 2562 with 3 at 2,1,2
Id : 2806, {_}: right_division (multiply (left_inverse ?3781) (multiply ?3781 ?3782)) (left_inverse ?3781) =>= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Super 895 with 2621 at 2,3
Id :  52, {_}: multiply ?111 (multiply ?112 (multiply ?111 (left_division (multiply (multiply ?111 ?112) ?111) ?113))) =>= ?113 [113, 112, 111] by Super 4 with 10 at 2
Id : 963, {_}: multiply ?1216 (multiply ?1217 (multiply ?1216 (left_division (multiply ?1216 (multiply ?1217 ?1216)) ?1218))) =>= ?1218 [1218, 1217, 1216] by Demod 52 with 70 at 1,2,2,2,2
Id : 970, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division (multiply ?1242 identity) ?1243))) =>= ?1243 [1243, 1242] by Super 963 with 9 at 2,1,2,2,2,2
Id : 1030, {_}: multiply ?1242 (multiply (left_inverse ?1242) (multiply ?1242 (left_division ?1242 ?1243))) =>= ?1243 [1243, 1242] by Demod 970 with 3 at 1,2,2,2,2
Id : 1031, {_}: multiply ?1242 (multiply (left_inverse ?1242) ?1243) =>= ?1243 [1243, 1242] by Demod 1030 with 4 at 2,2,2
Id : 1164, {_}: left_division ?1548 ?1549 =<= multiply (left_inverse ?1548) ?1549 [1549, 1548] by Super 5 with 1031 at 2,2
Id : 2852, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =<= multiply (left_inverse ?3781) (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2806 with 1164 at 1,2
Id : 2853, {_}: right_division (left_division ?3781 (multiply ?3781 ?3782)) (left_inverse ?3781) =>= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3782, 3781] by Demod 2852 with 1164 at 3
Id : 2854, {_}: right_division ?3782 (left_inverse ?3781) =<= left_division ?3781 (multiply ?3781 (multiply ?3782 ?3781)) [3781, 3782] by Demod 2853 with 5 at 1,2
Id : 2855, {_}: right_division ?3782 (left_inverse ?3781) =>= multiply ?3782 ?3781 [3781, 3782] by Demod 2854 with 5 at 3
Id : 1378, {_}: right_division (left_division ?1827 ?1828) ?1828 =>= left_inverse ?1827 [1828, 1827] by Super 7 with 1164 at 1,2
Id :  28, {_}: left_division (right_division ?62 ?63) ?62 =>= ?63 [63, 62] by Super 5 with 6 at 2,2
Id : 1384, {_}: right_division ?1844 ?1845 =<= left_inverse (right_division ?1845 ?1844) [1845, 1844] by Super 1378 with 28 at 1,2
Id : 3643, {_}: multiply (multiply ?4879 ?4880) ?4881 =<= multiply ?4880 (multiply (left_division ?4880 ?4879) (multiply ?4880 ?4881)) [4881, 4880, 4879] by Super 56 with 4 at 1,1,2
Id : 3648, {_}: multiply (multiply ?4897 ?4898) (left_division ?4898 ?4899) =>= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Super 3643 with 4 at 2,2,3
Id : 2922, {_}: right_division (left_inverse ?3910) ?3911 =>= left_inverse (multiply ?3911 ?3910) [3911, 3910] by Super 1384 with 2855 at 1,3
Id : 3008, {_}: left_inverse (multiply (left_inverse ?4021) ?4022) =>= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Super 2855 with 2922 at 2
Id : 3027, {_}: left_inverse (left_division ?4021 ?4022) =<= multiply (left_inverse ?4022) ?4021 [4022, 4021] by Demod 3008 with 1164 at 1,2
Id : 3028, {_}: left_inverse (left_division ?4021 ?4022) =>= left_division ?4022 ?4021 [4022, 4021] by Demod 3027 with 1164 at 3
Id : 3191, {_}: right_division ?4224 (left_division ?4225 ?4226) =<= multiply ?4224 (left_division ?4226 ?4225) [4226, 4225, 4224] by Super 2855 with 3028 at 2,2
Id : 8019, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (multiply (left_division ?4898 ?4897) ?4899) [4899, 4898, 4897] by Demod 3648 with 3191 at 2
Id : 3187, {_}: left_division (left_division ?4210 ?4211) ?4212 =<= multiply (left_division ?4211 ?4210) ?4212 [4212, 4211, 4210] by Super 1164 with 3028 at 1,3
Id : 8020, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =<= multiply ?4898 (left_division (left_division ?4897 ?4898) ?4899) [4899, 4898, 4897] by Demod 8019 with 3187 at 2,3
Id : 8021, {_}: right_division (multiply ?4897 ?4898) (left_division ?4899 ?4898) =>= right_division ?4898 (left_division ?4899 (left_division ?4897 ?4898)) [4899, 4898, 4897] by Demod 8020 with 3191 at 3
Id : 8034, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= left_inverse (right_division ?9767 (left_division ?9766 (left_division ?9768 ?9767))) [9768, 9767, 9766] by Super 1384 with 8021 at 1,3
Id : 8099, {_}: right_division (left_division ?9766 ?9767) (multiply ?9768 ?9767) =<= right_division (left_division ?9766 (left_division ?9768 ?9767)) ?9767 [9768, 9767, 9766] by Demod 8034 with 1384 at 3
Id : 23672, {_}: right_division (left_division ?25246 (left_inverse ?25247)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25247, 25246] by Super 2855 with 8099 at 2
Id : 2932, {_}: right_division ?3937 (left_inverse ?3938) =>= multiply ?3937 ?3938 [3938, 3937] by Demod 2854 with 5 at 3
Id :  46, {_}: left_division (left_inverse ?101) identity =>= ?101 [101] by Super 5 with 9 at 2,2
Id :  40, {_}: left_division ?91 identity =>= right_inverse ?91 [91] by Super 5 with 8 at 2,2
Id : 426, {_}: right_inverse (left_inverse ?101) =>= ?101 [101] by Demod 46 with 40 at 2
Id : 860, {_}: left_inverse (left_inverse ?101) =>= ?101 [101] by Demod 426 with 843 at 2
Id : 2936, {_}: right_division ?3949 ?3950 =<= multiply ?3949 (left_inverse ?3950) [3950, 3949] by Super 2932 with 860 at 2,2
Id : 3077, {_}: left_division ?4125 (left_inverse ?4126) =>= right_division (left_inverse ?4125) ?4126 [4126, 4125] by Super 1164 with 2936 at 3
Id : 3115, {_}: left_division ?4125 (left_inverse ?4126) =>= left_inverse (multiply ?4126 ?4125) [4126, 4125] by Demod 3077 with 2922 at 3
Id : 23819, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (multiply ?25248 (left_inverse ?25247)) =>= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23672 with 3115 at 1,2
Id : 23820, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= multiply (left_division ?25246 (left_division ?25248 (left_inverse ?25247))) ?25247 [25248, 25246, 25247] by Demod 23819 with 2936 at 2,2
Id : 23821, {_}: right_division (left_inverse (multiply ?25247 ?25246)) (right_division ?25248 ?25247) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25248, 25246, 25247] by Demod 23820 with 3187 at 3
Id : 23822, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_division ?25248 (left_inverse ?25247)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23821 with 2922 at 2
Id : 23823, {_}: left_inverse (multiply (right_division ?25248 ?25247) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25247, 25248] by Demod 23822 with 3115 at 1,1,3
Id : 1167, {_}: multiply ?1556 (multiply (left_inverse ?1556) ?1557) =>= ?1557 [1557, 1556] by Demod 1030 with 4 at 2,2,2
Id : 1177, {_}: multiply ?1584 ?1585 =<= left_division (left_inverse ?1584) ?1585 [1585, 1584] by Super 1167 with 4 at 2,2
Id : 1414, {_}: multiply (right_division ?1873 ?1874) ?1875 =>= left_division (right_division ?1874 ?1873) ?1875 [1875, 1874, 1873] by Super 1177 with 1384 at 1,3
Id : 23824, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =<= left_division (left_division (left_inverse (multiply ?25247 ?25248)) ?25246) ?25247 [25246, 25248, 25247] by Demod 23823 with 1414 at 1,2
Id : 23825, {_}: left_inverse (left_division (right_division ?25247 ?25248) (multiply ?25247 ?25246)) =>= left_division (multiply (multiply ?25247 ?25248) ?25246) ?25247 [25246, 25248, 25247] by Demod 23824 with 1177 at 1,3
Id : 37248, {_}: left_division (multiply ?37773 ?37774) (right_division ?37773 ?37775) =<= left_division (multiply (multiply ?37773 ?37775) ?37774) ?37773 [37775, 37774, 37773] by Demod 23825 with 3028 at 2
Id : 37265, {_}: left_division (multiply ?37844 ?37845) (right_division ?37844 (left_inverse ?37846)) =>= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Super 37248 with 2936 at 1,1,3
Id : 37472, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (multiply (right_division ?37844 ?37846) ?37845) ?37844 [37846, 37845, 37844] by Demod 37265 with 2855 at 2,2
Id : 37473, {_}: left_division (multiply ?37844 ?37845) (multiply ?37844 ?37846) =<= left_division (left_division (right_division ?37846 ?37844) ?37845) ?37844 [37846, 37845, 37844] by Demod 37472 with 1414 at 1,3
Id : 8041, {_}: right_division (multiply ?9794 ?9795) (left_division ?9796 ?9795) =>= right_division ?9795 (left_division ?9796 (left_division ?9794 ?9795)) [9796, 9795, 9794] by Demod 8020 with 3191 at 3
Id : 8054, {_}: right_division (multiply ?9845 (left_inverse ?9846)) (left_inverse (multiply ?9846 ?9847)) =>= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Super 8041 with 3115 at 2,2
Id : 8126, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= right_division (left_inverse ?9846) (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) [9847, 9846, 9845] by Demod 8054 with 2855 at 2
Id : 8127, {_}: multiply (multiply ?9845 (left_inverse ?9846)) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8126 with 2922 at 3
Id : 8128, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (multiply (left_division ?9847 (left_division ?9845 (left_inverse ?9846))) ?9846) [9847, 9846, 9845] by Demod 8127 with 2936 at 1,2
Id : 8129, {_}: multiply (right_division ?9845 ?9846) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9846, 9845] by Demod 8128 with 3187 at 1,3
Id : 8130, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_inverse (left_division (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) ?9846) [9847, 9845, 9846] by Demod 8129 with 1414 at 2
Id : 8131, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_division ?9845 (left_inverse ?9846)) ?9847) [9847, 9845, 9846] by Demod 8130 with 3028 at 3
Id : 8132, {_}: left_division (right_division ?9846 ?9845) (multiply ?9846 ?9847) =<= left_division ?9846 (left_division (left_inverse (multiply ?9846 ?9845)) ?9847) [9847, 9845, 9846] by Demod 8131 with 3115 at 1,2,3
Id : 24031, {_}: left_division (right_division ?25824 ?25825) (multiply ?25824 ?25826) =>= left_division ?25824 (multiply (multiply ?25824 ?25825) ?25826) [25826, 25825, 25824] by Demod 8132 with 1177 at 2,3
Id : 24068, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =<= left_division ?25977 (multiply (multiply ?25977 (left_inverse ?25978)) ?25979) [25979, 25978, 25977] by Super 24031 with 2855 at 1,2
Id : 24287, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (multiply (right_division ?25977 ?25978) ?25979) [25979, 25978, 25977] by Demod 24068 with 2936 at 1,2,3
Id : 24288, {_}: left_division (multiply ?25977 ?25978) (multiply ?25977 ?25979) =>= left_division ?25977 (left_division (right_division ?25978 ?25977) ?25979) [25979, 25978, 25977] by Demod 24287 with 1414 at 2,3
Id : 47819, {_}: left_division ?49234 (left_division (right_division ?49235 ?49234) ?49236) =<= left_division (left_division (right_division ?49236 ?49234) ?49235) ?49234 [49236, 49235, 49234] by Demod 37473 with 24288 at 2
Id : 1246, {_}: multiply (left_inverse ?1641) (multiply ?1642 (left_inverse ?1641)) =>= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Super 70 with 1164 at 1,3
Id : 1310, {_}: left_division ?1641 (multiply ?1642 (left_inverse ?1641)) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1246 with 1164 at 2
Id : 3056, {_}: left_division ?1641 (right_division ?1642 ?1641) =<= multiply (left_division ?1641 ?1642) (left_inverse ?1641) [1642, 1641] by Demod 1310 with 2936 at 2,2
Id : 3057, {_}: left_division ?1641 (right_division ?1642 ?1641) =>= right_division (left_division ?1641 ?1642) ?1641 [1642, 1641] by Demod 3056 with 2936 at 3
Id : 47887, {_}: left_division ?49524 (left_division (right_division (right_division ?49525 (right_division ?49526 ?49524)) ?49524) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Super 47819 with 3057 at 1,3
Id :  59, {_}: multiply (multiply ?136 ?137) ?138 =<= multiply ?137 (multiply (left_division ?137 ?136) (multiply ?137 ?138)) [138, 137, 136] by Super 56 with 4 at 1,1,2
Id : 3632, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= multiply (left_division ?4830 ?4831) (multiply ?4830 ?4832) [4832, 4831, 4830] by Super 5 with 59 at 2,2
Id : 7833, {_}: left_division ?4830 (multiply (multiply ?4831 ?4830) ?4832) =<= left_division (left_division ?4831 ?4830) (multiply ?4830 ?4832) [4832, 4831, 4830] by Demod 3632 with 3187 at 3
Id : 7841, {_}: left_inverse (left_division ?9488 (multiply (multiply ?9489 ?9488) ?9490)) =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9489, 9488] by Super 3028 with 7833 at 1,2
Id : 7910, {_}: left_division (multiply (multiply ?9489 ?9488) ?9490) ?9488 =>= left_division (multiply ?9488 ?9490) (left_division ?9489 ?9488) [9490, 9488, 9489] by Demod 7841 with 3028 at 2
Id : 22545, {_}: left_division (multiply (left_inverse ?23598) ?23599) (left_division ?23600 (left_inverse ?23598)) =>= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Super 3115 with 7910 at 2
Id : 22628, {_}: left_division (left_division ?23598 ?23599) (left_division ?23600 (left_inverse ?23598)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22545 with 1164 at 1,2
Id : 22629, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =<= left_inverse (multiply ?23598 (multiply (multiply ?23600 (left_inverse ?23598)) ?23599)) [23600, 23599, 23598] by Demod 22628 with 3115 at 2,2
Id : 22630, {_}: left_division (left_division ?23598 ?23599) (left_inverse (multiply ?23598 ?23600)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23600, 23599, 23598] by Demod 22629 with 2936 at 1,2,1,3
Id : 22631, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (multiply (right_division ?23600 ?23598) ?23599)) [23599, 23600, 23598] by Demod 22630 with 3115 at 2
Id : 22632, {_}: left_inverse (multiply (multiply ?23598 ?23600) (left_division ?23598 ?23599)) =>= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22631 with 1414 at 2,1,3
Id : 22633, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =<= left_inverse (multiply ?23598 (left_division (right_division ?23598 ?23600) ?23599)) [23599, 23600, 23598] by Demod 22632 with 3191 at 1,2
Id : 22634, {_}: left_inverse (right_division (multiply ?23598 ?23600) (left_division ?23599 ?23598)) =>= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23599, 23600, 23598] by Demod 22633 with 3191 at 1,3
Id : 22635, {_}: right_division (left_division ?23599 ?23598) (multiply ?23598 ?23600) =<= left_inverse (right_division ?23598 (left_division ?23599 (right_division ?23598 ?23600))) [23600, 23598, 23599] by Demod 22634 with 1384 at 2
Id : 33282, {_}: right_division (left_division ?33402 ?33403) (multiply ?33403 ?33404) =<= right_division (left_division ?33402 (right_division ?33403 ?33404)) ?33403 [33404, 33403, 33402] by Demod 22635 with 1384 at 3
Id : 33363, {_}: right_division (left_division (left_inverse ?33737) ?33738) (multiply ?33738 ?33739) =>= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Super 33282 with 1177 at 1,3
Id : 33649, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (multiply ?33737 (right_division ?33738 ?33739)) ?33738 [33739, 33738, 33737] by Demod 33363 with 1177 at 1,2
Id : 2939, {_}: right_division ?3957 (right_division ?3958 ?3959) =<= multiply ?3957 (right_division ?3959 ?3958) [3959, 3958, 3957] by Super 2932 with 1384 at 2,2
Id : 33650, {_}: right_division (multiply ?33737 ?33738) (multiply ?33738 ?33739) =<= right_division (right_division ?33737 (right_division ?33739 ?33738)) ?33738 [33739, 33738, 33737] by Demod 33649 with 2939 at 1,3
Id : 48257, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =<= left_division (right_division (left_division (right_division ?49526 ?49524) ?49525) (right_division ?49526 ?49524)) ?49524 [49526, 49525, 49524] by Demod 47887 with 33650 at 1,2,2
Id : 640, {_}: multiply (multiply ?22 (multiply ?23 ?22)) ?24 =>= multiply ?22 (multiply ?23 (multiply ?22 ?24)) [24, 23, 22] by Demod 10 with 70 at 1,2
Id : 1251, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =<= multiply ?1655 (multiply (left_inverse ?1656) (multiply ?1655 ?1657)) [1657, 1656, 1655] by Super 640 with 1164 at 2,1,2
Id : 1306, {_}: multiply (multiply ?1655 (left_division ?1656 ?1655)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1251 with 1164 at 2,3
Id : 5008, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= multiply ?1655 (left_division ?1656 (multiply ?1655 ?1657)) [1657, 1656, 1655] by Demod 1306 with 3191 at 1,2
Id : 5009, {_}: multiply (right_division ?1655 (left_division ?1655 ?1656)) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5008 with 3191 at 3
Id : 5010, {_}: left_division (right_division (left_division ?1655 ?1656) ?1655) ?1657 =>= right_division ?1655 (left_division (multiply ?1655 ?1657) ?1656) [1657, 1656, 1655] by Demod 5009 with 1414 at 2
Id : 48258, {_}: left_division ?49524 (left_division (right_division (multiply ?49525 ?49524) (multiply ?49524 ?49526)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49526, 49525, 49524] by Demod 48257 with 5010 at 3
Id : 3070, {_}: multiply (multiply (left_inverse ?4103) (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Super 640 with 2936 at 2,1,2
Id : 3126, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= multiply (left_inverse ?4103) (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3070 with 1164 at 1,2
Id : 3127, {_}: multiply (left_division ?4103 (right_division ?4104 ?4103)) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3126 with 1164 at 3
Id : 3128, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =<= left_division ?4103 (multiply ?4104 (multiply (left_inverse ?4103) ?4105)) [4105, 4104, 4103] by Demod 3127 with 3057 at 1,2
Id : 3129, {_}: multiply (right_division (left_division ?4103 ?4104) ?4103) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3128 with 1164 at 2,2,3
Id : 3130, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (multiply ?4104 (left_division ?4103 ?4105)) [4105, 4104, 4103] by Demod 3129 with 1414 at 2
Id : 7047, {_}: left_division (right_division ?4103 (left_division ?4103 ?4104)) ?4105 =>= left_division ?4103 (right_division ?4104 (left_division ?4105 ?4103)) [4105, 4104, 4103] by Demod 3130 with 3191 at 2,3
Id : 7063, {_}: left_division ?8435 (right_division ?8436 (left_division (left_inverse ?8437) ?8435)) =>= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Super 3115 with 7047 at 2
Id : 7165, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (multiply ?8437 (right_division ?8435 (left_division ?8435 ?8436))) [8437, 8436, 8435] by Demod 7063 with 1177 at 2,2,2
Id : 7166, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =<= left_inverse (right_division ?8437 (right_division (left_division ?8435 ?8436) ?8435)) [8437, 8436, 8435] by Demod 7165 with 2939 at 1,3
Id : 7167, {_}: left_division ?8435 (right_division ?8436 (multiply ?8437 ?8435)) =>= right_division (right_division (left_division ?8435 ?8436) ?8435) ?8437 [8437, 8436, 8435] by Demod 7166 with 1384 at 3
Id : 21426, {_}: left_inverse (right_division (right_division (left_division ?22100 ?22101) ?22100) ?22102) =>= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22102, 22101, 22100] by Super 3028 with 7167 at 1,2
Id : 21547, {_}: right_division ?22102 (right_division (left_division ?22100 ?22101) ?22100) =<= left_division (right_division ?22101 (multiply ?22102 ?22100)) ?22100 [22101, 22100, 22102] by Demod 21426 with 1384 at 2
Id : 48259, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (multiply (right_division ?49526 ?49524) ?49524) ?49525) [49525, 49526, 49524] by Demod 48258 with 21547 at 2,2
Id : 48260, {_}: left_division ?49524 (right_division ?49524 (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526)) =>= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49525, 49526, 49524] by Demod 48259 with 1414 at 1,2,3
Id : 3073, {_}: left_division ?4114 (right_division ?4114 ?4115) =>= left_inverse ?4115 [4115, 4114] by Super 5 with 2936 at 2,2
Id : 48261, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =<= right_division (right_division ?49526 ?49524) (left_division (left_division (right_division ?49524 ?49526) ?49524) ?49525) [49524, 49525, 49526] by Demod 48260 with 3073 at 2
Id : 48262, {_}: left_inverse (right_division (left_division ?49526 (multiply ?49525 ?49524)) ?49526) =>= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48261 with 28 at 1,2,3
Id : 48263, {_}: right_division ?49526 (left_division ?49526 (multiply ?49525 ?49524)) =<= right_division (right_division ?49526 ?49524) (left_division ?49526 ?49525) [49524, 49525, 49526] by Demod 48262 with 1384 at 2
Id : 52424, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= left_inverse (right_division ?54688 (left_division ?54688 (multiply ?54689 ?54690))) [54690, 54689, 54688] by Super 1384 with 48263 at 1,3
Id : 52654, {_}: right_division (left_division ?54688 ?54689) (right_division ?54688 ?54690) =<= right_division (left_division ?54688 (multiply ?54689 ?54690)) ?54688 [54690, 54689, 54688] by Demod 52424 with 1384 at 3
Id : 54963, {_}: right_division (left_division (left_inverse ?57654) ?57655) (right_division (left_inverse ?57654) ?57656) =>= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Super 2855 with 52654 at 2
Id : 55156, {_}: right_division (multiply ?57654 ?57655) (right_division (left_inverse ?57654) ?57656) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 54963 with 1177 at 1,2
Id : 55157, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= multiply (left_division (left_inverse ?57654) (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55156 with 2922 at 2,2
Id : 55158, {_}: right_division (multiply ?57654 ?57655) (left_inverse (multiply ?57656 ?57654)) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55157 with 3187 at 3
Id : 55159, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_division (multiply ?57655 ?57656) (left_inverse ?57654)) ?57654 [57656, 57655, 57654] by Demod 55158 with 2855 at 2
Id : 55160, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= left_division (left_inverse (multiply ?57654 (multiply ?57655 ?57656))) ?57654 [57656, 57655, 57654] by Demod 55159 with 3115 at 1,3
Id : 55161, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =<= multiply (multiply ?57654 (multiply ?57655 ?57656)) ?57654 [57656, 57655, 57654] by Demod 55160 with 1177 at 3
Id : 55162, {_}: multiply (multiply ?57654 ?57655) (multiply ?57656 ?57654) =>= multiply ?57654 (multiply (multiply ?57655 ?57656) ?57654) [57656, 57655, 57654] by Demod 55161 with 70 at 3
Id : 56911, {_}: multiply x (multiply (multiply y z) x) =?= multiply x (multiply (multiply y z) x) [] by Demod 1 with 55162 at 3
Id :   1, {_}: multiply x (multiply (multiply y z) x) =<= multiply (multiply x y) (multiply z x) [] by prove_moufang4
% SZS output end CNFRefutation for GRP205-1.p
26205: solved GRP205-1.p in 14.680917 using kbo
26205: status Unsatisfiable for GRP205-1.p
NO CLASH, using fixed ground order
26244: Facts:
26244:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
26244: Goal:
26244:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
26244: Order:
26244:   nrkbo
26244: Leaf order:
26244:  z 2 0 2 1,1,1,2,1,2,2
26244:  u 2 0 2 1,1,2,1,2,1,2,2
26244:  y 2 0 2 1,1,2,2
26244:  x 2 0 2 1,2
26244:  inverse 6 1 3 0,2,2
26244:  multiply 12 2 6 0,2
NO CLASH, using fixed ground order
26245: Facts:
26245:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
26245: Goal:
26245:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
26245: Order:
26245:   kbo
26245: Leaf order:
26245:  z 2 0 2 1,1,1,2,1,2,2
26245:  u 2 0 2 1,1,2,1,2,1,2,2
26245:  y 2 0 2 1,1,2,2
26245:  x 2 0 2 1,2
26245:  inverse 6 1 3 0,2,2
26245:  multiply 12 2 6 0,2
NO CLASH, using fixed ground order
26246: Facts:
26246:  Id :   2, {_}:
          multiply ?2
            (inverse
              (multiply ?3
                (multiply
                  (multiply (multiply ?4 (inverse ?4))
                    (inverse (multiply ?2 ?3))) ?2)))
          =>=
          ?2
          [4, 3, 2] by single_non_axiom ?2 ?3 ?4
26246: Goal:
26246:  Id :   1, {_}:
          multiply x
            (inverse
              (multiply y
                (multiply
                  (multiply (multiply z (inverse z)) (inverse (multiply u y)))
                  x)))
          =>=
          u
          [] by try_prove_this_axiom
26246: Order:
26246:   lpo
26246: Leaf order:
26246:  z 2 0 2 1,1,1,2,1,2,2
26246:  u 2 0 2 1,1,2,1,2,1,2,2
26246:  y 2 0 2 1,1,2,2
26246:  x 2 0 2 1,2
26246:  inverse 6 1 3 0,2,2
26246:  multiply 12 2 6 0,2
% SZS status Timeout for GRP207-1.p
Fatal error: exception Assert_failure("matitaprover.ml", 269, 46)
NO CLASH, using fixed ground order
26289: Facts:
26289:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26289: Goal:
26289:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26289: Order:
26289:   nrkbo
26289: Leaf order:
26289:  a3 2 0 2 1,1,2
26289:  b3 2 0 2 2,1,2
26289:  c3 2 0 2 2,2
26289:  inverse 7 1 0 
26289:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
26290: Facts:
26290:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26290: Goal:
26290:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26290: Order:
26290:   kbo
26290: Leaf order:
26290:  a3 2 0 2 1,1,2
26290:  b3 2 0 2 2,1,2
26290:  c3 2 0 2 2,2
26290:  inverse 7 1 0 
26290:  multiply 10 2 4 0,2
NO CLASH, using fixed ground order
26291: Facts:
26291:  Id :   2, {_}:
          inverse
            (multiply
              (inverse
                (multiply ?2
                  (inverse
                    (multiply (inverse ?3)
                      (inverse
                        (multiply ?4 (inverse (multiply (inverse ?4) ?4))))))))
              (multiply ?2 ?4))
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26291: Goal:
26291:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26291: Order:
26291:   lpo
26291: Leaf order:
26291:  a3 2 0 2 1,1,2
26291:  b3 2 0 2 2,1,2
26291:  c3 2 0 2 2,2
26291:  inverse 7 1 0 
26291:  multiply 10 2 4 0,2
% SZS status Timeout for GRP420-1.p
NO CLASH, using fixed ground order
26320: Facts:
26320:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26320:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
26320:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
26320: Goal:
26320:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26320: Order:
26320:   nrkbo
26320: Leaf order:
26320:  a3 2 0 2 1,1,2
26320:  b3 2 0 2 2,1,2
26320:  c3 2 0 2 2,2
26320:  inverse 1 1 0 
26320:  multiply 5 2 4 0,2
26320:  divide 13 2 0 
NO CLASH, using fixed ground order
26321: Facts:
26321:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26321:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
26321:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
26321: Goal:
26321:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26321: Order:
26321:   kbo
26321: Leaf order:
26321:  a3 2 0 2 1,1,2
26321:  b3 2 0 2 2,1,2
26321:  c3 2 0 2 2,2
26321:  inverse 1 1 0 
26321:  multiply 5 2 4 0,2
26321:  divide 13 2 0 
NO CLASH, using fixed ground order
26322: Facts:
26322:  Id :   2, {_}:
          divide
            (divide (divide ?2 ?2)
              (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4))))
            ?4
          =>=
          ?3
          [4, 3, 2] by single_axiom ?2 ?3 ?4
26322:  Id :   3, {_}:
          multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7)
          [8, 7, 6] by multiply ?6 ?7 ?8
26322:  Id :   4, {_}:
          inverse ?10 =<= divide (divide ?11 ?11) ?10
          [11, 10] by inverse ?10 ?11
26322: Goal:
26322:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
26322: Order:
26322:   lpo
26322: Leaf order:
26322:  a3 2 0 2 1,1,2
26322:  b3 2 0 2 2,1,2
26322:  c3 2 0 2 2,2
26322:  inverse 1 1 0 
26322:  multiply 5 2 4 0,2
26322:  divide 13 2 0 
Statistics :
Max weight : 38
Found proof, 2.679419s
% SZS status Unsatisfiable for GRP453-1.p
% SZS output start CNFRefutation for GRP453-1.p
Id :  35, {_}: inverse ?90 =<= divide (divide ?91 ?91) ?90 [91, 90] by inverse ?90 ?91
Id :   2, {_}: divide (divide (divide ?2 ?2) (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by single_axiom ?2 ?3 ?4
Id :   5, {_}: divide (divide (divide ?13 ?13) (divide ?13 (divide ?14 (divide (divide (divide ?13 ?13) ?13) ?15)))) ?15 =>= ?14 [15, 14, 13] by single_axiom ?13 ?14 ?15
Id :   4, {_}: inverse ?10 =<= divide (divide ?11 ?11) ?10 [11, 10] by inverse ?10 ?11
Id :   3, {_}: multiply ?6 ?7 =<= divide ?6 (divide (divide ?8 ?8) ?7) [8, 7, 6] by multiply ?6 ?7 ?8
Id :  29, {_}: multiply ?6 ?7 =<= divide ?6 (inverse ?7) [7, 6] by Demod 3 with 4 at 2,3
Id :   6, {_}: divide (divide (divide ?17 ?17) (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Super 5 with 2 at 2,2,1,2
Id : 142, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= divide (divide ?20 ?20) (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 6 with 4 at 1,2
Id : 143, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (divide (divide ?20 ?20) ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 142 with 4 at 3
Id : 144, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (divide (divide ?17 ?17) ?17) ?19)))) [20, 19, 18, 17] by Demod 143 with 4 at 1,2,2,1,3
Id : 145, {_}: divide (inverse (divide ?17 ?18)) ?19 =<= inverse (divide ?20 (divide ?18 (divide (inverse ?20) (divide (inverse ?17) ?19)))) [20, 19, 18, 17] by Demod 144 with 4 at 1,2,2,2,1,3
Id :  36, {_}: inverse ?93 =<= divide (inverse (divide ?94 ?94)) ?93 [94, 93] by Super 35 with 4 at 1,3
Id : 226, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (divide (divide ?529 ?529) (divide ?527 (inverse (divide (inverse ?526) ?528)))) [529, 528, 527, 526] by Super 145 with 36 at 2,2,1,3
Id : 249, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (divide ?527 (inverse (divide (inverse ?526) ?528)))) [528, 527, 526] by Demod 226 with 4 at 1,3
Id : 250, {_}: divide (inverse (divide ?526 ?527)) ?528 =<= inverse (inverse (multiply ?527 (divide (inverse ?526) ?528))) [528, 527, 526] by Demod 249 with 29 at 1,1,3
Id :  13, {_}: divide (multiply (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50))) ?50 =>= ?49 [50, 49, 48] by Super 2 with 3 at 1,2
Id :  32, {_}: multiply (divide ?79 ?79) ?80 =>= inverse (inverse ?80) [80, 79] by Super 29 with 4 at 3
Id : 479, {_}: divide (inverse (inverse (divide ?49 (divide (divide (divide (divide ?48 ?48) (divide ?48 ?48)) (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 13 with 32 at 1,2
Id : 480, {_}: divide (inverse (inverse (divide ?49 (divide (inverse (divide ?48 ?48)) ?50)))) ?50 =>= ?49 [50, 48, 49] by Demod 479 with 4 at 1,2,1,1,1,2
Id : 481, {_}: divide (inverse (inverse (divide ?49 (inverse ?50)))) ?50 =>= ?49 [50, 49] by Demod 480 with 36 at 2,1,1,1,2
Id : 482, {_}: divide (inverse (inverse (multiply ?49 ?50))) ?50 =>= ?49 [50, 49] by Demod 481 with 29 at 1,1,1,2
Id : 888, {_}: divide (inverse (divide ?1873 ?1874)) ?1875 =<= inverse (inverse (multiply ?1874 (divide (inverse ?1873) ?1875))) [1875, 1874, 1873] by Demod 249 with 29 at 1,1,3
Id : 903, {_}: divide (inverse (divide (divide ?1940 ?1940) ?1941)) ?1942 =>= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941, 1940] by Super 888 with 36 at 2,1,1,3
Id : 936, {_}: divide (inverse (inverse ?1941)) ?1942 =<= inverse (inverse (multiply ?1941 (inverse ?1942))) [1942, 1941] by Demod 903 with 4 at 1,1,2
Id : 969, {_}: divide (inverse (inverse ?2088)) ?2089 =<= inverse (inverse (multiply ?2088 (inverse ?2089))) [2089, 2088] by Demod 903 with 4 at 1,1,2
Id : 980, {_}: divide (inverse (inverse (divide ?2127 ?2127))) ?2128 =>= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128, 2127] by Super 969 with 32 at 1,1,3
Id : 223, {_}: inverse ?515 =<= divide (inverse (inverse (divide ?516 ?516))) ?515 [516, 515] by Super 4 with 36 at 1,3
Id : 1009, {_}: inverse ?2128 =<= inverse (inverse (inverse (inverse (inverse ?2128)))) [2128] by Demod 980 with 223 at 2
Id : 1026, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= divide ?2199 (inverse ?2200) [2200, 2199] by Super 29 with 1009 at 2,3
Id : 1064, {_}: multiply ?2199 (inverse (inverse (inverse (inverse ?2200)))) =>= multiply ?2199 ?2200 [2200, 2199] by Demod 1026 with 29 at 3
Id : 1096, {_}: divide (inverse (inverse ?2287)) (inverse (inverse (inverse ?2288))) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Super 936 with 1064 at 1,1,3
Id : 1169, {_}: multiply (inverse (inverse ?2287)) (inverse (inverse ?2288)) =>= inverse (inverse (multiply ?2287 ?2288)) [2288, 2287] by Demod 1096 with 29 at 2
Id : 1211, {_}: divide (inverse (inverse (inverse (inverse ?2471)))) (inverse ?2472) =>= inverse (inverse (inverse (inverse (multiply ?2471 ?2472)))) [2472, 2471] by Super 936 with 1169 at 1,1,3
Id : 1253, {_}: multiply (inverse (inverse (inverse (inverse ?2471)))) ?2472 =>= inverse (inverse (inverse (inverse (multiply ?2471 ?2472)))) [2472, 2471] by Demod 1211 with 29 at 2
Id : 1506, {_}: divide (inverse (inverse (inverse (inverse (inverse (inverse (multiply ?3181 ?3182))))))) ?3182 =>= inverse (inverse (inverse (inverse ?3181))) [3182, 3181] by Super 482 with 1253 at 1,1,1,2
Id : 1558, {_}: divide (inverse (inverse (multiply ?3181 ?3182))) ?3182 =>= inverse (inverse (inverse (inverse ?3181))) [3182, 3181] by Demod 1506 with 1009 at 1,2
Id : 1559, {_}: ?3181 =<= inverse (inverse (inverse (inverse ?3181))) [3181] by Demod 1558 with 482 at 2
Id : 1611, {_}: multiply ?3343 (inverse (inverse (inverse ?3344))) =>= divide ?3343 ?3344 [3344, 3343] by Super 29 with 1559 at 2,3
Id : 1683, {_}: divide (inverse (inverse ?3483)) (inverse (inverse ?3484)) =>= inverse (inverse (divide ?3483 ?3484)) [3484, 3483] by Super 936 with 1611 at 1,1,3
Id : 1717, {_}: multiply (inverse (inverse ?3483)) (inverse ?3484) =>= inverse (inverse (divide ?3483 ?3484)) [3484, 3483] by Demod 1683 with 29 at 2
Id : 1782, {_}: divide (inverse (inverse (inverse (inverse (divide ?3605 ?3606))))) (inverse ?3606) =>= inverse (inverse ?3605) [3606, 3605] by Super 482 with 1717 at 1,1,1,2
Id : 1824, {_}: multiply (inverse (inverse (inverse (inverse (divide ?3605 ?3606))))) ?3606 =>= inverse (inverse ?3605) [3606, 3605] by Demod 1782 with 29 at 2
Id : 1825, {_}: multiply (divide ?3605 ?3606) ?3606 =>= inverse (inverse ?3605) [3606, 3605] by Demod 1824 with 1559 at 1,2
Id : 1854, {_}: inverse (inverse ?3731) =<= divide (divide ?3731 (inverse (inverse (inverse ?3732)))) ?3732 [3732, 3731] by Super 1611 with 1825 at 2
Id : 2675, {_}: inverse (inverse ?6008) =<= divide (multiply ?6008 (inverse (inverse ?6009))) ?6009 [6009, 6008] by Demod 1854 with 29 at 1,3
Id : 224, {_}: multiply (inverse (inverse (divide ?518 ?518))) ?519 =>= inverse (inverse ?519) [519, 518] by Super 32 with 36 at 1,2
Id : 2701, {_}: inverse (inverse (inverse (inverse (divide ?6099 ?6099)))) =?= divide (inverse (inverse (inverse (inverse ?6100)))) ?6100 [6100, 6099] by Super 2675 with 224 at 1,3
Id : 2754, {_}: divide ?6099 ?6099 =?= divide (inverse (inverse (inverse (inverse ?6100)))) ?6100 [6100, 6099] by Demod 2701 with 1559 at 2
Id : 2755, {_}: divide ?6099 ?6099 =?= divide ?6100 ?6100 [6100, 6099] by Demod 2754 with 1559 at 1,3
Id : 2822, {_}: divide (inverse (divide ?6299 (divide (inverse ?6300) (divide (inverse ?6299) ?6301)))) ?6301 =?= inverse (divide ?6300 (divide ?6302 ?6302)) [6302, 6301, 6300, 6299] by Super 145 with 2755 at 2,1,3
Id :  30, {_}: divide (inverse (divide ?2 (divide ?3 (divide (divide (divide ?2 ?2) ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 2 with 4 at 1,2
Id :  31, {_}: divide (inverse (divide ?2 (divide ?3 (divide (inverse ?2) ?4)))) ?4 =>= ?3 [4, 3, 2] by Demod 30 with 4 at 1,2,2,1,1,2
Id : 2899, {_}: inverse ?6300 =<= inverse (divide ?6300 (divide ?6302 ?6302)) [6302, 6300] by Demod 2822 with 31 at 2
Id : 2957, {_}: divide ?6663 (divide ?6664 ?6664) =>= inverse (inverse (inverse (inverse ?6663))) [6664, 6663] by Super 1559 with 2899 at 1,1,1,3
Id : 3011, {_}: divide ?6663 (divide ?6664 ?6664) =>= ?6663 [6664, 6663] by Demod 2957 with 1559 at 3
Id : 3087, {_}: divide (inverse (divide ?6934 ?6935)) (divide ?6936 ?6936) =>= inverse (inverse (multiply ?6935 (inverse ?6934))) [6936, 6935, 6934] by Super 250 with 3011 at 2,1,1,3
Id : 3149, {_}: inverse (divide ?6934 ?6935) =<= inverse (inverse (multiply ?6935 (inverse ?6934))) [6935, 6934] by Demod 3087 with 3011 at 2
Id : 3445, {_}: inverse (divide ?7675 ?7676) =<= divide (inverse (inverse ?7676)) ?7675 [7676, 7675] by Demod 3149 with 936 at 3
Id : 1622, {_}: ?3381 =<= inverse (inverse (inverse (inverse ?3381))) [3381] by Demod 1558 with 482 at 2
Id : 1636, {_}: multiply ?3417 (inverse ?3418) =<= inverse (inverse (divide (inverse (inverse ?3417)) ?3418)) [3418, 3417] by Super 1622 with 936 at 1,1,3
Id : 3150, {_}: inverse (divide ?6934 ?6935) =<= divide (inverse (inverse ?6935)) ?6934 [6935, 6934] by Demod 3149 with 936 at 3
Id : 3402, {_}: multiply ?3417 (inverse ?3418) =<= inverse (inverse (inverse (divide ?3418 ?3417))) [3418, 3417] by Demod 1636 with 3150 at 1,1,3
Id : 3466, {_}: inverse (divide ?7752 (inverse (divide ?7753 ?7754))) =>= divide (multiply ?7754 (inverse ?7753)) ?7752 [7754, 7753, 7752] by Super 3445 with 3402 at 1,3
Id : 3559, {_}: inverse (multiply ?7752 (divide ?7753 ?7754)) =<= divide (multiply ?7754 (inverse ?7753)) ?7752 [7754, 7753, 7752] by Demod 3466 with 29 at 1,2
Id : 229, {_}: inverse ?541 =<= divide (inverse (divide ?542 ?542)) ?541 [542, 541] by Super 35 with 4 at 1,3
Id : 236, {_}: inverse ?562 =<= divide (inverse (inverse (inverse (divide ?563 ?563)))) ?562 [563, 562] by Super 229 with 36 at 1,1,3
Id : 3400, {_}: inverse ?562 =<= inverse (divide ?562 (inverse (divide ?563 ?563))) [563, 562] by Demod 236 with 3150 at 3
Id : 3405, {_}: inverse ?562 =<= inverse (multiply ?562 (divide ?563 ?563)) [563, 562] by Demod 3400 with 29 at 1,3
Id : 3088, {_}: multiply ?6938 (divide ?6939 ?6939) =>= inverse (inverse ?6938) [6939, 6938] by Super 1825 with 3011 at 1,2
Id : 3773, {_}: inverse ?562 =<= inverse (inverse (inverse ?562)) [562] by Demod 3405 with 3088 at 1,3
Id : 3776, {_}: multiply ?3343 (inverse ?3344) =>= divide ?3343 ?3344 [3344, 3343] by Demod 1611 with 3773 at 2,2
Id : 4266, {_}: inverse (multiply ?8883 (divide ?8884 ?8885)) =>= divide (divide ?8885 ?8884) ?8883 [8885, 8884, 8883] by Demod 3559 with 3776 at 1,3
Id : 3463, {_}: inverse (divide ?7741 (inverse (inverse ?7742))) =>= divide ?7742 ?7741 [7742, 7741] by Super 3445 with 1559 at 1,3
Id : 3558, {_}: inverse (multiply ?7741 (inverse ?7742)) =>= divide ?7742 ?7741 [7742, 7741] by Demod 3463 with 29 at 1,2
Id : 3777, {_}: inverse (divide ?7741 ?7742) =>= divide ?7742 ?7741 [7742, 7741] by Demod 3558 with 3776 at 1,2
Id : 3787, {_}: divide (divide ?527 ?526) ?528 =<= inverse (inverse (multiply ?527 (divide (inverse ?526) ?528))) [528, 526, 527] by Demod 250 with 3777 at 1,2
Id : 3399, {_}: inverse (divide ?50 (multiply ?49 ?50)) =>= ?49 [49, 50] by Demod 482 with 3150 at 2
Id : 3783, {_}: divide (multiply ?49 ?50) ?50 =>= ?49 [50, 49] by Demod 3399 with 3777 at 2
Id : 1860, {_}: multiply (divide ?3752 ?3753) ?3753 =>= inverse (inverse ?3752) [3753, 3752] by Demod 1824 with 1559 at 1,2
Id : 1869, {_}: multiply (multiply ?3781 ?3782) (inverse ?3782) =>= inverse (inverse ?3781) [3782, 3781] by Super 1860 with 29 at 1,2
Id : 3779, {_}: divide (multiply ?3781 ?3782) ?3782 =>= inverse (inverse ?3781) [3782, 3781] by Demod 1869 with 3776 at 2
Id : 3799, {_}: inverse (inverse ?49) =>= ?49 [49] by Demod 3783 with 3779 at 2
Id : 3800, {_}: divide (divide ?527 ?526) ?528 =<= multiply ?527 (divide (inverse ?526) ?528) [528, 526, 527] by Demod 3787 with 3799 at 3
Id : 4296, {_}: inverse (divide (divide ?9013 ?9014) ?9015) =<= divide (divide ?9015 (inverse ?9014)) ?9013 [9015, 9014, 9013] by Super 4266 with 3800 at 1,2
Id : 4346, {_}: divide ?9015 (divide ?9013 ?9014) =<= divide (divide ?9015 (inverse ?9014)) ?9013 [9014, 9013, 9015] by Demod 4296 with 3777 at 2
Id : 4347, {_}: divide ?9015 (divide ?9013 ?9014) =<= divide (multiply ?9015 ?9014) ?9013 [9014, 9013, 9015] by Demod 4346 with 29 at 1,3
Id : 4244, {_}: inverse (multiply ?7752 (divide ?7753 ?7754)) =>= divide (divide ?7754 ?7753) ?7752 [7754, 7753, 7752] by Demod 3559 with 3776 at 1,3
Id : 4262, {_}: inverse (divide (divide ?8865 ?8866) ?8867) =>= multiply ?8867 (divide ?8866 ?8865) [8867, 8866, 8865] by Super 3799 with 4244 at 1,2
Id : 4303, {_}: divide ?8867 (divide ?8865 ?8866) =>= multiply ?8867 (divide ?8866 ?8865) [8866, 8865, 8867] by Demod 4262 with 3777 at 2
Id : 4889, {_}: multiply ?9015 (divide ?9014 ?9013) =<= divide (multiply ?9015 ?9014) ?9013 [9013, 9014, 9015] by Demod 4347 with 4303 at 2
Id : 4905, {_}: multiply (multiply ?10384 ?10385) ?10386 =<= multiply ?10384 (divide ?10385 (inverse ?10386)) [10386, 10385, 10384] by Super 29 with 4889 at 3
Id : 4955, {_}: multiply (multiply ?10384 ?10385) ?10386 =>= multiply ?10384 (multiply ?10385 ?10386) [10386, 10385, 10384] by Demod 4905 with 29 at 2,3
Id : 5096, {_}: multiply a3 (multiply b3 c3) =?= multiply a3 (multiply b3 c3) [] by Demod 1 with 4955 at 2
Id :   1, {_}: multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3) [] by prove_these_axioms_3
% SZS output end CNFRefutation for GRP453-1.p
26321: solved GRP453-1.p in 1.372085 using kbo
26321: status Unsatisfiable for GRP453-1.p
Fatal error: exception Assert_failure("matitaprover.ml", 269, 46)
NO CLASH, using fixed ground order
26331: Facts:
26331:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
26331:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
26331: Goal:
26331:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
26331: Order:
26331:   nrkbo
26331: Leaf order:
26331:  a 2 0 2 1,1,2
26331:  b 2 0 2 2,1,2
26331:  c 2 0 2 2,2
26331:  meet 4 2 0 
26331:  join 7 2 4 0,2
NO CLASH, using fixed ground order
26332: Facts:
26332:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
26332:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
26332: Goal:
26332:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
26332: Order:
26332:   kbo
26332: Leaf order:
26332:  a 2 0 2 1,1,2
26332:  b 2 0 2 2,1,2
26332:  c 2 0 2 2,2
26332:  meet 4 2 0 
26332:  join 7 2 4 0,2
NO CLASH, using fixed ground order
26333: Facts:
26333:  Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
26333:  Id :   3, {_}:
          meet ?5 (join ?6 ?7) =?= join (meet ?7 ?5) (meet ?6 ?5)
          [7, 6, 5] by distribution ?5 ?6 ?7
26333: Goal:
26333:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_associativity_of_join
26333: Order:
26333:   lpo
26333: Leaf order:
26333:  a 2 0 2 1,1,2
26333:  b 2 0 2 2,1,2
26333:  c 2 0 2 2,2
26333:  meet 4 2 0 
26333:  join 7 2 4 0,2
Statistics :
Max weight : 31
Found proof, 28.344880s
% SZS status Unsatisfiable for LAT007-1.p
% SZS output start CNFRefutation for LAT007-1.p
Id :   3, {_}: meet ?5 (join ?6 ?7) =<= join (meet ?7 ?5) (meet ?6 ?5) [7, 6, 5] by distribution ?5 ?6 ?7
Id :   2, {_}: meet ?2 (join ?2 ?3) =>= ?2 [3, 2] by absorption ?2 ?3
Id :   7, {_}: meet ?18 (join ?19 ?20) =<= join (meet ?20 ?18) (meet ?19 ?18) [20, 19, 18] by distribution ?18 ?19 ?20
Id :   8, {_}: meet (join ?22 ?23) (join ?22 ?24) =<= join (meet ?24 (join ?22 ?23)) ?22 [24, 23, 22] by Super 7 with 2 at 2,3
Id :  13, {_}: meet (meet ?44 ?45) (meet ?45 (join ?46 ?44)) =>= meet ?44 ?45 [46, 45, 44] by Super 2 with 3 at 2,2
Id :  15, {_}: meet (meet ?53 ?54) ?54 =>= meet ?53 ?54 [54, 53] by Super 13 with 2 at 2,2
Id :  21, {_}: meet ?68 (join (meet ?69 ?68) ?70) =<= join (meet ?70 ?68) (meet ?69 ?68) [70, 69, 68] by Super 3 with 15 at 2,3
Id :  69, {_}: meet ?209 (join (meet ?210 ?209) ?211) =>= meet ?209 (join ?210 ?211) [211, 210, 209] by Demod 21 with 3 at 3
Id :  74, {_}: meet ?231 (meet ?231 (join ?232 ?233)) =<= meet ?231 (join ?233 (meet ?232 ?231)) [233, 232, 231] by Super 69 with 3 at 2,2
Id :  22, {_}: meet ?72 (join ?73 (meet ?74 ?72)) =<= join (meet ?74 ?72) (meet ?73 ?72) [74, 73, 72] by Super 3 with 15 at 1,3
Id :  33, {_}: meet ?72 (join ?73 (meet ?74 ?72)) =>= meet ?72 (join ?73 ?74) [74, 73, 72] by Demod 22 with 3 at 3
Id : 219, {_}: meet ?572 (meet ?572 (join ?573 ?574)) =>= meet ?572 (join ?574 ?573) [574, 573, 572] by Demod 74 with 33 at 3
Id : 224, {_}: meet ?597 ?597 =<= meet ?597 (join ?598 ?597) [598, 597] by Super 219 with 2 at 2,2
Id : 244, {_}: meet (join ?635 ?636) (join ?635 ?636) =>= join (meet ?636 ?636) ?635 [636, 635] by Super 8 with 224 at 1,3
Id : 247, {_}: meet ?644 ?644 =>= ?644 [644] by Super 2 with 224 at 2
Id : 1803, {_}: join ?635 ?636 =<= join (meet ?636 ?636) ?635 [636, 635] by Demod 244 with 247 at 2
Id : 1804, {_}: join ?635 ?636 =?= join ?636 ?635 [636, 635] by Demod 1803 with 247 at 1,3
Id :   9, {_}: meet (join ?26 ?27) (join ?28 ?26) =<= join ?26 (meet ?28 (join ?26 ?27)) [28, 27, 26] by Super 7 with 2 at 1,3
Id :   6, {_}: meet (meet ?14 ?15) (meet ?15 (join ?16 ?14)) =>= meet ?14 ?15 [16, 15, 14] by Super 2 with 3 at 2,2
Id :  11, {_}: meet (meet ?34 (join ?35 ?36)) (join (meet ?36 ?34) ?37) =<= join (meet ?37 (meet ?34 (join ?35 ?36))) (meet ?36 ?34) [37, 36, 35, 34] by Super 3 with 6 at 2,3
Id : 364, {_}: meet (meet ?919 (join ?920 ?919)) (join (meet ?919 ?919) ?921) =>= join (meet ?921 (meet ?919 (join ?920 ?919))) ?919 [921, 920, 919] by Super 11 with 247 at 2,3
Id : 349, {_}: ?597 =<= meet ?597 (join ?598 ?597) [598, 597] by Demod 224 with 247 at 2
Id : 370, {_}: meet ?919 (join (meet ?919 ?919) ?921) =<= join (meet ?921 (meet ?919 (join ?920 ?919))) ?919 [920, 921, 919] by Demod 364 with 349 at 1,2
Id : 371, {_}: meet ?919 (join ?919 ?921) =<= join (meet ?921 (meet ?919 (join ?920 ?919))) ?919 [920, 921, 919] by Demod 370 with 247 at 1,2,2
Id : 372, {_}: meet ?919 (join ?919 ?921) =<= join (meet ?921 ?919) ?919 [921, 919] by Demod 371 with 349 at 2,1,3
Id : 411, {_}: ?977 =<= join (meet ?978 ?977) ?977 [978, 977] by Demod 372 with 2 at 2
Id : 420, {_}: join ?1006 ?1007 =<= join ?1007 (join ?1006 ?1007) [1007, 1006] by Super 411 with 349 at 1,3
Id : 703, {_}: meet (join ?1582 (join ?1583 ?1582)) (join ?1584 ?1582) =>= join ?1582 (meet ?1584 (join ?1583 ?1582)) [1584, 1583, 1582] by Super 9 with 420 at 2,2,3
Id : 2541, {_}: meet (join ?5116 ?5117) (join ?5118 ?5117) =<= join ?5117 (meet ?5118 (join ?5116 ?5117)) [5118, 5117, 5116] by Demod 703 with 420 at 1,2
Id : 419, {_}: ?1004 =<= join ?1004 ?1004 [1004] by Super 411 with 247 at 1,3
Id : 446, {_}: meet ?1028 (join ?1029 ?1029) =>= meet ?1029 ?1028 [1029, 1028] by Super 3 with 419 at 3
Id : 462, {_}: meet ?1028 ?1029 =?= meet ?1029 ?1028 [1029, 1028] by Demod 446 with 419 at 2,2
Id : 2566, {_}: meet (join ?5222 ?5223) (join ?5224 ?5223) =<= join ?5223 (meet (join ?5222 ?5223) ?5224) [5224, 5223, 5222] by Super 2541 with 462 at 2,3
Id : 1841, {_}: meet (join ?3986 ?3987) (join ?3988 ?3986) =<= join ?3986 (meet ?3988 (join ?3987 ?3986)) [3988, 3987, 3986] by Super 9 with 1804 at 2,2,3
Id : 731, {_}: meet (join ?1583 ?1582) (join ?1584 ?1582) =<= join ?1582 (meet ?1584 (join ?1583 ?1582)) [1584, 1582, 1583] by Demod 703 with 420 at 1,2
Id : 6413, {_}: meet (join ?3986 ?3987) (join ?3988 ?3986) =?= meet (join ?3987 ?3986) (join ?3988 ?3986) [3988, 3987, 3986] by Demod 1841 with 731 at 3
Id : 210, {_}: meet ?231 (meet ?231 (join ?232 ?233)) =>= meet ?231 (join ?233 ?232) [233, 232, 231] by Demod 74 with 33 at 3
Id : 449, {_}: meet ?1037 (meet ?1037 ?1038) =?= meet ?1037 (join ?1038 ?1038) [1038, 1037] by Super 210 with 419 at 2,2,2
Id : 457, {_}: meet ?1037 (meet ?1037 ?1038) =>= meet ?1037 ?1038 [1038, 1037] by Demod 449 with 419 at 2,3
Id : 754, {_}: meet ?231 (join ?232 ?233) =?= meet ?231 (join ?233 ?232) [233, 232, 231] by Demod 210 with 457 at 2
Id :  32, {_}: meet ?68 (join (meet ?69 ?68) ?70) =>= meet ?68 (join ?69 ?70) [70, 69, 68] by Demod 21 with 3 at 3
Id : 763, {_}: meet (meet ?1697 ?1698) (join (meet ?1697 ?1698) ?1699) =>= meet (meet ?1697 ?1698) (join ?1697 ?1699) [1699, 1698, 1697] by Super 32 with 457 at 1,2,2
Id : 793, {_}: meet ?1697 ?1698 =<= meet (meet ?1697 ?1698) (join ?1697 ?1699) [1699, 1698, 1697] by Demod 763 with 2 at 2
Id : 2682, {_}: meet (join ?5359 ?5360) (join ?5361 (meet ?5359 ?5362)) =<= join (meet ?5359 ?5362) (meet ?5361 (join ?5359 ?5360)) [5362, 5361, 5360, 5359] by Super 3 with 793 at 1,3
Id : 1421, {_}: meet ?2943 (join ?2944 (meet ?2943 ?2945)) =>= meet ?2943 (join ?2944 ?2945) [2945, 2944, 2943] by Super 33 with 462 at 2,2,2
Id : 4338, {_}: meet (join ?8616 (meet ?8617 ?8618)) (join ?8616 ?8617) =>= join (meet ?8617 (join ?8616 ?8618)) ?8616 [8618, 8617, 8616] by Super 8 with 1421 at 1,3
Id : 4448, {_}: meet (join ?8616 (meet ?8617 ?8618)) (join ?8616 ?8617) =>= meet (join ?8616 ?8618) (join ?8616 ?8617) [8618, 8617, 8616] by Demod 4338 with 8 at 3
Id : 62692, {_}: meet (join ?135834 ?135835) (join (join ?135834 (meet ?135835 ?135836)) (meet ?135834 ?135837)) =>= join (meet ?135834 ?135837) (meet (join ?135834 ?135836) (join ?135834 ?135835)) [135837, 135836, 135835, 135834] by Super 2682 with 4448 at 2,3
Id : 62942, {_}: meet (join ?135834 ?135835) (join (meet ?135834 ?135837) (join ?135834 (meet ?135835 ?135836))) =>= join (meet ?135834 ?135837) (meet (join ?135834 ?135836) (join ?135834 ?135835)) [135836, 135837, 135835, 135834] by Demod 62692 with 754 at 2
Id : 62943, {_}: meet (join ?135834 ?135835) (join (meet ?135834 ?135837) (join ?135834 (meet ?135835 ?135836))) =>= meet (join ?135834 ?135835) (join (join ?135834 ?135836) (meet ?135834 ?135837)) [135836, 135837, 135835, 135834] by Demod 62942 with 2682 at 3
Id : 373, {_}: ?919 =<= join (meet ?921 ?919) ?919 [921, 919] by Demod 372 with 2 at 2
Id : 2674, {_}: join ?5321 ?5322 =<= join (meet ?5321 ?5323) (join ?5321 ?5322) [5323, 5322, 5321] by Super 373 with 793 at 1,3
Id : 62944, {_}: meet (join ?135834 ?135835) (join ?135834 (meet ?135835 ?135836)) =?= meet (join ?135834 ?135835) (join (join ?135834 ?135836) (meet ?135834 ?135837)) [135837, 135836, 135835, 135834] by Demod 62943 with 2674 at 2,2
Id : 62945, {_}: meet (join ?135834 ?135835) (join ?135834 (meet ?135835 ?135836)) =?= meet (join ?135834 ?135835) (join (meet ?135834 ?135837) (join ?135834 ?135836)) [135837, 135836, 135835, 135834] by Demod 62944 with 754 at 3
Id : 762, {_}: meet (meet ?1693 ?1694) (meet (meet ?1693 ?1694) (join ?1695 ?1693)) =>= meet ?1693 (meet ?1693 ?1694) [1695, 1694, 1693] by Super 6 with 457 at 1,2
Id : 794, {_}: meet (meet ?1693 ?1694) (join ?1695 ?1693) =>= meet ?1693 (meet ?1693 ?1694) [1695, 1694, 1693] by Demod 762 with 457 at 2
Id : 795, {_}: meet (meet ?1693 ?1694) (join ?1695 ?1693) =>= meet ?1693 ?1694 [1695, 1694, 1693] by Demod 794 with 457 at 3
Id : 2860, {_}: meet (join ?5717 ?5718) (join ?5717 (meet ?5718 ?5719)) =>= join (meet ?5718 ?5719) ?5717 [5719, 5718, 5717] by Super 8 with 795 at 1,3
Id : 62946, {_}: join (meet ?135835 ?135836) ?135834 =<= meet (join ?135834 ?135835) (join (meet ?135834 ?135837) (join ?135834 ?135836)) [135837, 135834, 135836, 135835] by Demod 62945 with 2860 at 2
Id : 62947, {_}: join (meet ?135835 ?135836) ?135834 =<= meet (join ?135834 ?135835) (join ?135834 ?135836) [135834, 135836, 135835] by Demod 62946 with 2674 at 2,3
Id : 63610, {_}: meet (join ?137323 ?137324) (join ?137325 ?137323) =>= join (meet ?137324 ?137325) ?137323 [137325, 137324, 137323] by Super 754 with 62947 at 3
Id : 64209, {_}: join (meet ?3987 ?3988) ?3986 =<= meet (join ?3987 ?3986) (join ?3988 ?3986) [3986, 3988, 3987] by Demod 6413 with 63610 at 2
Id : 64222, {_}: join (meet ?5222 ?5224) ?5223 =<= join ?5223 (meet (join ?5222 ?5223) ?5224) [5223, 5224, 5222] by Demod 2566 with 64209 at 2
Id : 64386, {_}: join (meet ?139191 (join ?139192 ?139191)) ?139193 =?= join ?139193 (join (meet ?139193 ?139192) ?139191) [139193, 139192, 139191] by Super 64222 with 63610 at 2,3
Id : 66054, {_}: join ?143110 ?143111 =<= join ?143111 (join (meet ?143111 ?143112) ?143110) [143112, 143111, 143110] by Demod 64386 with 349 at 1,2
Id :  36, {_}: meet (join ?109 ?110) (join ?109 ?111) =<= join (meet ?111 (join ?109 ?110)) ?109 [111, 110, 109] by Super 7 with 2 at 2,3
Id :  39, {_}: meet (join ?123 ?124) (join ?123 ?123) =>= join ?123 ?123 [124, 123] by Super 36 with 2 at 1,3
Id : 438, {_}: meet (join ?123 ?124) ?123 =>= join ?123 ?123 [124, 123] by Demod 39 with 419 at 2,2
Id : 439, {_}: meet (join ?123 ?124) ?123 =>= ?123 [124, 123] by Demod 438 with 419 at 3
Id : 66061, {_}: join ?143140 (join ?143141 ?143142) =<= join (join ?143141 ?143142) (join ?143141 ?143140) [143142, 143141, 143140] by Super 66054 with 439 at 1,2,3
Id : 706, {_}: meet (join ?1593 (join ?1594 ?1593)) (join ?1593 ?1595) =>= join (meet ?1595 (join ?1594 ?1593)) ?1593 [1595, 1594, 1593] by Super 8 with 420 at 2,1,3
Id : 2402, {_}: meet (join ?4835 ?4836) (join ?4836 ?4837) =<= join (meet ?4837 (join ?4835 ?4836)) ?4836 [4837, 4836, 4835] by Demod 706 with 420 at 1,2
Id : 2426, {_}: meet (join ?4936 ?4937) (join ?4937 ?4938) =<= join (meet (join ?4936 ?4937) ?4938) ?4937 [4938, 4937, 4936] by Super 2402 with 462 at 1,3
Id : 1831, {_}: meet (join ?3948 ?3949) (join ?3948 ?3950) =<= join (meet ?3950 (join ?3949 ?3948)) ?3948 [3950, 3949, 3948] by Super 8 with 1804 at 2,1,3
Id : 729, {_}: meet (join ?1594 ?1593) (join ?1593 ?1595) =<= join (meet ?1595 (join ?1594 ?1593)) ?1593 [1595, 1593, 1594] by Demod 706 with 420 at 1,2
Id : 5899, {_}: meet (join ?3948 ?3949) (join ?3948 ?3950) =?= meet (join ?3949 ?3948) (join ?3948 ?3950) [3950, 3949, 3948] by Demod 1831 with 729 at 3
Id : 63510, {_}: join (meet ?3949 ?3950) ?3948 =<= meet (join ?3949 ?3948) (join ?3948 ?3950) [3948, 3950, 3949] by Demod 5899 with 62947 at 2
Id : 63518, {_}: join (meet ?4936 ?4938) ?4937 =<= join (meet (join ?4936 ?4937) ?4938) ?4937 [4937, 4938, 4936] by Demod 2426 with 63510 at 2
Id : 63690, {_}: join (meet ?137703 (join ?137703 ?137704)) ?137705 =?= join (join (meet ?137705 ?137704) ?137703) ?137705 [137705, 137704, 137703] by Super 63518 with 62947 at 1,3
Id : 65015, {_}: join ?140539 ?140540 =<= join (join (meet ?140540 ?140541) ?140539) ?140540 [140541, 140540, 140539] by Demod 63690 with 2 at 1,2
Id : 65022, {_}: join ?140569 (join ?140570 ?140571) =<= join (join ?140570 ?140569) (join ?140570 ?140571) [140571, 140570, 140569] by Super 65015 with 439 at 1,1,3
Id : 71034, {_}: join ?143140 (join ?143141 ?143142) =?= join ?143142 (join ?143141 ?143140) [143142, 143141, 143140] by Demod 66061 with 65022 at 3
Id : 709, {_}: meet (join ?1606 ?1607) ?1607 =>= ?1607 [1607, 1606] by Super 439 with 420 at 1,2
Id : 1049, {_}: meet ?2275 (join ?2275 ?2276) =<= meet ?2275 (join (join ?2277 ?2275) ?2276) [2277, 2276, 2275] by Super 32 with 709 at 1,2,2
Id : 1082, {_}: ?2275 =<= meet ?2275 (join (join ?2277 ?2275) ?2276) [2276, 2277, 2275] by Demod 1049 with 2 at 2
Id : 10434, {_}: join (join ?21238 ?21239) ?21240 =<= join ?21239 (join (join ?21238 ?21239) ?21240) [21240, 21239, 21238] by Super 373 with 1082 at 1,3
Id : 10435, {_}: join (join ?21242 ?21243) ?21244 =<= join ?21243 (join (join ?21243 ?21242) ?21244) [21244, 21243, 21242] by Super 10434 with 1804 at 1,2,3
Id : 7878, {_}: join ?15712 ?15713 =<= join (meet ?15712 ?15714) (join ?15712 ?15713) [15714, 15713, 15712] by Super 373 with 793 at 1,3
Id : 7917, {_}: join (join ?15885 ?15886) ?15887 =<= join ?15885 (join (join ?15885 ?15886) ?15887) [15887, 15886, 15885] by Super 7878 with 439 at 1,3
Id : 21540, {_}: join (join ?21242 ?21243) ?21244 =?= join (join ?21243 ?21242) ?21244 [21244, 21243, 21242] by Demod 10435 with 7917 at 3
Id : 63854, {_}: join ?137703 ?137705 =<= join (join (meet ?137705 ?137704) ?137703) ?137705 [137704, 137705, 137703] by Demod 63690 with 2 at 1,2
Id : 67172, {_}: join (join ?145721 (meet ?145722 ?145723)) ?145722 =>= join ?145721 ?145722 [145723, 145722, 145721] by Super 21540 with 63854 at 3
Id : 67179, {_}: join (join ?145751 ?145752) (join ?145752 ?145753) =>= join ?145751 (join ?145752 ?145753) [145753, 145752, 145751] by Super 67172 with 439 at 2,1,2
Id : 66065, {_}: join ?143156 (join ?143157 ?143158) =<= join (join ?143157 ?143158) (join ?143158 ?143156) [143158, 143157, 143156] by Super 66054 with 709 at 1,2,3
Id : 73159, {_}: join ?145753 (join ?145751 ?145752) =?= join ?145751 (join ?145752 ?145753) [145752, 145751, 145753] by Demod 67179 with 66065 at 2
Id : 359, {_}: meet ?904 (join ?905 ?904) =<= join ?904 (meet ?905 ?904) [905, 904] by Super 3 with 247 at 1,3
Id : 386, {_}: ?904 =<= join ?904 (meet ?905 ?904) [905, 904] by Demod 359 with 349 at 2
Id : 1047, {_}: meet ?2267 (meet ?2267 (join ?2268 (join ?2269 ?2267))) =>= meet (join ?2269 ?2267) ?2267 [2269, 2268, 2267] by Super 6 with 709 at 1,2
Id : 1084, {_}: meet ?2267 (join ?2268 (join ?2269 ?2267)) =>= meet (join ?2269 ?2267) ?2267 [2269, 2268, 2267] by Demod 1047 with 457 at 2
Id : 1085, {_}: meet ?2267 (join ?2268 (join ?2269 ?2267)) =>= ?2267 [2269, 2268, 2267] by Demod 1084 with 709 at 3
Id : 11489, {_}: join ?23526 (join ?23527 ?23528) =<= join (join ?23526 (join ?23527 ?23528)) ?23528 [23528, 23527, 23526] by Super 386 with 1085 at 2,3
Id : 11490, {_}: join ?23530 (join ?23531 ?23532) =<= join (join ?23530 (join ?23532 ?23531)) ?23532 [23532, 23531, 23530] by Super 11489 with 1804 at 2,1,3
Id : 2878, {_}: meet (meet ?5800 ?5801) (join ?5802 ?5800) =>= meet ?5800 ?5801 [5802, 5801, 5800] by Demod 794 with 457 at 3
Id : 2907, {_}: meet ?5929 (join ?5930 (join ?5929 ?5931)) =>= meet (join ?5929 ?5931) ?5929 [5931, 5930, 5929] by Super 2878 with 439 at 1,2
Id : 3014, {_}: meet ?5929 (join ?5930 (join ?5929 ?5931)) =>= ?5929 [5931, 5930, 5929] by Demod 2907 with 439 at 3
Id : 10163, {_}: join ?20474 (join ?20475 ?20476) =<= join (join ?20474 (join ?20475 ?20476)) ?20475 [20476, 20475, 20474] by Super 386 with 3014 at 2,3
Id : 22205, {_}: join ?23530 (join ?23531 ?23532) =?= join ?23530 (join ?23532 ?23531) [23532, 23531, 23530] by Demod 11490 with 10163 at 3
Id : 73995, {_}: join a (join b c) === join a (join b c) [] by Demod 73994 with 22205 at 2
Id : 73994, {_}: join a (join c b) =>= join a (join b c) [] by Demod 73993 with 73159 at 2
Id : 73993, {_}: join b (join a c) =>= join a (join b c) [] by Demod 73992 with 71034 at 2
Id : 73992, {_}: join c (join a b) =>= join a (join b c) [] by Demod 1 with 1804 at 2
Id :   1, {_}: join (join a b) c =>= join a (join b c) [] by prove_associativity_of_join
% SZS output end CNFRefutation for LAT007-1.p
26331: solved LAT007-1.p in 28.241764 using nrkbo
26331: status Unsatisfiable for LAT007-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
26339: Facts:
26339:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
26339:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
26339:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
26339:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
26339:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
26339:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
26339:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
26339:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
26339:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
26339:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
26339: Goal:
NO CLASH, using fixed ground order
26340: Facts:
26340:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
26340:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
26340:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
26340:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
26340:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
26340:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
26340:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
26340:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
26340:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
26340:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
26340: Goal:
26338: Facts:
26340:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
26340: Order:
26340:   lpo
26340: Leaf order:
26340:  n0 1 0 0 
26340:  n1 2 0 1 3
26340:  b 6 0 6 1,2,1,1,1,2
26340:  a 9 0 9 1,1,1,1,2
26340:  complement 18 1 9 0,1,2
26340:  meet 15 2 6 0,1,1,1,2
26340:  join 20 2 8 0,2
26339:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
26339: Order:
26339:   kbo
26339: Leaf order:
26339:  n0 1 0 0 
26339:  n1 2 0 1 3
26339:  b 6 0 6 1,2,1,1,1,2
26339:  a 9 0 9 1,1,1,1,2
26339:  complement 18 1 9 0,1,2
26339:  meet 15 2 6 0,1,1,1,2
26339:  join 20 2 8 0,2
26338:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
26338:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
26338:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
26338:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
26338:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
26338:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
26338:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
26338:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
26338:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
26338:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
26338: Goal:
26338:  Id :   1, {_}:
          join (complement (join (meet a (complement b)) (complement a)))
            (join (meet a (complement b))
              (join
                (meet (complement a) (meet (join a (complement b)) (join a b)))
                (meet (complement a)
                  (complement (meet (join a (complement b)) (join a b))))))
          =>=
          n1
          [] by prove_e1
26338: Order:
26338:   nrkbo
26338: Leaf order:
26338:  n0 1 0 0 
26338:  n1 2 0 1 3
26338:  b 6 0 6 1,2,1,1,1,2
26338:  a 9 0 9 1,1,1,1,2
26338:  complement 18 1 9 0,1,2
26338:  meet 15 2 6 0,1,1,1,2
26338:  join 20 2 8 0,2
% SZS status Timeout for LAT016-1.p
NO CLASH, using fixed ground order
26368: Facts:
26368:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26368:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26368:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
26368:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
26368:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =?= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
26368:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =?= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
26368:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
26368:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
26368:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
26368:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
26368:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =?= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
26368:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
26368:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
26368: Goal:
26368:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26368: Order:
26368:   nrkbo
26368: Leaf order:
26368:  a 2 0 2 1,2
26368:  b 2 0 2 2,2
26368:  meet 14 2 1 0,2
26368:  meet2 14 2 1 0,3
26368:  join 19 2 0 
NO CLASH, using fixed ground order
26369: Facts:
26369:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26369:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26369:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
26369:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
26369:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
26369:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
26369:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
26369:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
26369:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
26369:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
26369:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =>= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
26369:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
26369:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
26369: Goal:
26369:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26369: Order:
26369:   kbo
26369: Leaf order:
26369:  a 2 0 2 1,2
26369:  b 2 0 2 2,2
26369:  meet 14 2 1 0,2
26369:  meet2 14 2 1 0,3
26369:  join 19 2 0 
NO CLASH, using fixed ground order
26370: Facts:
26370:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26370:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26370:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
26370:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
26370:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
26370:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
26370:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
26370:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
26370:  Id :  10, {_}: meet2 ?28 ?28 =>= ?28 [28] by idempotence_of_meet2 ?28
26370:  Id :  11, {_}:
          meet2 ?30 ?31 =?= meet2 ?31 ?30
          [31, 30] by commutativity_of_meet2 ?30 ?31
26370:  Id :  12, {_}:
          meet2 (meet2 ?33 ?34) ?35 =>= meet2 ?33 (meet2 ?34 ?35)
          [35, 34, 33] by associativity_of_meet2 ?33 ?34 ?35
26370:  Id :  13, {_}:
          join (meet2 ?37 (join ?38 ?39)) (meet2 ?37 ?38)
          =>=
          meet2 ?37 (join ?38 ?39)
          [39, 38, 37] by quasi_lattice1_2 ?37 ?38 ?39
26370:  Id :  14, {_}:
          meet2 (join ?41 (meet2 ?42 ?43)) (join ?41 ?42)
          =>=
          join ?41 (meet2 ?42 ?43)
          [43, 42, 41] by quasi_lattice2_2 ?41 ?42 ?43
26370: Goal:
26370:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26370: Order:
26370:   lpo
26370: Leaf order:
26370:  a 2 0 2 1,2
26370:  b 2 0 2 2,2
26370:  meet 14 2 1 0,2
26370:  meet2 14 2 1 0,3
26370:  join 19 2 0 
% SZS status Timeout for LAT024-1.p
NO CLASH, using fixed ground order
26386: Facts:
26386:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26386:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26386:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26386:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26386:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26386:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26386:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
26386:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
26386:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
26386:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
26386:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
26386:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
26386:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
26386:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
26386: Goal:
26386:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26386: Order:
26386:   nrkbo
26386: Leaf order:
26386:  a 2 0 2 1,2
26386:  b 2 0 2 2,2
26386:  meet 9 2 1 0,2
26386:  meet2 9 2 1 0,3
26386:  join 13 2 0 
NO CLASH, using fixed ground order
26387: Facts:
26387:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26387:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26387:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26387:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26387:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26387:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26387:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
26387:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
26387:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
26387:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
26387:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
26387:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
26387:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
NO CLASH, using fixed ground order
26388: Facts:
26388:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26388:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26388:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26388:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26388:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26388:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26388:  Id :   8, {_}:
          join ?18 (meet ?19 (meet ?18 ?20)) =>= ?18
          [20, 19, 18] by tnl_1 ?18 ?19 ?20
26388:  Id :   9, {_}:
          meet ?22 (join ?23 (join ?22 ?24)) =>= ?22
          [24, 23, 22] by tnl_2 ?22 ?23 ?24
26388:  Id :  10, {_}: meet2 ?26 ?26 =>= ?26 [26] by idempotence_of_meet2 ?26
26388:  Id :  11, {_}:
          meet2 ?28 (join ?28 ?29) =>= ?28
          [29, 28] by absorption1_2 ?28 ?29
26388:  Id :  12, {_}:
          join ?31 (meet2 ?31 ?32) =>= ?31
          [32, 31] by absorption2_2 ?31 ?32
26388:  Id :  13, {_}:
          meet2 ?34 ?35 =?= meet2 ?35 ?34
          [35, 34] by commutativity_of_meet2 ?34 ?35
26388:  Id :  14, {_}:
          join ?37 (meet2 ?38 (meet2 ?37 ?39)) =>= ?37
          [39, 38, 37] by tnl_1_2 ?37 ?38 ?39
26388:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
26388: Goal:
26388:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26388: Order:
26388:   lpo
26388: Leaf order:
26388:  a 2 0 2 1,2
26388:  b 2 0 2 2,2
26388:  meet 9 2 1 0,2
26388:  meet2 9 2 1 0,3
26388:  join 13 2 0 
26387:  Id :  15, {_}:
          meet2 ?41 (join ?42 (join ?41 ?43)) =>= ?41
          [43, 42, 41] by tnl_2_2 ?41 ?42 ?43
26387: Goal:
26387:  Id :   1, {_}: meet a b =<= meet2 a b [] by prove_meets_equal
26387: Order:
26387:   kbo
26387: Leaf order:
26387:  a 2 0 2 1,2
26387:  b 2 0 2 2,2
26387:  meet 9 2 1 0,2
26387:  meet2 9 2 1 0,3
26387:  join 13 2 0 
% SZS status Timeout for LAT025-1.p
CLASH, statistics insufficient
26417: Facts:
26417:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26417:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26417:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26417:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26417:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26417:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26417:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26417:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26417:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26417:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26417:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26417:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26417:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26417:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
26417: Goal:
26417:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
26417: Order:
26417:   nrkbo
26417: Leaf order:
26417:  n1 1 0 0 
26417:  n0 1 0 0 
26417:  b 2 0 2 1,2,2
26417:  c 2 0 2 2,2,2
26417:  a 3 0 3 1,2
26417:  complement 10 1 0 
26417:  meet 17 2 3 0,2
26417:  join 18 2 2 0,2,2
CLASH, statistics insufficient
26418: Facts:
26418:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26418:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26418:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26418:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26418:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26418:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26418:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26418:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26418:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26418:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26418:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26418:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26418:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26418:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
26418: Goal:
26418:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
26418: Order:
26418:   kbo
26418: Leaf order:
26418:  n1 1 0 0 
26418:  n0 1 0 0 
26418:  b 2 0 2 1,2,2
26418:  c 2 0 2 2,2,2
26418:  a 3 0 3 1,2
26418:  complement 10 1 0 
26418:  meet 17 2 3 0,2
26418:  join 18 2 2 0,2,2
CLASH, statistics insufficient
26419: Facts:
26419:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26419:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26419:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26419:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26419:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26419:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26419:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26419:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26419:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26419:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26419:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26419:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26419:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26419:  Id :  15, {_}:
          join ?38 (meet ?39 (join ?38 ?40))
          =>=
          meet (join ?38 ?39) (join ?38 ?40)
          [40, 39, 38] by modular_law ?38 ?39 ?40
26419: Goal:
26419:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
26419: Order:
26419:   lpo
26419: Leaf order:
26419:  n1 1 0 0 
26419:  n0 1 0 0 
26419:  b 2 0 2 1,2,2
26419:  c 2 0 2 2,2,2
26419:  a 3 0 3 1,2
26419:  complement 10 1 0 
26419:  meet 17 2 3 0,2
26419:  join 18 2 2 0,2,2
% SZS status Timeout for LAT046-1.p
NO CLASH, using fixed ground order
26436: Facts:
26436:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26436:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26436:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26436:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26436:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26436:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26436:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26436:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26436: Goal:
26436:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
26436: Order:
26436:   nrkbo
26436: Leaf order:
26436:  b 2 0 2 1,2,2
26436:  c 2 0 2 2,2,2,2
26436:  a 4 0 4 1,2
26436:  meet 11 2 2 0,2,2
26436:  join 13 2 4 0,2
NO CLASH, using fixed ground order
26437: Facts:
26437:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26437:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26437:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26437:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26437:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26437:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26437:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26437:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26437: Goal:
26437:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
26437: Order:
26437:   kbo
26437: Leaf order:
26437:  b 2 0 2 1,2,2
26437:  c 2 0 2 2,2,2,2
26437:  a 4 0 4 1,2
26437:  meet 11 2 2 0,2,2
26437:  join 13 2 4 0,2
NO CLASH, using fixed ground order
26438: Facts:
26438:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26438:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26438:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26438:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26438:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26438:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26438:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26438:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26438: Goal:
26438:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modularity
26438: Order:
26438:   lpo
26438: Leaf order:
26438:  b 2 0 2 1,2,2
26438:  c 2 0 2 2,2,2,2
26438:  a 4 0 4 1,2
26438:  meet 11 2 2 0,2,2
26438:  join 13 2 4 0,2
% SZS status Timeout for LAT047-1.p
NO CLASH, using fixed ground order
26479: Facts:
26479:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26479:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26479:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26479:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26479:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26479:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26479:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26479:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26479:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26479:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26479:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26479:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26479:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26479:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
26479: Goal:
26479:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
26479: Order:
26479:   nrkbo
26479: Leaf order:
26479:  n0 1 0 0 
26479:  n1 2 0 0 
26479:  b 2 0 2 2,2,2,2
26479:  a 4 0 4 1,2
26479:  complement 13 1 1 0,1,2,2
26479:  meet 15 2 1 0,2,2
26479:  join 18 2 3 0,2
NO CLASH, using fixed ground order
26480: Facts:
26480:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26480:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26480:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26480:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26480:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26480:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26480:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26480:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26480:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26480:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26480:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26480:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26480:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
NO CLASH, using fixed ground order
26481: Facts:
26481:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26481:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26481:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26481:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26481:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26481:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26481:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26481:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26481:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26481:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26481:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26481:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26481:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26481:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
26481: Goal:
26481:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
26481: Order:
26481:   lpo
26481: Leaf order:
26481:  n0 1 0 0 
26481:  n1 2 0 0 
26481:  b 2 0 2 2,2,2,2
26481:  a 4 0 4 1,2
26481:  complement 13 1 1 0,1,2,2
26481:  meet 15 2 1 0,2,2
26481:  join 18 2 3 0,2
26480:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by weak_orthomodular_law ?38 ?39
26480: Goal:
26480:  Id :   1, {_}:
          join a (meet (complement a) (join a b)) =>= join a b
          [] by prove_orthomodular_law
26480: Order:
26480:   kbo
26480: Leaf order:
26480:  n0 1 0 0 
26480:  n1 2 0 0 
26480:  b 2 0 2 2,2,2,2
26480:  a 4 0 4 1,2
26480:  complement 13 1 1 0,1,2,2
26480:  meet 15 2 1 0,2,2
26480:  join 18 2 3 0,2
% SZS status Timeout for LAT048-1.p
NO CLASH, using fixed ground order
26500: Facts:
26500:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26500:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26500:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26500:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26500:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26500:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26500:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26500:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26500:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26500:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26500:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26500:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26500:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26500: Goal:
26500:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
26500: Order:
26500:   nrkbo
26500: Leaf order:
26500:  n0 1 0 0 
26500:  n1 2 0 1 3
26500:  a 3 0 3 1,1,1,2
26500:  b 3 0 3 2,2,1,2
26500:  complement 12 1 2 0,1,1,2
26500:  meet 14 2 2 0,1,2
26500:  join 15 2 3 0,2
NO CLASH, using fixed ground order
26501: Facts:
26501:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26501:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26501:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26501:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26501:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26501:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26501:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26501:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26501:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26501:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26501:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26501:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26501:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26501: Goal:
26501:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
26501: Order:
26501:   kbo
26501: Leaf order:
26501:  n0 1 0 0 
26501:  n1 2 0 1 3
26501:  a 3 0 3 1,1,1,2
26501:  b 3 0 3 2,2,1,2
26501:  complement 12 1 2 0,1,1,2
26501:  meet 14 2 2 0,1,2
26501:  join 15 2 3 0,2
NO CLASH, using fixed ground order
26502: Facts:
26502:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26502:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26502:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26502:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26502:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26502:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26502:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26502:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26502:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26502:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26502:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26502:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26502:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26502: Goal:
26502:  Id :   1, {_}:
          join (meet (complement a) (join a b))
            (join (complement b) (meet a b))
          =>=
          n1
          [] by prove_weak_orthomodular_law
26502: Order:
26502:   lpo
26502: Leaf order:
26502:  n0 1 0 0 
26502:  n1 2 0 1 3
26502:  a 3 0 3 1,1,1,2
26502:  b 3 0 3 2,2,1,2
26502:  complement 12 1 2 0,1,1,2
26502:  meet 14 2 2 0,1,2
26502:  join 15 2 3 0,2
% SZS status Timeout for LAT049-1.p
CLASH, statistics insufficient
26530: Facts:
26530:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26530:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26530:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26530:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26530:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26530:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26530:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26530:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26530:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26530:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26530:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26530:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26530:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26530:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
26530: Goal:
26530:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
26530: Order:
26530:   nrkbo
26530: Leaf order:
26530:  n1 1 0 0 
26530:  n0 1 0 0 
26530:  b 2 0 2 1,2,2
26530:  c 2 0 2 2,2,2,2
26530:  a 4 0 4 1,2
26530:  complement 11 1 0 
26530:  meet 15 2 2 0,2,2
26530:  join 19 2 4 0,2
CLASH, statistics insufficient
26531: Facts:
26531:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26531:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26531:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26531:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26531:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26531:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26531:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26531:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26531:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26531:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26531:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26531:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26531:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26531:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
26531: Goal:
26531:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
26531: Order:
26531:   kbo
26531: Leaf order:
26531:  n1 1 0 0 
26531:  n0 1 0 0 
26531:  b 2 0 2 1,2,2
26531:  c 2 0 2 2,2,2,2
26531:  a 4 0 4 1,2
26531:  complement 11 1 0 
26531:  meet 15 2 2 0,2,2
26531:  join 19 2 4 0,2
CLASH, statistics insufficient
26532: Facts:
26532:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26532:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26532:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26532:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26532:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26532:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26532:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26532:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26532:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26532:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26532:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26532:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26532:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26532:  Id :  15, {_}:
          join ?38 (meet (complement ?38) (join ?38 ?39)) =>= join ?38 ?39
          [39, 38] by orthomodular_law ?38 ?39
26532: Goal:
26532:  Id :   1, {_}:
          join a (meet b (join a c)) =>= meet (join a b) (join a c)
          [] by prove_modular_law
26532: Order:
26532:   lpo
26532: Leaf order:
26532:  n1 1 0 0 
26532:  n0 1 0 0 
26532:  b 2 0 2 1,2,2
26532:  c 2 0 2 2,2,2,2
26532:  a 4 0 4 1,2
26532:  complement 11 1 0 
26532:  meet 15 2 2 0,2,2
26532:  join 19 2 4 0,2
% SZS status Timeout for LAT050-1.p
CLASH, statistics insufficient
26548: Facts:
26548:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26548:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26548:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26548:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26548:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26548:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26548:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26548:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26548:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26548:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26548:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26548: Goal:
26548:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
26548: Order:
26548:   nrkbo
26548: Leaf order:
26548:  n1 1 0 0 
26548:  n0 1 0 0 
26548:  a 2 0 2 1,1,2
26548:  b 2 0 2 2,1,2
26548:  complement 7 1 3 0,2
26548:  join 11 2 1 0,1,2
26548:  meet 11 2 1 0,3
CLASH, statistics insufficient
26549: Facts:
26549:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26549:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26549:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26549:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26549:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26549:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26549:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26549:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26549:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26549:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26549:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26549: Goal:
26549:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
26549: Order:
26549:   kbo
26549: Leaf order:
26549:  n1 1 0 0 
26549:  n0 1 0 0 
26549:  a 2 0 2 1,1,2
26549:  b 2 0 2 2,1,2
26549:  complement 7 1 3 0,2
26549:  join 11 2 1 0,1,2
26549:  meet 11 2 1 0,3
CLASH, statistics insufficient
26550: Facts:
26550:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26550:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26550:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26550:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26550:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26550:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26550:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26550:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26550:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26550:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26550:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26550: Goal:
26550:  Id :   1, {_}:
          complement (join a b) =>= meet (complement a) (complement b)
          [] by prove_compatibility_law
26550: Order:
26550:   lpo
26550: Leaf order:
26550:  n1 1 0 0 
26550:  n0 1 0 0 
26550:  a 2 0 2 1,1,2
26550:  b 2 0 2 2,1,2
26550:  complement 7 1 3 0,2
26550:  join 11 2 1 0,1,2
26550:  meet 11 2 1 0,3
% SZS status Timeout for LAT051-1.p
CLASH, statistics insufficient
26611: Facts:
26611:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26611:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26611:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26611:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26611:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26611:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26611:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26611:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26611:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26611:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26611:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26611:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
26611: Goal:
26611:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
26611: Order:
26611:   kbo
26611: Leaf order:
26611:  n1 1 0 0 
26611:  n0 1 0 0 
26611:  a 2 0 2 1,1,2
26611:  b 2 0 2 2,1,2
26611:  complement 7 1 3 0,2
26611:  meet 13 2 1 0,3
26611:  join 15 2 1 0,1,2
CLASH, statistics insufficient
26612: Facts:
26612:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26612:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26612:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26612:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26612:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26612:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26612:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26612:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26612:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26612:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26612:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26612:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
26612: Goal:
26612:  Id :   1, {_}:
          complement (join a b) =>= meet (complement a) (complement b)
          [] by prove_compatibility_law
26612: Order:
26612:   lpo
26612: Leaf order:
26612:  n1 1 0 0 
26612:  n0 1 0 0 
26612:  a 2 0 2 1,1,2
26612:  b 2 0 2 2,1,2
26612:  complement 7 1 3 0,2
26612:  meet 13 2 1 0,3
26612:  join 15 2 1 0,1,2
CLASH, statistics insufficient
26610: Facts:
26610:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26610:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26610:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26610:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26610:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26610:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26610:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26610:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26610:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by invertability1 ?26
26610:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by invertability2 ?28
26610:  Id :  12, {_}: complement (complement ?30) =>= ?30 [30] by invertability3 ?30
26610:  Id :  13, {_}:
          join ?32 (meet ?33 (join ?32 ?34))
          =>=
          meet (join ?32 ?33) (join ?32 ?34)
          [34, 33, 32] by modular_law ?32 ?33 ?34
26610: Goal:
26610:  Id :   1, {_}:
          complement (join a b) =<= meet (complement a) (complement b)
          [] by prove_compatibility_law
26610: Order:
26610:   nrkbo
26610: Leaf order:
26610:  n1 1 0 0 
26610:  n0 1 0 0 
26610:  a 2 0 2 1,1,2
26610:  b 2 0 2 2,1,2
26610:  complement 7 1 3 0,2
26610:  meet 13 2 1 0,3
26610:  join 15 2 1 0,1,2
% SZS status Timeout for LAT052-1.p
CLASH, statistics insufficient
26628: Facts:
26628:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26628:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26628:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26628:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26628:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26628:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26628:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26628:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26628:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26628:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26628:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26628:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26628:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26628: Goal:
26628:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
26628: Order:
26628:   nrkbo
26628: Leaf order:
26628:  n1 1 0 0 
26628:  n0 1 0 0 
26628:  b 7 0 7 1,1,2,2
26628:  a 9 0 9 1,2
26628:  complement 21 1 11 0,1,2,2
26628:  join 19 2 7 0,2
26628:  meet 19 2 7 0,2,2
CLASH, statistics insufficient
26629: Facts:
26629:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26629:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26629:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26629:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26629:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26629:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26629:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26629:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26629:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26629:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26629:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26629:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26629:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26629: Goal:
26629:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
26629: Order:
26629:   kbo
26629: Leaf order:
26629:  n1 1 0 0 
26629:  n0 1 0 0 
26629:  b 7 0 7 1,1,2,2
26629:  a 9 0 9 1,2
26629:  complement 21 1 11 0,1,2,2
26629:  join 19 2 7 0,2
26629:  meet 19 2 7 0,2,2
CLASH, statistics insufficient
26630: Facts:
26630:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26630:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26630:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26630:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26630:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26630:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26630:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26630:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26630:  Id :  10, {_}:
          complement (join ?26 ?27) =>= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
26630:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
26630:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
26630:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
26630:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
26630: Goal:
26630:  Id :   1, {_}:
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a (meet (complement b) (complement a))))))
          =<=
          join a
            (meet (complement b)
              (join (complement a)
                (meet (complement b)
                  (join a
                    (meet (complement b)
                      (join (complement a) (meet (complement b) a)))))))
          [] by prove_this
26630: Order:
26630:   lpo
26630: Leaf order:
26630:  n1 1 0 0 
26630:  n0 1 0 0 
26630:  b 7 0 7 1,1,2,2
26630:  a 9 0 9 1,2
26630:  complement 21 1 11 0,1,2,2
26630:  join 19 2 7 0,2
26630:  meet 19 2 7 0,2,2
% SZS status Timeout for LAT054-1.p
CLASH, statistics insufficient
26659: Facts:
26659:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26659:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26659:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26659:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26659:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26659:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26659:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26659:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26659:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26659:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26659:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26659: Goal:
26659:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
26659: Order:
26659:   nrkbo
26659: Leaf order:
26659:  n1 1 0 0 
26659:  n0 1 0 0 
26659:  a 6 0 6 1,1,2
26659:  b 6 0 6 1,2,1,2
26659:  complement 11 1 6 0,2,1,2
26659:  join 15 2 4 0,1,2
26659:  meet 17 2 6 0,2
CLASH, statistics insufficient
26660: Facts:
26660:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26660:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26660:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26660:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26660:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26660:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26660:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26660:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26660:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26660:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26660:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26660: Goal:
26660:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
26660: Order:
26660:   kbo
26660: Leaf order:
26660:  n1 1 0 0 
26660:  n0 1 0 0 
26660:  a 6 0 6 1,1,2
26660:  b 6 0 6 1,2,1,2
26660:  complement 11 1 6 0,2,1,2
26660:  join 15 2 4 0,1,2
26660:  meet 17 2 6 0,2
CLASH, statistics insufficient
26661: Facts:
26661:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26661:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26661:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26661:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26661:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26661:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26661:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26661:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26661:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26661:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26661:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26661: Goal:
26661:  Id :   1, {_}:
          meet (join a (complement b))
            (join (join (meet a b) (meet (complement a) b))
              (meet (complement a) (complement b)))
          =>=
          join (meet a b) (meet (complement a) (complement b))
          [] by prove_e51
26661: Order:
26661:   lpo
26661: Leaf order:
26661:  n1 1 0 0 
26661:  n0 1 0 0 
26661:  a 6 0 6 1,1,2
26661:  b 6 0 6 1,2,1,2
26661:  complement 11 1 6 0,2,1,2
26661:  join 15 2 4 0,1,2
26661:  meet 17 2 6 0,2
% SZS status Timeout for LAT062-1.p
CLASH, statistics insufficient
26678: Facts:
26678:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26678:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26678:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26678:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26678:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26678:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26678:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26678:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26678:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26678:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26678:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26678: Goal:
26678:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
26678: Order:
26678:   nrkbo
26678: Leaf order:
26678:  n1 1 0 0 
26678:  n0 1 0 0 
26678:  b 3 0 3 1,2,2
26678:  a 7 0 7 1,2
26678:  complement 7 1 2 0,1,2,2,2,2
26678:  join 14 2 3 0,2,2
26678:  meet 16 2 5 0,2
CLASH, statistics insufficient
26679: Facts:
26679:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26679:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26679:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26679:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26679:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26679:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26679:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26679:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26679:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26679:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26679:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26679: Goal:
26679:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
26679: Order:
26679:   kbo
26679: Leaf order:
26679:  n1 1 0 0 
26679:  n0 1 0 0 
26679:  b 3 0 3 1,2,2
26679:  a 7 0 7 1,2
26679:  complement 7 1 2 0,1,2,2,2,2
26679:  join 14 2 3 0,2,2
26679:  meet 16 2 5 0,2
CLASH, statistics insufficient
26680: Facts:
26680:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26680:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26680:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26680:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26680:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26680:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26680:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26680:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26680:  Id :  10, {_}: join (complement ?26) ?26 =>= n1 [26] by top ?26
26680:  Id :  11, {_}: meet (complement ?28) ?28 =>= n0 [28] by bottom ?28
26680:  Id :  12, {_}:
          meet ?30 ?31 =<= complement (join (complement ?30) (complement ?31))
          [31, 30] by compatibility ?30 ?31
26680: Goal:
26680:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_e62
26680: Order:
26680:   lpo
26680: Leaf order:
26680:  n1 1 0 0 
26680:  n0 1 0 0 
26680:  b 3 0 3 1,2,2
26680:  a 7 0 7 1,2
26680:  complement 7 1 2 0,1,2,2,2,2
26680:  join 14 2 3 0,2,2
26680:  meet 16 2 5 0,2
% SZS status Timeout for LAT063-1.p
NO CLASH, using fixed ground order
26708: Facts:
26708:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26708:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26708:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26708:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26708:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26708:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26708:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26708:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26708:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
26708: Goal:
26708:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26708: Order:
26708:   nrkbo
26708: Leaf order:
26708:  c 3 0 3 2,2,2,2
26708:  b 4 0 4 1,2,2
26708:  a 5 0 5 1,2
26708:  join 17 2 4 0,2,2
26708:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
26709: Facts:
26709:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26709:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26709:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26709:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26709:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26709:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26709:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26709:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26709:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
26709: Goal:
26709:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26709: Order:
26709:   kbo
26709: Leaf order:
26709:  c 3 0 3 2,2,2,2
26709:  b 4 0 4 1,2,2
26709:  a 5 0 5 1,2
26709:  join 17 2 4 0,2,2
26709:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
26710: Facts:
26710:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26710:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26710:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26710:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26710:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26710:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26710:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26710:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26710:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join (meet ?26 (join ?27 ?28)) (meet ?27 ?28))))
          [28, 27, 26] by equation_H2 ?26 ?27 ?28
26710: Goal:
26710:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26710: Order:
26710:   lpo
26710: Leaf order:
26710:  c 3 0 3 2,2,2,2
26710:  b 4 0 4 1,2,2
26710:  a 5 0 5 1,2
26710:  join 17 2 4 0,2,2
26710:  meet 21 2 6 0,2
% SZS status Timeout for LAT098-1.p
NO CLASH, using fixed ground order
26734: Facts:
26734:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26734:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26734:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26734:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26734:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26734:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26734:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26734:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26734:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26734: Goal:
26734:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26734: Order:
26734:   nrkbo
26734: Leaf order:
26734:  c 2 0 2 1,2,2,2,2
26734:  b 3 0 3 1,2,2
26734:  d 3 0 3 2,2,2,2,2
26734:  a 4 0 4 1,2
26734:  join 18 2 5 0,2,2
26734:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26735: Facts:
26735:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26735:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26735:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26735:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26735:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26735:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26735:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26735:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26735:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26735: Goal:
26735:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26735: Order:
26735:   kbo
26735: Leaf order:
26735:  c 2 0 2 1,2,2,2,2
26735:  b 3 0 3 1,2,2
26735:  d 3 0 3 2,2,2,2,2
26735:  a 4 0 4 1,2
26735:  join 18 2 5 0,2,2
26735:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26736: Facts:
26736:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26736:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26736:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26736:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26736:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26736:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26736:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26736:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26736:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26736: Goal:
26736:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26736: Order:
26736:   lpo
26736: Leaf order:
26736:  c 2 0 2 1,2,2,2,2
26736:  b 3 0 3 1,2,2
26736:  d 3 0 3 2,2,2,2,2
26736:  a 4 0 4 1,2
26736:  join 18 2 5 0,2,2
26736:  meet 20 2 5 0,2
% SZS status Timeout for LAT100-1.p
NO CLASH, using fixed ground order
26775: Facts:
26775:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26775:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26775:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26775:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26775:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26775:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26775:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26775:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26775:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26775: Goal:
26775:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26775: Order:
26775:   nrkbo
26775: Leaf order:
26775:  b 3 0 3 1,2,2
26775:  c 3 0 3 2,2,2,2
26775:  a 4 0 4 1,2
26775:  join 16 2 3 0,2,2
26775:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26776: Facts:
26776:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26776:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26776:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26776:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26776:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26776:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26776:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26776:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26776:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26776: Goal:
26776:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26776: Order:
26776:   kbo
26776: Leaf order:
26776:  b 3 0 3 1,2,2
26776:  c 3 0 3 2,2,2,2
26776:  a 4 0 4 1,2
26776:  join 16 2 3 0,2,2
26776:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26777: Facts:
26777:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26777:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26777:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26777:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26777:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26777:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26777:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26777:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26777:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join (meet ?26 (join ?27 (meet ?26 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H6 ?26 ?27 ?28
26777: Goal:
26777:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26777: Order:
26777:   lpo
26777: Leaf order:
26777:  b 3 0 3 1,2,2
26777:  c 3 0 3 2,2,2,2
26777:  a 4 0 4 1,2
26777:  join 16 2 3 0,2,2
26777:  meet 20 2 5 0,2
% SZS status Timeout for LAT101-1.p
NO CLASH, using fixed ground order
26819: Facts:
26819:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26819:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26819:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26819:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26819:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26819:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26819:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26819:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26819:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
26819: Goal:
26819:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26819: Order:
26819:   nrkbo
26819: Leaf order:
26819:  c 2 0 2 1,2,2,2,2
26819:  b 3 0 3 1,2,2
26819:  d 3 0 3 2,2,2,2,2
26819:  a 4 0 4 1,2
26819:  join 18 2 5 0,2,2
26819:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26820: Facts:
26820:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26820:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26820:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26820:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26820:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26820:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26820:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26820:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26820:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
26820: Goal:
26820:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26820: Order:
26820:   kbo
26820: Leaf order:
26820:  c 2 0 2 1,2,2,2,2
26820:  b 3 0 3 1,2,2
26820:  d 3 0 3 2,2,2,2,2
26820:  a 4 0 4 1,2
26820:  join 18 2 5 0,2,2
26820:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26821: Facts:
26821:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26821:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26821:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26821:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26821:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26821:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26821:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26821:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26821:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
26821: Goal:
26821:  Id :   1, {_}:
          meet a (join b (meet a (join c d)))
          =<=
          meet a (join b (meet (join a (meet b d)) (join c d)))
          [] by prove_H4
26821: Order:
26821:   lpo
26821: Leaf order:
26821:  c 2 0 2 1,2,2,2,2
26821:  b 3 0 3 1,2,2
26821:  d 3 0 3 2,2,2,2,2
26821:  a 4 0 4 1,2
26821:  join 18 2 5 0,2,2
26821:  meet 20 2 5 0,2
% SZS status Timeout for LAT102-1.p
NO CLASH, using fixed ground order
26896: Facts:
26896:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26896:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26896:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26896:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26896:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26896:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26896:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26896:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26896:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
26896: Goal:
26896:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
26896: Order:
26896:   nrkbo
26896: Leaf order:
26896:  b 3 0 3 1,2,2
26896:  c 3 0 3 2,2,2,2
26896:  a 6 0 6 1,2
26896:  join 16 2 4 0,2,2
26896:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
26897: Facts:
26897:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26897:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26897:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26897:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26897:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26897:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26897:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26897:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26897:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
26897: Goal:
26897:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
26897: Order:
26897:   kbo
26897: Leaf order:
26897:  b 3 0 3 1,2,2
26897:  c 3 0 3 2,2,2,2
26897:  a 6 0 6 1,2
26897:  join 16 2 4 0,2,2
26897:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
26898: Facts:
26898:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26898:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26898:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26898:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26898:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26898:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26898:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26898:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26898:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?27 ?28))))
          [28, 27, 26] by equation_H10 ?26 ?27 ?28
26898: Goal:
26898:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
26898: Order:
26898:   lpo
26898: Leaf order:
26898:  b 3 0 3 1,2,2
26898:  c 3 0 3 2,2,2,2
26898:  a 6 0 6 1,2
26898:  join 16 2 4 0,2,2
26898:  meet 20 2 6 0,2
% SZS status Timeout for LAT103-1.p
NO CLASH, using fixed ground order
26925: Facts:
26925:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26925:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26925:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26925:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26925:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26925:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26925:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26925:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26925:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26925: Goal:
26925:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26925: Order:
26925:   nrkbo
26925: Leaf order:
26925:  c 3 0 3 2,2,2,2
26925:  b 4 0 4 1,2,2
26925:  a 5 0 5 1,2
26925:  join 17 2 4 0,2,2
26925:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
26926: Facts:
26926:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26926:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26926:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26926:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26926:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26926:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26926:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26926:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26926:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26926: Goal:
26926:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26926: Order:
26926:   kbo
26926: Leaf order:
26926:  c 3 0 3 2,2,2,2
26926:  b 4 0 4 1,2,2
26926:  a 5 0 5 1,2
26926:  join 17 2 4 0,2,2
26926:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
26927: Facts:
26927:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26927:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26927:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26927:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26927:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26927:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26927:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26927:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26927:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26927: Goal:
26927:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
26927: Order:
26927:   lpo
26927: Leaf order:
26927:  c 3 0 3 2,2,2,2
26927:  b 4 0 4 1,2,2
26927:  a 5 0 5 1,2
26927:  join 17 2 4 0,2,2
26927:  meet 21 2 6 0,2
% SZS status Timeout for LAT104-1.p
NO CLASH, using fixed ground order
26956: Facts:
26956:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26956:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26956:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26956:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26956:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26956:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26956:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26956:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26956:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26956: Goal:
26956:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26956: Order:
26956:   nrkbo
26956: Leaf order:
26956:  b 3 0 3 1,2,2
26956:  c 3 0 3 2,2,2,2
26956:  a 4 0 4 1,2
26956:  join 16 2 3 0,2,2
26956:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26957: Facts:
26957:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26957:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26957:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26957:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26957:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26957:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26957:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26957:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26957:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26957: Goal:
26957:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26957: Order:
26957:   kbo
26957: Leaf order:
26957:  b 3 0 3 1,2,2
26957:  c 3 0 3 2,2,2,2
26957:  a 4 0 4 1,2
26957:  join 16 2 3 0,2,2
26957:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
26958: Facts:
26958:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
26958:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
26958:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
26958:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
26958:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
26958:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
26958:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
26958:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
26958:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
26958: Goal:
26958:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
26958: Order:
26958:   lpo
26958: Leaf order:
26958:  b 3 0 3 1,2,2
26958:  c 3 0 3 2,2,2,2
26958:  a 4 0 4 1,2
26958:  join 16 2 3 0,2,2
26958:  meet 20 2 5 0,2
% SZS status Timeout for LAT105-1.p
NO CLASH, using fixed ground order
27035: Facts:
27035:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27035:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27035:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27035:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27035:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27035:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27035:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27035:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27035:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27035: Goal:
27035:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
27035: Order:
27035:   nrkbo
27035: Leaf order:
27035:  c 3 0 3 2,2,2,2
27035:  b 4 0 4 1,2,2
27035:  a 5 0 5 1,2
27035:  join 17 2 4 0,2,2
27035:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
27036: Facts:
27036:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27036:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27036:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27036:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27036:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27036:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27036:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27036:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27036:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27036: Goal:
27036:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
27036: Order:
27036:   kbo
27036: Leaf order:
27036:  c 3 0 3 2,2,2,2
27036:  b 4 0 4 1,2,2
27036:  a 5 0 5 1,2
27036:  join 17 2 4 0,2,2
27036:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
27037: Facts:
27037:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27037:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27037:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27037:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27037:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27037:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27037:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27037:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27037:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27037: Goal:
27037:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
27037: Order:
27037:   lpo
27037: Leaf order:
27037:  c 3 0 3 2,2,2,2
27037:  b 4 0 4 1,2,2
27037:  a 5 0 5 1,2
27037:  join 17 2 4 0,2,2
27037:  meet 21 2 6 0,2
% SZS status Timeout for LAT106-1.p
NO CLASH, using fixed ground order
27073: Facts:
27073:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27073:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27073:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27073:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27073:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27073:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27073:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27073:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27073:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27073: Goal:
27073:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =<=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
27073: Order:
27073:   nrkbo
27073: Leaf order:
27073:  c 3 0 3 2,2,2,2
27073:  b 4 0 4 2,1,2,2
27073:  a 6 0 6 1,2
27073:  join 17 2 4 0,2,2
27073:  meet 22 2 7 0,2
NO CLASH, using fixed ground order
27074: Facts:
27074:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27074:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27074:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27074:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27074:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27074:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27074:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27074:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27074:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27074: Goal:
27074:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =<=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
27074: Order:
27074:   kbo
27074: Leaf order:
27074:  c 3 0 3 2,2,2,2
27074:  b 4 0 4 2,1,2,2
27074:  a 6 0 6 1,2
27074:  join 17 2 4 0,2,2
27074:  meet 22 2 7 0,2
NO CLASH, using fixed ground order
27075: Facts:
27075:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27075:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27075:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27075:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27075:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27075:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27075:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27075:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27075:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
27075: Goal:
27075:  Id :   1, {_}:
          meet a (join (meet a b) (meet a c))
          =>=
          meet a (join (meet b (join a (meet b c))) (meet c (join a b)))
          [] by prove_H17
27075: Order:
27075:   lpo
27075: Leaf order:
27075:  c 3 0 3 2,2,2,2
27075:  b 4 0 4 2,1,2,2
27075:  a 6 0 6 1,2
27075:  join 17 2 4 0,2,2
27075:  meet 22 2 7 0,2
% SZS status Timeout for LAT107-1.p
NO CLASH, using fixed ground order
27091: Facts:
27091:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27091:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27091:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27091:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27091:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27091:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27091:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27091:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27091:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
27091: Goal:
27091:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27091: Order:
27091:   nrkbo
27091: Leaf order:
27091:  d 2 0 2 2,2,2,2,2
27091:  b 3 0 3 1,2,2
27091:  c 3 0 3 1,2,2,2
27091:  a 4 0 4 1,2
27091:  join 17 2 5 0,2,2
27091:  meet 21 2 5 0,2
NO CLASH, using fixed ground order
27092: Facts:
27092:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27092:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27092:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27092:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27092:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27092:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27092:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27092:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27092:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
27092: Goal:
27092:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27092: Order:
27092:   kbo
27092: Leaf order:
27092:  d 2 0 2 2,2,2,2,2
27092:  b 3 0 3 1,2,2
27092:  c 3 0 3 1,2,2,2
27092:  a 4 0 4 1,2
27092:  join 17 2 5 0,2,2
27092:  meet 21 2 5 0,2
NO CLASH, using fixed ground order
27093: Facts:
27093:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27093:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27093:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27093:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27093:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27093:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27093:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27093:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27093:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H31 ?26 ?27 ?28 ?29
27093: Goal:
27093:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27093: Order:
27093:   lpo
27093: Leaf order:
27093:  d 2 0 2 2,2,2,2,2
27093:  b 3 0 3 1,2,2
27093:  c 3 0 3 1,2,2,2
27093:  a 4 0 4 1,2
27093:  join 17 2 5 0,2,2
27093:  meet 21 2 5 0,2
% SZS status Timeout for LAT108-1.p
NO CLASH, using fixed ground order
27126: Facts:
27126:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27126:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27126:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27126:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27126:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27126:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27126:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27126:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27126:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
27126: Goal:
27126:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27126: Order:
27126:   nrkbo
27126: Leaf order:
27126:  d 2 0 2 2,2,2,2,2
27126:  b 3 0 3 1,2,2
27126:  c 3 0 3 1,2,2,2
27126:  a 4 0 4 1,2
27126:  meet 19 2 5 0,2
27126:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
27127: Facts:
27127:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27127:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27127:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27127:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27127:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27127:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27127:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27127:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27127:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
27127: Goal:
27127:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27127: Order:
27127:   kbo
27127: Leaf order:
27127:  d 2 0 2 2,2,2,2,2
27127:  b 3 0 3 1,2,2
27127:  c 3 0 3 1,2,2,2
27127:  a 4 0 4 1,2
27127:  meet 19 2 5 0,2
27127:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
27128: Facts:
27128:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27128:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27128:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27128:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27128:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27128:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27128:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27128:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27128:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
27128: Goal:
27128:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27128: Order:
27128:   lpo
27128: Leaf order:
27128:  d 2 0 2 2,2,2,2,2
27128:  b 3 0 3 1,2,2
27128:  c 3 0 3 1,2,2,2
27128:  a 4 0 4 1,2
27128:  meet 19 2 5 0,2
27128:  join 19 2 5 0,2,2
% SZS status Timeout for LAT109-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
27146: Facts:
NO CLASH, using fixed ground order
27146:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27146:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27146:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27146:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27146:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27146:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27146:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27146:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27146:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
27146: Goal:
27146:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27146: Order:
27146:   lpo
27146: Leaf order:
27146:  d 2 0 2 2,2,2,2,2
27146:  b 3 0 3 1,2,2
27146:  c 3 0 3 1,2,2,2
27146:  a 4 0 4 1,2
27146:  join 17 2 5 0,2,2
27146:  meet 21 2 5 0,2
27144: Facts:
27144:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27144:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27144:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27144:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27144:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27144:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27144:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27144:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27144:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
27144: Goal:
27144:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27144: Order:
27144:   nrkbo
27144: Leaf order:
27144:  d 2 0 2 2,2,2,2,2
27144:  b 3 0 3 1,2,2
27144:  c 3 0 3 1,2,2,2
27144:  a 4 0 4 1,2
27144:  join 17 2 5 0,2,2
27144:  meet 21 2 5 0,2
27145: Facts:
27145:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27145:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27145:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27145:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27145:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27145:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27145:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27145:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27145:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H45 ?26 ?27 ?28 ?29
27145: Goal:
27145:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27145: Order:
27145:   kbo
27145: Leaf order:
27145:  d 2 0 2 2,2,2,2,2
27145:  b 3 0 3 1,2,2
27145:  c 3 0 3 1,2,2,2
27145:  a 4 0 4 1,2
27145:  join 17 2 5 0,2,2
27145:  meet 21 2 5 0,2
% SZS status Timeout for LAT111-1.p
NO CLASH, using fixed ground order
27177: Facts:
27177:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27177:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27177:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27177:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27177:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27177:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27177:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27177:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27177:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
27177: Goal:
27177:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27177: Order:
27177:   nrkbo
27177: Leaf order:
27177:  d 2 0 2 2,2,2,2,2
27177:  b 3 0 3 1,2,2
27177:  c 3 0 3 1,2,2,2
27177:  a 4 0 4 1,2
27177:  join 17 2 5 0,2,2
27177:  meet 21 2 5 0,2
NO CLASH, using fixed ground order
27178: Facts:
27178:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27178:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27178:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27178:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27178:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27178:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27178:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27178:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27178:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
27178: Goal:
27178:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27178: Order:
27178:   kbo
27178: Leaf order:
27178:  d 2 0 2 2,2,2,2,2
27178:  b 3 0 3 1,2,2
27178:  c 3 0 3 1,2,2,2
27178:  a 4 0 4 1,2
27178:  join 17 2 5 0,2,2
27178:  meet 21 2 5 0,2
NO CLASH, using fixed ground order
27179: Facts:
27179:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27179:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27179:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27179:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27179:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27179:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27179:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27179:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27179:  Id :  10, {_}:
          meet ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          meet ?26 (meet ?27 (join ?28 (meet ?29 (join ?27 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H47 ?26 ?27 ?28 ?29
27179: Goal:
27179:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
27179: Order:
27179:   lpo
27179: Leaf order:
27179:  d 2 0 2 2,2,2,2,2
27179:  b 3 0 3 1,2,2
27179:  c 3 0 3 1,2,2,2
27179:  a 4 0 4 1,2
27179:  join 17 2 5 0,2,2
27179:  meet 21 2 5 0,2
% SZS status Timeout for LAT112-1.p
NO CLASH, using fixed ground order
27203: Facts:
27203:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27203:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27203:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27203:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27203:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27203:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27203:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27203:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27203:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
27203: Goal:
27203:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27203: Order:
27203:   nrkbo
27203: Leaf order:
27203:  d 2 0 2 2,2,2,2,2
27203:  b 3 0 3 1,2,2
27203:  c 3 0 3 1,2,2,2
27203:  a 4 0 4 1,2
27203:  meet 19 2 5 0,2
27203:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
27204: Facts:
27204:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27204:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27204:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27204:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27204:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27204:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27204:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27204:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27204:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
27204: Goal:
27204:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27204: Order:
27204:   kbo
27204: Leaf order:
27204:  d 2 0 2 2,2,2,2,2
27204:  b 3 0 3 1,2,2
27204:  c 3 0 3 1,2,2,2
27204:  a 4 0 4 1,2
27204:  meet 19 2 5 0,2
27204:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
27205: Facts:
27205:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27205:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27205:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27205:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27205:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27205:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27205:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27205:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27205:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
27205: Goal:
27205:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
27205: Order:
27205:   lpo
27205: Leaf order:
27205:  d 2 0 2 2,2,2,2,2
27205:  b 3 0 3 1,2,2
27205:  c 3 0 3 1,2,2,2
27205:  a 4 0 4 1,2
27205:  meet 19 2 5 0,2
27205:  join 19 2 5 0,2,2
% SZS status Timeout for LAT113-1.p
NO CLASH, using fixed ground order
27406: Facts:
27406:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27406:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27406:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27406:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27406:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27406:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27406:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27406:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27406:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27406: Goal:
27406:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
27406: Order:
27406:   nrkbo
27406: Leaf order:
27406:  c 2 0 2 2,2,2,2
27406:  a 5 0 5 1,1,2
27406:  b 5 0 5 2,1,2
27406:  meet 17 2 5 0,1,2
27406:  join 19 2 5 0,2
NO CLASH, using fixed ground order
27407: Facts:
27407:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27407:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27407:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27407:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27407:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27407:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27407:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27407:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27407:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27407: Goal:
27407:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
27407: Order:
27407:   kbo
27407: Leaf order:
27407:  c 2 0 2 2,2,2,2
27407:  a 5 0 5 1,1,2
27407:  b 5 0 5 2,1,2
27407:  meet 17 2 5 0,1,2
27407:  join 19 2 5 0,2
NO CLASH, using fixed ground order
27408: Facts:
27408:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27408:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27408:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27408:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27408:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27408:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27408:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27408:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27408:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27408: Goal:
27408:  Id :   1, {_}:
          join (meet a b) (meet a (join b c))
          =>=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H56
27408: Order:
27408:   lpo
27408: Leaf order:
27408:  c 2 0 2 2,2,2,2
27408:  a 5 0 5 1,1,2
27408:  b 5 0 5 2,1,2
27408:  meet 17 2 5 0,1,2
27408:  join 19 2 5 0,2
% SZS status Timeout for LAT114-1.p
NO CLASH, using fixed ground order
27552: Facts:
27552:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27552:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27552:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27552:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27552:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27552:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27552:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27552:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27552:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27552: Goal:
27552:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
27552: Order:
27552:   nrkbo
27552: Leaf order:
27552:  c 2 0 2 2,1,2,2
27552:  d 2 0 2 2,2,2,2
27552:  a 3 0 3 1,2
27552:  b 5 0 5 1,1,2,2
27552:  meet 17 2 5 0,2
27552:  join 19 2 5 0,1,2,2
NO CLASH, using fixed ground order
27553: Facts:
27553:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27553:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27553:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27553:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27553:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27553:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27553:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27553:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27553:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27553: Goal:
27553:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
27553: Order:
27553:   kbo
27553: Leaf order:
27553:  c 2 0 2 2,1,2,2
27553:  d 2 0 2 2,2,2,2
27553:  a 3 0 3 1,2
27553:  b 5 0 5 1,1,2,2
27553:  meet 17 2 5 0,2
27553:  join 19 2 5 0,1,2,2
NO CLASH, using fixed ground order
27554: Facts:
27554:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27554:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27554:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27554:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27554:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27554:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27554:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27554:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27554:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27554: Goal:
27554:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
27554: Order:
27554:   lpo
27554: Leaf order:
27554:  c 2 0 2 2,1,2,2
27554:  d 2 0 2 2,2,2,2
27554:  a 3 0 3 1,2
27554:  b 5 0 5 1,1,2,2
27554:  meet 17 2 5 0,2
27554:  join 19 2 5 0,1,2,2
% SZS status Timeout for LAT115-1.p
NO CLASH, using fixed ground order
27591: Facts:
27591:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27591:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27591:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27591:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27591:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27591:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27591:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27591:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27591:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27591: Goal:
27591:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
27591: Order:
27591:   nrkbo
27591: Leaf order:
27591:  c 2 0 2 2,1,2,2
27591:  d 2 0 2 2,2,2,2
27591:  a 3 0 3 1,2
27591:  b 5 0 5 1,1,2,2
27591:  meet 17 2 5 0,2
27591:  join 19 2 5 0,1,2,2
NO CLASH, using fixed ground order
27592: Facts:
27592:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27592:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27592:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27592:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27592:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27592:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27592:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27592:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27592:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27592: Goal:
27592:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
27592: Order:
27592:   kbo
27592: Leaf order:
27592:  c 2 0 2 2,1,2,2
27592:  d 2 0 2 2,2,2,2
27592:  a 3 0 3 1,2
27592:  b 5 0 5 1,1,2,2
27592:  meet 17 2 5 0,2
27592:  join 19 2 5 0,1,2,2
NO CLASH, using fixed ground order
27593: Facts:
27593:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27593:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27593:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27593:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27593:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27593:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27593:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27593:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27593:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
27593: Goal:
27593:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b c) (join d (meet a b))))
          [] by prove_H60
27593: Order:
27593:   lpo
27593: Leaf order:
27593:  c 2 0 2 2,1,2,2
27593:  d 2 0 2 2,2,2,2
27593:  a 3 0 3 1,2
27593:  b 5 0 5 1,1,2,2
27593:  meet 17 2 5 0,2
27593:  join 19 2 5 0,1,2,2
% SZS status Timeout for LAT116-1.p
NO CLASH, using fixed ground order
27609: Facts:
27609:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27609:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27609:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27609:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27609:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27609:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27609:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27609:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27609:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
27609: Goal:
27609:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
27609: Order:
27609:   nrkbo
27609: Leaf order:
27609:  b 3 0 3 1,2,2
27609:  c 3 0 3 2,2,2
27609:  a 5 0 5 1,2
27609:  join 16 2 4 0,2,2
27609:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
27610: Facts:
27610:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27610:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27610:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27610:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27610:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27610:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27610:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27610:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27610:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
27610: Goal:
27610:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
27610: Order:
27610:   kbo
27610: Leaf order:
27610:  b 3 0 3 1,2,2
27610:  c 3 0 3 2,2,2
27610:  a 5 0 5 1,2
27610:  join 16 2 4 0,2,2
27610:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
27611: Facts:
27611:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
27611:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
27611:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
27611:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
27611:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
27611:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
27611:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
27611:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
27611:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?26 (join (meet ?26 ?27) (meet ?28 ?29))))
          [29, 28, 27, 26] by equation_H65 ?26 ?27 ?28 ?29
27611: Goal:
27611:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
27611: Order:
27611:   lpo
27611: Leaf order:
27611:  b 3 0 3 1,2,2
27611:  c 3 0 3 2,2,2
27611:  a 5 0 5 1,2
27611:  join 16 2 4 0,2,2
27611:  meet 20 2 5 0,2
% SZS status Timeout for LAT117-1.p
NO CLASH, using fixed ground order
28243: Facts:
28243:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28243:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28243:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28243:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28243:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28243:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28243:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28243:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28243:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
28243: Goal:
28243:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28243: Order:
28243:   nrkbo
28243: Leaf order:
28243:  c 3 0 3 2,2,2,2
28243:  b 4 0 4 1,2,2
28243:  a 5 0 5 1,2
28243:  join 17 2 4 0,2,2
28243:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
28244: Facts:
28244:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28244:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28244:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28244:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28244:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28244:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28244:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28244:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28244:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
28244: Goal:
28244:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28244: Order:
28244:   kbo
28244: Leaf order:
28244:  c 3 0 3 2,2,2,2
28244:  b 4 0 4 1,2,2
28244:  a 5 0 5 1,2
28244:  join 17 2 4 0,2,2
28244:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
28246: Facts:
28246:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28246:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28246:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28246:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28246:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28246:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28246:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28246:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28246:  Id :  10, {_}:
          meet ?26 (join (meet ?27 (join ?26 ?28)) (meet ?28 (join ?26 ?27)))
          =>=
          join (meet ?26 ?27) (meet ?26 ?28)
          [28, 27, 26] by equation_H82 ?26 ?27 ?28
28246: Goal:
28246:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28246: Order:
28246:   lpo
28246: Leaf order:
28246:  c 3 0 3 2,2,2,2
28246:  b 4 0 4 1,2,2
28246:  a 5 0 5 1,2
28246:  join 17 2 4 0,2,2
28246:  meet 20 2 6 0,2
% SZS status Timeout for LAT119-1.p
NO CLASH, using fixed ground order
28653: Facts:
28653:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28653:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28653:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28653:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28653:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28653:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28653:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28653:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28653:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
28653: Goal:
28653:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
28653: Order:
28653:   nrkbo
28653: Leaf order:
28653:  c 2 0 2 2,2,2
28653:  a 4 0 4 1,2
28653:  b 4 0 4 1,2,2
28653:  meet 16 2 4 0,2
28653:  join 18 2 4 0,2,2
NO CLASH, using fixed ground order
28654: Facts:
28654:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28654:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28654:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28654:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28654:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28654:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28654:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28654:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28654:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
28654: Goal:
28654:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
28654: Order:
28654:   kbo
28654: Leaf order:
28654:  c 2 0 2 2,2,2
28654:  a 4 0 4 1,2
28654:  b 4 0 4 1,2,2
28654:  meet 16 2 4 0,2
28654:  join 18 2 4 0,2,2
NO CLASH, using fixed ground order
28655: Facts:
28655:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28655:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28655:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28655:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28655:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28655:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28655:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28655:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28655:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?27 ?28))))
          [28, 27, 26] by equation_H10_dual ?26 ?27 ?28
28655: Goal:
28655:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
28655: Order:
28655:   lpo
28655: Leaf order:
28655:  c 2 0 2 2,2,2
28655:  a 4 0 4 1,2
28655:  b 4 0 4 1,2,2
28655:  meet 16 2 4 0,2
28655:  join 18 2 4 0,2,2
% SZS status Timeout for LAT120-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
28691: Facts:
28691:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28691:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28691:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28691:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28691:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28691:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28691:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28691:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28691:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
28691: Goal:
28691:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28691: Order:
28691:   kbo
28691: Leaf order:
28691:  b 3 0 3 1,2,2
28691:  c 3 0 3 2,2,2,2
28691:  a 4 0 4 1,2
28691:  meet 16 2 3 0,2,2
28691:  join 20 2 5 0,2
28690: Facts:
28690:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28690:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28690:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28690:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28690:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28690:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28690:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28690:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28690:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
28690: Goal:
28690:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28690: Order:
28690:   nrkbo
28690: Leaf order:
28690:  b 3 0 3 1,2,2
28690:  c 3 0 3 2,2,2,2
28690:  a 4 0 4 1,2
28690:  meet 16 2 3 0,2,2
28690:  join 20 2 5 0,2
NO CLASH, using fixed ground order
28692: Facts:
28692:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28692:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28692:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28692:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28692:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28692:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28692:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28692:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28692:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?26 ?27)
              (meet (join ?26 ?28) (join ?27 (meet ?26 ?28))))
          [28, 27, 26] by equation_H18_dual ?26 ?27 ?28
28692: Goal:
28692:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28692: Order:
28692:   lpo
28692: Leaf order:
28692:  b 3 0 3 1,2,2
28692:  c 3 0 3 2,2,2,2
28692:  a 4 0 4 1,2
28692:  meet 16 2 3 0,2,2
28692:  join 20 2 5 0,2
% SZS status Timeout for LAT121-1.p
NO CLASH, using fixed ground order
28708: Facts:
28708:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28708:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28708:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28708:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28708:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28708:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28708:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28708:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28708:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
28708: Goal:
28708:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28708: Order:
28708:   nrkbo
28708: Leaf order:
28708:  b 3 0 3 1,2,2
28708:  c 3 0 3 2,2,2,2
28708:  a 4 0 4 1,2
28708:  meet 16 2 3 0,2,2
28708:  join 20 2 5 0,2
NO CLASH, using fixed ground order
28709: Facts:
28709:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28709:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28709:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28709:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28709:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28709:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28709:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28709:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28709:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
28709: Goal:
28709:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28709: Order:
28709:   kbo
28709: Leaf order:
28709:  b 3 0 3 1,2,2
28709:  c 3 0 3 2,2,2,2
28709:  a 4 0 4 1,2
28709:  meet 16 2 3 0,2,2
28709:  join 20 2 5 0,2
NO CLASH, using fixed ground order
28710: Facts:
28710:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28710:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28710:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28710:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28710:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28710:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28710:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28710:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28710:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
28710: Goal:
28710:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28710: Order:
28710:   lpo
28710: Leaf order:
28710:  b 3 0 3 1,2,2
28710:  c 3 0 3 2,2,2,2
28710:  a 4 0 4 1,2
28710:  meet 16 2 3 0,2,2
28710:  join 20 2 5 0,2
% SZS status Timeout for LAT122-1.p
NO CLASH, using fixed ground order
28742: Facts:
28742:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28742:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28742:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28742:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28742:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28742:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28742:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28742:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28742:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
28742: Goal:
28742:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28742: Order:
28742:   nrkbo
28742: Leaf order:
28742:  b 3 0 3 1,2,2
28742:  c 3 0 3 2,2,2,2
28742:  a 4 0 4 1,2
28742:  meet 16 2 3 0,2,2
28742:  join 20 2 5 0,2
NO CLASH, using fixed ground order
28743: Facts:
28743:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28743:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28743:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28743:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28743:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28743:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28743:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28743:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28743:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
28743: Goal:
28743:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28743: Order:
28743:   kbo
28743: Leaf order:
28743:  b 3 0 3 1,2,2
28743:  c 3 0 3 2,2,2,2
28743:  a 4 0 4 1,2
28743:  meet 16 2 3 0,2,2
28743:  join 20 2 5 0,2
NO CLASH, using fixed ground order
28744: Facts:
28744:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28744:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28744:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28744:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28744:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28744:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28744:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28744:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28744:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?28 (join ?26 ?27)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H22_dual ?26 ?27 ?28
28744: Goal:
28744:  Id :   1, {_}:
          join a (meet b (join a c))
          =>=
          join a (meet b (join c (meet a (join c b))))
          [] by prove_H55
28744: Order:
28744:   lpo
28744: Leaf order:
28744:  b 3 0 3 1,2,2
28744:  c 3 0 3 2,2,2,2
28744:  a 4 0 4 1,2
28744:  meet 16 2 3 0,2,2
28744:  join 20 2 5 0,2
% SZS status Timeout for LAT123-1.p
NO CLASH, using fixed ground order
28780: Facts:
28780:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28780:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28780:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28780:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28780:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28780:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28780:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28780:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28780:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
28780: Goal:
28780:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28780: Order:
28780:   nrkbo
28780: Leaf order:
28780:  b 3 0 3 1,2,2
28780:  c 3 0 3 2,2,2
28780:  a 5 0 5 1,2
28780:  meet 17 2 5 0,2
28780:  join 20 2 4 0,2,2
NO CLASH, using fixed ground order
28781: Facts:
28781:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28781:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28781:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28781:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28781:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28781:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28781:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28781:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28781:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
28781: Goal:
28781:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28781: Order:
28781:   kbo
28781: Leaf order:
28781:  b 3 0 3 1,2,2
28781:  c 3 0 3 2,2,2
28781:  a 5 0 5 1,2
28781:  meet 17 2 5 0,2
28781:  join 20 2 4 0,2,2
NO CLASH, using fixed ground order
28782: Facts:
28782:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28782:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28782:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28782:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28782:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28782:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28782:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28782:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28782:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 (join ?28 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet (join ?26 ?29) (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H32_dual ?26 ?27 ?28 ?29
28782: Goal:
28782:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28782: Order:
28782:   lpo
28782: Leaf order:
28782:  b 3 0 3 1,2,2
28782:  c 3 0 3 2,2,2
28782:  a 5 0 5 1,2
28782:  meet 17 2 5 0,2
28782:  join 20 2 4 0,2,2
% SZS status Timeout for LAT124-1.p
NO CLASH, using fixed ground order
28810: Facts:
28810:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28810:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28810:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28810:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28810:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28810:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28810:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28810:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28810:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
28810: Goal:
28810:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28810: Order:
28810:   nrkbo
28810: Leaf order:
28810:  b 3 0 3 1,2,2
28810:  c 3 0 3 2,2,2
28810:  a 5 0 5 1,2
28810:  join 18 2 4 0,2,2
28810:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
28811: Facts:
28811:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28811:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28811:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28811:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28811:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28811:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28811:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28811:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28811:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
28811: Goal:
28811:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28811: Order:
28811:   kbo
28811: Leaf order:
28811:  b 3 0 3 1,2,2
28811:  c 3 0 3 2,2,2
NO CLASH, using fixed ground order
28812: Facts:
28812:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28812:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28812:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28812:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28812:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28812:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28812:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28812:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28811:  a 5 0 5 1,2
28811:  join 18 2 4 0,2,2
28811:  meet 18 2 5 0,2
28812:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 ?29))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?27 (join ?29 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34_dual ?26 ?27 ?28 ?29
28812: Goal:
28812:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28812: Order:
28812:   lpo
28812: Leaf order:
28812:  b 3 0 3 1,2,2
28812:  c 3 0 3 2,2,2
28812:  a 5 0 5 1,2
28812:  join 18 2 4 0,2,2
28812:  meet 18 2 5 0,2
% SZS status Timeout for LAT125-1.p
NO CLASH, using fixed ground order
28829: Facts:
28829:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28829:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28829:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28829:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28829:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28829:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28829:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28829:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28829:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
28829: Goal:
28829:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28829: Order:
28829:   kbo
28829: Leaf order:
28829:  b 3 0 3 1,2,2
28829:  c 3 0 3 2,2,2
28829:  a 5 0 5 1,2
28829:  join 18 2 4 0,2,2
28829:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
28828: Facts:
28828:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28828:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28828:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28828:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28828:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28828:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28828:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28828:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28828:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
28828: Goal:
28828:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28828: Order:
28828:   nrkbo
28828: Leaf order:
28828:  b 3 0 3 1,2,2
28828:  c 3 0 3 2,2,2
28828:  a 5 0 5 1,2
28828:  join 18 2 4 0,2,2
28828:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
28830: Facts:
28830:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28830:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28830:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28830:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28830:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28830:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28830:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28830:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28830:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?28))))
          [29, 28, 27, 26] by equation_H39_dual ?26 ?27 ?28 ?29
28830: Goal:
28830:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
28830: Order:
28830:   lpo
28830: Leaf order:
28830:  b 3 0 3 1,2,2
28830:  c 3 0 3 2,2,2
28830:  a 5 0 5 1,2
28830:  join 18 2 4 0,2,2
28830:  meet 18 2 5 0,2
% SZS status Timeout for LAT126-1.p
NO CLASH, using fixed ground order
28859: Facts:
28859:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28859:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28859:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28859:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28859:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28859:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28859:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28859:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28859:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
28859: Goal:
28859:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
28859: Order:
28859:   nrkbo
28859: Leaf order:
28859:  b 3 0 3 1,2,2
28859:  c 3 0 3 2,2,2,2
28859:  a 6 0 6 1,2
28859:  join 16 2 4 0,2,2
28859:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
28860: Facts:
28860:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28860:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28860:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28860:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28860:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28860:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28860:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28860:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28860:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
28860: Goal:
28860:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
28860: Order:
28860:   kbo
28860: Leaf order:
28860:  b 3 0 3 1,2,2
28860:  c 3 0 3 2,2,2,2
28860:  a 6 0 6 1,2
28860:  join 16 2 4 0,2,2
28860:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
28861: Facts:
28861:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28861:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28861:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28861:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28861:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28861:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28861:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28861:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28861:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 ?27))))
          [28, 27, 26] by equation_H55_dual ?26 ?27 ?28
28861: Goal:
28861:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
28861: Order:
28861:   lpo
28861: Leaf order:
28861:  b 3 0 3 1,2,2
28861:  c 3 0 3 2,2,2,2
28861:  a 6 0 6 1,2
28861:  join 16 2 4 0,2,2
28861:  meet 20 2 6 0,2
% SZS status Timeout for LAT127-1.p
NO CLASH, using fixed ground order
28878: Facts:
28878:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28878:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28878:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28878:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28878:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28878:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28878:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28878:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28878:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28878: Goal:
28878:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28878: Order:
28878:   nrkbo
28878: Leaf order:
28878:  c 3 0 3 2,2,2,2
28878:  b 4 0 4 1,2,2
28878:  a 5 0 5 1,2
28878:  join 17 2 4 0,2,2
28878:  meet 19 2 6 0,2
NO CLASH, using fixed ground order
28879: Facts:
28879:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28879:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28879:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28879:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28879:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28879:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28879:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28879:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28879:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28879: Goal:
28879:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28879: Order:
28879:   kbo
28879: Leaf order:
28879:  c 3 0 3 2,2,2,2
28879:  b 4 0 4 1,2,2
NO CLASH, using fixed ground order
28880: Facts:
28880:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28880:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28880:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28880:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28880:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28880:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28880:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28880:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28880:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28880: Goal:
28880:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join b (meet a (join c (meet a b))))))
          [] by prove_H3
28880: Order:
28880:   lpo
28880: Leaf order:
28880:  c 3 0 3 2,2,2,2
28880:  b 4 0 4 1,2,2
28880:  a 5 0 5 1,2
28880:  join 17 2 4 0,2,2
28880:  meet 19 2 6 0,2
28879:  a 5 0 5 1,2
28879:  join 17 2 4 0,2,2
28879:  meet 19 2 6 0,2
% SZS status Timeout for LAT128-1.p
NO CLASH, using fixed ground order
28929: Facts:
28929:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28929:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28929:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28929:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28929:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28929:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28929:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28929:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28929:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28929: Goal:
28929:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
28929: Order:
28929:   nrkbo
28929: Leaf order:
28929:  b 3 0 3 1,2,2
28929:  c 3 0 3 2,2,2,2
28929:  a 4 0 4 1,2
28929:  join 16 2 3 0,2,2
28929:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
28930: Facts:
28930:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28930:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28930:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28930:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28930:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28930:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28930:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28930:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28930:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28930: Goal:
28930:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
28930: Order:
28930:   kbo
28930: Leaf order:
28930:  b 3 0 3 1,2,2
28930:  c 3 0 3 2,2,2,2
28930:  a 4 0 4 1,2
28930:  join 16 2 3 0,2,2
28930:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
28931: Facts:
28931:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28931:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28931:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28931:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28931:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28931:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28931:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28931:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28931:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H58_dual ?26 ?27 ?28
28931: Goal:
28931:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
28931: Order:
28931:   lpo
28931: Leaf order:
28931:  b 3 0 3 1,2,2
28931:  c 3 0 3 2,2,2,2
28931:  a 4 0 4 1,2
28931:  join 16 2 3 0,2,2
28931:  meet 18 2 5 0,2
% SZS status Timeout for LAT129-1.p
NO CLASH, using fixed ground order
28978: Facts:
28978:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28978:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28978:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28978:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28978:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28978:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28978:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28978:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28978:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
28978: Goal:
28978:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
28978: Order:
28978:   nrkbo
28978: Leaf order:
28978:  b 2 0 2 1,2,2
28978:  d 2 0 2 2,2,2,2,2
28978:  c 3 0 3 1,2,2,2
28978:  a 4 0 4 1,2
28978:  join 17 2 4 0,2,2
28978:  meet 17 2 5 0,2
NO CLASH, using fixed ground order
28979: Facts:
28979:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28979:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28979:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28979:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28979:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28979:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28979:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28979:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28979:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
28979: Goal:
28979:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
28979: Order:
28979:   kbo
28979: Leaf order:
28979:  b 2 0 2 1,2,2
28979:  d 2 0 2 2,2,2,2,2
28979:  c 3 0 3 1,2,2,2
28979:  a 4 0 4 1,2
28979:  join 17 2 4 0,2,2
28979:  meet 17 2 5 0,2
NO CLASH, using fixed ground order
28980: Facts:
28980:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
28980:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
28980:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
28980:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
28980:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
28980:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
28980:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
28980:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
28980:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
28980: Goal:
28980:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet a c))))
          [] by prove_H39
28980: Order:
28980:   lpo
28980: Leaf order:
28980:  b 2 0 2 1,2,2
28980:  d 2 0 2 2,2,2,2,2
28980:  c 3 0 3 1,2,2,2
28980:  a 4 0 4 1,2
28980:  join 17 2 4 0,2,2
28980:  meet 17 2 5 0,2
% SZS status Timeout for LAT130-1.p
NO CLASH, using fixed ground order
29013: Facts:
29013:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29013:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29013:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29013:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29013:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29013:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29013:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29013:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29013:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
29013: Goal:
29013:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29013: Order:
29013:   nrkbo
29013: Leaf order:
29013:  d 2 0 2 2,2,2,2,2
29013:  b 3 0 3 1,2,2
29013:  c 3 0 3 1,2,2,2
29013:  a 4 0 4 1,2
29013:  meet 17 2 5 0,2
29013:  join 18 2 5 0,2,2
NO CLASH, using fixed ground order
29014: Facts:
29014:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29014:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29014:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29014:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29014:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29014:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29014:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29014:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29014:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
29014: Goal:
29014:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29014: Order:
29014:   kbo
29014: Leaf order:
29014:  d 2 0 2 2,2,2,2,2
29014:  b 3 0 3 1,2,2
29014:  c 3 0 3 1,2,2,2
29014:  a 4 0 4 1,2
29014:  meet 17 2 5 0,2
29014:  join 18 2 5 0,2,2
NO CLASH, using fixed ground order
29015: Facts:
29015:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29015:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29015:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29015:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29015:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29015:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29015:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29015:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29015:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          join ?26 (meet ?27 (join ?26 (meet ?28 (join ?26 ?27))))
          [28, 27, 26] by equation_H68_dual ?26 ?27 ?28
29015: Goal:
29015:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29015: Order:
29015:   lpo
29015: Leaf order:
29015:  d 2 0 2 2,2,2,2,2
29015:  b 3 0 3 1,2,2
29015:  c 3 0 3 1,2,2,2
29015:  a 4 0 4 1,2
29015:  meet 17 2 5 0,2
29015:  join 18 2 5 0,2,2
% SZS status Timeout for LAT131-1.p
NO CLASH, using fixed ground order
29032: Facts:
29032:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29032:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29032:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29032:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29032:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29032:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29032:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29032:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29032:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
29032: Goal:
29032:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29032: Order:
29032:   nrkbo
29032: Leaf order:
29032:  d 2 0 2 2,2,2,2,2
29032:  b 3 0 3 1,2,2
29032:  c 3 0 3 1,2,2,2
29032:  a 4 0 4 1,2
29032:  meet 18 2 5 0,2
29032:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
29033: Facts:
29033:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29033:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29033:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29033:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29033:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29033:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29033:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29033:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29033:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
29033: Goal:
29033:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29033: Order:
29033:   kbo
29033: Leaf order:
29033:  d 2 0 2 2,2,2,2,2
29033:  b 3 0 3 1,2,2
29033:  c 3 0 3 1,2,2,2
29033:  a 4 0 4 1,2
29033:  meet 18 2 5 0,2
29033:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
29034: Facts:
29034:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29034:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29034:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29034:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29034:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29034:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29034:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29034:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29034:  Id :  10, {_}:
          join ?26 (meet ?27 ?28)
          =<=
          meet (join ?26 (meet ?28 (join ?26 ?27)))
            (join ?26 (meet ?27 (join ?26 ?28)))
          [28, 27, 26] by equation_H69_dual ?26 ?27 ?28
29034: Goal:
29034:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
29034: Order:
29034:   lpo
29034: Leaf order:
29034:  d 2 0 2 2,2,2,2,2
29034:  b 3 0 3 1,2,2
29034:  c 3 0 3 1,2,2,2
29034:  a 4 0 4 1,2
29034:  meet 18 2 5 0,2
29034:  join 19 2 5 0,2,2
% SZS status Timeout for LAT132-1.p
NO CLASH, using fixed ground order
29065: Facts:
29065:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29065:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29065:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29065:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29065:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29065:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29065:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29065:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29065:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
29065: Goal:
29065:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
29065: Order:
29065:   nrkbo
29065: Leaf order:
29065:  b 3 0 3 1,2,2
29065:  c 3 0 3 2,2,2,2
29065:  a 6 0 6 1,2
29065:  meet 16 2 4 0,2,2
29065:  join 20 2 6 0,2
NO CLASH, using fixed ground order
29066: Facts:
29066:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29066:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29066:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29066:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29066:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29066:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29066:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29066:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29066:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
29066: Goal:
29066:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
29066: Order:
29066:   kbo
29066: Leaf order:
29066:  b 3 0 3 1,2,2
29066:  c 3 0 3 2,2,2,2
29066:  a 6 0 6 1,2
29066:  meet 16 2 4 0,2,2
29066:  join 20 2 6 0,2
NO CLASH, using fixed ground order
29067: Facts:
29067:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29067:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29067:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29067:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29067:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29067:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29067:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29067:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29067:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?26 ?28))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?26 (join ?28 ?27))))
          [28, 27, 26] by equation_H55 ?26 ?27 ?28
29067: Goal:
29067:  Id :   1, {_}:
          join a (meet b (join a c))
          =<=
          join a (meet (join a (meet b (join a c))) (join c (meet a b)))
          [] by prove_H6_dual
29067: Order:
29067:   lpo
29067: Leaf order:
29067:  b 3 0 3 1,2,2
29067:  c 3 0 3 2,2,2,2
29067:  a 6 0 6 1,2
29067:  meet 16 2 4 0,2,2
29067:  join 20 2 6 0,2
% SZS status Timeout for LAT133-1.p
NO CLASH, using fixed ground order
29084: Facts:
29084:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29084:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29084:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29084:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29084:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29084:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29084:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29084:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29084:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
29084: Goal:
29084:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
29084: Order:
29084:   nrkbo
29084: Leaf order:
29084:  c 3 0 3 2,2,2
29084:  b 4 0 4 2,1,2
29084:  a 5 0 5 1,1,2
29084:  meet 16 2 4 0,2
29084:  join 20 2 6 0,1,2
NO CLASH, using fixed ground order
29085: Facts:
29085:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29085:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29085:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29085:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29085:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29085:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29085:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29085:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29085:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
29085: Goal:
29085:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
29085: Order:
29085:   kbo
29085: Leaf order:
29085:  c 3 0 3 2,2,2
29085:  b 4 0 4 2,1,2
29085:  a 5 0 5 1,1,2
29085:  meet 16 2 4 0,2
29085:  join 20 2 6 0,1,2
NO CLASH, using fixed ground order
29086: Facts:
29086:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29086:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29086:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29086:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29086:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29086:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29086:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29086:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29086:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26 (meet (join ?26 ?27) (join (meet ?26 ?27) ?28))
          [28, 27, 26] by equation_H61 ?26 ?27 ?28
29086: Goal:
29086:  Id :   1, {_}:
          meet (join a b) (join a c)
          =<=
          join a (meet (join b (meet c (join a b))) (join c (meet a b)))
          [] by prove_H22_dual
29086: Order:
29086:   lpo
29086: Leaf order:
29086:  c 3 0 3 2,2,2
29086:  b 4 0 4 2,1,2
29086:  a 5 0 5 1,1,2
29086:  meet 16 2 4 0,2
29086:  join 20 2 6 0,1,2
% SZS status Timeout for LAT134-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
29118: Facts:
29118:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29118:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29118:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29118:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29118:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29118:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29118:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29118:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29118:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
29118: Goal:
29118:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29118: Order:
29118:   kbo
29118: Leaf order:
29118:  b 2 0 2 1,2,2
29118:  d 2 0 2 2,2,2,2,2
29118:  c 3 0 3 1,2,2,2
29118:  a 4 0 4 1,2
29118:  meet 17 2 4 0,2,2
29118:  join 17 2 5 0,2
29117: Facts:
29117:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29117:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29117:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29117:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29117:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29117:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29117:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29117:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29117:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
29117: Goal:
29117:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29117: Order:
29117:   nrkbo
29117: Leaf order:
29117:  b 2 0 2 1,2,2
29117:  d 2 0 2 2,2,2,2,2
29117:  c 3 0 3 1,2,2,2
29117:  a 4 0 4 1,2
29117:  meet 17 2 4 0,2,2
29117:  join 17 2 5 0,2
NO CLASH, using fixed ground order
29119: Facts:
29119:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29119:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29119:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29119:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29119:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29119:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29119:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29119:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29119:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
29119: Goal:
29119:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29119: Order:
29119:   lpo
29119: Leaf order:
29119:  b 2 0 2 1,2,2
29119:  d 2 0 2 2,2,2,2,2
29119:  c 3 0 3 1,2,2,2
29119:  a 4 0 4 1,2
29119:  meet 17 2 4 0,2,2
29119:  join 17 2 5 0,2
% SZS status Timeout for LAT135-1.p
NO CLASH, using fixed ground order
29145: Facts:
29145:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29145:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29145:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29145:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29145:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29145:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29145:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29145:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29145:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29145: Goal:
29145:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29145: Order:
29145:   nrkbo
29145: Leaf order:
29145:  b 2 0 2 1,2,2
29145:  d 2 0 2 2,2,2,2,2
29145:  c 3 0 3 1,2,2,2
29145:  a 4 0 4 1,2
29145:  meet 18 2 4 0,2,2
29145:  join 18 2 5 0,2
NO CLASH, using fixed ground order
29146: Facts:
29146:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29146:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29146:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29146:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29146:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29146:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29146:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29146:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29146:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29146: Goal:
29146:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29146: Order:
29146:   kbo
29146: Leaf order:
29146:  b 2 0 2 1,2,2
29146:  d 2 0 2 2,2,2,2,2
29146:  c 3 0 3 1,2,2,2
29146:  a 4 0 4 1,2
29146:  meet 18 2 4 0,2,2
29146:  join 18 2 5 0,2
NO CLASH, using fixed ground order
29147: Facts:
29147:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29147:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29147:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29147:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29147:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29147:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29147:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29147:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29147:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29147: Goal:
29147:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join a c))))
          [] by prove_H39_dual
29147: Order:
29147:   lpo
29147: Leaf order:
29147:  b 2 0 2 1,2,2
29147:  d 2 0 2 2,2,2,2,2
29147:  c 3 0 3 1,2,2,2
29147:  a 4 0 4 1,2
29147:  meet 18 2 4 0,2,2
29147:  join 18 2 5 0,2
% SZS status Timeout for LAT136-1.p
NO CLASH, using fixed ground order
29176: Facts:
29176:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29176:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29176:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29176:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29176:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29176:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29176:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29176:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29176:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29176: Goal:
29176:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
29176: Order:
29176:   nrkbo
29176: Leaf order:
29176:  d 2 0 2 2,2,2,2,2
29176:  b 3 0 3 1,2,2
29176:  c 3 0 3 1,2,2,2
29176:  a 4 0 4 1,2
29176:  join 18 2 5 0,2
29176:  meet 19 2 5 0,2,2
NO CLASH, using fixed ground order
29177: Facts:
29177:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29177:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29177:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29177:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29177:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29177:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29177:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29177:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29177:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29177: Goal:
29177:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
29177: Order:
29177:   kbo
29177: Leaf order:
29177:  d 2 0 2 2,2,2,2,2
29177:  b 3 0 3 1,2,2
29177:  c 3 0 3 1,2,2,2
29177:  a 4 0 4 1,2
29177:  join 18 2 5 0,2
29177:  meet 19 2 5 0,2,2
NO CLASH, using fixed ground order
29178: Facts:
29178:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29178:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29178:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29178:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29178:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29178:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29178:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29178:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29178:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          join (meet ?26 (join ?28 (meet ?26 ?27)))
            (meet ?26 (join ?27 (meet ?26 ?28)))
          [28, 27, 26] by equation_H69 ?26 ?27 ?28
29178: Goal:
29178:  Id :   1, {_}:
          join a (meet b (join c (meet a d)))
          =<=
          join a (meet b (join c (meet d (join c (meet a b)))))
          [] by prove_H40_dual
29178: Order:
29178:   lpo
29178: Leaf order:
29178:  d 2 0 2 2,2,2,2,2
29178:  b 3 0 3 1,2,2
29178:  c 3 0 3 1,2,2,2
29178:  a 4 0 4 1,2
29178:  join 18 2 5 0,2
29178:  meet 19 2 5 0,2,2
% SZS status Timeout for LAT137-1.p
NO CLASH, using fixed ground order
29197: Facts:
29197:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29197:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29197:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29197:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29197:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29197:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29197:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29197:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29197:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
29197: Goal:
29197:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29197: Order:
29197:   nrkbo
29197: Leaf order:
29197:  b 3 0 3 1,2,2
29197:  c 3 0 3 2,2,2,2
29197:  a 6 0 6 1,2
29197:  join 16 2 4 0,2,2
29197:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
29198: Facts:
29198:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29198:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29198:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29198:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29198:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29198:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29198:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29198:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29198:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
29198: Goal:
29198:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29198: Order:
29198:   kbo
29198: Leaf order:
29198:  b 3 0 3 1,2,2
29198:  c 3 0 3 2,2,2,2
29198:  a 6 0 6 1,2
29198:  join 16 2 4 0,2,2
29198:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
29199: Facts:
29199:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
29199:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
29199:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
29199:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
29199:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
29199:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
29199:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
29199:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
29199:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26 (join (meet ?26 ?27) (meet (join ?26 ?27) ?28))
          [28, 27, 26] by equation_H61_dual ?26 ?27 ?28
29199: Goal:
29199:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
29199: Order:
29199:   lpo
29199: Leaf order:
29199:  b 3 0 3 1,2,2
29199:  c 3 0 3 2,2,2,2
29199:  a 6 0 6 1,2
29199:  join 16 2 4 0,2,2
29199:  meet 20 2 6 0,2
% SZS status Timeout for LAT171-1.p
NO CLASH, using fixed ground order
29274: Facts:
29274:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29274:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29274:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29274:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29274:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
29274: Goal:
29274:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
29274: Order:
29274:   nrkbo
29274: Leaf order:
29274:  y 2 0 0 
29274:  x 2 0 1 1,2
29274:  z 2 0 1 2,2
29274:  truth 4 0 1 3
29274:  not 2 1 0 
29274:  implies 16 2 1 0,2
NO CLASH, using fixed ground order
29275: Facts:
29275:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29275:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29275:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29275:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29275:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
29275: Goal:
29275:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
29275: Order:
29275:   kbo
29275: Leaf order:
29275:  y 2 0 0 
29275:  x 2 0 1 1,2
29275:  z 2 0 1 2,2
29275:  truth 4 0 1 3
29275:  not 2 1 0 
29275:  implies 16 2 1 0,2
NO CLASH, using fixed ground order
29276: Facts:
29276:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29276:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29276:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29276:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29276:  Id :   6, {_}: implies x y =>= implies y z [] by lemma_antecedent
29276: Goal:
29276:  Id :   1, {_}: implies x z =>= truth [] by prove_wajsberg_lemma
29276: Order:
29276:   lpo
29276: Leaf order:
29276:  y 2 0 0 
29276:  x 2 0 1 1,2
29276:  z 2 0 1 2,2
29276:  truth 4 0 1 3
29276:  not 2 1 0 
29276:  implies 16 2 1 0,2
% SZS status Timeout for LCL136-1.p
NO CLASH, using fixed ground order
29293: Facts:
29293:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29293:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29293:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29293:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29293: Goal:
29293:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
29293: Order:
29293:   nrkbo
29293: Leaf order:
29293:  x 2 0 2 1,1,1,2
29293:  z 2 0 2 2,1,2,2
29293:  y 3 0 3 2,1,1,2
29293:  truth 4 0 1 3
29293:  not 2 1 0 
29293:  implies 19 2 6 0,2
NO CLASH, using fixed ground order
29294: Facts:
29294:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29294:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29294:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29294:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29294: Goal:
29294:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
29294: Order:
29294:   kbo
29294: Leaf order:
29294:  x 2 0 2 1,1,1,2
29294:  z 2 0 2 2,1,2,2
29294:  y 3 0 3 2,1,1,2
29294:  truth 4 0 1 3
29294:  not 2 1 0 
29294:  implies 19 2 6 0,2
NO CLASH, using fixed ground order
29295: Facts:
29295:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29295:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29295:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29295:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29295: Goal:
29295:  Id :   1, {_}:
          implies (implies (implies x y) y)
            (implies (implies y z) (implies x z))
          =>=
          truth
          [] by prove_wajsberg_lemma
29295: Order:
29295:   lpo
29295: Leaf order:
29295:  x 2 0 2 1,1,1,2
29295:  z 2 0 2 2,1,2,2
29295:  y 3 0 3 2,1,1,2
29295:  truth 4 0 1 3
29295:  not 2 1 0 
29295:  implies 19 2 6 0,2
% SZS status Timeout for LCL137-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
29381: Facts:
29381:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29381:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29381:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29381:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29381:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
29381:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
29381:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
29381:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
29381:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
29381:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
29381: Goal:
29381:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
29381: Order:
29381:   kbo
29381: Leaf order:
29381:  truth 3 0 0 
29381:  x 10 0 10 1,1,1,2
29381:  not 12 1 6 0,2
29381:  and 11 2 4 0,1,1,2
29381:  or 12 2 4 0,1,2
29381:  implies 14 2 0 
29380: Facts:
29380:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29380:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29380:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29380:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29380:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
29380:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
29380:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
29380:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
29380:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
29380:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
29380: Goal:
29380:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
29380: Order:
29380:   nrkbo
29380: Leaf order:
29380:  truth 3 0 0 
29380:  x 10 0 10 1,1,1,2
29380:  not 12 1 6 0,2
29380:  and 11 2 4 0,1,1,2
29380:  or 12 2 4 0,1,2
29380:  implies 14 2 0 
NO CLASH, using fixed ground order
29382: Facts:
29382:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
29382:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
29382:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
29382:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
29382:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
29382:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
29382:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
29382:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
29382:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
29382:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
29382: Goal:
29382:  Id :   1, {_}:
          not (or (and x (or x x)) (and x x))
          =<=
          and (not x) (or (or (not x) (not x)) (and (not x) (not x)))
          [] by prove_wajsberg_theorem
29382: Order:
29382:   lpo
29382: Leaf order:
29382:  truth 3 0 0 
29382:  x 10 0 10 1,1,1,2
29382:  not 12 1 6 0,2
29382:  and 11 2 4 0,1,1,2
29382:  or 12 2 4 0,1,2
29382:  implies 14 2 0 
% SZS status Timeout for LCL165-1.p
NO CLASH, using fixed ground order
29399: Facts:
29399:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29399:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29399:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29399:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29399:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29399:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29399:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29399:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29399:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29399:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29399:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29399:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29399:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29399:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29399:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29399:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29399:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29399:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29399:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29399:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29399:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29399:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29399: Goal:
29399:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
29399: Order:
29399:   nrkbo
29399: Leaf order:
29399:  u 2 0 2 1,3,2
29399:  v 2 0 2 2,3,2
29399:  x 3 0 3 1,2
29399:  y 3 0 3 2,2
29399:  additive_identity 8 0 0 
29399:  additive_inverse 22 1 0 
29399:  commutator 1 2 0 
29399:  add 26 2 2 0,3,2
29399:  multiply 40 2 0 
29399:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29400: Facts:
29400:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29400:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29400:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29400:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29400:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29400:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29400:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29400:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29400:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29400:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29400:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29400:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29400:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29400:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29400:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29400:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29400:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29400:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29400:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29400:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29400:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29400:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29400: Goal:
29400:  Id :   1, {_}:
          associator x y (add u v)
          =<=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
29400: Order:
29400:   kbo
29400: Leaf order:
29400:  u 2 0 2 1,3,2
29400:  v 2 0 2 2,3,2
29400:  x 3 0 3 1,2
29400:  y 3 0 3 2,2
29400:  additive_identity 8 0 0 
29400:  additive_inverse 22 1 0 
29400:  commutator 1 2 0 
29400:  add 26 2 2 0,3,2
29400:  multiply 40 2 0 
29400:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29401: Facts:
29401:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29401:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29401:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29401:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29401:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29401:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29401:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29401:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29401:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29401:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29401:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29401:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29401:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29401:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29401:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29401:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29401:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29401:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29401:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29401:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29401:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29401:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29401: Goal:
29401:  Id :   1, {_}:
          associator x y (add u v)
          =>=
          add (associator x y u) (associator x y v)
          [] by prove_linearised_form1
29401: Order:
29401:   lpo
29401: Leaf order:
29401:  u 2 0 2 1,3,2
29401:  v 2 0 2 2,3,2
29401:  x 3 0 3 1,2
29401:  y 3 0 3 2,2
29401:  additive_identity 8 0 0 
29401:  additive_inverse 22 1 0 
29401:  commutator 1 2 0 
29401:  add 26 2 2 0,3,2
29401:  multiply 40 2 0 
29401:  associator 4 3 3 0,2
% SZS status Timeout for RNG019-7.p
NO CLASH, using fixed ground order
29433: Facts:
29433:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29433:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29433:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29433:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29433:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29433:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29433:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29433:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29433:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29433:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29433:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29433:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29433:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29433:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29433:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29433: Goal:
29433:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29433: Order:
29433:   kbo
29433: Leaf order:
29433:  u 2 0 2 1,2,2
29433:  v 2 0 2 2,2,2
29433:  x 3 0 3 1,2
29433:  y 3 0 3 3,2
29433:  additive_identity 8 0 0 
29433:  additive_inverse 6 1 0 
29433:  commutator 1 2 0 
29433:  add 18 2 2 0,2,2
29433:  multiply 22 2 0 
29433:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29434: Facts:
29434:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29434:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29434:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29434:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29434:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29434:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29434:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29434:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29434:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29434:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29434:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29434:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29434:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29434:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29434:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29434: Goal:
29434:  Id :   1, {_}:
          associator x (add u v) y
          =>=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29434: Order:
29434:   lpo
29434: Leaf order:
29434:  u 2 0 2 1,2,2
29434:  v 2 0 2 2,2,2
29434:  x 3 0 3 1,2
29434:  y 3 0 3 3,2
29434:  additive_identity 8 0 0 
29434:  additive_inverse 6 1 0 
29434:  commutator 1 2 0 
29434:  add 18 2 2 0,2,2
29434:  multiply 22 2 0 
29434:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29432: Facts:
29432:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29432:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29432:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29432:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29432:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29432:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29432:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29432:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29432:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29432:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29432:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29432:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29432:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29432:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29432:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29432: Goal:
29432:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29432: Order:
29432:   nrkbo
29432: Leaf order:
29432:  u 2 0 2 1,2,2
29432:  v 2 0 2 2,2,2
29432:  x 3 0 3 1,2
29432:  y 3 0 3 3,2
29432:  additive_identity 8 0 0 
29432:  additive_inverse 6 1 0 
29432:  commutator 1 2 0 
29432:  add 18 2 2 0,2,2
29432:  multiply 22 2 0 
29432:  associator 4 3 3 0,2
% SZS status Timeout for RNG020-6.p
NO CLASH, using fixed ground order
29471: Facts:
29471:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29471:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29471:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29471:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29471:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29471:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29471:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29471:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29471:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29471:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29471:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29471:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29471:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29471:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29471:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29471:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29471:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29471:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29471:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29471:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29471:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29471:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29471: Goal:
29471:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29471: Order:
29471:   nrkbo
29471: Leaf order:
29471:  u 2 0 2 1,2,2
29471:  v 2 0 2 2,2,2
29471:  x 3 0 3 1,2
29471:  y 3 0 3 3,2
29471:  additive_identity 8 0 0 
29471:  additive_inverse 22 1 0 
29471:  commutator 1 2 0 
29471:  add 26 2 2 0,2,2
29471:  multiply 40 2 0 
29471:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29472: Facts:
29472:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29472:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29472:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29472:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29472:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29472:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29472:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29472:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29472:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29472:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29472:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29472:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29472:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29472:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29472:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29472:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29472:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29472:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29472:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29472:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29472:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29472:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29472: Goal:
29472:  Id :   1, {_}:
          associator x (add u v) y
          =<=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29472: Order:
29472:   kbo
29472: Leaf order:
29472:  u 2 0 2 1,2,2
29472:  v 2 0 2 2,2,2
29472:  x 3 0 3 1,2
29472:  y 3 0 3 3,2
29472:  additive_identity 8 0 0 
29472:  additive_inverse 22 1 0 
29472:  commutator 1 2 0 
29472:  add 26 2 2 0,2,2
29472:  multiply 40 2 0 
29472:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29473: Facts:
29473:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29473:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29473:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29473:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29473:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29473:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29473:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29473:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29473:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29473:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29473:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29473:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29473:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29473:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29473:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29473:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29473:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29473:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29473:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29473:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29473:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29473:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29473: Goal:
29473:  Id :   1, {_}:
          associator x (add u v) y
          =>=
          add (associator x u y) (associator x v y)
          [] by prove_linearised_form2
29473: Order:
29473:   lpo
29473: Leaf order:
29473:  u 2 0 2 1,2,2
29473:  v 2 0 2 2,2,2
29473:  x 3 0 3 1,2
29473:  y 3 0 3 3,2
29473:  additive_identity 8 0 0 
29473:  additive_inverse 22 1 0 
29473:  commutator 1 2 0 
29473:  add 26 2 2 0,2,2
29473:  multiply 40 2 0 
29473:  associator 4 3 3 0,2
% SZS status Timeout for RNG020-7.p
NO CLASH, using fixed ground order
29501: Facts:
29501:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29501:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29501:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29501:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29501:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29501:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29501:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29501:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29501:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29501:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29501:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29501:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29501:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29501:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29501:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29501:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29501:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29501:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29501:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29501:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29501:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29501:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29501: Goal:
29501:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
29501: Order:
29501:   nrkbo
29501: Leaf order:
29501:  u 2 0 2 1,1,2
29501:  v 2 0 2 2,1,2
29501:  x 3 0 3 2,2
29501:  y 3 0 3 3,2
29501:  additive_identity 8 0 0 
29501:  additive_inverse 22 1 0 
29501:  commutator 1 2 0 
29501:  add 26 2 2 0,1,2
29501:  multiply 40 2 0 
29501:  associator 4 3 3 0,2
NO CLASH, using fixed ground order
29502: Facts:
29502:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29502:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
NO CLASH, using fixed ground order
29503: Facts:
29502:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29502:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29502:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29502:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29502:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29502:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29502:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29502:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29502:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29502:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29502:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29502:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29502:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29502:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29502:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29502:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29502:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29502:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29502:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29502:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29502: Goal:
29502:  Id :   1, {_}:
          associator (add u v) x y
          =<=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
29502: Order:
29502:   kbo
29502: Leaf order:
29502:  u 2 0 2 1,1,2
29502:  v 2 0 2 2,1,2
29502:  x 3 0 3 2,2
29502:  y 3 0 3 3,2
29502:  additive_identity 8 0 0 
29502:  additive_inverse 22 1 0 
29502:  commutator 1 2 0 
29502:  add 26 2 2 0,1,2
29502:  multiply 40 2 0 
29502:  associator 4 3 3 0,2
29503:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29503:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29503:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29503:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29503:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29503:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29503:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29503:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29503:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29503:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29503:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29503:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29503:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29503:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29503:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29503:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
29503:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
29503:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
29503:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
29503:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
29503:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
29503:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
29503: Goal:
29503:  Id :   1, {_}:
          associator (add u v) x y
          =>=
          add (associator u x y) (associator v x y)
          [] by prove_linearised_form3
29503: Order:
29503:   lpo
29503: Leaf order:
29503:  u 2 0 2 1,1,2
29503:  v 2 0 2 2,1,2
29503:  x 3 0 3 2,2
29503:  y 3 0 3 3,2
29503:  additive_identity 8 0 0 
29503:  additive_inverse 22 1 0 
29503:  commutator 1 2 0 
29503:  add 26 2 2 0,1,2
29503:  multiply 40 2 0 
29503:  associator 4 3 3 0,2
% SZS status Timeout for RNG021-7.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
29520: Facts:
29520:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29520:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29520:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29520:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29520:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29520:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29520:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29520:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29520:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29520:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29520:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29520:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29520:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29520:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29520:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29520: Goal:
29520:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
29520: Order:
29520:   kbo
29520: Leaf order:
29520:  x 2 0 2 1,1,2
29520:  y 2 0 2 2,1,2
29520:  z 2 0 2 3,1,2
29520:  additive_identity 9 0 1 3
29520:  additive_inverse 6 1 0 
29520:  commutator 1 2 0 
29520:  add 17 2 1 0,2
29520:  multiply 22 2 0 
29520:  associator 3 3 2 0,1,2
29519: Facts:
29519:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29519:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29519:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29519:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29519:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29519:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29519:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29519:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29519:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29519:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29519:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29519:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29519:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29519:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29519:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29519: Goal:
29519:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
29519: Order:
29519:   nrkbo
29519: Leaf order:
29519:  x 2 0 2 1,1,2
29519:  y 2 0 2 2,1,2
29519:  z 2 0 2 3,1,2
29519:  additive_identity 9 0 1 3
29519:  additive_inverse 6 1 0 
29519:  commutator 1 2 0 
29519:  add 17 2 1 0,2
29519:  multiply 22 2 0 
29519:  associator 3 3 2 0,1,2
NO CLASH, using fixed ground order
29521: Facts:
29521:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
29521:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
29521:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
29521:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
29521:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
29521:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
29521:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
29521:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
29521:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
29521:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
29521:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
29521:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29521:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29521:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
29521:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
29521: Goal:
29521:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
29521: Order:
29521:   lpo
29521: Leaf order:
29521:  x 2 0 2 1,1,2
29521:  y 2 0 2 2,1,2
29521:  z 2 0 2 3,1,2
29521:  additive_identity 9 0 1 3
29521:  additive_inverse 6 1 0 
29521:  commutator 1 2 0 
29521:  add 17 2 1 0,2
29521:  multiply 22 2 0 
29521:  associator 3 3 2 0,1,2
% SZS status Timeout for RNG025-4.p
NO CLASH, using fixed ground order
29553: Facts:
29553:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29553:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29553:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29553:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29553:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29553:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29553:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29553:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29553:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29553:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29553:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29553:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29553:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29553:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =<=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
29553:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =<=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
29553:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =<=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
29553:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
29553: Goal:
29553:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29553: Order:
29553:   nrkbo
29553: Leaf order:
29553:  a 2 0 2 1,1,2
29553:  b 2 0 2 2,1,2
29553:  c 2 0 2 3,1,2
29553:  additive_identity 9 0 1 3
29553:  additive_inverse 5 1 0 
29553:  commutator 1 2 0 
29553:  multiply 18 2 0 
29553:  add 22 2 1 0,2
29553:  associator 11 3 2 0,1,2
NO CLASH, using fixed ground order
29554: Facts:
29554:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29554:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29554:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29554:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29554:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29554:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29554:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29554:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29554:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29554:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29554:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29554:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29554:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29554:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =<=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
29554:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =<=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
29554:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =<=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
29554:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
29554: Goal:
29554:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29554: Order:
29554:   kbo
29554: Leaf order:
29554:  a 2 0 2 1,1,2
29554:  b 2 0 2 2,1,2
29554:  c 2 0 2 3,1,2
29554:  additive_identity 9 0 1 3
29554:  additive_inverse 5 1 0 
29554:  commutator 1 2 0 
29554:  multiply 18 2 0 
29554:  add 22 2 1 0,2
29554:  associator 11 3 2 0,1,2
NO CLASH, using fixed ground order
29555: Facts:
29555:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
29555:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
29555:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
29555:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
29555:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
29555:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
29555:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
29555:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
29555:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
29555:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
29555:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
29555:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
29555:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
29555:  Id :  15, {_}:
          associator ?37 ?38 (add ?39 ?40)
          =>=
          add (associator ?37 ?38 ?39) (associator ?37 ?38 ?40)
          [40, 39, 38, 37] by linearised_associator1 ?37 ?38 ?39 ?40
29555:  Id :  16, {_}:
          associator ?42 (add ?43 ?44) ?45
          =>=
          add (associator ?42 ?43 ?45) (associator ?42 ?44 ?45)
          [45, 44, 43, 42] by linearised_associator2 ?42 ?43 ?44 ?45
29555:  Id :  17, {_}:
          associator (add ?47 ?48) ?49 ?50
          =>=
          add (associator ?47 ?49 ?50) (associator ?48 ?49 ?50)
          [50, 49, 48, 47] by linearised_associator3 ?47 ?48 ?49 ?50
29555:  Id :  18, {_}:
          commutator ?52 ?53
          =<=
          add (multiply ?53 ?52) (additive_inverse (multiply ?52 ?53))
          [53, 52] by commutator ?52 ?53
29555: Goal:
29555:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29555: Order:
29555:   lpo
29555: Leaf order:
29555:  a 2 0 2 1,1,2
29555:  b 2 0 2 2,1,2
29555:  c 2 0 2 3,1,2
29555:  additive_identity 9 0 1 3
29555:  additive_inverse 5 1 0 
29555:  commutator 1 2 0 
29555:  multiply 18 2 0 
29555:  add 22 2 1 0,2
29555:  associator 11 3 2 0,1,2
% SZS status Timeout for RNG025-8.p
NO CLASH, using fixed ground order
29571: Facts:
29571:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29571:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29571:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29571:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29571:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29571:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29571:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29571:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29571:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29571:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29571:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29571:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29571:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29571:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29571:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29571:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29571:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29571:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29571:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29571:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =?= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
29571:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =<=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
29571:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =<=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
29571:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =<=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
29571:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
29571: Goal:
29571:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29571: Order:
29571:   nrkbo
29571: Leaf order:
29571:  a 2 0 2 1,1,2
29571:  b 2 0 2 2,1,2
29571:  c 2 0 2 3,1,2
29571:  additive_identity 9 0 1 3
29571:  additive_inverse 21 1 0 
29571:  commutator 1 2 0 
29571:  add 30 2 1 0,2
29571:  multiply 36 2 0 add
29571:  associator 11 3 2 0,1,2
NO CLASH, using fixed ground order
29572: Facts:
NO CLASH, using fixed ground order
29572:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29572:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29572:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29572:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29572:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29572:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29572:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29572:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29572:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29572:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29572:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29572:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29572:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29572:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29572:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29572:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29572:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29572:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29572:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29572:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =>= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
29572:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =<=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
29572:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =<=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
29572:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =<=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
29572:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
29572: Goal:
29572:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29572: Order:
29572:   kbo
29572: Leaf order:
29572:  a 2 0 2 1,1,2
29572:  b 2 0 2 2,1,2
29572:  c 2 0 2 3,1,2
29572:  additive_identity 9 0 1 3
29572:  additive_inverse 21 1 0 
29572:  commutator 1 2 0 
29572:  add 30 2 1 0,2
29572:  multiply 36 2 0 add
29572:  associator 11 3 2 0,1,2
29573: Facts:
29573:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
29573:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
29573:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
29573:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
29573:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
29573:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
29573:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
29573:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
29573:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
29573:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
29573:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
29573:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
29573:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
29573:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
29573:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
29573:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
29573:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
29573:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
29573:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
29573:  Id :  21, {_}:
          multiply (multiply ?59 ?59) ?60 =>= multiply ?59 (multiply ?59 ?60)
          [60, 59] by left_alternative ?59 ?60
29573:  Id :  22, {_}:
          associator ?62 ?63 (add ?64 ?65)
          =>=
          add (associator ?62 ?63 ?64) (associator ?62 ?63 ?65)
          [65, 64, 63, 62] by linearised_associator1 ?62 ?63 ?64 ?65
29573:  Id :  23, {_}:
          associator ?67 (add ?68 ?69) ?70
          =>=
          add (associator ?67 ?68 ?70) (associator ?67 ?69 ?70)
          [70, 69, 68, 67] by linearised_associator2 ?67 ?68 ?69 ?70
29573:  Id :  24, {_}:
          associator (add ?72 ?73) ?74 ?75
          =>=
          add (associator ?72 ?74 ?75) (associator ?73 ?74 ?75)
          [75, 74, 73, 72] by linearised_associator3 ?72 ?73 ?74 ?75
29573:  Id :  25, {_}:
          commutator ?77 ?78
          =<=
          add (multiply ?78 ?77) (additive_inverse (multiply ?77 ?78))
          [78, 77] by commutator ?77 ?78
29573: Goal:
29573:  Id :   1, {_}:
          add (associator a b c) (associator a c b) =>= additive_identity
          [] by prove_flexible_law
29573: Order:
29573:   lpo
29573: Leaf order:
29573:  a 2 0 2 1,1,2
29573:  b 2 0 2 2,1,2
29573:  c 2 0 2 3,1,2
29573:  additive_identity 9 0 1 3
29573:  additive_inverse 21 1 0 
29573:  commutator 1 2 0 
29573:  add 30 2 1 0,2
29573:  multiply 36 2 0 add
29573:  associator 11 3 2 0,1,2
% SZS status Timeout for RNG025-9.p
NO CLASH, using fixed ground order
29618: Facts:
29618:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
29618:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
29618:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
29618:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =<=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
29618:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
29618:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
29618:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
29618: Goal:
29618:  Id :   1, {_}:
          add a (multiply b c) =<= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
29618: Order:
29618:   nrkbo
29618: Leaf order:
29618:  n1 1 0 0 
29618:  b 2 0 2 1,2,2
29618:  c 2 0 2 2,2,2
29618:  a 3 0 3 1,2
29618:  inverse 3 1 0 
29618:  multiply 9 2 2 0,2,2
29618:  add 9 2 3 0,2
29618:  pixley 4 3 0 
NO CLASH, using fixed ground order
29619: Facts:
29619:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
29619:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
29619:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
29619:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =<=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
29619:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
29619:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
29619:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
29619: Goal:
29619:  Id :   1, {_}:
          add a (multiply b c) =<= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
29619: Order:
29619:   kbo
29619: Leaf order:
29619:  n1 1 0 0 
29619:  b 2 0 2 1,2,2
29619:  c 2 0 2 2,2,2
29619:  a 3 0 3 1,2
29619:  inverse 3 1 0 
29619:  multiply 9 2 2 0,2,2
29619:  add 9 2 3 0,2
29619:  pixley 4 3 0 
NO CLASH, using fixed ground order
29621: Facts:
29621:  Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
29621:  Id :   3, {_}:
          multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5)
          [7, 6, 5] by multiply_add_property ?5 ?6 ?7
29621:  Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
29621:  Id :   5, {_}:
          pixley ?11 ?12 ?13
          =>=
          add (multiply ?11 (inverse ?12))
            (add (multiply ?11 ?13) (multiply (inverse ?12) ?13))
          [13, 12, 11] by pixley_defn ?11 ?12 ?13
29621:  Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
29621:  Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
29621:  Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
29621: Goal:
29621:  Id :   1, {_}:
          add a (multiply b c) =>= multiply (add a b) (add a c)
          [] by prove_add_multiply_property
29621: Order:
29621:   lpo
29621: Leaf order:
29621:  n1 1 0 0 
29621:  b 2 0 2 1,2,2
29621:  c 2 0 2 2,2,2
29621:  a 3 0 3 1,2
29621:  inverse 3 1 0 
29621:  multiply 9 2 2 0,2,2
29621:  add 9 2 3 0,2
29621:  pixley 4 3 0 
Statistics :
Max weight : 25
Found proof, 25.954748s
% SZS status Unsatisfiable for BOO023-1.p
% SZS output start CNFRefutation for BOO023-1.p
Id :   6, {_}: pixley ?15 ?15 ?16 =>= ?16 [16, 15] by pixley1 ?15 ?16
Id :   8, {_}: pixley ?21 ?22 ?21 =>= ?21 [22, 21] by pixley3 ?21 ?22
Id :   7, {_}: pixley ?18 ?19 ?19 =>= ?18 [19, 18] by pixley2 ?18 ?19
Id :   5, {_}: pixley ?11 ?12 ?13 =<= add (multiply ?11 (inverse ?12)) (add (multiply ?11 ?13) (multiply (inverse ?12) ?13)) [13, 12, 11] by pixley_defn ?11 ?12 ?13
Id :   4, {_}: add ?9 (inverse ?9) =>= n1 [9] by additive_inverse ?9
Id :  12, {_}: multiply ?33 (add ?34 ?35) =<= add (multiply ?34 ?33) (multiply ?35 ?33) [35, 34, 33] by multiply_add_property ?33 ?34 ?35
Id :   2, {_}: multiply (add ?2 ?3) ?3 =>= ?3 [3, 2] by multiply_add ?2 ?3
Id :   3, {_}: multiply ?5 (add ?6 ?7) =<= add (multiply ?6 ?5) (multiply ?7 ?5) [7, 6, 5] by multiply_add_property ?5 ?6 ?7
Id :  45, {_}: multiply (multiply ?127 (add ?128 ?129)) (multiply ?129 ?127) =>= multiply ?129 ?127 [129, 128, 127] by Super 2 with 3 at 1,2
Id :  52, {_}: multiply (add ?156 ?157) (multiply ?157 (add ?158 (add ?156 ?157))) =>= multiply ?157 (add ?158 (add ?156 ?157)) [158, 157, 156] by Super 45 with 2 at 1,2
Id :  13, {_}: multiply ?37 (add ?38 (add ?39 ?37)) =>= add (multiply ?38 ?37) ?37 [39, 38, 37] by Super 12 with 2 at 2,3
Id :  49, {_}: multiply (multiply ?143 n1) (multiply (inverse ?144) ?143) =>= multiply (inverse ?144) ?143 [144, 143] by Super 45 with 4 at 2,1,2
Id :  21, {_}: pixley ?58 ?59 ?60 =<= add (multiply ?58 (inverse ?59)) (multiply ?60 (add ?58 (inverse ?59))) [60, 59, 58] by Demod 5 with 3 at 2,3
Id :  24, {_}: pixley (add ?69 (inverse ?70)) ?70 ?71 =<= add (inverse ?70) (multiply ?71 (add (add ?69 (inverse ?70)) (inverse ?70))) [71, 70, 69] by Super 21 with 2 at 1,3
Id :  19, {_}: pixley ?11 ?12 ?13 =<= add (multiply ?11 (inverse ?12)) (multiply ?13 (add ?11 (inverse ?12))) [13, 12, 11] by Demod 5 with 3 at 2,3
Id : 162, {_}: multiply (pixley ?407 ?408 ?409) (multiply ?409 (add ?407 (inverse ?408))) =>= multiply ?409 (add ?407 (inverse ?408)) [409, 408, 407] by Super 2 with 19 at 1,2
Id : 500, {_}: multiply ?959 (multiply ?960 (add ?959 (inverse ?960))) =>= multiply ?960 (add ?959 (inverse ?960)) [960, 959] by Super 162 with 7 at 1,2
Id : 207, {_}: multiply (multiply ?494 n1) (multiply (inverse ?495) ?494) =>= multiply (inverse ?495) ?494 [495, 494] by Super 45 with 4 at 2,1,2
Id : 211, {_}: multiply n1 (multiply (inverse ?507) (add ?508 n1)) =>= multiply (inverse ?507) (add ?508 n1) [508, 507] by Super 207 with 2 at 1,2
Id :  16, {_}: multiply n1 (inverse ?49) =>= inverse ?49 [49] by Super 2 with 4 at 1,2
Id :  60, {_}: multiply (inverse ?174) (add ?175 n1) =<= add (multiply ?175 (inverse ?174)) (inverse ?174) [175, 174] by Super 3 with 16 at 2,3
Id :  61, {_}: multiply (inverse ?177) (add (add ?178 (inverse ?177)) n1) =>= add (inverse ?177) (inverse ?177) [178, 177] by Super 60 with 2 at 1,3
Id :  14, {_}: multiply ?41 (add (add ?42 ?41) ?43) =>= add ?41 (multiply ?43 ?41) [43, 42, 41] by Super 12 with 2 at 1,3
Id : 283, {_}: add (inverse ?177) (multiply n1 (inverse ?177)) =>= add (inverse ?177) (inverse ?177) [177] by Demod 61 with 14 at 2
Id :  40, {_}: multiply (inverse ?110) (add n1 ?111) =<= add (inverse ?110) (multiply ?111 (inverse ?110)) [111, 110] by Super 3 with 16 at 1,3
Id : 284, {_}: multiply (inverse ?177) (add n1 n1) =?= add (inverse ?177) (inverse ?177) [177] by Demod 283 with 40 at 2
Id : 297, {_}: multiply n1 (add (inverse ?660) (inverse ?660)) =>= multiply (inverse ?660) (add n1 n1) [660] by Super 211 with 284 at 2,2
Id : 505, {_}: multiply (inverse n1) (multiply (inverse n1) (add n1 n1)) =>= multiply n1 (add (inverse n1) (inverse n1)) [] by Super 500 with 297 at 2,2
Id : 513, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= multiply n1 (add (inverse n1) (inverse n1)) [] by Demod 505 with 284 at 2,2
Id : 514, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= multiply (inverse n1) (add n1 n1) [] by Demod 513 with 297 at 3
Id : 515, {_}: multiply (inverse n1) (add (inverse n1) (inverse n1)) =>= add (inverse n1) (inverse n1) [] by Demod 514 with 284 at 3
Id : 522, {_}: pixley (inverse n1) n1 (inverse n1) =<= add (multiply (inverse n1) (inverse n1)) (add (inverse n1) (inverse n1)) [] by Super 19 with 515 at 2,3
Id : 525, {_}: inverse n1 =<= add (multiply (inverse n1) (inverse n1)) (add (inverse n1) (inverse n1)) [] by Demod 522 with 8 at 2
Id : 543, {_}: multiply (inverse n1) (inverse n1) =<= add (multiply (multiply (inverse n1) (inverse n1)) (inverse n1)) (inverse n1) [] by Super 13 with 525 at 2,2
Id :  39, {_}: multiply (inverse ?107) (add ?108 n1) =<= add (multiply ?108 (inverse ?107)) (inverse ?107) [108, 107] by Super 3 with 16 at 2,3
Id : 557, {_}: multiply (inverse n1) (inverse n1) =<= multiply (inverse n1) (add (multiply (inverse n1) (inverse n1)) n1) [] by Demod 543 with 39 at 3
Id :  22, {_}: pixley ?62 ?62 ?63 =<= add (multiply ?62 (inverse ?62)) (multiply ?63 n1) [63, 62] by Super 21 with 4 at 2,2,3
Id : 116, {_}: ?322 =<= add (multiply ?323 (inverse ?323)) (multiply ?322 n1) [323, 322] by Demod 22 with 6 at 2
Id : 131, {_}: ?358 =<= add (inverse n1) (multiply ?358 n1) [358] by Super 116 with 16 at 1,3
Id : 144, {_}: add ?384 n1 =?= add (inverse n1) n1 [384] by Super 131 with 2 at 2,3
Id : 132, {_}: add ?360 n1 =?= add (inverse n1) n1 [360] by Super 131 with 2 at 2,3
Id : 145, {_}: add ?386 n1 =?= add ?387 n1 [387, 386] by Super 144 with 132 at 3
Id : 730, {_}: multiply (inverse n1) (inverse n1) =<= multiply (inverse n1) (add ?1307 n1) [1307] by Super 557 with 145 at 2,3
Id : 734, {_}: multiply (inverse n1) (inverse n1) =<= add (inverse n1) (inverse n1) [] by Super 730 with 284 at 3
Id : 756, {_}: multiply (inverse n1) (multiply (inverse n1) (inverse n1)) =>= add (inverse n1) (inverse n1) [] by Demod 515 with 734 at 2,2
Id : 757, {_}: multiply (inverse n1) (multiply (inverse n1) (inverse n1)) =>= multiply (inverse n1) (inverse n1) [] by Demod 756 with 734 at 3
Id : 758, {_}: inverse n1 =<= add (multiply (inverse n1) (inverse n1)) (multiply (inverse n1) (inverse n1)) [] by Demod 525 with 734 at 2,3
Id : 759, {_}: inverse n1 =<= multiply (inverse n1) (add (inverse n1) (inverse n1)) [] by Demod 758 with 3 at 3
Id : 760, {_}: inverse n1 =<= multiply (inverse n1) (multiply (inverse n1) (inverse n1)) [] by Demod 759 with 734 at 2,3
Id : 761, {_}: inverse n1 =<= multiply (inverse n1) (inverse n1) [] by Demod 757 with 760 at 2
Id : 765, {_}: inverse n1 =<= add (inverse n1) (inverse n1) [] by Demod 734 with 761 at 2
Id : 771, {_}: pixley (add (inverse n1) (inverse n1)) n1 ?1319 =<= add (inverse n1) (multiply ?1319 (add (inverse n1) (inverse n1))) [1319] by Super 24 with 765 at 1,2,2,3
Id : 809, {_}: pixley (inverse n1) n1 ?1319 =<= add (inverse n1) (multiply ?1319 (add (inverse n1) (inverse n1))) [1319] by Demod 771 with 765 at 1,2
Id : 810, {_}: pixley (inverse n1) n1 ?1319 =<= add (inverse n1) (multiply ?1319 (inverse n1)) [1319] by Demod 809 with 765 at 2,2,3
Id : 859, {_}: pixley (inverse n1) n1 ?1388 =<= multiply (inverse n1) (add n1 ?1388) [1388] by Demod 810 with 40 at 3
Id : 860, {_}: pixley (inverse n1) n1 (inverse n1) =>= multiply (inverse n1) n1 [] by Super 859 with 4 at 2,3
Id : 885, {_}: inverse n1 =<= multiply (inverse n1) n1 [] by Demod 860 with 8 at 2
Id : 902, {_}: multiply n1 (add ?1409 (inverse n1)) =<= add (multiply ?1409 n1) (inverse n1) [1409] by Super 3 with 885 at 2,3
Id : 168, {_}: multiply ?429 (multiply ?430 (add ?429 (inverse ?430))) =>= multiply ?430 (add ?429 (inverse ?430)) [430, 429] by Super 162 with 7 at 1,2
Id : 903, {_}: multiply n1 (add (inverse n1) ?1411) =<= add (inverse n1) (multiply ?1411 n1) [1411] by Super 3 with 885 at 1,3
Id : 118, {_}: ?328 =<= add (inverse n1) (multiply ?328 n1) [328] by Super 116 with 16 at 1,3
Id : 1013, {_}: multiply n1 (add (inverse n1) ?1510) =>= ?1510 [1510] by Demod 903 with 118 at 3
Id : 1014, {_}: multiply n1 n1 =>= inverse (inverse n1) [] by Super 1013 with 4 at 2,2
Id : 1051, {_}: multiply n1 (add n1 (inverse n1)) =<= add (inverse (inverse n1)) (inverse n1) [] by Super 902 with 1014 at 1,3
Id : 1091, {_}: multiply n1 n1 =<= add (inverse (inverse n1)) (inverse n1) [] by Demod 1051 with 4 at 2,2
Id : 1092, {_}: inverse (inverse n1) =<= add (inverse (inverse n1)) (inverse n1) [] by Demod 1091 with 1014 at 2
Id : 1370, {_}: multiply (inverse (inverse n1)) (multiply n1 (inverse (inverse n1))) =>= multiply n1 (add (inverse (inverse n1)) (inverse n1)) [] by Super 168 with 1092 at 2,2,2
Id : 1373, {_}: multiply (inverse (inverse n1)) (inverse (inverse n1)) =<= multiply n1 (add (inverse (inverse n1)) (inverse n1)) [] by Demod 1370 with 16 at 2,2
Id : 1374, {_}: multiply (inverse (inverse n1)) (inverse (inverse n1)) =>= multiply n1 (inverse (inverse n1)) [] by Demod 1373 with 1092 at 2,3
Id : 1375, {_}: multiply (inverse (inverse n1)) (inverse (inverse n1)) =>= inverse (inverse n1) [] by Demod 1374 with 16 at 3
Id : 1407, {_}: multiply (inverse (inverse n1)) (add n1 (inverse (inverse n1))) =>= add (inverse (inverse n1)) (inverse (inverse n1)) [] by Super 40 with 1375 at 2,3
Id : 1015, {_}: multiply n1 (add ?1513 n1) =>= n1 [1513] by Super 1013 with 145 at 2,2
Id : 1292, {_}: n1 =<= add n1 (multiply n1 n1) [] by Super 14 with 1015 at 2
Id : 1307, {_}: n1 =<= add n1 (inverse (inverse n1)) [] by Demod 1292 with 1014 at 2,3
Id : 1421, {_}: multiply (inverse (inverse n1)) n1 =<= add (inverse (inverse n1)) (inverse (inverse n1)) [] by Demod 1407 with 1307 at 2,2
Id : 1422, {_}: multiply (inverse (inverse n1)) n1 =<= multiply (inverse (inverse n1)) (add n1 n1) [] by Demod 1421 with 284 at 3
Id : 111, {_}: ?63 =<= add (multiply ?62 (inverse ?62)) (multiply ?63 n1) [62, 63] by Demod 22 with 6 at 2
Id : 359, {_}: multiply (multiply ?774 n1) (add ?774 ?775) =<= add (multiply ?774 n1) (multiply ?775 (multiply ?774 n1)) [775, 774] by Super 14 with 111 at 1,2,2
Id : 114, {_}: multiply ?317 (multiply ?317 n1) =>= multiply ?317 n1 [317] by Super 2 with 111 at 1,2
Id : 364, {_}: multiply (multiply ?788 n1) (add ?788 ?788) =?= add (multiply ?788 n1) (multiply ?788 n1) [788] by Super 359 with 114 at 2,3
Id : 390, {_}: multiply (multiply ?814 n1) (add ?814 ?814) =>= multiply n1 (add ?814 ?814) [814] by Demod 364 with 3 at 3
Id : 391, {_}: multiply (multiply n1 n1) (add ?816 n1) =>= multiply n1 (add n1 n1) [816] by Super 390 with 145 at 2,2
Id : 1050, {_}: multiply (inverse (inverse n1)) (add ?816 n1) =>= multiply n1 (add n1 n1) [816] by Demod 391 with 1014 at 1,2
Id : 1286, {_}: multiply (inverse (inverse n1)) (add ?816 n1) =>= n1 [816] by Demod 1050 with 1015 at 3
Id : 1423, {_}: multiply (inverse (inverse n1)) n1 =>= n1 [] by Demod 1422 with 1286 at 3
Id : 1449, {_}: multiply n1 (add (inverse (inverse n1)) (inverse n1)) =>= add n1 (inverse n1) [] by Super 902 with 1423 at 1,3
Id : 1452, {_}: multiply n1 (inverse (inverse n1)) =>= add n1 (inverse n1) [] by Demod 1449 with 1092 at 2,2
Id : 1453, {_}: multiply n1 (inverse (inverse n1)) =>= n1 [] by Demod 1452 with 4 at 3
Id : 1454, {_}: inverse (inverse n1) =>= n1 [] by Demod 1453 with 16 at 2
Id : 1500, {_}: multiply (multiply ?2051 n1) (multiply n1 ?2051) =>= multiply (inverse (inverse n1)) ?2051 [2051] by Super 49 with 1454 at 1,2,2
Id : 3169, {_}: multiply (multiply ?3985 n1) (multiply n1 ?3985) =>= multiply n1 ?3985 [3985] by Demod 1500 with 1454 at 1,3
Id : 933, {_}: multiply n1 (add (inverse n1) ?1411) =>= ?1411 [1411] by Demod 903 with 118 at 3
Id : 3175, {_}: multiply (multiply (add (inverse n1) ?3998) n1) ?3998 =>= multiply n1 (add (inverse n1) ?3998) [3998] by Super 3169 with 933 at 2,2
Id : 1440, {_}: inverse (inverse n1) =<= add (inverse n1) n1 [] by Super 118 with 1423 at 2,3
Id : 1591, {_}: n1 =<= add (inverse n1) n1 [] by Demod 1440 with 1454 at 2
Id : 1602, {_}: add ?2105 n1 =>= n1 [2105] by Super 145 with 1591 at 3
Id : 1719, {_}: multiply ?2217 n1 =<= add ?2217 (multiply n1 ?2217) [2217] by Super 14 with 1602 at 2,2
Id : 1478, {_}: n1 =<= add n1 n1 [] by Demod 1307 with 1454 at 2,3
Id : 1483, {_}: multiply n1 (add (inverse ?660) (inverse ?660)) =>= multiply (inverse ?660) n1 [660] by Demod 297 with 1478 at 2,3
Id : 1482, {_}: multiply (inverse ?177) n1 =<= add (inverse ?177) (inverse ?177) [177] by Demod 284 with 1478 at 2,2
Id : 1484, {_}: multiply n1 (multiply (inverse ?660) n1) =>= multiply (inverse ?660) n1 [660] by Demod 1483 with 1482 at 2,2
Id : 1727, {_}: multiply (multiply (inverse ?2233) n1) n1 =<= add (multiply (inverse ?2233) n1) (multiply (inverse ?2233) n1) [2233] by Super 1719 with 1484 at 2,3
Id : 1763, {_}: multiply (multiply (inverse ?2233) n1) n1 =<= multiply n1 (add (inverse ?2233) (inverse ?2233)) [2233] by Demod 1727 with 3 at 3
Id : 1764, {_}: multiply (multiply (inverse ?2233) n1) n1 =>= multiply n1 (multiply (inverse ?2233) n1) [2233] by Demod 1763 with 1482 at 2,3
Id : 1765, {_}: multiply (multiply (inverse ?2233) n1) n1 =>= multiply (inverse ?2233) n1 [2233] by Demod 1764 with 1484 at 3
Id : 1914, {_}: multiply (inverse ?2603) n1 =<= add (inverse n1) (multiply (inverse ?2603) n1) [2603] by Super 118 with 1765 at 2,3
Id : 1949, {_}: multiply (inverse ?2603) n1 =>= inverse ?2603 [2603] by Demod 1914 with 118 at 3
Id : 1994, {_}: multiply n1 (add (inverse ?2679) ?2680) =<= add (inverse ?2679) (multiply ?2680 n1) [2680, 2679] by Super 3 with 1949 at 1,3
Id : 2422, {_}: multiply n1 (multiply n1 (add (inverse n1) ?3107)) =>= multiply ?3107 n1 [3107] by Super 933 with 1994 at 2,2
Id : 2437, {_}: multiply n1 ?3107 =?= multiply ?3107 n1 [3107] by Demod 2422 with 933 at 2,2
Id : 3237, {_}: multiply (multiply n1 (add (inverse n1) ?3998)) ?3998 =>= multiply n1 (add (inverse n1) ?3998) [3998] by Demod 3175 with 2437 at 1,2
Id : 3238, {_}: multiply (multiply n1 (add (inverse n1) ?3998)) ?3998 =>= ?3998 [3998] by Demod 3237 with 933 at 3
Id : 3239, {_}: multiply ?3998 ?3998 =>= ?3998 [3998] by Demod 3238 with 933 at 1,2
Id : 3295, {_}: multiply ?4085 (add ?4086 ?4085) =<= add (multiply ?4086 ?4085) ?4085 [4086, 4085] by Super 3 with 3239 at 2,3
Id : 3506, {_}: multiply ?37 (add ?38 (add ?39 ?37)) =>= multiply ?37 (add ?38 ?37) [39, 38, 37] by Demod 13 with 3295 at 3
Id : 4221, {_}: multiply (add ?156 ?157) (multiply ?157 (add ?158 ?157)) =>= multiply ?157 (add ?158 (add ?156 ?157)) [158, 157, 156] by Demod 52 with 3506 at 2,2
Id : 4233, {_}: multiply (add ?4966 ?4967) (multiply ?4967 (add ?4968 ?4967)) =>= multiply ?4967 (add ?4968 ?4967) [4968, 4967, 4966] by Demod 4221 with 3506 at 3
Id : 1725, {_}: multiply (add (inverse n1) ?2230) n1 =<= add (add (inverse n1) ?2230) ?2230 [2230] by Super 1719 with 933 at 2,3
Id : 2746, {_}: multiply n1 (add (inverse n1) ?2230) =<= add (add (inverse n1) ?2230) ?2230 [2230] by Demod 1725 with 2437 at 2
Id : 2751, {_}: ?2230 =<= add (add (inverse n1) ?2230) ?2230 [2230] by Demod 2746 with 933 at 2
Id : 4246, {_}: multiply (add ?5016 ?5017) (multiply ?5017 ?5017) =?= multiply ?5017 (add (add (inverse n1) ?5017) ?5017) [5017, 5016] by Super 4233 with 2751 at 2,2,2
Id : 4327, {_}: multiply (add ?5016 ?5017) ?5017 =?= multiply ?5017 (add (add (inverse n1) ?5017) ?5017) [5017, 5016] by Demod 4246 with 3239 at 2,2
Id : 3296, {_}: multiply ?4088 (add ?4088 ?4089) =<= add ?4088 (multiply ?4089 ?4088) [4089, 4088] by Super 3 with 3239 at 1,3
Id : 3736, {_}: multiply ?41 (add (add ?42 ?41) ?43) =>= multiply ?41 (add ?41 ?43) [43, 42, 41] by Demod 14 with 3296 at 3
Id : 4328, {_}: multiply (add ?5016 ?5017) ?5017 =?= multiply ?5017 (add ?5017 ?5017) [5017, 5016] by Demod 4327 with 3736 at 3
Id : 4329, {_}: ?5017 =<= multiply ?5017 (add ?5017 ?5017) [5017] by Demod 4328 with 2 at 2
Id : 3529, {_}: multiply ?4289 (add ?4290 ?4289) =<= add (multiply ?4290 ?4289) ?4289 [4290, 4289] by Super 3 with 3239 at 2,3
Id : 3546, {_}: multiply ?4342 (add ?4342 ?4342) =>= add ?4342 ?4342 [4342] by Super 3529 with 3239 at 1,3
Id : 4330, {_}: ?5017 =<= add ?5017 ?5017 [5017] by Demod 4329 with 3546 at 3
Id : 4419, {_}: multiply ?5179 (add ?5180 ?5180) =>= multiply ?5180 ?5179 [5180, 5179] by Super 3 with 4330 at 3
Id : 4472, {_}: multiply ?5179 ?5180 =?= multiply ?5180 ?5179 [5180, 5179] by Demod 4419 with 4330 at 2,2
Id : 6559, {_}: multiply ?7216 (add ?7217 ?7218) =<= add (multiply ?7217 ?7216) (multiply ?7216 ?7218) [7218, 7217, 7216] by Super 3 with 4472 at 2,3
Id : 4435, {_}: multiply ?5223 (add ?5224 ?5223) =<= multiply ?5223 (add ?5223 (add ?5224 ?5223)) [5224, 5223] by Super 3736 with 4330 at 2,2
Id : 4446, {_}: multiply ?5223 (add ?5224 ?5223) =?= multiply ?5223 (add ?5223 ?5223) [5224, 5223] by Demod 4435 with 3506 at 3
Id : 4447, {_}: multiply ?5223 (add ?5224 ?5223) =>= multiply ?5223 ?5223 [5224, 5223] by Demod 4446 with 4330 at 2,3
Id : 4448, {_}: multiply ?5223 (add ?5224 ?5223) =>= ?5223 [5224, 5223] by Demod 4447 with 3239 at 3
Id : 4587, {_}: multiply (add ?5347 ?5348) (add ?5349 ?5348) =<= add (multiply ?5349 (add ?5347 ?5348)) ?5348 [5349, 5348, 5347] by Super 3 with 4448 at 2,3
Id : 13274, {_}: multiply ?16470 (add ?16471 ?16472) =<= add (multiply ?16471 ?16470) (multiply ?16470 ?16472) [16472, 16471, 16470] by Super 3 with 4472 at 2,3
Id : 1990, {_}: inverse ?2668 =<= add (inverse n1) (inverse ?2668) [2668] by Super 118 with 1949 at 2,3
Id : 2035, {_}: multiply (inverse n1) (multiply ?2698 (inverse ?2698)) =?= multiply ?2698 (add (inverse n1) (inverse ?2698)) [2698] by Super 168 with 1990 at 2,2,2
Id : 2073, {_}: multiply (inverse n1) (multiply ?2698 (inverse ?2698)) =>= multiply ?2698 (inverse ?2698) [2698] by Demod 2035 with 1990 at 2,3
Id : 3753, {_}: multiply n1 (multiply (inverse n1) (add (inverse n1) ?4498)) =>= multiply ?4498 (inverse n1) [4498] by Super 933 with 3296 at 2,2
Id : 3737, {_}: multiply (inverse ?110) (add n1 ?111) =<= multiply (inverse ?110) (add (inverse ?110) ?111) [111, 110] by Demod 40 with 3296 at 3
Id : 3799, {_}: multiply n1 (multiply (inverse n1) (add n1 ?4498)) =>= multiply ?4498 (inverse n1) [4498] by Demod 3753 with 3737 at 2,2
Id : 811, {_}: pixley (inverse n1) n1 ?1319 =<= multiply (inverse n1) (add n1 ?1319) [1319] by Demod 810 with 40 at 3
Id : 3800, {_}: multiply n1 (pixley (inverse n1) n1 ?4498) =>= multiply ?4498 (inverse n1) [4498] by Demod 3799 with 811 at 2,2
Id : 1503, {_}: multiply (inverse (inverse n1)) (add n1 ?2058) =<= add (inverse (inverse n1)) (multiply ?2058 n1) [2058] by Super 40 with 1454 at 2,2,3
Id : 1564, {_}: multiply n1 (add n1 ?2058) =<= add (inverse (inverse n1)) (multiply ?2058 n1) [2058] by Demod 1503 with 1454 at 1,2
Id : 1565, {_}: multiply n1 (add n1 ?2058) =<= add n1 (multiply ?2058 n1) [2058] by Demod 1564 with 1454 at 1,3
Id : 1981, {_}: multiply n1 (add n1 (inverse ?2643)) =>= add n1 (inverse ?2643) [2643] by Super 1565 with 1949 at 2,3
Id : 2089, {_}: pixley n1 ?2784 n1 =<= add (multiply n1 (inverse ?2784)) (add n1 (inverse ?2784)) [2784] by Super 19 with 1981 at 2,3
Id : 2096, {_}: n1 =<= add (multiply n1 (inverse ?2784)) (add n1 (inverse ?2784)) [2784] by Demod 2089 with 8 at 2
Id : 2097, {_}: n1 =<= add (inverse ?2784) (add n1 (inverse ?2784)) [2784] by Demod 2096 with 16 at 1,3
Id : 4563, {_}: ?4085 =<= add (multiply ?4086 ?4085) ?4085 [4086, 4085] by Demod 3295 with 4448 at 2
Id : 4567, {_}: add ?5289 ?5290 =<= add ?5290 (add ?5289 ?5290) [5290, 5289] by Super 4563 with 4448 at 1,3
Id : 5426, {_}: n1 =<= add n1 (inverse ?2784) [2784] by Demod 2097 with 4567 at 3
Id : 5450, {_}: multiply n1 (multiply ?6117 n1) =<= multiply ?6117 (add n1 (inverse ?6117)) [6117] by Super 168 with 5426 at 2,2,2
Id : 5478, {_}: multiply n1 (multiply ?6117 n1) =>= multiply ?6117 n1 [6117] by Demod 5450 with 5426 at 2,3
Id : 2780, {_}: multiply n1 (add (inverse ?3598) ?3599) =<= add (inverse ?3598) (multiply n1 ?3599) [3599, 3598] by Super 1994 with 2437 at 2,3
Id :  38, {_}: pixley n1 ?104 ?105 =<= add (inverse ?104) (multiply ?105 (add n1 (inverse ?104))) [105, 104] by Super 19 with 16 at 1,3
Id : 5427, {_}: pixley n1 ?104 ?105 =<= add (inverse ?104) (multiply ?105 n1) [105, 104] by Demod 38 with 5426 at 2,2,3
Id : 5431, {_}: pixley n1 ?104 ?105 =<= multiply n1 (add (inverse ?104) ?105) [105, 104] by Demod 5427 with 1994 at 3
Id : 5434, {_}: pixley n1 ?3598 ?3599 =<= add (inverse ?3598) (multiply n1 ?3599) [3599, 3598] by Demod 2780 with 5431 at 2
Id : 5505, {_}: pixley n1 ?6141 (multiply ?6142 n1) =>= add (inverse ?6141) (multiply ?6142 n1) [6142, 6141] by Super 5434 with 5478 at 2,3
Id : 5432, {_}: pixley n1 ?2679 ?2680 =<= add (inverse ?2679) (multiply ?2680 n1) [2680, 2679] by Demod 1994 with 5431 at 2
Id : 5574, {_}: pixley n1 ?6141 (multiply ?6142 n1) =>= pixley n1 ?6141 ?6142 [6142, 6141] by Demod 5505 with 5432 at 3
Id : 5935, {_}: pixley n1 n1 ?6510 =>= multiply ?6510 n1 [6510] by Super 6 with 5574 at 2
Id : 5952, {_}: ?6510 =<= multiply ?6510 n1 [6510] by Demod 5935 with 6 at 2
Id : 5985, {_}: multiply n1 ?6117 =?= multiply ?6117 n1 [6117] by Demod 5478 with 5952 at 2,2
Id : 5986, {_}: multiply n1 ?6117 =>= ?6117 [6117] by Demod 5985 with 5952 at 3
Id : 5995, {_}: pixley (inverse n1) n1 ?4498 =>= multiply ?4498 (inverse n1) [4498] by Demod 3800 with 5986 at 2
Id : 4560, {_}: multiply ?37 (add ?38 (add ?39 ?37)) =>= ?37 [39, 38, 37] by Demod 3506 with 4448 at 3
Id : 4745, {_}: multiply n1 (add ?5532 (inverse n1)) =>= add ?5532 (inverse n1) [5532] by Super 933 with 4567 at 2,2
Id : 4852, {_}: multiply ?5678 (add ?5678 (inverse n1)) =?= multiply n1 (add ?5678 (inverse n1)) [5678] by Super 168 with 4745 at 2,2
Id : 4888, {_}: multiply ?5678 (add ?5678 (inverse n1)) =>= add ?5678 (inverse n1) [5678] by Demod 4852 with 4745 at 3
Id : 5026, {_}: multiply (inverse ?5768) (add n1 (inverse n1)) =>= add (inverse ?5768) (inverse n1) [5768] by Super 3737 with 4888 at 3
Id : 5122, {_}: multiply (inverse ?5768) n1 =<= add (inverse ?5768) (inverse n1) [5768] by Demod 5026 with 4 at 2,2
Id : 5123, {_}: multiply n1 (inverse ?5768) =<= add (inverse ?5768) (inverse n1) [5768] by Demod 5122 with 2437 at 2
Id : 5124, {_}: inverse ?5768 =<= add (inverse ?5768) (inverse n1) [5768] by Demod 5123 with 16 at 2
Id : 5166, {_}: multiply (inverse n1) (add ?5860 (inverse ?5861)) =>= inverse n1 [5861, 5860] by Super 4560 with 5124 at 2,2,2
Id : 6158, {_}: multiply ?6712 (inverse n1) =<= multiply (inverse n1) (add ?6712 (inverse (inverse n1))) [6712] by Super 168 with 5166 at 2,2
Id : 6219, {_}: multiply ?6712 (inverse n1) =>= inverse n1 [6712] by Demod 6158 with 5166 at 3
Id : 6251, {_}: pixley (inverse n1) n1 ?4498 =>= inverse n1 [4498] by Demod 5995 with 6219 at 3
Id : 2037, {_}: pixley (inverse n1) ?2703 ?2704 =<= add (multiply (inverse n1) (inverse ?2703)) (multiply ?2704 (inverse ?2703)) [2704, 2703] by Super 19 with 1990 at 2,2,3
Id : 2071, {_}: pixley (inverse n1) ?2703 ?2704 =<= multiply (inverse ?2703) (add (inverse n1) ?2704) [2704, 2703] by Demod 2037 with 3 at 3
Id : 5976, {_}: ?63 =<= add (multiply ?62 (inverse ?62)) ?63 [62, 63] by Demod 111 with 5952 at 2,3
Id : 6253, {_}: ?6806 =<= add (inverse n1) ?6806 [6806] by Super 5976 with 6219 at 1,3
Id : 6304, {_}: pixley (inverse n1) ?2703 ?2704 =>= multiply (inverse ?2703) ?2704 [2704, 2703] by Demod 2071 with 6253 at 2,3
Id : 6308, {_}: multiply (inverse n1) ?4498 =>= inverse n1 [4498] by Demod 6251 with 6304 at 2
Id : 6315, {_}: inverse n1 =<= multiply ?2698 (inverse ?2698) [2698] by Demod 2073 with 6308 at 2
Id : 6591, {_}: inverse n1 =<= multiply (inverse ?7342) ?7342 [7342] by Super 6315 with 4472 at 3
Id : 13310, {_}: multiply (inverse ?16623) (add ?16624 ?16623) =?= add (multiply ?16624 (inverse ?16623)) (inverse n1) [16624, 16623] by Super 13274 with 6591 at 2,3
Id : 6698, {_}: multiply ?7545 (add ?7545 (inverse ?7545)) =>= add ?7545 (inverse n1) [7545] by Super 3296 with 6591 at 2,3
Id : 6721, {_}: multiply ?7545 n1 =<= add ?7545 (inverse n1) [7545] by Demod 6698 with 4 at 2,2
Id : 6722, {_}: ?7545 =<= add ?7545 (inverse n1) [7545] by Demod 6721 with 5952 at 2
Id : 13428, {_}: multiply (inverse ?16623) (add ?16624 ?16623) =>= multiply ?16624 (inverse ?16623) [16624, 16623] by Demod 13310 with 6722 at 3
Id : 13655, {_}: multiply (add ?17100 ?17101) (add (inverse ?17101) ?17101) =>= add (multiply ?17100 (inverse ?17101)) ?17101 [17101, 17100] by Super 4587 with 13428 at 1,3
Id : 6531, {_}: ?7094 =<= add (multiply ?7094 ?7095) ?7094 [7095, 7094] by Super 4563 with 4472 at 1,3
Id : 6689, {_}: multiply ?7513 (add (inverse ?7513) ?7514) =?= add (inverse n1) (multiply ?7514 ?7513) [7514, 7513] by Super 3 with 6591 at 1,3
Id : 7566, {_}: multiply ?8615 (add (inverse ?8615) ?8616) =>= multiply ?8616 ?8615 [8616, 8615] by Demod 6689 with 6253 at 3
Id : 7568, {_}: multiply ?8620 n1 =<= multiply (inverse (inverse ?8620)) ?8620 [8620] by Super 7566 with 4 at 2,2
Id : 7615, {_}: ?8620 =<= multiply (inverse (inverse ?8620)) ?8620 [8620] by Demod 7568 with 5952 at 2
Id : 7635, {_}: inverse (inverse ?8669) =<= add ?8669 (inverse (inverse ?8669)) [8669] by Super 6531 with 7615 at 1,3
Id : 7710, {_}: pixley ?8783 (inverse ?8783) ?8784 =<= add (multiply ?8783 (inverse (inverse ?8783))) (multiply ?8784 (inverse (inverse ?8783))) [8784, 8783] by Super 19 with 7635 at 2,2,3
Id : 9183, {_}: pixley ?10684 (inverse ?10684) ?10685 =<= multiply (inverse (inverse ?10684)) (add ?10684 ?10685) [10685, 10684] by Demod 7710 with 3 at 3
Id : 9184, {_}: pixley ?10687 (inverse ?10687) (inverse ?10687) =>= multiply (inverse (inverse ?10687)) n1 [10687] by Super 9183 with 4 at 2,3
Id : 9239, {_}: ?10687 =<= multiply (inverse (inverse ?10687)) n1 [10687] by Demod 9184 with 7 at 2
Id : 9240, {_}: ?10687 =<= multiply n1 (inverse (inverse ?10687)) [10687] by Demod 9239 with 4472 at 3
Id : 9241, {_}: ?10687 =<= inverse (inverse ?10687) [10687] by Demod 9240 with 5986 at 3
Id : 9328, {_}: add (inverse ?10804) ?10804 =>= n1 [10804] by Super 4 with 9241 at 2,2
Id : 13791, {_}: multiply (add ?17100 ?17101) n1 =<= add (multiply ?17100 (inverse ?17101)) ?17101 [17101, 17100] by Demod 13655 with 9328 at 2,2
Id : 13792, {_}: multiply n1 (add ?17100 ?17101) =<= add (multiply ?17100 (inverse ?17101)) ?17101 [17101, 17100] by Demod 13791 with 4472 at 2
Id : 14391, {_}: add ?18258 ?18259 =<= add (multiply ?18258 (inverse ?18259)) ?18259 [18259, 18258] by Demod 13792 with 5986 at 2
Id : 6742, {_}: multiply ?7513 (add (inverse ?7513) ?7514) =>= multiply ?7514 ?7513 [7514, 7513] by Demod 6689 with 6253 at 3
Id : 7563, {_}: multiply (add (inverse ?8606) ?8607) ?8606 =>= multiply ?8607 ?8606 [8607, 8606] by Super 4472 with 6742 at 3
Id : 14401, {_}: add (add (inverse (inverse ?18285)) ?18286) ?18285 =>= add (multiply ?18286 (inverse ?18285)) ?18285 [18286, 18285] by Super 14391 with 7563 at 1,3
Id : 14494, {_}: add (add ?18285 ?18286) ?18285 =<= add (multiply ?18286 (inverse ?18285)) ?18285 [18286, 18285] by Demod 14401 with 9241 at 1,1,2
Id : 13793, {_}: add ?17100 ?17101 =<= add (multiply ?17100 (inverse ?17101)) ?17101 [17101, 17100] by Demod 13792 with 5986 at 2
Id : 14495, {_}: add (add ?18285 ?18286) ?18285 =>= add ?18286 ?18285 [18286, 18285] by Demod 14494 with 13793 at 3
Id : 6533, {_}: multiply ?7100 (add ?7100 ?7101) =<= add ?7100 (multiply ?7100 ?7101) [7101, 7100] by Super 3296 with 4472 at 2,3
Id : 7753, {_}: pixley ?8783 (inverse ?8783) ?8784 =<= multiply (inverse (inverse ?8783)) (add ?8783 ?8784) [8784, 8783] by Demod 7710 with 3 at 3
Id : 9278, {_}: pixley ?8783 (inverse ?8783) ?8784 =>= multiply ?8783 (add ?8783 ?8784) [8784, 8783] by Demod 7753 with 9241 at 1,3
Id : 7714, {_}: pixley (add ?8794 (inverse (inverse ?8794))) (inverse ?8794) ?8795 =<= add (inverse (inverse ?8794)) (multiply ?8795 (add (inverse (inverse ?8794)) (inverse (inverse ?8794)))) [8795, 8794] by Super 24 with 7635 at 1,2,2,3
Id : 7746, {_}: pixley (inverse (inverse ?8794)) (inverse ?8794) ?8795 =<= add (inverse (inverse ?8794)) (multiply ?8795 (add (inverse (inverse ?8794)) (inverse (inverse ?8794)))) [8795, 8794] by Demod 7714 with 7635 at 1,2
Id : 7747, {_}: pixley (inverse (inverse ?8794)) (inverse ?8794) ?8795 =<= add (inverse (inverse ?8794)) (multiply ?8795 (inverse (inverse ?8794))) [8795, 8794] by Demod 7746 with 4330 at 2,2,3
Id : 7748, {_}: pixley (inverse (inverse ?8794)) (inverse ?8794) ?8795 =<= multiply (inverse (inverse ?8794)) (add (inverse (inverse ?8794)) ?8795) [8795, 8794] by Demod 7747 with 3296 at 3
Id : 7749, {_}: pixley (inverse (inverse ?8794)) (inverse ?8794) ?8795 =>= multiply (inverse (inverse ?8794)) (add n1 ?8795) [8795, 8794] by Demod 7748 with 3737 at 3
Id : 9298, {_}: pixley ?8794 (inverse ?8794) ?8795 =?= multiply (inverse (inverse ?8794)) (add n1 ?8795) [8795, 8794] by Demod 7749 with 9241 at 1,2
Id : 9299, {_}: pixley ?8794 (inverse ?8794) ?8795 =>= multiply ?8794 (add n1 ?8795) [8795, 8794] by Demod 9298 with 9241 at 1,3
Id : 9310, {_}: multiply ?8783 (add n1 ?8784) =?= multiply ?8783 (add ?8783 ?8784) [8784, 8783] by Demod 9278 with 9299 at 2
Id : 9334, {_}: n1 =<= add n1 ?10824 [10824] by Super 5426 with 9241 at 2,3
Id : 9392, {_}: multiply ?8783 n1 =<= multiply ?8783 (add ?8783 ?8784) [8784, 8783] by Demod 9310 with 9334 at 2,2
Id : 9393, {_}: ?8783 =<= multiply ?8783 (add ?8783 ?8784) [8784, 8783] by Demod 9392 with 5952 at 2
Id : 9397, {_}: ?7100 =<= add ?7100 (multiply ?7100 ?7101) [7101, 7100] by Demod 6533 with 9393 at 2
Id : 7652, {_}: multiply ?8717 (add (inverse (inverse ?8717)) ?8718) =>= add ?8717 (multiply ?8718 ?8717) [8718, 8717] by Super 3 with 7615 at 1,3
Id : 8997, {_}: multiply ?10489 (add (inverse (inverse ?10489)) ?10490) =>= multiply ?10489 (add ?10489 ?10490) [10490, 10489] by Demod 7652 with 3296 at 3
Id : 9013, {_}: multiply (add (inverse (inverse ?10527)) ?10528) ?10527 =>= multiply ?10527 (add ?10527 ?10528) [10528, 10527] by Super 8997 with 4472 at 2
Id : 11578, {_}: multiply (add ?10527 ?10528) ?10527 =?= multiply ?10527 (add ?10527 ?10528) [10528, 10527] by Demod 9013 with 9241 at 1,1,2
Id : 11579, {_}: multiply (add ?10527 ?10528) ?10527 =>= ?10527 [10528, 10527] by Demod 11578 with 9393 at 3
Id : 11608, {_}: add ?13907 ?13908 =<= add (add ?13907 ?13908) ?13907 [13908, 13907] by Super 9397 with 11579 at 2,3
Id : 14496, {_}: add ?18285 ?18286 =?= add ?18286 ?18285 [18286, 18285] by Demod 14495 with 11608 at 2
Id : 20857, {_}: multiply ?26392 (add ?26393 ?26394) =<= add (multiply ?26392 ?26394) (multiply ?26393 ?26392) [26394, 26393, 26392] by Super 6559 with 14496 at 3
Id : 6561, {_}: multiply ?7224 (add ?7225 ?7226) =<= add (multiply ?7224 ?7225) (multiply ?7226 ?7224) [7226, 7225, 7224] by Super 3 with 4472 at 1,3
Id : 45701, {_}: multiply ?26392 (add ?26393 ?26394) =?= multiply ?26392 (add ?26394 ?26393) [26394, 26393, 26392] by Demod 20857 with 6561 at 3
Id :  92, {_}: pixley (add ?268 ?269) ?270 ?269 =<= add (multiply (add ?268 ?269) (inverse ?270)) (add ?269 (multiply (inverse ?270) ?269)) [270, 269, 268] by Super 19 with 14 at 2,3
Id : 88314, {_}: pixley (add ?268 ?269) ?270 ?269 =<= add (multiply (inverse ?270) (add ?268 ?269)) (add ?269 (multiply (inverse ?270) ?269)) [270, 269, 268] by Demod 92 with 4472 at 1,3
Id : 9395, {_}: ?4088 =<= add ?4088 (multiply ?4089 ?4088) [4089, 4088] by Demod 3296 with 9393 at 2
Id : 88315, {_}: pixley (add ?268 ?269) ?270 ?269 =<= add (multiply (inverse ?270) (add ?268 ?269)) ?269 [270, 269, 268] by Demod 88314 with 9395 at 2,3
Id : 88452, {_}: pixley (add ?145802 ?145803) ?145804 ?145803 =<= multiply (add ?145802 ?145803) (add (inverse ?145804) ?145803) [145804, 145803, 145802] by Demod 88315 with 4587 at 3
Id : 88455, {_}: pixley (add ?145816 ?145817) (inverse ?145818) ?145817 =>= multiply (add ?145816 ?145817) (add ?145818 ?145817) [145818, 145817, 145816] by Super 88452 with 9241 at 1,2,3
Id :  11, {_}: multiply (multiply ?29 (add ?30 ?31)) (multiply ?31 ?29) =>= multiply ?31 ?29 [31, 30, 29] by Super 2 with 3 at 1,2
Id : 6691, {_}: multiply (inverse n1) (multiply ?7519 (inverse (add ?7520 ?7519))) =>= multiply ?7519 (inverse (add ?7520 ?7519)) [7520, 7519] by Super 11 with 6591 at 1,2
Id : 6741, {_}: inverse n1 =<= multiply ?7519 (inverse (add ?7520 ?7519)) [7520, 7519] by Demod 6691 with 6308 at 2
Id : 7453, {_}: pixley ?8439 (add ?8440 ?8439) ?8441 =<= add (inverse n1) (multiply ?8441 (add ?8439 (inverse (add ?8440 ?8439)))) [8441, 8440, 8439] by Super 19 with 6741 at 1,3
Id : 7492, {_}: pixley ?8439 (add ?8440 ?8439) ?8441 =<= multiply ?8441 (add ?8439 (inverse (add ?8440 ?8439))) [8441, 8440, 8439] by Demod 7453 with 6253 at 3
Id : 98274, {_}: pixley ?163996 (add ?163997 ?163996) n1 =>= add ?163996 (inverse (add ?163997 ?163996)) [163997, 163996] by Super 5986 with 7492 at 2
Id : 4588, {_}: multiply (add ?5351 ?5352) (add ?5352 ?5353) =<= add ?5352 (multiply ?5353 (add ?5351 ?5352)) [5353, 5352, 5351] by Super 3 with 4448 at 1,3
Id : 13309, {_}: multiply ?16620 (add ?16621 (inverse ?16620)) =?= add (multiply ?16621 ?16620) (inverse n1) [16621, 16620] by Super 13274 with 6315 at 2,3
Id : 13427, {_}: multiply ?16620 (add ?16621 (inverse ?16620)) =>= multiply ?16621 ?16620 [16621, 16620] by Demod 13309 with 6722 at 3
Id : 13531, {_}: multiply (add ?17007 (inverse ?17008)) (add (inverse ?17008) ?17008) =>= add (inverse ?17008) (multiply ?17007 ?17008) [17008, 17007] by Super 4588 with 13427 at 2,3
Id : 11835, {_}: add ?14300 ?14301 =<= add (add ?14300 ?14301) ?14300 [14301, 14300] by Super 9397 with 11579 at 2,3
Id : 11844, {_}: add ?14326 (add ?14327 ?14326) =?= add (add ?14327 ?14326) ?14326 [14327, 14326] by Super 11835 with 4567 at 1,3
Id : 11909, {_}: add ?14327 ?14326 =<= add (add ?14327 ?14326) ?14326 [14326, 14327] by Demod 11844 with 4567 at 2
Id : 11970, {_}: pixley (add ?69 (inverse ?70)) ?70 ?71 =<= add (inverse ?70) (multiply ?71 (add ?69 (inverse ?70))) [71, 70, 69] by Demod 24 with 11909 at 2,2,3
Id : 12697, {_}: pixley (add ?69 (inverse ?70)) ?70 ?71 =<= multiply (add ?69 (inverse ?70)) (add (inverse ?70) ?71) [71, 70, 69] by Demod 11970 with 4588 at 3
Id : 13561, {_}: pixley (add ?17007 (inverse ?17008)) ?17008 ?17008 =>= add (inverse ?17008) (multiply ?17007 ?17008) [17008, 17007] by Demod 13531 with 12697 at 2
Id : 14017, {_}: add ?17647 (inverse ?17648) =<= add (inverse ?17648) (multiply ?17647 ?17648) [17648, 17647] by Demod 13561 with 7 at 2
Id : 10227, {_}: multiply (inverse ?12001) (add ?12001 ?12002) =>= multiply ?12002 (inverse ?12001) [12002, 12001] by Super 6742 with 9241 at 1,2,2
Id : 10243, {_}: multiply (inverse ?12047) ?12047 =<= multiply (multiply ?12047 ?12048) (inverse ?12047) [12048, 12047] by Super 10227 with 9397 at 2,2
Id : 10311, {_}: inverse n1 =<= multiply (multiply ?12047 ?12048) (inverse ?12047) [12048, 12047] by Demod 10243 with 6591 at 2
Id : 10454, {_}: inverse n1 =<= multiply (inverse ?12293) (multiply ?12293 ?12294) [12294, 12293] by Demod 10311 with 4472 at 3
Id : 10488, {_}: inverse n1 =<= multiply ?12387 (multiply (inverse ?12387) ?12388) [12388, 12387] by Super 10454 with 9241 at 1,3
Id : 14062, {_}: add ?17790 (inverse (multiply (inverse ?17790) ?17791)) =?= add (inverse (multiply (inverse ?17790) ?17791)) (inverse n1) [17791, 17790] by Super 14017 with 10488 at 2,3
Id : 14147, {_}: add ?17790 (inverse (multiply (inverse ?17790) ?17791)) =>= inverse (multiply (inverse ?17790) ?17791) [17791, 17790] by Demod 14062 with 6722 at 3
Id : 20167, {_}: add ?25476 (inverse (multiply (inverse ?25476) ?25477)) =?= add (inverse (multiply (inverse ?25476) ?25477)) ?25476 [25477, 25476] by Super 11608 with 14147 at 1,3
Id : 20309, {_}: inverse (multiply (inverse ?25476) ?25477) =<= add (inverse (multiply (inverse ?25476) ?25477)) ?25476 [25477, 25476] by Demod 20167 with 14147 at 2
Id : 98343, {_}: pixley ?164219 (inverse (multiply (inverse ?164219) ?164220)) n1 =<= add ?164219 (inverse (add (inverse (multiply (inverse ?164219) ?164220)) ?164219)) [164220, 164219] by Super 98274 with 20309 at 2,2
Id : 98565, {_}: pixley ?164219 (inverse (multiply (inverse ?164219) ?164220)) n1 =>= add ?164219 (inverse (inverse (multiply (inverse ?164219) ?164220))) [164220, 164219] by Demod 98343 with 20309 at 1,2,3
Id : 98566, {_}: pixley ?164219 (inverse (multiply (inverse ?164219) ?164220)) n1 =>= add ?164219 (multiply (inverse ?164219) ?164220) [164220, 164219] by Demod 98565 with 9241 at 2,3
Id : 13654, {_}: multiply (add ?17097 ?17098) (add ?17098 (inverse ?17098)) =>= add ?17098 (multiply ?17097 (inverse ?17098)) [17098, 17097] by Super 4588 with 13428 at 2,3
Id : 13794, {_}: multiply (add ?17097 ?17098) n1 =<= add ?17098 (multiply ?17097 (inverse ?17098)) [17098, 17097] by Demod 13654 with 4 at 2,2
Id : 13795, {_}: multiply n1 (add ?17097 ?17098) =<= add ?17098 (multiply ?17097 (inverse ?17098)) [17098, 17097] by Demod 13794 with 4472 at 2
Id : 14561, {_}: add ?18466 ?18467 =<= add ?18467 (multiply ?18466 (inverse ?18467)) [18467, 18466] by Demod 13795 with 5986 at 2
Id : 14565, {_}: add ?18477 ?18478 =<= add ?18478 (multiply (inverse ?18478) ?18477) [18478, 18477] by Super 14561 with 4472 at 2,3
Id : 98567, {_}: pixley ?164219 (inverse (multiply (inverse ?164219) ?164220)) n1 =>= add ?164220 ?164219 [164220, 164219] by Demod 98566 with 14565 at 3
Id : 7451, {_}: multiply (inverse (add ?8431 ?8432)) (add ?8433 ?8432) =?= add (multiply ?8433 (inverse (add ?8431 ?8432))) (inverse n1) [8433, 8432, 8431] by Super 3 with 6741 at 2,3
Id : 7493, {_}: multiply (inverse (add ?8431 ?8432)) (add ?8433 ?8432) =>= multiply ?8433 (inverse (add ?8431 ?8432)) [8433, 8432, 8431] by Demod 7451 with 6722 at 3
Id : 105415, {_}: pixley (add ?172221 ?172222) (inverse (multiply ?172223 (inverse (add ?172221 ?172222)))) n1 =>= add (add ?172223 ?172222) (add ?172221 ?172222) [172223, 172222, 172221] by Super 98567 with 7493 at 1,2,2
Id : 10242, {_}: multiply (inverse ?12044) ?12044 =<= multiply (multiply ?12045 ?12044) (inverse ?12044) [12045, 12044] by Super 10227 with 9395 at 2,2
Id : 10309, {_}: inverse n1 =<= multiply (multiply ?12045 ?12044) (inverse ?12044) [12044, 12045] by Demod 10242 with 6591 at 2
Id : 10337, {_}: inverse n1 =<= multiply (inverse ?12122) (multiply ?12123 ?12122) [12123, 12122] by Demod 10309 with 4472 at 3
Id : 10370, {_}: inverse n1 =<= multiply ?12222 (multiply ?12223 (inverse ?12222)) [12223, 12222] by Super 10337 with 9241 at 1,3
Id : 14061, {_}: add ?17787 (inverse (multiply ?17788 (inverse ?17787))) =?= add (inverse (multiply ?17788 (inverse ?17787))) (inverse n1) [17788, 17787] by Super 14017 with 10370 at 2,3
Id : 14146, {_}: add ?17787 (inverse (multiply ?17788 (inverse ?17787))) =>= inverse (multiply ?17788 (inverse ?17787)) [17788, 17787] by Demod 14061 with 6722 at 3
Id : 19953, {_}: add ?25324 (inverse (multiply ?25325 (inverse ?25324))) =?= add (inverse (multiply ?25325 (inverse ?25324))) ?25324 [25325, 25324] by Super 11608 with 14146 at 1,3
Id : 20011, {_}: inverse (multiply ?25325 (inverse ?25324)) =<= add (inverse (multiply ?25325 (inverse ?25324))) ?25324 [25324, 25325] by Demod 19953 with 14146 at 2
Id : 98342, {_}: pixley ?164216 (inverse (multiply ?164217 (inverse ?164216))) n1 =<= add ?164216 (inverse (add (inverse (multiply ?164217 (inverse ?164216))) ?164216)) [164217, 164216] by Super 98274 with 20011 at 2,2
Id : 98562, {_}: pixley ?164216 (inverse (multiply ?164217 (inverse ?164216))) n1 =>= add ?164216 (inverse (inverse (multiply ?164217 (inverse ?164216)))) [164217, 164216] by Demod 98342 with 20011 at 1,2,3
Id : 98563, {_}: pixley ?164216 (inverse (multiply ?164217 (inverse ?164216))) n1 =>= add ?164216 (multiply ?164217 (inverse ?164216)) [164217, 164216] by Demod 98562 with 9241 at 2,3
Id : 13796, {_}: add ?17097 ?17098 =<= add ?17098 (multiply ?17097 (inverse ?17098)) [17098, 17097] by Demod 13795 with 5986 at 2
Id : 98564, {_}: pixley ?164216 (inverse (multiply ?164217 (inverse ?164216))) n1 =>= add ?164217 ?164216 [164217, 164216] by Demod 98563 with 13796 at 3
Id : 106322, {_}: add ?173840 (add ?173841 ?173842) =<= add (add ?173840 ?173842) (add ?173841 ?173842) [173842, 173841, 173840] by Demod 105415 with 98564 at 2
Id : 106366, {_}: add ?174020 (add ?174021 (multiply ?174021 ?174022)) =?= add (add ?174020 (multiply ?174021 ?174022)) ?174021 [174022, 174021, 174020] by Super 106322 with 9397 at 2,3
Id : 110603, {_}: add ?183991 ?183992 =<= add (add ?183991 (multiply ?183992 ?183993)) ?183992 [183993, 183992, 183991] by Demod 106366 with 9397 at 2,2
Id : 111365, {_}: add (multiply ?185632 (inverse ?185633)) ?185634 =<= add (pixley ?185632 ?185633 ?185634) ?185634 [185634, 185633, 185632] by Super 110603 with 19 at 1,3
Id : 5975, {_}: multiply ?143 (multiply (inverse ?144) ?143) =>= multiply (inverse ?144) ?143 [144, 143] by Demod 49 with 5952 at 1,2
Id : 6517, {_}: multiply ?7054 (multiply ?7054 (inverse ?7055)) =>= multiply (inverse ?7055) ?7054 [7055, 7054] by Super 5975 with 4472 at 2,2
Id : 7244, {_}: multiply (multiply ?8105 (inverse ?8106)) ?8105 =>= multiply (inverse ?8106) ?8105 [8106, 8105] by Super 4472 with 6517 at 3
Id : 9315, {_}: multiply (multiply ?10762 ?10763) ?10762 =>= multiply (inverse (inverse ?10763)) ?10762 [10763, 10762] by Super 7244 with 9241 at 2,1,2
Id : 9383, {_}: multiply (multiply ?10762 ?10763) ?10762 =>= multiply ?10763 ?10762 [10763, 10762] by Demod 9315 with 9241 at 1,3
Id : 10069, {_}: pixley (multiply (inverse ?11745) ?11746) ?11745 ?11747 =<= add (multiply ?11746 (inverse ?11745)) (multiply ?11747 (add (multiply (inverse ?11745) ?11746) (inverse ?11745))) [11747, 11746, 11745] by Super 19 with 9383 at 1,3
Id : 10131, {_}: pixley (multiply (inverse ?11745) ?11746) ?11745 ?11747 =<= add (multiply ?11746 (inverse ?11745)) (multiply ?11747 (inverse ?11745)) [11747, 11746, 11745] by Demod 10069 with 6531 at 2,2,3
Id : 10132, {_}: pixley (multiply (inverse ?11745) ?11746) ?11745 ?11747 =>= multiply (inverse ?11745) (add ?11746 ?11747) [11747, 11746, 11745] by Demod 10131 with 3 at 3
Id : 111375, {_}: add (multiply (multiply (inverse ?185663) ?185664) (inverse ?185663)) ?185665 =?= add (multiply (inverse ?185663) (add ?185664 ?185665)) ?185665 [185665, 185664, 185663] by Super 111365 with 10132 at 1,3
Id : 111673, {_}: add (multiply (inverse ?185663) (multiply (inverse ?185663) ?185664)) ?185665 =?= add (multiply (inverse ?185663) (add ?185664 ?185665)) ?185665 [185665, 185664, 185663] by Demod 111375 with 4472 at 1,2
Id : 111674, {_}: add (multiply (inverse ?185663) (multiply (inverse ?185663) ?185664)) ?185665 =?= multiply (add ?185664 ?185665) (add (inverse ?185663) ?185665) [185665, 185664, 185663] by Demod 111673 with 4587 at 3
Id : 9338, {_}: multiply ?10835 (multiply ?10835 ?10836) =?= multiply (inverse (inverse ?10836)) ?10835 [10836, 10835] by Super 6517 with 9241 at 2,2,2
Id : 9347, {_}: multiply ?10835 (multiply ?10835 ?10836) =>= multiply ?10836 ?10835 [10836, 10835] by Demod 9338 with 9241 at 1,3
Id : 111675, {_}: add (multiply ?185664 (inverse ?185663)) ?185665 =<= multiply (add ?185664 ?185665) (add (inverse ?185663) ?185665) [185665, 185663, 185664] by Demod 111674 with 9347 at 1,2
Id : 88316, {_}: pixley (add ?268 ?269) ?270 ?269 =<= multiply (add ?268 ?269) (add (inverse ?270) ?269) [270, 269, 268] by Demod 88315 with 4587 at 3
Id : 111676, {_}: add (multiply ?185664 (inverse ?185663)) ?185665 =<= pixley (add ?185664 ?185665) ?185663 ?185665 [185665, 185663, 185664] by Demod 111675 with 88316 at 3
Id : 111830, {_}: add (multiply ?145816 (inverse (inverse ?145818))) ?145817 =?= multiply (add ?145816 ?145817) (add ?145818 ?145817) [145817, 145818, 145816] by Demod 88455 with 111676 at 2
Id : 111831, {_}: add (multiply ?145816 ?145818) ?145817 =<= multiply (add ?145816 ?145817) (add ?145818 ?145817) [145817, 145818, 145816] by Demod 111830 with 9241 at 2,1,2
Id : 112319, {_}: add a (multiply b c) === add a (multiply b c) [] by Demod 112318 with 14496 at 3
Id : 112318, {_}: add a (multiply b c) =<= add (multiply b c) a [] by Demod 112317 with 111831 at 3
Id : 112317, {_}: add a (multiply b c) =<= multiply (add b a) (add c a) [] by Demod 112316 with 4472 at 3
Id : 112316, {_}: add a (multiply b c) =<= multiply (add c a) (add b a) [] by Demod 112315 with 45701 at 3
Id : 112315, {_}: add a (multiply b c) =<= multiply (add c a) (add a b) [] by Demod 112314 with 4472 at 3
Id : 112314, {_}: add a (multiply b c) =<= multiply (add a b) (add c a) [] by Demod 1 with 45701 at 3
Id :   1, {_}: add a (multiply b c) =<= multiply (add a b) (add a c) [] by prove_add_multiply_property
% SZS output end CNFRefutation for BOO023-1.p
29618: solved BOO023-1.p in 25.957622 using nrkbo
29618: status Unsatisfiable for BOO023-1.p
NO CLASH, using fixed ground order
29626: Facts:
29626:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
29626:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
29626:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
29626:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
29626:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
29626: Goal:
29626:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
29626: Order:
29626:   nrkbo
29626: Leaf order:
29626:  a 2 0 2 1,1,2
29626:  f 2 0 2 2,1,2,2
29626:  e 2 0 2 3,1,1,2,2
29626:  b 2 0 2 3,1,2
29626:  g 2 0 2 3,3,1,2,2
29626:  c 3 0 3 1,1,1,2,2
29626:  d 3 0 3 2,1,1,2,2
29626:  inverse 4 1 2 0,2,1,2
29626:  multiply 16 3 7 0,2
NO CLASH, using fixed ground order
29627: Facts:
29627:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
29627:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
29627:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
29627:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
29627:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
29627: Goal:
29627:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
29627: Order:
29627:   kbo
29627: Leaf order:
29627:  a 2 0 2 1,1,2
29627:  f 2 0 2 2,1,2,2
29627:  e 2 0 2 3,1,1,2,2
29627:  b 2 0 2 3,1,2
29627:  g 2 0 2 3,3,1,2,2
29627:  c 3 0 3 1,1,1,2,2
29627:  d 3 0 3 2,1,1,2,2
29627:  inverse 4 1 2 0,2,1,2
29627:  multiply 16 3 7 0,2
NO CLASH, using fixed ground order
29628: Facts:
29628:  Id :   2, {_}:
          multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6)
          =>=
          multiply ?2 ?3 (multiply ?4 ?5 ?6)
          [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
29628:  Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
29628:  Id :   4, {_}:
          multiply ?11 ?11 ?12 =>= ?11
          [12, 11] by ternary_multiply_2 ?11 ?12
29628:  Id :   5, {_}:
          multiply (inverse ?14) ?14 ?15 =>= ?15
          [15, 14] by left_inverse ?14 ?15
29628:  Id :   6, {_}:
          multiply ?17 ?18 (inverse ?18) =>= ?17
          [18, 17] by right_inverse ?17 ?18
29628: Goal:
29628:  Id :   1, {_}:
          multiply (multiply a (inverse a) b)
            (inverse (multiply (multiply c d e) f (multiply c d g)))
            (multiply d (multiply g f e) c)
          =>=
          b
          [] by prove_single_axiom
29628: Order:
29628:   lpo
29628: Leaf order:
29628:  a 2 0 2 1,1,2
29628:  f 2 0 2 2,1,2,2
29628:  e 2 0 2 3,1,1,2,2
29628:  b 2 0 2 3,1,2
29628:  g 2 0 2 3,3,1,2,2
29628:  c 3 0 3 1,1,1,2,2
29628:  d 3 0 3 2,1,1,2,2
29628:  inverse 4 1 2 0,2,1,2
29628:  multiply 16 3 7 0,2
Statistics :
Max weight : 24
Found proof, 10.457305s
% SZS status Unsatisfiable for BOO034-1.p
% SZS output start CNFRefutation for BOO034-1.p
Id :   5, {_}: multiply (inverse ?14) ?14 ?15 =>= ?15 [15, 14] by left_inverse ?14 ?15
Id :   6, {_}: multiply ?17 ?18 (inverse ?18) =>= ?17 [18, 17] by right_inverse ?17 ?18
Id :   4, {_}: multiply ?11 ?11 ?12 =>= ?11 [12, 11] by ternary_multiply_2 ?11 ?12
Id :   3, {_}: multiply ?8 ?9 ?9 =>= ?9 [9, 8] by ternary_multiply_1 ?8 ?9
Id :   2, {_}: multiply (multiply ?2 ?3 ?4) ?5 (multiply ?2 ?3 ?6) =>= multiply ?2 ?3 (multiply ?4 ?5 ?6) [6, 5, 4, 3, 2] by associativity ?2 ?3 ?4 ?5 ?6
Id :  13, {_}: multiply ?53 ?54 (multiply ?55 ?53 ?56) =?= multiply ?55 ?53 (multiply ?53 ?54 ?56) [56, 55, 54, 53] by Super 2 with 3 at 1,2
Id :  12, {_}: multiply (multiply ?48 ?49 ?50) ?51 ?49 =?= multiply ?48 ?49 (multiply ?50 ?51 ?49) [51, 50, 49, 48] by Super 2 with 3 at 3,2
Id : 919, {_}: multiply (multiply ?2933 ?2934 ?2935) ?2933 ?2934 =?= multiply ?2935 ?2933 (multiply ?2933 ?2934 ?2934) [2935, 2934, 2933] by Super 12 with 13 at 3
Id : 1358, {_}: multiply (multiply ?4047 ?4048 ?4049) ?4047 ?4048 =>= multiply ?4049 ?4047 ?4048 [4049, 4048, 4047] by Demod 919 with 3 at 3,3
Id : 518, {_}: multiply (multiply ?1782 ?1783 ?1784) ?1785 ?1783 =?= multiply ?1782 ?1783 (multiply ?1784 ?1785 ?1783) [1785, 1784, 1783, 1782] by Super 2 with 3 at 3,2
Id : 658, {_}: multiply (multiply ?2168 ?2169 ?2170) ?2170 ?2169 =>= multiply ?2168 ?2169 ?2170 [2170, 2169, 2168] by Super 518 with 4 at 3,3
Id : 663, {_}: multiply ?2187 (inverse ?2188) ?2188 =?= multiply ?2187 ?2188 (inverse ?2188) [2188, 2187] by Super 658 with 6 at 1,2
Id : 700, {_}: multiply ?2187 (inverse ?2188) ?2188 =>= ?2187 [2188, 2187] by Demod 663 with 6 at 3
Id : 1370, {_}: multiply ?4102 ?4102 (inverse ?4103) =?= multiply ?4103 ?4102 (inverse ?4103) [4103, 4102] by Super 1358 with 700 at 1,2
Id : 1414, {_}: ?4102 =<= multiply ?4103 ?4102 (inverse ?4103) [4103, 4102] by Demod 1370 with 4 at 2
Id : 1523, {_}: multiply ?4433 ?4434 (multiply ?4435 ?4433 (inverse ?4433)) =>= multiply ?4435 ?4433 ?4434 [4435, 4434, 4433] by Super 13 with 1414 at 3,3
Id : 1537, {_}: multiply ?4433 ?4434 ?4435 =?= multiply ?4435 ?4433 ?4434 [4435, 4434, 4433] by Demod 1523 with 6 at 3,2
Id : 1363, {_}: multiply ?4066 ?4066 ?4067 =?= multiply (inverse ?4067) ?4066 ?4067 [4067, 4066] by Super 1358 with 6 at 1,2
Id : 1412, {_}: ?4066 =<= multiply (inverse ?4067) ?4066 ?4067 [4067, 4066] by Demod 1363 with 4 at 2
Id : 1452, {_}: multiply (multiply ?4284 ?4285 (inverse ?4285)) ?4286 ?4285 =>= multiply ?4284 ?4285 ?4286 [4286, 4285, 4284] by Super 12 with 1412 at 3,3
Id : 1474, {_}: multiply ?4284 ?4286 ?4285 =?= multiply ?4284 ?4285 ?4286 [4285, 4286, 4284] by Demod 1452 with 6 at 1,2
Id : 726, {_}: inverse (inverse ?2325) =>= ?2325 [2325] by Super 5 with 700 at 2
Id : 760, {_}: multiply ?2416 (inverse ?2416) ?2417 =>= ?2417 [2417, 2416] by Super 5 with 726 at 1,2
Id : 41048, {_}: b === b [] by Demod 41047 with 700 at 2
Id : 41047, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c d (multiply f e g)) =>= b [] by Demod 41046 with 1474 at 3,3,2
Id : 41046, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c d (multiply f g e)) =>= b [] by Demod 41045 with 1537 at 3,3,2
Id : 41045, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c d (multiply e f g)) =>= b [] by Demod 41044 with 1474 at 3,3,2
Id : 41044, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c d (multiply e g f)) =>= b [] by Demod 41043 with 1537 at 3,3,2
Id : 41043, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c d (multiply g f e)) =>= b [] by Demod 41042 with 1474 at 3,2
Id : 41042, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply c (multiply g f e) d) =>= b [] by Demod 41041 with 1537 at 3,2
Id : 41041, {_}: multiply b (inverse (multiply c d (multiply f e g))) (multiply d c (multiply g f e)) =>= b [] by Demod 41040 with 1474 at 3,1,2,2
Id : 41040, {_}: multiply b (inverse (multiply c d (multiply f g e))) (multiply d c (multiply g f e)) =>= b [] by Demod 41039 with 1474 at 2
Id : 41039, {_}: multiply b (multiply d c (multiply g f e)) (inverse (multiply c d (multiply f g e))) =>= b [] by Demod 41038 with 1537 at 2
Id : 41038, {_}: multiply (inverse (multiply c d (multiply f g e))) b (multiply d c (multiply g f e)) =>= b [] by Demod 41037 with 1474 at 3,2
Id : 41037, {_}: multiply (inverse (multiply c d (multiply f g e))) b (multiply d (multiply g f e) c) =>= b [] by Demod 41036 with 760 at 2,2
Id : 41036, {_}: multiply (inverse (multiply c d (multiply f g e))) (multiply a (inverse a) b) (multiply d (multiply g f e) c) =>= b [] by Demod 41035 with 1537 at 3,1,1,2
Id : 41035, {_}: multiply (inverse (multiply c d (multiply e f g))) (multiply a (inverse a) b) (multiply d (multiply g f e) c) =>= b [] by Demod 41034 with 1474 at 2
Id : 41034, {_}: multiply (inverse (multiply c d (multiply e f g))) (multiply d (multiply g f e) c) (multiply a (inverse a) b) =>= b [] by Demod 11 with 1537 at 2
Id :  11, {_}: multiply (multiply a (inverse a) b) (inverse (multiply c d (multiply e f g))) (multiply d (multiply g f e) c) =>= b [] by Demod 1 with 2 at 1,2,2
Id :   1, {_}: multiply (multiply a (inverse a) b) (inverse (multiply (multiply c d e) f (multiply c d g))) (multiply d (multiply g f e) c) =>= b [] by prove_single_axiom
% SZS output end CNFRefutation for BOO034-1.p
29626: solved BOO034-1.p in 10.42465 using nrkbo
29626: status Unsatisfiable for BOO034-1.p
CLASH, statistics insufficient
29634: Facts:
29634:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29634:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
29634: Goal:
29634:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
29634: Order:
29634:   nrkbo
29634: Leaf order:
29634:  s 1 0 0 
29634:  k 1 0 0 
29634:  f 3 1 3 0,2,1,2
29634:  g 3 1 3 0,2,2
29634:  apply 13 2 5 0,2
CLASH, statistics insufficient
29635: Facts:
29635:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29635:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
29635: Goal:
29635:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
29635: Order:
29635:   kbo
29635: Leaf order:
29635:  s 1 0 0 
29635:  k 1 0 0 
29635:  f 3 1 3 0,2,1,2
29635:  g 3 1 3 0,2,2
29635:  apply 13 2 5 0,2
CLASH, statistics insufficient
29636: Facts:
29636:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29636:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
29636: Goal:
29636:  Id :   1, {_}:
          apply (apply ?1 (f ?1)) (g ?1)
          =<=
          apply (g ?1) (apply (apply (f ?1) (f ?1)) (g ?1))
          [1] by prove_u_combinator ?1
29636: Order:
29636:   lpo
29636: Leaf order:
29636:  s 1 0 0 
29636:  k 1 0 0 
29636:  f 3 1 3 0,2,1,2
29636:  g 3 1 3 0,2,2
29636:  apply 13 2 5 0,2
% SZS status Timeout for COL004-1.p
NO CLASH, using fixed ground order
29663: Facts:
29663:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
29663:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
29663:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
29663: Goal:
29663:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
29663: Order:
29663:   nrkbo
29663: Leaf order:
29663:  strong_fixed_point 3 0 2 1,2
29663:  fixed_pt 3 0 3 2,2
29663:  s 11 0 0 
29663:  k 13 0 0 
29663:  apply 32 2 3 0,2
NO CLASH, using fixed ground order
29664: Facts:
29664:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
29664:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
29664:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
29664: Goal:
29664:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
29664: Order:
29664:   kbo
29664: Leaf order:
29664:  strong_fixed_point 3 0 2 1,2
29664:  fixed_pt 3 0 3 2,2
29664:  s 11 0 0 
29664:  k 13 0 0 
29664:  apply 32 2 3 0,2
NO CLASH, using fixed ground order
29665: Facts:
29665:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
29665:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
29665:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply (apply s (apply k s)) k))
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
          [] by strong_fixed_point
29665: Goal:
29665:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
29665: Order:
29665:   lpo
29665: Leaf order:
29665:  strong_fixed_point 3 0 2 1,2
29665:  fixed_pt 3 0 3 2,2
29665:  s 11 0 0 
29665:  k 13 0 0 
29665:  apply 32 2 3 0,2
% SZS status Timeout for COL006-6.p
CLASH, statistics insufficient
29690: Facts:
29690:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29690:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
29690:  Id :   4, {_}:
          apply (apply t ?11) ?12 =>= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
29690: Goal:
29690:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
29690: Order:
29690:   nrkbo
29690: Leaf order:
29690:  s 1 0 0 
29690:  b 1 0 0 
29690:  t 1 0 0 
29690:  f 3 1 3 0,2,2
29690:  apply 17 2 3 0,2
CLASH, statistics insufficient
29691: Facts:
29691:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29691:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
29691:  Id :   4, {_}:
          apply (apply t ?11) ?12 =>= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
29691: Goal:
29691:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
29691: Order:
29691:   kbo
29691: Leaf order:
29691:  s 1 0 0 
29691:  b 1 0 0 
29691:  t 1 0 0 
29691:  f 3 1 3 0,2,2
29691:  apply 17 2 3 0,2
CLASH, statistics insufficient
29692: Facts:
29692:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
29692:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
29692:  Id :   4, {_}:
          apply (apply t ?11) ?12 =?= apply ?12 ?11
          [12, 11] by t_definition ?11 ?12
29692: Goal:
29692:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
29692: Order:
29692:   lpo
29692: Leaf order:
29692:  s 1 0 0 
29692:  b 1 0 0 
29692:  t 1 0 0 
29692:  f 3 1 3 0,2,2
29692:  apply 17 2 3 0,2
% SZS status Timeout for COL036-1.p
CLASH, statistics insufficient
29776: Facts:
29776:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
29776:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
29776: Goal:
29776:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
29776: Order:
29776:   nrkbo
29776: Leaf order:
29776:  b 1 0 0 
29776:  t 1 0 0 
29776:  f 2 1 2 0,2,1,1,2
29776:  g 2 1 2 0,2,1,2
29776:  h 2 1 2 0,2,2
29776:  apply 13 2 5 0,2
CLASH, statistics insufficient
29777: Facts:
29777:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
29777:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
29777: Goal:
29777:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
29777: Order:
29777:   kbo
29777: Leaf order:
29777:  b 1 0 0 
29777:  t 1 0 0 
29777:  f 2 1 2 0,2,1,1,2
29777:  g 2 1 2 0,2,1,2
29777:  h 2 1 2 0,2,2
29777:  apply 13 2 5 0,2
CLASH, statistics insufficient
29778: Facts:
29778:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
29778:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
29778: Goal:
29778:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (g ?1)) (f ?1)
          [1] by prove_f_combinator ?1
29778: Order:
29778:   lpo
29778: Leaf order:
29778:  b 1 0 0 
29778:  t 1 0 0 
29778:  f 2 1 2 0,2,1,1,2
29778:  g 2 1 2 0,2,1,2
29778:  h 2 1 2 0,2,2
29778:  apply 13 2 5 0,2
Goal subsumed
Statistics :
Max weight : 100
Found proof, 5.339173s
% SZS status Unsatisfiable for COL063-1.p
% SZS output start CNFRefutation for COL063-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 3189, {_}: apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) === apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) t)))) [] by Super 3184 with 3 at 2
Id : 3184, {_}: apply (apply ?10590 (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) =>= apply (apply (h (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) (g (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590))))) (f (apply (apply b (apply t t)) (apply (apply b b) (apply (apply b b) ?10590)))) [10590] by Super 3164 with 3 at 2,2
Id : 3164, {_}: apply (apply ?10539 (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (apply (apply ?10540 (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) =>= apply (apply (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) [10540, 10539] by Super 442 with 2 at 2
Id : 442, {_}: apply (apply (apply ?1394 (apply ?1395 (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (apply ?1396 (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) =>= apply (apply (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395))))) (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) [1396, 1395, 1394] by Super 277 with 2 at 1,1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (f (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (h (apply (apply b ?18) ?19)) (g (apply (apply b ?18) ?19))) (f (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (h ?1) (g ?1)) (f ?1) [1] by prove_f_combinator ?1
% SZS output end CNFRefutation for COL063-1.p
29776: solved COL063-1.p in 5.300331 using nrkbo
29776: status Unsatisfiable for COL063-1.p
NO CLASH, using fixed ground order
29785: Facts:
29785:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29785:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29785:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29785:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29785:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29785:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29785:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29785:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29785:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29785:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29785:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29785:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29785:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29785:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29785:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29785: Goal:
29785:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
29785: Order:
29785:   nrkbo
29785: Leaf order:
29785:  a 3 0 3 2
29785:  identity 4 0 2 2,1,3
29785:  inverse 1 1 0 
29785:  least_upper_bound 14 2 1 0,1,3
29785:  greatest_lower_bound 14 2 1 0,2,3
29785:  multiply 19 2 1 0,3
NO CLASH, using fixed ground order
29786: Facts:
29786:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29786:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29786:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29786:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29786:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29786:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29786:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29786:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29786:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29786:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29786:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29786:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29786:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29786:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29786:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29786: Goal:
29786:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
29786: Order:
29786:   kbo
29786: Leaf order:
29786:  a 3 0 3 2
29786:  identity 4 0 2 2,1,3
29786:  inverse 1 1 0 
29786:  least_upper_bound 14 2 1 0,1,3
29786:  greatest_lower_bound 14 2 1 0,2,3
29786:  multiply 19 2 1 0,3
NO CLASH, using fixed ground order
29787: Facts:
29787:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29787:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29787:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29787:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29787:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29787:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29787:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29787:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29787:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29787:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29787:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29787:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29787:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29787:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29787:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29787: Goal:
29787:  Id :   1, {_}:
          a
          =<=
          multiply (least_upper_bound a identity)
            (greatest_lower_bound a identity)
          [] by prove_p19
29787: Order:
29787:   lpo
29787: Leaf order:
29787:  a 3 0 3 2
29787:  identity 4 0 2 2,1,3
29787:  inverse 1 1 0 
29787:  least_upper_bound 14 2 1 0,1,3
29787:  greatest_lower_bound 14 2 1 0,2,3
29787:  multiply 19 2 1 0,3
% SZS status Timeout for GRP167-3.p
NO CLASH, using fixed ground order
29831: Facts:
29831:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29831:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29831:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29831:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29831:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29831:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29831:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29831:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29831:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29831:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29831:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29831:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29831:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29831:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29831:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29831: Goal:
29831:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =<=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
29831: Order:
29831:   nrkbo
29831: Leaf order:
29831:  identity 2 0 0 
29831:  a 2 0 2 1,1,2
29831:  b 2 0 2 2,1,2
29831:  inverse 4 1 3 0,2
29831:  least_upper_bound 14 2 1 0,1,2
29831:  greatest_lower_bound 14 2 1 0,3
29831:  multiply 18 2 0 
NO CLASH, using fixed ground order
29832: Facts:
29832:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29832:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29832:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29832:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29832:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29832:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29832:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29832:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
NO CLASH, using fixed ground order
29833: Facts:
29833:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29833:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29833:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29833:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29833:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29833:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29832:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29832:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29832:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29832:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29832:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29832:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29832:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29832: Goal:
29832:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =<=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
29832: Order:
29832:   kbo
29832: Leaf order:
29832:  identity 2 0 0 
29832:  a 2 0 2 1,1,2
29832:  b 2 0 2 2,1,2
29832:  inverse 4 1 3 0,2
29832:  least_upper_bound 14 2 1 0,1,2
29832:  greatest_lower_bound 14 2 1 0,3
29832:  multiply 18 2 0 
29833:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29833:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29833:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29833:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29833:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29833:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29833:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29833:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29833:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29833: Goal:
29833:  Id :   1, {_}:
          inverse (least_upper_bound a b)
          =<=
          greatest_lower_bound (inverse a) (inverse b)
          [] by prove_p10
29833: Order:
29833:   lpo
29833: Leaf order:
29833:  identity 2 0 0 
29833:  a 2 0 2 1,1,2
29833:  b 2 0 2 2,1,2
29833:  inverse 4 1 3 0,2
29833:  least_upper_bound 14 2 1 0,1,2
29833:  greatest_lower_bound 14 2 1 0,3
29833:  multiply 18 2 0 
% SZS status Timeout for GRP179-1.p
NO CLASH, using fixed ground order
29866: Facts:
29866:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29866:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29866:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29866:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29866:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29866:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29866:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29866:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29866:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29866:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29866:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29866:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29866:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29866:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29866:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29866: Goal:
29866:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
29866: Order:
29866:   nrkbo
29866: Leaf order:
29866:  a 2 0 2 1,1,2
29866:  identity 4 0 2 2,2
29866:  inverse 3 1 2 0,1,2
29866:  greatest_lower_bound 14 2 1 0,1,3
29866:  least_upper_bound 14 2 1 0,2
29866:  multiply 18 2 0 
NO CLASH, using fixed ground order
29867: Facts:
29867:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29867:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29867:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29867:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29867:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29867:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29867:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29867:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29867:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29867:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29867:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29867:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29867:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29867:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29867:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29867: Goal:
29867:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
29867: Order:
29867:   kbo
29867: Leaf order:
29867:  a 2 0 2 1,1,2
29867:  identity 4 0 2 2,2
29867:  inverse 3 1 2 0,1,2
29867:  greatest_lower_bound 14 2 1 0,1,3
29867:  least_upper_bound 14 2 1 0,2
29867:  multiply 18 2 0 
NO CLASH, using fixed ground order
29868: Facts:
29868:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29868:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29868:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29868:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29868:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29868:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29868:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29868:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29868:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29868:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29868:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29868:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29868:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29868:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29868:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29868: Goal:
29868:  Id :   1, {_}:
          least_upper_bound (inverse a) identity
          =>=
          inverse (greatest_lower_bound a identity)
          [] by prove_p18
29868: Order:
29868:   lpo
29868: Leaf order:
29868:  a 2 0 2 1,1,2
29868:  identity 4 0 2 2,2
29868:  inverse 3 1 2 0,1,2
29868:  greatest_lower_bound 14 2 1 0,1,3
29868:  least_upper_bound 14 2 1 0,2
29868:  multiply 18 2 0 
% SZS status Timeout for GRP179-2.p
NO CLASH, using fixed ground order
29889: Facts:
29889:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29889:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29889:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29889:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29889:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29889:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29889:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29889:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29889:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29889:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29889:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29889:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29889:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29889:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29889:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29889: Goal:
29889:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
29889: Order:
29889:   nrkbo
29889: Leaf order:
29889:  identity 2 0 0 
29889:  a 3 0 3 1,2
29889:  b 3 0 3 2,1,1,2,2
29889:  inverse 2 1 1 0,1,2,2
29889:  greatest_lower_bound 14 2 1 0,1,1,2,2
29889:  least_upper_bound 14 2 1 0,3
29889:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
29890: Facts:
29890:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29890:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29890:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29890:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29890:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29890:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29890:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29890:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29890:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29890:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29890:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29890:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29890:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29890:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29890:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29890: Goal:
29890:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
29890: Order:
29890:   kbo
29890: Leaf order:
29890:  identity 2 0 0 
29890:  a 3 0 3 1,2
29890:  b 3 0 3 2,1,1,2,2
29890:  inverse 2 1 1 0,1,2,2
29890:  greatest_lower_bound 14 2 1 0,1,1,2,2
29890:  least_upper_bound 14 2 1 0,3
29890:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
29891: Facts:
29891:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29891:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29891:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29891:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29891:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29891:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29891:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29891:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29891:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29891:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29891:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29891:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29891:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29891:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29891:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29891: Goal:
29891:  Id :   1, {_}:
          multiply a (multiply (inverse (greatest_lower_bound a b)) b)
          =>=
          least_upper_bound a b
          [] by prove_p11
29891: Order:
29891:   lpo
29891: Leaf order:
29891:  identity 2 0 0 
29891:  a 3 0 3 1,2
29891:  b 3 0 3 2,1,1,2,2
29891:  inverse 2 1 1 0,1,2,2
29891:  greatest_lower_bound 14 2 1 0,1,1,2,2
29891:  least_upper_bound 14 2 1 0,3
29891:  multiply 20 2 2 0,2
% SZS status Timeout for GRP180-1.p
NO CLASH, using fixed ground order
29925: Facts:
29925:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29925:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29925:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29925:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29925:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29925:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29925:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29925:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29925:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29925:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29925:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29925:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29925:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29925:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29925:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29925:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
29925:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
29925:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
29925: Goal:
29925:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
29925: Order:
29925:   nrkbo
29925: Leaf order:
29925:  a 2 0 2 1,1,2
29925:  identity 7 0 3 2,1,2
29925:  inverse 8 1 1 0,2,2
29925:  least_upper_bound 14 2 1 0,1,2
29925:  greatest_lower_bound 15 2 2 0,2
29925:  multiply 20 2 0 
NO CLASH, using fixed ground order
29926: Facts:
29926:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29926:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29926:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29926:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29926:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29926:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29926:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29926:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29926:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29926:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29926:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29926:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29926:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29926:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29926:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29926:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
29926:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
29926:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
29926: Goal:
29926:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
29926: Order:
29926:   kbo
29926: Leaf order:
29926:  a 2 0 2 1,1,2
29926:  identity 7 0 3 2,1,2
29926:  inverse 8 1 1 0,2,2
29926:  least_upper_bound 14 2 1 0,1,2
29926:  greatest_lower_bound 15 2 2 0,2
29926:  multiply 20 2 0 
NO CLASH, using fixed ground order
29928: Facts:
29928:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29928:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29928:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29928:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29928:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29928:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29928:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29928:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29928:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29928:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29928:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29928:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29928:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29928:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29928:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29928:  Id :  17, {_}: inverse identity =>= identity [] by p20_1
29928:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p20_2 ?51
29928:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p20_3 ?53 ?54
29928: Goal:
29928:  Id :   1, {_}:
          greatest_lower_bound (least_upper_bound a identity)
            (inverse (greatest_lower_bound a identity))
          =>=
          identity
          [] by prove_p20
29928: Order:
29928:   lpo
29928: Leaf order:
29928:  a 2 0 2 1,1,2
29928:  identity 7 0 3 2,1,2
29928:  inverse 8 1 1 0,2,2
29928:  least_upper_bound 14 2 1 0,1,2
29928:  greatest_lower_bound 15 2 2 0,2
29928:  multiply 20 2 0 
% SZS status Timeout for GRP183-2.p
NO CLASH, using fixed ground order
29950: Facts:
29950:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29950:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29950:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29950:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29950:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29950:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29950:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29950:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29950:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29950:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29950:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29950:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29950:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29950:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29950:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29950: Goal:
29950:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
29950: Order:
29950:   nrkbo
29950: Leaf order:
29950:  b 2 0 2 2,1,2
29950:  identity 3 0 1 2,2
29950:  a 3 0 3 1,1,2
29950:  inverse 3 1 2 0,2,3
29950:  greatest_lower_bound 14 2 1 0,1,2,3
29950:  least_upper_bound 14 2 1 0,2
29950:  multiply 20 2 2 0,1,2
NO CLASH, using fixed ground order
29951: Facts:
29951:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29951:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29951:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29951:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29951:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29951:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29951:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29951:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29951:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29951:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29951:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29951:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29951:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29951:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29951:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29951: Goal:
29951:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
29951: Order:
29951:   kbo
29951: Leaf order:
29951:  b 2 0 2 2,1,2
29951:  identity 3 0 1 2,2
29951:  a 3 0 3 1,1,2
29951:  inverse 3 1 2 0,2,3
29951:  greatest_lower_bound 14 2 1 0,1,2,3
29951:  least_upper_bound 14 2 1 0,2
29951:  multiply 20 2 2 0,1,2
NO CLASH, using fixed ground order
29952: Facts:
29952:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
29952:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
29952:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
29952:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
29952:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
29952:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
29952:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
29952:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
29952:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
29952:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
29952:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
29952:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
29952:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
29952:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
29952:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
29952: Goal:
29952:  Id :   1, {_}:
          least_upper_bound (multiply a b) identity
          =<=
          multiply a (inverse (greatest_lower_bound a (inverse b)))
          [] by prove_p23
29952: Order:
29952:   lpo
29952: Leaf order:
29952:  b 2 0 2 2,1,2
29952:  identity 3 0 1 2,2
29952:  a 3 0 3 1,1,2
29952:  inverse 3 1 2 0,2,3
29952:  greatest_lower_bound 14 2 1 0,1,2,3
29952:  least_upper_bound 14 2 1 0,2
29952:  multiply 20 2 2 0,1,2
% SZS status Timeout for GRP186-1.p
NO CLASH, using fixed ground order
29976: Facts:
29976:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
29976:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
29976:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
29976:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
29976:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
29976:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
29976:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
29976:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
29976:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
29976:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
29976: Goal:
29976:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
29976: Order:
29976:   nrkbo
29976: Leaf order:
29976:  n0 1 0 0 
29976:  n1 2 0 1 3
29976:  b 4 0 4 1,2,1,2,1,2,2
29976:  a 7 0 7 1,2
29976:  complement 15 1 6 0,1,1,2,2
29976:  meet 14 2 5 0,1,2,2
29976:  join 17 2 5 0,2
NO CLASH, using fixed ground order
29977: Facts:
29977:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
29977:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
29977:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
29977:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
29977:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
29977:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
29977:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
29977:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
29977:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
29977:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
29977: Goal:
29977:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
29977: Order:
29977:   kbo
29977: Leaf order:
29977:  n0 1 0 0 
29977:  n1 2 0 1 3
29977:  b 4 0 4 1,2,1,2,1,2,2
29977:  a 7 0 7 1,2
29977:  complement 15 1 6 0,1,1,2,2
29977:  meet 14 2 5 0,1,2,2
29977:  join 17 2 5 0,2
NO CLASH, using fixed ground order
29978: Facts:
29978:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
29978:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
29978:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
29978:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
29978:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
29978:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
29978:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
29978:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
29978:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
29978:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
29978: Goal:
29978:  Id :   1, {_}:
          join a
            (join
              (meet (complement a) (meet (join a (complement b)) (join a b)))
              (meet (complement a)
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))))
          =>=
          n1
          [] by prove_e2
29978: Order:
29978:   lpo
29978: Leaf order:
29978:  n0 1 0 0 
29978:  n1 2 0 1 3
29978:  b 4 0 4 1,2,1,2,1,2,2
29978:  a 7 0 7 1,2
29978:  complement 15 1 6 0,1,1,2,2
29978:  meet 14 2 5 0,1,2,2
29978:  join 17 2 5 0,2
% SZS status Timeout for LAT017-1.p
NO CLASH, using fixed ground order
30001: Facts:
30001:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
30001:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
30001:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
30001:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
30001:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =?= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
30001:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =?= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
30001:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
30001:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
30001:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =<=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
30001: Goal:
30001:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
30001: Order:
30001:   nrkbo
30001: Leaf order:
30001:  b 2 0 2 1,2,2
30001:  c 2 0 2 2,2,2
30001:  a 3 0 3 1,2
30001:  join 20 2 2 0,2,2
30001:  meet 21 2 3 0,2
NO CLASH, using fixed ground order
30002: Facts:
30002:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
30002:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
30002:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
30002:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
30002:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
30002:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
30002:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
30002:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
30002:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =<=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
30002: Goal:
30002:  Id :   1, {_}:
          meet a (join b c) =<= join (meet a b) (meet a c)
          [] by prove_distributivity
30002: Order:
30002:   kbo
30002: Leaf order:
30002:  b 2 0 2 1,2,2
30002:  c 2 0 2 2,2,2
30002:  a 3 0 3 1,2
30002:  join 20 2 2 0,2,2
30002:  meet 21 2 3 0,2
NO CLASH, using fixed ground order
30003: Facts:
30003:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
30003:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
30003:  Id :   4, {_}: meet ?6 ?7 =?= meet ?7 ?6 [7, 6] by commutativity_of_meet ?6 ?7
30003:  Id :   5, {_}:
          join ?9 ?10 =?= join ?10 ?9
          [10, 9] by commutativity_of_join ?9 ?10
30003:  Id :   6, {_}:
          meet (meet ?12 ?13) ?14 =>= meet ?12 (meet ?13 ?14)
          [14, 13, 12] by associativity_of_meet ?12 ?13 ?14
30003:  Id :   7, {_}:
          join (join ?16 ?17) ?18 =>= join ?16 (join ?17 ?18)
          [18, 17, 16] by associativity_of_join ?16 ?17 ?18
30003:  Id :   8, {_}:
          join (meet ?20 (join ?21 ?22)) (meet ?20 ?21)
          =>=
          meet ?20 (join ?21 ?22)
          [22, 21, 20] by quasi_lattice1 ?20 ?21 ?22
30003:  Id :   9, {_}:
          meet (join ?24 (meet ?25 ?26)) (join ?24 ?25)
          =>=
          join ?24 (meet ?25 ?26)
          [26, 25, 24] by quasi_lattice2 ?24 ?25 ?26
30003:  Id :  10, {_}:
          join (meet (join (meet ?28 ?29) ?30) ?29) (meet ?30 ?28)
          =<=
          meet (join (meet (join ?28 ?29) ?30) ?29) (join ?30 ?28)
          [30, 29, 28] by self_dual_distributivity ?28 ?29 ?30
30003: Goal:
30003:  Id :   1, {_}:
          meet a (join b c) =>= join (meet a b) (meet a c)
          [] by prove_distributivity
30003: Order:
30003:   lpo
30003: Leaf order:
30003:  b 2 0 2 1,2,2
30003:  c 2 0 2 2,2,2
30003:  a 3 0 3 1,2
30003:  join 20 2 2 0,2,2
30003:  meet 21 2 3 0,2
% SZS status Timeout for LAT020-1.p
NO CLASH, using fixed ground order
30025: Facts:
30025:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30025:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30025:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30025:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30025:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30025:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30025:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30025:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30025:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30025:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30025:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30025:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30025:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30025:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30025:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30025:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30025:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30025:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30025:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30025:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30025:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30025:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30025: Goal:
30025:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
30025: Order:
30025:   nrkbo
30025: Leaf order:
30025:  x 2 0 2 1,1,2
30025:  y 2 0 2 2,1,2
30025:  z 2 0 2 3,1,2
30025:  additive_identity 9 0 1 3
30025:  additive_inverse 22 1 0 
30025:  commutator 1 2 0 
30025:  add 25 2 1 0,2
30025:  multiply 40 2 0 
30025:  associator 3 3 2 0,1,2
NO CLASH, using fixed ground order
30026: Facts:
30026:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30026:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30026:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30026:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30026:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30026:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30026:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30026:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30026:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30026:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30026:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30026:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30026:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30026:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30026:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30026:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30026:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30026:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30026:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30026:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30026:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30026:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30026: Goal:
30026:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
30026: Order:
30026:   kbo
30026: Leaf order:
30026:  x 2 0 2 1,1,2
30026:  y 2 0 2 2,1,2
30026:  z 2 0 2 3,1,2
30026:  additive_identity 9 0 1 3
30026:  additive_inverse 22 1 0 
30026:  commutator 1 2 0 
30026:  add 25 2 1 0,2
30026:  multiply 40 2 0 
30026:  associator 3 3 2 0,1,2
NO CLASH, using fixed ground order
30027: Facts:
30027:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30027:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30027:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30027:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30027:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30027:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30027:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30027:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30027:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30027:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30027:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30027:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30027:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30027:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30027:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30027:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30027:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30027:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30027:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30027:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30027:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30027:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30027: Goal:
30027:  Id :   1, {_}:
          add (associator x y z) (associator x z y) =>= additive_identity
          [] by prove_equation
30027: Order:
30027:   lpo
30027: Leaf order:
30027:  x 2 0 2 1,1,2
30027:  y 2 0 2 2,1,2
30027:  z 2 0 2 3,1,2
30027:  additive_identity 9 0 1 3
30027:  additive_inverse 22 1 0 
30027:  commutator 1 2 0 
30027:  add 25 2 1 0,2
30027:  multiply 40 2 0 
30027:  associator 3 3 2 0,1,2
% SZS status Timeout for RNG025-5.p
NO CLASH, using fixed ground order
30048: Facts:
30048:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30048:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30048:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30048:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30048:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30048:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30048:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30048:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30048:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30048:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30048:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30048:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30048:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30048:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30048:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30048:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30048:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30048:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30048:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30048:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30048:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30048:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30048: Goal:
30048:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
30048: Order:
30048:   nrkbo
30048: Leaf order:
30048:  y 1 0 1 2,2
30048:  x 2 0 2 1,2
30048:  additive_identity 9 0 1 3
30048:  additive_inverse 22 1 0 
30048:  commutator 1 2 0 
30048:  add 24 2 0 
30048:  multiply 40 2 0 
30048:  associator 2 3 1 0,2
NO CLASH, using fixed ground order
30049: Facts:
30049:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30049:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30049:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30049:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30049:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30049:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30049:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30049:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30049:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30049:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30049:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30049:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30049:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30049:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30049:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30049:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30049:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30049:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30049:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30049:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30049:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30049:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30049: Goal:
30049:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
30049: Order:
30049:   kbo
30049: Leaf order:
30049:  y 1 0 1 2,2
30049:  x 2 0 2 1,2
30049:  additive_identity 9 0 1 3
30049:  additive_inverse 22 1 0 
30049:  commutator 1 2 0 
30049:  add 24 2 0 
30049:  multiply 40 2 0 
30049:  associator 2 3 1 0,2
NO CLASH, using fixed ground order
30050: Facts:
30050:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
30050:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
30050:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
30050:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
30050:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
30050:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
30050:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
30050:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
30050:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
30050:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
30050:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
30050:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
30050:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
30050:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
30050:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
30050:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
30050:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
30050:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
30050:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
30050:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
30050:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
30050:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
30050: Goal:
30050:  Id :   1, {_}: associator x y x =>= additive_identity [] by prove_flexible_law
30050: Order:
30050:   lpo
30050: Leaf order:
30050:  y 1 0 1 2,2
30050:  x 2 0 2 1,2
30050:  additive_identity 9 0 1 3
30050:  additive_inverse 22 1 0 
30050:  commutator 1 2 0 
30050:  add 24 2 0 
30050:  multiply 40 2 0 
30050:  associator 2 3 1 0,2
% SZS status Timeout for RNG025-7.p
CLASH, statistics insufficient
30088: Facts:
30088:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
30088:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
30088: Goal:
30088:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
30088: Order:
30088:   nrkbo
30088: Leaf order:
30088:  s 1 0 0 
30088:  k 1 0 0 
30088:  f 3 1 3 0,2,2
30088:  apply 11 2 3 0,2
CLASH, statistics insufficient
30089: Facts:
30089:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
30089:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
30089: Goal:
30089:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
30089: Order:
30089:   kbo
30089: Leaf order:
30089:  s 1 0 0 
30089:  k 1 0 0 
30089:  f 3 1 3 0,2,2
30089:  apply 11 2 3 0,2
CLASH, statistics insufficient
30090: Facts:
30090:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
30090:  Id :   3, {_}: apply (apply k ?7) ?8 =>= ?7 [8, 7] by k_definition ?7 ?8
30090: Goal:
30090:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
30090: Order:
30090:   lpo
30090: Leaf order:
30090:  s 1 0 0 
30090:  k 1 0 0 
30090:  f 3 1 3 0,2,2
30090:  apply 11 2 3 0,2
% SZS status Timeout for COL006-1.p
NO CLASH, using fixed ground order
30176: Facts:
30176:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30176:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30176:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
30176: Goal:
30176:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30176: Order:
30176:   nrkbo
30176: Leaf order:
30176:  strong_fixed_point 3 0 2 1,2
30176:  fixed_pt 3 0 3 2,2
30176:  k 10 0 0 
30176:  s 11 0 0 
30176:  apply 29 2 3 0,2
NO CLASH, using fixed ground order
30177: Facts:
30177:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30177:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30177:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
30177: Goal:
30177:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30177: Order:
30177:   kbo
30177: Leaf order:
30177:  strong_fixed_point 3 0 2 1,2
30177:  fixed_pt 3 0 3 2,2
30177:  k 10 0 0 
30177:  s 11 0 0 
30177:  apply 29 2 3 0,2
NO CLASH, using fixed ground order
30178: Facts:
30178:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30178:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30178:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply s (apply (apply s k) k)) (apply (apply s k) k))))
            (apply (apply s (apply k (apply (apply s s) (apply s k))))
              (apply (apply s (apply k s)) k))
          [] by strong_fixed_point
30178: Goal:
30178:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30178: Order:
30178:   lpo
30178: Leaf order:
30178:  strong_fixed_point 3 0 2 1,2
30178:  fixed_pt 3 0 3 2,2
30178:  k 10 0 0 
30178:  s 11 0 0 
30178:  apply 29 2 3 0,2
% SZS status Timeout for COL006-5.p
NO CLASH, using fixed ground order
30201: Facts:
30201:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30201:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30201:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
30201: Goal:
30201:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30201: Order:
30201:   nrkbo
30201: Leaf order:
30201:  strong_fixed_point 3 0 2 1,2
30201:  fixed_pt 3 0 3 2,2
30201:  k 7 0 0 
30201:  s 10 0 0 
30201:  apply 25 2 3 0,2
NO CLASH, using fixed ground order
30202: Facts:
30202:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30202:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30202:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
30202: Goal:
30202:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30202: Order:
30202:   kbo
30202: Leaf order:
30202:  strong_fixed_point 3 0 2 1,2
30202:  fixed_pt 3 0 3 2,2
30202:  k 7 0 0 
30202:  s 10 0 0 
30202:  apply 25 2 3 0,2
NO CLASH, using fixed ground order
30203: Facts:
30203:  Id :   2, {_}:
          apply (apply (apply s ?2) ?3) ?4
          =?=
          apply (apply ?2 ?4) (apply ?3 ?4)
          [4, 3, 2] by s_definition ?2 ?3 ?4
30203:  Id :   3, {_}: apply (apply k ?6) ?7 =>= ?6 [7, 6] by k_definition ?6 ?7
30203:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply s
              (apply k
                (apply (apply (apply s s) (apply (apply s k) k))
                  (apply (apply s s) (apply s k)))))
            (apply (apply s (apply k s)) k)
          [] by strong_fixed_point
30203: Goal:
30203:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30203: Order:
30203:   lpo
30203: Leaf order:
30203:  strong_fixed_point 3 0 2 1,2
30203:  fixed_pt 3 0 3 2,2
30203:  k 7 0 0 
30203:  s 10 0 0 
30203:  apply 25 2 3 0,2
% SZS status Timeout for COL006-7.p
NO CLASH, using fixed ground order
30224: Facts:
30224:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30224:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
NO CLASH, using fixed ground order
30225: Facts:
30225:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30225:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
30225:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
30225: Goal:
30225:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30225: Order:
30225:   kbo
30225: Leaf order:
30225:  strong_fixed_point 3 0 2 1,2
30225:  fixed_pt 3 0 3 2,2
30225:  n 6 0 0 
30225:  b 9 0 0 
30225:  apply 26 2 3 0,2
NO CLASH, using fixed ground order
30226: Facts:
30226:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30226:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
30226:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
30226: Goal:
30226:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30226: Order:
30226:   lpo
30226: Leaf order:
30226:  strong_fixed_point 3 0 2 1,2
30226:  fixed_pt 3 0 3 2,2
30226:  n 6 0 0 
30226:  b 9 0 0 
30226:  apply 26 2 3 0,2
30224:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply (apply b b) n)) n))) n)) b)) b
          [] by strong_fixed_point
30224: Goal:
30224:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30224: Order:
30224:   nrkbo
30224: Leaf order:
30224:  strong_fixed_point 3 0 2 1,2
30224:  fixed_pt 3 0 3 2,2
30224:  n 6 0 0 
30224:  b 9 0 0 
30224:  apply 26 2 3 0,2
% SZS status Timeout for COL044-6.p
NO CLASH, using fixed ground order
30249: Facts:
30249:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30249:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
30249:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
30249: Goal:
30249:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30249: Order:
30249:   nrkbo
30249: Leaf order:
30249:  strong_fixed_point 3 0 2 1,2
30249:  fixed_pt 3 0 3 2,2
30249:  n 6 0 0 
30249:  b 9 0 0 
30249:  apply 26 2 3 0,2
NO CLASH, using fixed ground order
30250: Facts:
30250:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30250:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
30250:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
30250: Goal:
30250:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30250: Order:
30250:   kbo
30250: Leaf order:
30250:  strong_fixed_point 3 0 2 1,2
30250:  fixed_pt 3 0 3 2,2
30250:  n 6 0 0 
30250:  b 9 0 0 
30250:  apply 26 2 3 0,2
NO CLASH, using fixed ground order
30251: Facts:
30251:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
30251:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
30251:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply (apply b b)
                        (apply (apply n (apply n (apply b b))) n))) n)) b)) b
          [] by strong_fixed_point
30251: Goal:
30251:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
30251: Order:
30251:   lpo
30251: Leaf order:
30251:  strong_fixed_point 3 0 2 1,2
30251:  fixed_pt 3 0 3 2,2
30251:  n 6 0 0 
30251:  b 9 0 0 
30251:  apply 26 2 3 0,2
% SZS status Timeout for COL044-7.p
CLASH, statistics insufficient
30275: Facts:
30275:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30275:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30275: Goal:
30275:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
30275: Order:
30275:   nrkbo
30275: Leaf order:
30275:  b 1 0 0 
30275:  t 1 0 0 
30275:  f 2 1 2 0,2,1,1,2
30275:  g 2 1 2 0,2,1,2
30275:  h 2 1 2 0,2,2
30275:  apply 13 2 5 0,2
CLASH, statistics insufficient
30276: Facts:
30276:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30276:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30276: Goal:
30276:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
30276: Order:
30276:   kbo
30276: Leaf order:
30276:  b 1 0 0 
30276:  t 1 0 0 
30276:  f 2 1 2 0,2,1,1,2
30276:  g 2 1 2 0,2,1,2
30276:  h 2 1 2 0,2,2
30276:  apply 13 2 5 0,2
CLASH, statistics insufficient
30277: Facts:
30277:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30277:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30277: Goal:
30277:  Id :   1, {_}:
          apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (h ?1) (f ?1)) (g ?1)
          [1] by prove_v_combinator ?1
30277: Order:
30277:   lpo
30277: Leaf order:
30277:  b 1 0 0 
30277:  t 1 0 0 
30277:  f 2 1 2 0,2,1,1,2
30277:  g 2 1 2 0,2,1,2
30277:  h 2 1 2 0,2,2
30277:  apply 13 2 5 0,2
Goal subsumed
Statistics :
Max weight : 124
Found proof, 34.381663s
% SZS status Unsatisfiable for COL064-1.p
% SZS output start CNFRefutation for COL064-1.p
Id :   3, {_}: apply (apply t ?7) ?8 =>= apply ?8 ?7 [8, 7] by t_definition ?7 ?8
Id :   2, {_}: apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5) [5, 4, 3] by b_definition ?3 ?4 ?5
Id : 10997, {_}: apply (apply (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) === apply (apply (h (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) t))) (apply (apply b b) (apply (apply b b) t)))) [] by Super 10996 with 3 at 2
Id : 10996, {_}: apply (apply ?37685 (g (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) (apply (h (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) =>= apply (apply (h (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b b) ?37685))) (apply (apply b b) (apply (apply b b) t)))) [37685] by Super 3193 with 2 at 2
Id : 3193, {_}: apply (apply (apply ?10612 (apply ?10613 (g (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))))) (h (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) =>= apply (apply (h (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t (apply (apply b ?10612) ?10613))) (apply (apply b b) (apply (apply b b) t)))) [10613, 10612] by Super 3188 with 2 at 1,1,2
Id : 3188, {_}: apply (apply (apply ?10602 (g (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (h (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (f (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) =>= apply (apply (h (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) (f (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t))))) (g (apply (apply b (apply t ?10602)) (apply (apply b b) (apply (apply b b) t)))) [10602] by Super 3164 with 3 at 2
Id : 3164, {_}: apply (apply ?10539 (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (apply (apply ?10540 (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) =>= apply (apply (h (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) (f (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539))))) (g (apply (apply b (apply t ?10540)) (apply (apply b b) (apply (apply b b) ?10539)))) [10540, 10539] by Super 442 with 2 at 2
Id : 442, {_}: apply (apply (apply ?1394 (apply ?1395 (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (apply ?1396 (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))))) (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) =>= apply (apply (h (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) (f (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395))))) (g (apply (apply b (apply t ?1396)) (apply (apply b b) (apply (apply b ?1394) ?1395)))) [1396, 1395, 1394] by Super 277 with 2 at 1,1,2
Id : 277, {_}: apply (apply (apply ?900 (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (apply ?901 (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))))) (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) =>= apply (apply (h (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) (f (apply (apply b (apply t ?901)) (apply (apply b b) ?900)))) (g (apply (apply b (apply t ?901)) (apply (apply b b) ?900))) [901, 900] by Super 29 with 2 at 1,2
Id :  29, {_}: apply (apply (apply (apply ?85 (apply ?86 (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))))) ?87) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) =>= apply (apply (h (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) (f (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86)))) (g (apply (apply b (apply t ?87)) (apply (apply b ?85) ?86))) [87, 86, 85] by Super 13 with 3 at 1,1,2
Id :  13, {_}: apply (apply (apply ?33 (apply ?34 (apply ?35 (f (apply (apply b ?33) (apply (apply b ?34) ?35)))))) (g (apply (apply b ?33) (apply (apply b ?34) ?35)))) (h (apply (apply b ?33) (apply (apply b ?34) ?35))) =>= apply (apply (h (apply (apply b ?33) (apply (apply b ?34) ?35))) (f (apply (apply b ?33) (apply (apply b ?34) ?35)))) (g (apply (apply b ?33) (apply (apply b ?34) ?35))) [35, 34, 33] by Super 6 with 2 at 2,1,1,2
Id :   6, {_}: apply (apply (apply ?18 (apply ?19 (f (apply (apply b ?18) ?19)))) (g (apply (apply b ?18) ?19))) (h (apply (apply b ?18) ?19)) =>= apply (apply (h (apply (apply b ?18) ?19)) (f (apply (apply b ?18) ?19))) (g (apply (apply b ?18) ?19)) [19, 18] by Super 1 with 2 at 1,1,2
Id :   1, {_}: apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1) =>= apply (apply (h ?1) (f ?1)) (g ?1) [1] by prove_v_combinator ?1
% SZS output end CNFRefutation for COL064-1.p
30275: solved COL064-1.p in 34.366147 using nrkbo
30275: status Unsatisfiable for COL064-1.p
CLASH, statistics insufficient
30288: Facts:
30288:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30288:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30288: Goal:
30288:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
30288: Order:
30288:   nrkbo
30288: Leaf order:
30288:  b 1 0 0 
30288:  t 1 0 0 
30288:  f 2 1 2 0,2,1,1,1,2
30288:  g 2 1 2 0,2,1,1,2
30288:  h 2 1 2 0,2,1,2
30288:  i 2 1 2 0,2,2
30288:  apply 15 2 7 0,2
CLASH, statistics insufficient
30289: Facts:
30289:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30289:  Id :   3, {_}:
          apply (apply t ?7) ?8 =>= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30289: Goal:
30289:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
30289: Order:
30289:   kbo
30289: Leaf order:
30289:  b 1 0 0 
30289:  t 1 0 0 
30289:  f 2 1 2 0,2,1,1,1,2
30289:  g 2 1 2 0,2,1,1,2
30289:  h 2 1 2 0,2,1,2
30289:  i 2 1 2 0,2,2
30289:  apply 15 2 7 0,2
CLASH, statistics insufficient
30290: Facts:
30290:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
30290:  Id :   3, {_}:
          apply (apply t ?7) ?8 =?= apply ?8 ?7
          [8, 7] by t_definition ?7 ?8
30290: Goal:
30290:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (h ?1)) (i ?1)
          =>=
          apply (apply (f ?1) (i ?1)) (apply (g ?1) (h ?1))
          [1] by prove_g_combinator ?1
30290: Order:
30290:   lpo
30290: Leaf order:
30290:  b 1 0 0 
30290:  t 1 0 0 
30290:  f 2 1 2 0,2,1,1,1,2
30290:  g 2 1 2 0,2,1,1,2
30290:  h 2 1 2 0,2,1,2
30290:  i 2 1 2 0,2,2
30290:  apply 15 2 7 0,2
% SZS status Timeout for COL065-1.p
CLASH, statistics insufficient
30319: Facts:
30319:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30319:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30319:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30319:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30319:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30319:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30319:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30319:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30319:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30319:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30319:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30319:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30319:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30319:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30319:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30319:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
30319:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
30319: Goal:
30319:  Id :   1, {_}: a =>= b [] by prove_p12
30319: Order:
30319:   nrkbo
30319: Leaf order:
30319:  identity 2 0 0 
30319:  a 3 0 1 2
30319:  b 3 0 1 3
30319:  c 4 0 0 
30319:  inverse 1 1 0 
30319:  greatest_lower_bound 15 2 0 
30319:  least_upper_bound 15 2 0 
30319:  multiply 18 2 0 
CLASH, statistics insufficient
30320: Facts:
30320:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30320:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30320:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30320:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30320:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30320:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30320:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30320:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30320:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30320:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30320:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30320:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30320:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30320:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30320:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30320:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
30320:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
30320: Goal:
30320:  Id :   1, {_}: a =>= b [] by prove_p12
30320: Order:
30320:   kbo
30320: Leaf order:
30320:  identity 2 0 0 
30320:  a 3 0 1 2
30320:  b 3 0 1 3
30320:  c 4 0 0 
30320:  inverse 1 1 0 
30320:  greatest_lower_bound 15 2 0 
30320:  least_upper_bound 15 2 0 
30320:  multiply 18 2 0 
CLASH, statistics insufficient
30321: Facts:
30321:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30321:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30321:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30321:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30321:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30321:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30321:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30321:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30321:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30321:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30321:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30321:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30321:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30321:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30321:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30321:  Id :  17, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_1
30321:  Id :  18, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_2
30321: Goal:
30321:  Id :   1, {_}: a =>= b [] by prove_p12
30321: Order:
30321:   lpo
30321: Leaf order:
30321:  identity 2 0 0 
30321:  a 3 0 1 2
30321:  b 3 0 1 3
30321:  c 4 0 0 
30321:  inverse 1 1 0 
30321:  greatest_lower_bound 15 2 0 
30321:  least_upper_bound 15 2 0 
30321:  multiply 18 2 0 
% SZS status Timeout for GRP181-1.p
CLASH, statistics insufficient
30347: Facts:
30347:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30347:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30347:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30347:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30347:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30347:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30347:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30347:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30347:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30347:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30347:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30347:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30347:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30347:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30347:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30347:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
30347:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
30347:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
30347:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
30347:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
30347: Goal:
30347:  Id :   1, {_}: a =>= b [] by prove_p12
30347: Order:
30347:   nrkbo
30347: Leaf order:
30347:  a 3 0 1 2
30347:  b 3 0 1 3
30347:  identity 4 0 0 
30347:  c 4 0 0 
30347:  inverse 7 1 0 
30347:  greatest_lower_bound 15 2 0 
30347:  least_upper_bound 15 2 0 
30347:  multiply 20 2 0 
CLASH, statistics insufficient
30348: Facts:
30348:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30348:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30348:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30348:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30348:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30348:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30348:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30348:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30348:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30348:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30348:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30348:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30348:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30348:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30348:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30348:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
30348:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
30348:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =<= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
30348:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
30348:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
30348: Goal:
30348:  Id :   1, {_}: a =>= b [] by prove_p12
30348: Order:
30348:   kbo
30348: Leaf order:
30348:  a 3 0 1 2
30348:  b 3 0 1 3
30348:  identity 4 0 0 
30348:  c 4 0 0 
30348:  inverse 7 1 0 
30348:  greatest_lower_bound 15 2 0 
30348:  least_upper_bound 15 2 0 
30348:  multiply 20 2 0 
CLASH, statistics insufficient
30349: Facts:
30349:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30349:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30349:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30349:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30349:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30349:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30349:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30349:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30349:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30349:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30349:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30349:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30349:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30349:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30349:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30349:  Id :  17, {_}: inverse identity =>= identity [] by p12_1
30349:  Id :  18, {_}: inverse (inverse ?51) =>= ?51 [51] by p12_2 ?51
30349:  Id :  19, {_}:
          inverse (multiply ?53 ?54) =?= multiply (inverse ?54) (inverse ?53)
          [54, 53] by p12_3 ?53 ?54
30349:  Id :  20, {_}:
          greatest_lower_bound a c =>= greatest_lower_bound b c
          [] by p12_4
30349:  Id :  21, {_}: least_upper_bound a c =>= least_upper_bound b c [] by p12_5
30349: Goal:
30349:  Id :   1, {_}: a =>= b [] by prove_p12
30349: Order:
30349:   lpo
30349: Leaf order:
30349:  a 3 0 1 2
30349:  b 3 0 1 3
30349:  identity 4 0 0 
30349:  c 4 0 0 
30349:  inverse 7 1 0 
30349:  greatest_lower_bound 15 2 0 
30349:  least_upper_bound 15 2 0 
30349:  multiply 20 2 0 
% SZS status Timeout for GRP181-2.p
NO CLASH, using fixed ground order
30391: Facts:
30391:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30391:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30391:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30391:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30391:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30391:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30391:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30391:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30391:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30391:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30391:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30391:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30391:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30391:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30391:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30391:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
30391: Goal:
30391:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_p33
30391: Order:
30391:   nrkbo
30391: Leaf order:
30391:  identity 3 0 0 
30391:  a 4 0 2 1,2
30391:  b 4 0 2 2,2
30391:  inverse 3 1 0 
30391:  greatest_lower_bound 14 2 0 
30391:  least_upper_bound 15 2 0 
30391:  multiply 20 2 2 0,2
NO CLASH, using fixed ground order
30392: Facts:
30392:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30392:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30392:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30392:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30392:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30392:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30392:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30392:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30392:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30392:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
NO CLASH, using fixed ground order
30393: Facts:
30393:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
30393:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
30393:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
30393:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
30393:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
30393:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
30393:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
30393:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
30393:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
30393:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
30393:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30393:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30393:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30393:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30393:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30393:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
30393: Goal:
30393:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_p33
30393: Order:
30393:   lpo
30393: Leaf order:
30393:  identity 3 0 0 
30393:  a 4 0 2 1,2
30393:  b 4 0 2 2,2
30393:  inverse 3 1 0 
30393:  greatest_lower_bound 14 2 0 
30393:  least_upper_bound 15 2 0 
30393:  multiply 20 2 2 0,2
30392:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
30392:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
30392:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
30392:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
30392:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
30392:  Id :  17, {_}:
          greatest_lower_bound (least_upper_bound a (inverse a))
            (least_upper_bound b (inverse b))
          =>=
          identity
          [] by p33_1
30392: Goal:
30392:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_p33
30392: Order:
30392:   kbo
30392: Leaf order:
30392:  identity 3 0 0 
30392:  a 4 0 2 1,2
30392:  b 4 0 2 2,2
30392:  inverse 3 1 0 
30392:  greatest_lower_bound 14 2 0 
30392:  least_upper_bound 15 2 0 
30392:  multiply 20 2 2 0,2
% SZS status Timeout for GRP187-1.p
NO CLASH, using fixed ground order
30417: Facts:
30417:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30417: Goal:
30417:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
30417: Order:
30417:   nrkbo
30417: Leaf order:
30417:  a1 2 0 2 1,1,2
30417:  b1 2 0 2 1,1,3
30417:  inverse 9 1 2 0,1,2
30417:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
30418: Facts:
30418:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30418: Goal:
30418:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
30418: Order:
30418:   kbo
30418: Leaf order:
30418:  a1 2 0 2 1,1,2
30418:  b1 2 0 2 1,1,3
30418:  inverse 9 1 2 0,1,2
30418:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
30419: Facts:
30419:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30419: Goal:
30419:  Id :   1, {_}:
          multiply (inverse a1) a1 =<= multiply (inverse b1) b1
          [] by prove_these_axioms_1
30419: Order:
30419:   lpo
30419: Leaf order:
30419:  a1 2 0 2 1,1,2
30419:  b1 2 0 2 1,1,3
30419:  inverse 9 1 2 0,1,2
30419:  multiply 12 2 2 0,2
% SZS status Timeout for GRP505-1.p
NO CLASH, using fixed ground order
30445: Facts:
30445:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30445: Goal:
30445:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
30445: Order:
30445:   nrkbo
30445: Leaf order:
30445:  a3 2 0 2 1,1,2
30445:  b3 2 0 2 2,1,2
30445:  c3 2 0 2 2,2
30445:  inverse 7 1 0 
30445:  multiply 14 2 4 0,2
NO CLASH, using fixed ground order
30446: Facts:
30446:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30446: Goal:
30446:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
30446: Order:
30446:   kbo
30446: Leaf order:
30446:  a3 2 0 2 1,1,2
30446:  b3 2 0 2 2,1,2
30446:  c3 2 0 2 2,2
30446:  inverse 7 1 0 
30446:  multiply 14 2 4 0,2
NO CLASH, using fixed ground order
30447: Facts:
30447:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30447: Goal:
30447:  Id :   1, {_}:
          multiply (multiply a3 b3) c3 =>= multiply a3 (multiply b3 c3)
          [] by prove_these_axioms_3
30447: Order:
30447:   lpo
30447: Leaf order:
30447:  a3 2 0 2 1,1,2
30447:  b3 2 0 2 2,1,2
30447:  c3 2 0 2 2,2
30447:  inverse 7 1 0 
30447:  multiply 14 2 4 0,2
% SZS status Timeout for GRP507-1.p
NO CLASH, using fixed ground order
30481: Facts:
30481:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30481: Goal:
30481:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_these_axioms_4
30481: Order:
30481:   nrkbo
30481: Leaf order:
30481:  a 2 0 2 1,2
30481:  b 2 0 2 2,2
30481:  inverse 7 1 0 
30481:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
30482: Facts:
30482:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30482: Goal:
30482:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_these_axioms_4
30482: Order:
30482:   kbo
30482: Leaf order:
30482:  a 2 0 2 1,2
30482:  b 2 0 2 2,2
30482:  inverse 7 1 0 
30482:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
30483: Facts:
30483:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
30483: Goal:
30483:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_these_axioms_4
30483: Order:
30483:   lpo
30483: Leaf order:
30483:  a 2 0 2 1,2
30483:  b 2 0 2 2,2
30483:  inverse 7 1 0 
30483:  multiply 12 2 2 0,2
% SZS status Timeout for GRP508-1.p
NO CLASH, using fixed ground order
31468: Facts:
31468:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31468: Goal:
31468:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
31468: Order:
31468:   nrkbo
31468: Leaf order:
31468:  a 3 0 3 1,2
31468:  meet 19 2 1 0,2
31468:  join 20 2 0 
NO CLASH, using fixed ground order
31469: Facts:
31469:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31469: Goal:
31469:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
31469: Order:
31469:   kbo
31469: Leaf order:
31469:  a 3 0 3 1,2
31469:  meet 19 2 1 0,2
31469:  join 20 2 0 
NO CLASH, using fixed ground order
31470: Facts:
31470:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31470: Goal:
31470:  Id :   1, {_}: meet a a =>= a [] by prove_normal_axioms_1
31470: Order:
31470:   lpo
31470: Leaf order:
31470:  a 3 0 3 1,2
31470:  meet 19 2 1 0,2
31470:  join 20 2 0 
% SZS status Timeout for LAT080-1.p
NO CLASH, using fixed ground order
31492: Facts:
31492:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31492: Goal:
31492:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
31492: Order:
31492:   nrkbo
31492: Leaf order:
31492:  a 3 0 3 1,2
31492:  meet 18 2 0 
31492:  join 21 2 1 0,2
NO CLASH, using fixed ground order
31493: Facts:
31493:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31493: Goal:
31493:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
31493: Order:
31493:   kbo
31493: Leaf order:
31493:  a 3 0 3 1,2
31493:  meet 18 2 0 
31493:  join 21 2 1 0,2
NO CLASH, using fixed ground order
31494: Facts:
31494:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
31494: Goal:
31494:  Id :   1, {_}: join a a =>= a [] by prove_normal_axioms_4
31494: Order:
31494:   lpo
31494: Leaf order:
31494:  a 3 0 3 1,2
31494:  meet 18 2 0 
31494:  join 21 2 1 0,2
% SZS status Timeout for LAT083-1.p
NO CLASH, using fixed ground order
31519: Facts:
31519:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31519: Goal:
31519:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
31519: Order:
31519:   nrkbo
31519: Leaf order:
31519:  a 3 0 3 1,2
31519:  join 18 2 0 
31519:  meet 19 2 1 0,2
NO CLASH, using fixed ground order
31521: Facts:
31521:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31521: Goal:
31521:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
31521: Order:
31521:   lpo
31521: Leaf order:
31521:  a 3 0 3 1,2
31521:  join 18 2 0 
31521:  meet 19 2 1 0,2
NO CLASH, using fixed ground order
31520: Facts:
31520:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31520: Goal:
31520:  Id :   1, {_}: meet a a =>= a [] by prove_wal_axioms_1
31520: Order:
31520:   kbo
31520: Leaf order:
31520:  a 3 0 3 1,2
31520:  join 18 2 0 
31520:  meet 19 2 1 0,2
% SZS status Timeout for LAT092-1.p
NO CLASH, using fixed ground order
31546: Facts:
31546:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31546: Goal:
31546:  Id :   1, {_}: meet b a =<= meet a b [] by prove_wal_axioms_2
31546: Order:
31546:   nrkbo
31546: Leaf order:
31546:  b 2 0 2 1,2
31546:  a 2 0 2 2,2
31546:  join 18 2 0 
31546:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
31547: Facts:
31547:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31547: Goal:
31547:  Id :   1, {_}: meet b a =<= meet a b [] by prove_wal_axioms_2
31547: Order:
31547:   kbo
31547: Leaf order:
31547:  b 2 0 2 1,2
31547:  a 2 0 2 2,2
31547:  join 18 2 0 
31547:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
31548: Facts:
31548:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31548: Goal:
31548:  Id :   1, {_}: meet b a =<= meet a b [] by prove_wal_axioms_2
31548: Order:
31548:   lpo
31548: Leaf order:
31548:  b 2 0 2 1,2
31548:  a 2 0 2 2,2
31548:  join 18 2 0 
31548:  meet 20 2 2 0,2
% SZS status Timeout for LAT093-1.p
NO CLASH, using fixed ground order
31571: Facts:
31571:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31571: Goal:
31571:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
31571: Order:
31571:   nrkbo
31571: Leaf order:
31571:  a 3 0 3 1,2
31571:  meet 18 2 0 
31571:  join 19 2 1 0,2
NO CLASH, using fixed ground order
31572: Facts:
31572:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31572: Goal:
31572:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
31572: Order:
31572:   kbo
31572: Leaf order:
31572:  a 3 0 3 1,2
31572:  meet 18 2 0 
31572:  join 19 2 1 0,2
NO CLASH, using fixed ground order
31573: Facts:
31573:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31573: Goal:
31573:  Id :   1, {_}: join a a =>= a [] by prove_wal_axioms_3
31573: Order:
31573:   lpo
31573: Leaf order:
31573:  a 3 0 3 1,2
31573:  meet 18 2 0 
31573:  join 19 2 1 0,2
% SZS status Timeout for LAT094-1.p
NO CLASH, using fixed ground order
31595: Facts:
31595:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31595: Goal:
31595:  Id :   1, {_}: join b a =<= join a b [] by prove_wal_axioms_4
31595: Order:
31595:   nrkbo
31595: Leaf order:
31595:  b 2 0 2 1,2
31595:  a 2 0 2 2,2
31595:  meet 18 2 0 
31595:  join 20 2 2 0,2
NO CLASH, using fixed ground order
31596: Facts:
31596:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31596: Goal:
31596:  Id :   1, {_}: join b a =<= join a b [] by prove_wal_axioms_4
31596: Order:
31596:   kbo
31596: Leaf order:
31596:  b 2 0 2 1,2
31596:  a 2 0 2 2,2
31596:  meet 18 2 0 
31596:  join 20 2 2 0,2
NO CLASH, using fixed ground order
31597: Facts:
31597:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31597: Goal:
31597:  Id :   1, {_}: join b a =<= join a b [] by prove_wal_axioms_4
31597: Order:
31597:   lpo
31597: Leaf order:
31597:  b 2 0 2 1,2
31597:  a 2 0 2 2,2
31597:  meet 18 2 0 
31597:  join 20 2 2 0,2
% SZS status Timeout for LAT095-1.p
NO CLASH, using fixed ground order
31621: Facts:
31621:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31621: Goal:
31621:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
31621: Order:
31621:   nrkbo
31621: Leaf order:
31621:  a 1 0 1 1,1,1,2
31621:  c 1 0 1 1,2,1,2
31621:  b 4 0 4 2,1,1,2
31621:  join 20 2 2 0,1,1,2
31621:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
31622: Facts:
31622:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31622: Goal:
31622:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
31622: Order:
31622:   kbo
31622: Leaf order:
31622:  a 1 0 1 1,1,1,2
31622:  c 1 0 1 1,2,1,2
31622:  b 4 0 4 2,1,1,2
31622:  join 20 2 2 0,1,1,2
31622:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
31623: Facts:
31623:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31623: Goal:
31623:  Id :   1, {_}:
          meet (meet (join a b) (join c b)) b =>= b
          [] by prove_wal_axioms_5
31623: Order:
31623:   lpo
31623: Leaf order:
31623:  a 1 0 1 1,1,1,2
31623:  c 1 0 1 1,2,1,2
31623:  b 4 0 4 2,1,1,2
31623:  join 20 2 2 0,1,1,2
31623:  meet 20 2 2 0,2
% SZS status Timeout for LAT096-1.p
NO CLASH, using fixed ground order
31646: Facts:
31646:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31646: Goal:
31646:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
31646: Order:
31646:   nrkbo
31646: Leaf order:
31646:  a 1 0 1 1,1,1,2
31646:  c 1 0 1 1,2,1,2
31646:  b 4 0 4 2,1,1,2
31646:  meet 20 2 2 0,1,1,2
31646:  join 20 2 2 0,2
NO CLASH, using fixed ground order
31647: Facts:
31647:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31647: Goal:
31647:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
31647: Order:
31647:   kbo
31647: Leaf order:
31647:  a 1 0 1 1,1,1,2
31647:  c 1 0 1 1,2,1,2
31647:  b 4 0 4 2,1,1,2
31647:  meet 20 2 2 0,1,1,2
31647:  join 20 2 2 0,2
NO CLASH, using fixed ground order
31648: Facts:
31648:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))
                (meet
                  (join (meet ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))
                    (meet ?7
                      (join ?3 (meet (meet (join ?3 ?5) (join ?6 ?3)) ?3))))
                  (join ?2 (join (join (meet ?3 ?5) (meet ?6 ?3)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
31648: Goal:
31648:  Id :   1, {_}:
          join (join (meet a b) (meet c b)) b =>= b
          [] by prove_wal_axioms_6
31648: Order:
31648:   lpo
31648: Leaf order:
31648:  a 1 0 1 1,1,1,2
31648:  c 1 0 1 1,2,1,2
31648:  b 4 0 4 2,1,1,2
31648:  meet 20 2 2 0,1,1,2
31648:  join 20 2 2 0,2
% SZS status Timeout for LAT097-1.p
NO CLASH, using fixed ground order
31673: Facts:
31673:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31673:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31673:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31673:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31673:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31673:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31673:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31673:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31673:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31673: Goal:
31673:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
31673: Order:
31673:   nrkbo
31673: Leaf order:
31673:  c 2 0 2 1,2,2,2,2
31673:  b 3 0 3 1,2,2
31673:  d 3 0 3 2,2,2,2,2
31673:  a 4 0 4 1,2
31673:  join 16 2 3 0,2,2
31673:  meet 21 2 7 0,2
NO CLASH, using fixed ground order
31675: Facts:
31675:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31675:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31675:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31675:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31675:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31675:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31675:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31675:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31675:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31675: Goal:
31675:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
31675: Order:
31675:   lpo
31675: Leaf order:
31675:  c 2 0 2 1,2,2,2,2
31675:  b 3 0 3 1,2,2
31675:  d 3 0 3 2,2,2,2,2
31675:  a 4 0 4 1,2
31675:  join 16 2 3 0,2,2
31675:  meet 21 2 7 0,2
NO CLASH, using fixed ground order
31674: Facts:
31674:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31674:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31674:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31674:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31674:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31674:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31674:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31674:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31674:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31674: Goal:
31674:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (meet d (join a (meet b d)))))
          [] by prove_H28
31674: Order:
31674:   kbo
31674: Leaf order:
31674:  c 2 0 2 1,2,2,2,2
31674:  b 3 0 3 1,2,2
31674:  d 3 0 3 2,2,2,2,2
31674:  a 4 0 4 1,2
31674:  join 16 2 3 0,2,2
31674:  meet 21 2 7 0,2
% SZS status Timeout for LAT146-1.p
NO CLASH, using fixed ground order
31717: Facts:
31717:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31717:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31717:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31717:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31717:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31717:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31717:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31717:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31717:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31717: Goal:
31717:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
31717: Order:
31717:   nrkbo
31717: Leaf order:
31717:  c 2 0 2 2,2,2,2
31717:  b 4 0 4 1,2,2
31717:  a 6 0 6 1,2
31717:  join 17 2 4 0,2,2
31717:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
31718: Facts:
31718:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31718:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31718:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31718:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31718:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31718:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31718:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31718:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31718:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31718: Goal:
31718:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
31718: Order:
31718:   kbo
31718: Leaf order:
31718:  c 2 0 2 2,2,2,2
31718:  b 4 0 4 1,2,2
31718:  a 6 0 6 1,2
31718:  join 17 2 4 0,2,2
31718:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
31719: Facts:
31719:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31719:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31719:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31719:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31719:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31719:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31719:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31719:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31719:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
31719: Goal:
31719:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
31719: Order:
31719:   lpo
31719: Leaf order:
31719:  c 2 0 2 2,2,2,2
31719:  b 4 0 4 1,2,2
31719:  a 6 0 6 1,2
31719:  join 17 2 4 0,2,2
31719:  meet 20 2 6 0,2
% SZS status Timeout for LAT148-1.p
NO CLASH, using fixed ground order
31740: Facts:
31740:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31740:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31740:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31740:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31740:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31740:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31740:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31740:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31740:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
31740: Goal:
31740:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
31740: Order:
31740:   nrkbo
31740: Leaf order:
31740:  b 3 0 3 1,2,2
31740:  c 3 0 3 2,2,2,2
31740:  a 6 0 6 1,2
31740:  join 18 2 4 0,2,2
31740:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
31741: Facts:
31741:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31741:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31741:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31741:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31741:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31741:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31741:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31741:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31741:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
31741: Goal:
31741:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
31741: Order:
31741:   kbo
31741: Leaf order:
31741:  b 3 0 3 1,2,2
31741:  c 3 0 3 2,2,2,2
31741:  a 6 0 6 1,2
31741:  join 18 2 4 0,2,2
31741:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
31742: Facts:
31742:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31742:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31742:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31742:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31742:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31742:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31742:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31742:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31742:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
31742: Goal:
31742:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
31742: Order:
31742:   lpo
31742: Leaf order:
31742:  b 3 0 3 1,2,2
31742:  c 3 0 3 2,2,2,2
31742:  a 6 0 6 1,2
31742:  join 18 2 4 0,2,2
31742:  meet 20 2 6 0,2
% SZS status Timeout for LAT156-1.p
NO CLASH, using fixed ground order
31822: Facts:
31822:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31822:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31822:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31822:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31822:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31822:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31822:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31822:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31822:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
31822: Goal:
31822:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
31822: Order:
31822:   nrkbo
31822: Leaf order:
31822:  b 2 0 2 1,2,2
31822:  d 2 0 2 2,2,2,2,2
31822:  c 3 0 3 1,2,2,2
31822:  a 4 0 4 1,2
31822:  join 18 2 4 0,2,2
31822:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
31823: Facts:
31823:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31823:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31823:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31823:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31823:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31823:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31823:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31823:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31823:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
31823: Goal:
31823:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
31823: Order:
31823:   kbo
31823: Leaf order:
31823:  b 2 0 2 1,2,2
31823:  d 2 0 2 2,2,2,2,2
31823:  c 3 0 3 1,2,2,2
31823:  a 4 0 4 1,2
31823:  join 18 2 4 0,2,2
31823:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
31824: Facts:
31824:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
31824:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
31824:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
31824:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
31824:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
31824:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
31824:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
31824:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
31824:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?28 ?29) (meet ?28 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H52 ?26 ?27 ?28 ?29
31824: Goal:
31824:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c d)))
          [] by prove_H51
31824: Order:
31824:   lpo
31824: Leaf order:
31824:  b 2 0 2 1,2,2
31824:  d 2 0 2 2,2,2,2,2
31824:  c 3 0 3 1,2,2,2
31824:  a 4 0 4 1,2
31824:  join 18 2 4 0,2,2
31824:  meet 19 2 5 0,2
% SZS status Timeout for LAT160-1.p
NO CLASH, using fixed ground order
31846: Facts:
31846:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
31846:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
31846:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
31846:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
31846:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
31846:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =?= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
31846:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
31846:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
31846:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =?= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
31846:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
31846:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
31846:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
31846:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
31846:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =?= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
31846:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
31846:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
31846: Goal:
31846:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =<=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
31846: Order:
31846:   nrkbo
31846: Leaf order:
31846:  falsehood 1 0 0 
31846:  x 3 0 3 2,1,1,1,2
31846:  y 3 0 3 2,1,1,2
31846:  truth 8 0 4 1,1,1,1,2
31846:  not 12 1 0 
31846:  xor 7 2 4 0,1,2
31846:  and 9 2 0 
31846:  or 10 2 0 
31846:  and_star 11 2 4 0,2
31846:  implies 14 2 0 
NO CLASH, using fixed ground order
31847: Facts:
31847:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
31847:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
31847:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
31847:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
31847:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
31847:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
31847:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
31847:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
31847:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
31847:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
31847:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
31847:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
31847:  Id :  14, {_}:
          and_star ?40 ?41 =<= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
31847:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
31847:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
31847:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
31847: Goal:
31847:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =?=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
31847: Order:
31847:   kbo
31847: Leaf order:
31847:  falsehood 1 0 0 
31847:  x 3 0 3 2,1,1,1,2
31847:  y 3 0 3 2,1,1,2
31847:  truth 8 0 4 1,1,1,1,2
31847:  not 12 1 0 
31847:  xor 7 2 4 0,1,2
31847:  and 9 2 0 
31847:  or 10 2 0 
31847:  and_star 11 2 4 0,2
31847:  implies 14 2 0 
NO CLASH, using fixed ground order
31848: Facts:
31848:  Id :   2, {_}: implies truth ?2 =>= ?2 [2] by wajsberg_1 ?2
31848:  Id :   3, {_}:
          implies (implies ?4 ?5) (implies (implies ?5 ?6) (implies ?4 ?6))
          =>=
          truth
          [6, 5, 4] by wajsberg_2 ?4 ?5 ?6
31848:  Id :   4, {_}:
          implies (implies ?8 ?9) ?9 =?= implies (implies ?9 ?8) ?8
          [9, 8] by wajsberg_3 ?8 ?9
31848:  Id :   5, {_}:
          implies (implies (not ?11) (not ?12)) (implies ?12 ?11) =>= truth
          [12, 11] by wajsberg_4 ?11 ?12
31848:  Id :   6, {_}:
          or ?14 ?15 =<= implies (not ?14) ?15
          [15, 14] by or_definition ?14 ?15
31848:  Id :   7, {_}:
          or (or ?17 ?18) ?19 =>= or ?17 (or ?18 ?19)
          [19, 18, 17] by or_associativity ?17 ?18 ?19
31848:  Id :   8, {_}: or ?21 ?22 =?= or ?22 ?21 [22, 21] by or_commutativity ?21 ?22
31848:  Id :   9, {_}:
          and ?24 ?25 =<= not (or (not ?24) (not ?25))
          [25, 24] by and_definition ?24 ?25
31848:  Id :  10, {_}:
          and (and ?27 ?28) ?29 =>= and ?27 (and ?28 ?29)
          [29, 28, 27] by and_associativity ?27 ?28 ?29
31848:  Id :  11, {_}:
          and ?31 ?32 =?= and ?32 ?31
          [32, 31] by and_commutativity ?31 ?32
31848:  Id :  12, {_}:
          xor ?34 ?35 =<= or (and ?34 (not ?35)) (and (not ?34) ?35)
          [35, 34] by xor_definition ?34 ?35
31848:  Id :  13, {_}:
          xor ?37 ?38 =?= xor ?38 ?37
          [38, 37] by xor_commutativity ?37 ?38
31848:  Id :  14, {_}:
          and_star ?40 ?41 =>= not (or (not ?40) (not ?41))
          [41, 40] by and_star_definition ?40 ?41
31848:  Id :  15, {_}:
          and_star (and_star ?43 ?44) ?45 =>= and_star ?43 (and_star ?44 ?45)
          [45, 44, 43] by and_star_associativity ?43 ?44 ?45
31848:  Id :  16, {_}:
          and_star ?47 ?48 =?= and_star ?48 ?47
          [48, 47] by and_star_commutativity ?47 ?48
31848:  Id :  17, {_}: not truth =>= falsehood [] by false_definition
31848: Goal:
31848:  Id :   1, {_}:
          and_star (xor (and_star (xor truth x) y) truth) y
          =<=
          and_star (xor (and_star (xor truth y) x) truth) x
          [] by prove_alternative_wajsberg_axiom
31848: Order:
31848:   lpo
31848: Leaf order:
31848:  falsehood 1 0 0 
31848:  x 3 0 3 2,1,1,1,2
31848:  y 3 0 3 2,1,1,2
31848:  truth 8 0 4 1,1,1,1,2
31848:  not 12 1 0 
31848:  xor 7 2 4 0,1,2
31848:  and 9 2 0 
31848:  or 10 2 0 
31848:  and_star 11 2 4 0,2
31848:  implies 14 2 0 
% SZS status Timeout for LCL160-1.p
NO CLASH, using fixed ground order
31871: Facts:
31871:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
31871:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
31871:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =<= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
31871:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =<=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
31871:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =?= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
31871:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
31871:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =?= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
31871:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
31871: Goal:
31871:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_commutativity
31871: Order:
31871:   nrkbo
31871: Leaf order:
31871:  additive_identity 2 0 0 
31871:  a 2 0 2 1,2
31871:  b 2 0 2 2,2
31871:  additive_inverse 1 1 0 
31871:  add 12 2 0 
31871:  multiply 14 2 2 0,2
NO CLASH, using fixed ground order
31872: Facts:
31872:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
31872:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
31872:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =<= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
31872:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =<=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
31872:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =>= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
31872:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
31872:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =>= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
31872:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
31872: Goal:
31872:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_commutativity
31872: Order:
31872:   kbo
31872: Leaf order:
31872:  additive_identity 2 0 0 
31872:  a 2 0 2 1,2
31872:  b 2 0 2 2,2
31872:  additive_inverse 1 1 0 
31872:  add 12 2 0 
31872:  multiply 14 2 2 0,2
NO CLASH, using fixed ground order
31873: Facts:
31873:  Id :   2, {_}: add ?2 additive_identity =>= ?2 [2] by right_identity ?2
31873:  Id :   3, {_}:
          add ?4 (additive_inverse ?4) =>= additive_identity
          [4] by right_additive_inverse ?4
31873:  Id :   4, {_}:
          multiply ?6 (add ?7 ?8) =>= add (multiply ?6 ?7) (multiply ?6 ?8)
          [8, 7, 6] by distribute1 ?6 ?7 ?8
31873:  Id :   5, {_}:
          multiply (add ?10 ?11) ?12
          =>=
          add (multiply ?10 ?12) (multiply ?11 ?12)
          [12, 11, 10] by distribute2 ?10 ?11 ?12
31873:  Id :   6, {_}:
          add (add ?14 ?15) ?16 =>= add ?14 (add ?15 ?16)
          [16, 15, 14] by associative_addition ?14 ?15 ?16
31873:  Id :   7, {_}:
          add ?18 ?19 =?= add ?19 ?18
          [19, 18] by commutative_addition ?18 ?19
31873:  Id :   8, {_}:
          multiply (multiply ?21 ?22) ?23 =>= multiply ?21 (multiply ?22 ?23)
          [23, 22, 21] by associative_multiplication ?21 ?22 ?23
31873:  Id :   9, {_}: multiply ?25 (multiply ?25 ?25) =>= ?25 [25] by x_cubed_is_x ?25
31873: Goal:
31873:  Id :   1, {_}: multiply a b =<= multiply b a [] by prove_commutativity
31873: Order:
31873:   lpo
31873: Leaf order:
31873:  additive_identity 2 0 0 
31873:  a 2 0 2 1,2
31873:  b 2 0 2 2,2
31873:  additive_inverse 1 1 0 
31873:  add 12 2 0 
31873:  multiply 14 2 2 0,2
% SZS status Timeout for RNG009-5.p
NO CLASH, using fixed ground order
31898: Facts:
31898:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31898:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31898:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
31898:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
31898:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
31898:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
31898:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
31898:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
31898:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
31898:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
31898:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
31898: Goal:
31898:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
31898: Order:
31898:   nrkbo
31898: Leaf order:
31898:  b 2 0 1 1,2
31898:  a 2 0 1 2,2
31898:  c 2 0 1 3
31898:  additive_identity 4 0 0 
31898:  additive_inverse 2 1 0 
31898:  add 14 2 0 
31898:  multiply 14 2 1 0,2
NO CLASH, using fixed ground order
31899: Facts:
31899:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31899:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31899:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
31899:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
31899:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
31899:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
31899:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
31899:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
31899:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
31899:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
31899:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
31899: Goal:
31899:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
31899: Order:
31899:   kbo
31899: Leaf order:
31899:  b 2 0 1 1,2
31899:  a 2 0 1 2,2
31899:  c 2 0 1 3
31899:  additive_identity 4 0 0 
31899:  additive_inverse 2 1 0 
31899:  add 14 2 0 
31899:  multiply 14 2 1 0,2
NO CLASH, using fixed ground order
31900: Facts:
31900:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31900:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31900:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
31900:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
31900:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
31900:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
31900:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
31900:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
31900:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
31900:  Id :  11, {_}: multiply ?29 (multiply ?29 ?29) =>= ?29 [29] by x_cubed_is_x ?29
31900:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
31900: Goal:
31900:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
31900: Order:
31900:   lpo
31900: Leaf order:
31900:  b 2 0 1 1,2
31900:  a 2 0 1 2,2
31900:  c 2 0 1 3
31900:  additive_identity 4 0 0 
31900:  additive_inverse 2 1 0 
31900:  add 14 2 0 
31900:  multiply 14 2 1 0,2
% SZS status Timeout for RNG009-7.p
NO CLASH, using fixed ground order
31923: Facts:
31923:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31923:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31923:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31923:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31923:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31923:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31923:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31923:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31923:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31923:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31923:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31923:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31923:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31923:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31923:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31923: Goal:
31923:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31923: Order:
31923:   nrkbo
31923: Leaf order:
31923:  a 5 0 5 1,1,1,1,2
31923:  b 5 0 5 2,1,1,1,2
31923:  c 5 0 5 2,1,1,2
31923:  d 5 0 5 3,1,1,2
31923:  additive_identity 9 0 1 3
31923:  additive_inverse 7 1 1 0,2,2
31923:  commutator 1 2 0 
31923:  add 20 2 4 0,2
31923:  multiply 27 2 5 0,1,1,1,2
31923:  associator 6 3 5 0,1,1,2
NO CLASH, using fixed ground order
31924: Facts:
31924:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31924:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31924:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31924:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31924:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31924:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31924:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31924:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31924:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31924:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31924:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31924:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31924:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31924:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31924:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31924: Goal:
31924:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31924: Order:
31924:   kbo
31924: Leaf order:
31924:  a 5 0 5 1,1,1,1,2
31924:  b 5 0 5 2,1,1,1,2
31924:  c 5 0 5 2,1,1,2
31924:  d 5 0 5 3,1,1,2
31924:  additive_identity 9 0 1 3
31924:  additive_inverse 7 1 1 0,2,2
31924:  commutator 1 2 0 
31924:  add 20 2 4 0,2
31924:  multiply 27 2 5 0,1,1,1,2
31924:  associator 6 3 5 0,1,1,2
NO CLASH, using fixed ground order
31925: Facts:
31925:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31925:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31925:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31925:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31925:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31925:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31925:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31925:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31925:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31925:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31925:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31925:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31925:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31925:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31925:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31925: Goal:
31925:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31925: Order:
31925:   lpo
31925: Leaf order:
31925:  a 5 0 5 1,1,1,1,2
31925:  b 5 0 5 2,1,1,1,2
31925:  c 5 0 5 2,1,1,2
31925:  d 5 0 5 3,1,1,2
31925:  additive_identity 9 0 1 3
31925:  additive_inverse 7 1 1 0,2,2
31925:  commutator 1 2 0 
31925:  add 20 2 4 0,2
31925:  multiply 27 2 5 0,1,1,1,2
31925:  associator 6 3 5 0,1,1,2
% SZS status Timeout for RNG026-6.p
NO CLASH, using fixed ground order
31946: Facts:
31946:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31946:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31946:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31946:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31946:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31946:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31946:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31946:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31946:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31946:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31946:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31946:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31946:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31946:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31946:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31946:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
31946:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
31946:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
31946:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
31946:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
31946:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
31946:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
31946: Goal:
31946:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31946: Order:
31946:   nrkbo
31946: Leaf order:
31946:  a 5 0 5 1,1,1,1,2
31946:  b 5 0 5 2,1,1,1,2
31946:  c 5 0 5 2,1,1,2
31946:  d 5 0 5 3,1,1,2
31946:  additive_identity 9 0 1 3
31946:  additive_inverse 23 1 1 0,2,2
31946:  commutator 1 2 0 
31946:  add 28 2 4 0,2
31946:  multiply 45 2 5 0,1,1,1,2
31946:  associator 6 3 5 0,1,1,2
NO CLASH, using fixed ground order
31947: Facts:
31947:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31947:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31947:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31947:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31947:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31947:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31947:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31947:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31947:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31947:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31947:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31947:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31947:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31947:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31947:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31947:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
31947:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
31947:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
31947:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
31947:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
31947:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
31947:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
31947: Goal:
31947:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31947: Order:
31947:   kbo
31947: Leaf order:
31947:  a 5 0 5 1,1,1,1,2
31947:  b 5 0 5 2,1,1,1,2
31947:  c 5 0 5 2,1,1,2
31947:  d 5 0 5 3,1,1,2
31947:  additive_identity 9 0 1 3
31947:  additive_inverse 23 1 1 0,2,2
31947:  commutator 1 2 0 
31947:  add 28 2 4 0,2
31947:  multiply 45 2 5 0,1,1,1,2
31947:  associator 6 3 5 0,1,1,2
NO CLASH, using fixed ground order
31948: Facts:
31948:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
31948:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
31948:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
31948:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
31948:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
31948:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
31948:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
31948:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
31948:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
31948:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
31948:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
31948:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
31948:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
31948:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
31948:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
31948:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
31948:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
31948:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
31948:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
31948:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
31948:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
31948:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
31948: Goal:
31948:  Id :   1, {_}:
          add
            (add (associator (multiply a b) c d)
              (associator a b (multiply c d)))
            (additive_inverse
              (add
                (add (associator a (multiply b c) d)
                  (multiply a (associator b c d)))
                (multiply (associator a b c) d)))
          =>=
          additive_identity
          [] by prove_teichmuller_identity
31948: Order:
31948:   lpo
31948: Leaf order:
31948:  a 5 0 5 1,1,1,1,2
31948:  b 5 0 5 2,1,1,1,2
31948:  c 5 0 5 2,1,1,2
31948:  d 5 0 5 3,1,1,2
31948:  additive_identity 9 0 1 3
31948:  additive_inverse 23 1 1 0,2,2
31948:  commutator 1 2 0 
31948:  add 28 2 4 0,2
31948:  multiply 45 2 5 0,1,1,1,2
31948:  associator 6 3 5 0,1,1,2
% SZS status Timeout for RNG026-7.p
NO CLASH, using fixed ground order
31979: Facts:
31979:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
31979: Goal:
31979:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
31979: Order:
31979:   nrkbo
31979: Leaf order:
31979:  c 2 0 2 2,2,2,2
31979:  a 3 0 3 1,2
31979:  b 3 0 3 1,2,2
31979:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
31980: Facts:
31980:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
31980: Goal:
31980:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
31980: Order:
31980:   kbo
31980: Leaf order:
31980:  c 2 0 2 2,2,2,2
31980:  a 3 0 3 1,2
31980:  b 3 0 3 1,2,2
31980:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
31981: Facts:
31981:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by sh_1 ?2 ?3 ?4
31981: Goal:
31981:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
31981: Order:
31981:   lpo
31981: Leaf order:
31981:  c 2 0 2 2,2,2,2
31981:  a 3 0 3 1,2
31981:  b 3 0 3 1,2,2
31981:  nand 12 2 6 0,2
% SZS status Timeout for BOO076-1.p
CLASH, statistics insufficient
32007: Facts:
32007:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32007:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
32007: Goal:
32007:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
32007: Order:
32007:   nrkbo
32007: Leaf order:
32007:  b 1 0 0 
32007:  w 1 0 0 
32007:  f 3 1 3 0,2,2
32007:  apply 12 2 3 0,2
CLASH, statistics insufficient
32008: Facts:
32008:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32008:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
32008: Goal:
32008:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
32008: Order:
32008:   kbo
32008: Leaf order:
32008:  b 1 0 0 
32008:  w 1 0 0 
32008:  f 3 1 3 0,2,2
32008:  apply 12 2 3 0,2
CLASH, statistics insufficient
32009: Facts:
32009:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32009:  Id :   3, {_}:
          apply (apply w ?7) ?8 =?= apply (apply ?7 ?8) ?8
          [8, 7] by w_definition ?7 ?8
32009: Goal:
32009:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_strong_fixed_point ?1
32009: Order:
32009:   lpo
32009: Leaf order:
32009:  b 1 0 0 
32009:  w 1 0 0 
32009:  f 3 1 3 0,2,2
32009:  apply 12 2 3 0,2
% SZS status Timeout for COL003-1.p
CLASH, statistics insufficient
32036: Facts:
32036:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
CLASH, statistics insufficient
32037: Facts:
32037:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32037:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
32037: Goal:
32037:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32037: Order:
32037:   kbo
32037: Leaf order:
32037:  b 1 0 0 
32037:  w1 1 0 0 
32037:  f 3 1 3 0,2,2
32037:  apply 12 2 3 0,2
32036:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
32036: Goal:
32036:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32036: Order:
32036:   nrkbo
32036: Leaf order:
32036:  b 1 0 0 
32036:  w1 1 0 0 
32036:  f 3 1 3 0,2,2
32036:  apply 12 2 3 0,2
CLASH, statistics insufficient
32038: Facts:
32038:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32038:  Id :   3, {_}:
          apply (apply w1 ?7) ?8 =?= apply (apply ?8 ?7) ?7
          [8, 7] by w1_definition ?7 ?8
32038: Goal:
32038:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32038: Order:
32038:   lpo
32038: Leaf order:
32038:  b 1 0 0 
32038:  w1 1 0 0 
32038:  f 3 1 3 0,2,2
32038:  apply 12 2 3 0,2
% SZS status Timeout for COL042-1.p
NO CLASH, using fixed ground order
32071: Facts:
32071:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32071:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
32071:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
32071: Goal:
32071:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32071: Order:
32071:   nrkbo
32071: Leaf order:
32071:  strong_fixed_point 3 0 2 1,2
32071:  fixed_pt 3 0 3 2,2
32071:  h 6 0 0 
32071:  b 12 0 0 
32071:  apply 29 2 3 0,2
NO CLASH, using fixed ground order
32072: Facts:
32072:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32072:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
32072:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
32072: Goal:
32072:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32072: Order:
32072:   kbo
32072: Leaf order:
32072:  strong_fixed_point 3 0 2 1,2
32072:  fixed_pt 3 0 3 2,2
32072:  h 6 0 0 
32072:  b 12 0 0 
32072:  apply 29 2 3 0,2
NO CLASH, using fixed ground order
32073: Facts:
32073:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32073:  Id :   3, {_}:
          apply (apply (apply h ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?7) ?8) ?7
          [8, 7, 6] by h_definition ?6 ?7 ?8
32073:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply h
                      (apply (apply b (apply (apply b h) (apply b b)))
                        (apply h (apply (apply b h) (apply b b))))) h)) b)) b
          [] by strong_fixed_point
32073: Goal:
32073:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32073: Order:
32073:   lpo
32073: Leaf order:
32073:  strong_fixed_point 3 0 2 1,2
32073:  fixed_pt 3 0 3 2,2
32073:  h 6 0 0 
32073:  b 12 0 0 
32073:  apply 29 2 3 0,2
% SZS status Timeout for COL043-3.p
NO CLASH, using fixed ground order
32095: Facts:
NO CLASH, using fixed ground order
32096: Facts:
32096:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32096:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32096:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
32096: Goal:
32096:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32096: Order:
32096:   kbo
32096: Leaf order:
32096:  strong_fixed_point 3 0 2 1,2
32096:  fixed_pt 3 0 3 2,2
32096:  n 6 0 0 
32096:  b 10 0 0 
32096:  apply 27 2 3 0,2
NO CLASH, using fixed ground order
32097: Facts:
32097:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32097:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32097:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
32097: Goal:
32097:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32097: Order:
32097:   lpo
32097: Leaf order:
32097:  strong_fixed_point 3 0 2 1,2
32097:  fixed_pt 3 0 3 2,2
32097:  n 6 0 0 
32097:  b 10 0 0 
32097:  apply 27 2 3 0,2
32095:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32095:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32095:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply (apply b b) n))))) n)) b)) b
          [] by strong_fixed_point
32095: Goal:
32095:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32095: Order:
32095:   nrkbo
32095: Leaf order:
32095:  strong_fixed_point 3 0 2 1,2
32095:  fixed_pt 3 0 3 2,2
32095:  n 6 0 0 
32095:  b 10 0 0 
32095:  apply 27 2 3 0,2
% SZS status Timeout for COL044-8.p
NO CLASH, using fixed ground order
32149: Facts:
32149:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32149:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32149:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
32149: Goal:
32149:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32149: Order:
32149:   nrkbo
32149: Leaf order:
32149:  strong_fixed_point 3 0 2 1,2
32149:  fixed_pt 3 0 3 2,2
32149:  n 6 0 0 
32149:  b 10 0 0 
32149:  apply 27 2 3 0,2
NO CLASH, using fixed ground order
32150: Facts:
32150:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32150:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32150:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
32150: Goal:
32150:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32150: Order:
32150:   kbo
32150: Leaf order:
32150:  strong_fixed_point 3 0 2 1,2
32150:  fixed_pt 3 0 3 2,2
32150:  n 6 0 0 
32150:  b 10 0 0 
32150:  apply 27 2 3 0,2
NO CLASH, using fixed ground order
32151: Facts:
32151:  Id :   2, {_}:
          apply (apply (apply b ?2) ?3) ?4 =>= apply ?2 (apply ?3 ?4)
          [4, 3, 2] by b_definition ?2 ?3 ?4
32151:  Id :   3, {_}:
          apply (apply (apply n ?6) ?7) ?8
          =?=
          apply (apply (apply ?6 ?8) ?7) ?8
          [8, 7, 6] by n_definition ?6 ?7 ?8
32151:  Id :   4, {_}:
          strong_fixed_point
          =<=
          apply
            (apply b
              (apply
                (apply b
                  (apply
                    (apply n
                      (apply n
                        (apply (apply b (apply b b))
                          (apply n (apply n (apply b b)))))) n)) b)) b
          [] by strong_fixed_point
32151: Goal:
32151:  Id :   1, {_}:
          apply strong_fixed_point fixed_pt
          =<=
          apply fixed_pt (apply strong_fixed_point fixed_pt)
          [] by prove_strong_fixed_point
32151: Order:
32151:   lpo
32151: Leaf order:
32151:  strong_fixed_point 3 0 2 1,2
32151:  fixed_pt 3 0 3 2,2
32151:  n 6 0 0 
32151:  b 10 0 0 
32151:  apply 27 2 3 0,2
% SZS status Timeout for COL044-9.p
NO CLASH, using fixed ground order
32174: Facts:
32174:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
32174: Goal:
32174:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
32174: Order:
32174:   nrkbo
32174: Leaf order:
32174:  b2 2 0 2 1,1,1,2
32174:  a2 2 0 2 2,2
32174:  inverse 8 1 1 0,1,1,2
32174:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
32175: Facts:
32175:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
32175: Goal:
32175:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
32175: Order:
32175:   kbo
32175: Leaf order:
32175:  b2 2 0 2 1,1,1,2
32175:  a2 2 0 2 2,2
32175:  inverse 8 1 1 0,1,1,2
32175:  multiply 12 2 2 0,2
NO CLASH, using fixed ground order
32176: Facts:
32176:  Id :   2, {_}:
          multiply
            (inverse
              (multiply
                (inverse
                  (multiply (inverse (multiply ?2 ?3)) (multiply ?3 ?2)))
                (multiply (inverse (multiply ?4 ?5))
                  (multiply ?4
                    (inverse
                      (multiply (multiply ?6 (inverse ?7)) (inverse ?5)))))))
            ?7
          =>=
          ?6
          [7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7
32176: Goal:
32176:  Id :   1, {_}:
          multiply (multiply (inverse b2) b2) a2 =>= a2
          [] by prove_these_axioms_2
32176: Order:
32176:   lpo
32176: Leaf order:
32176:  b2 2 0 2 1,1,1,2
32176:  a2 2 0 2 2,2
32176:  inverse 8 1 1 0,1,1,2
32176:  multiply 12 2 2 0,2
% SZS status Timeout for GRP506-1.p
NO CLASH, using fixed ground order
32197: Facts:
32197:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32197:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
NO CLASH, using fixed ground order
32198: Facts:
32198:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32198:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32198:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32198:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32198:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32198:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32198:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32198:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32198:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
32198:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
32198:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
32198:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
32198:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
32197:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32197:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32197:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32197:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32197:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32197:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32197:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
NO CLASH, using fixed ground order
32197:  Id :  11, {_}:
          complement (meet ?29 ?30) =<= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
32197:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
32197:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
32197:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
32197:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
32197: Goal:
32197:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
32197: Order:
32197:   nrkbo
32197: Leaf order:
32197:  n0 1 0 0 
32197:  n1 2 0 0 
32197:  b 3 0 3 1,2,2
32197:  a 7 0 7 1,2
32197:  complement 14 1 2 0,1,2,2,2,2
32197:  join 18 2 3 0,2,2
32197:  meet 19 2 5 0,2
32199: Facts:
32199:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32199:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32199:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32199:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32199:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32199:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32199:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32199:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32199:  Id :  10, {_}:
          complement (join ?26 ?27) =<= meet (complement ?26) (complement ?27)
          [27, 26] by compatibility1 ?26 ?27
32199:  Id :  11, {_}:
          complement (meet ?29 ?30) =>= join (complement ?29) (complement ?30)
          [30, 29] by compatibility2 ?29 ?30
32199:  Id :  12, {_}: join (complement ?32) ?32 =>= n1 [32] by invertability1 ?32
32199:  Id :  13, {_}: meet (complement ?34) ?34 =>= n0 [34] by invertability2 ?34
32199:  Id :  14, {_}: complement (complement ?36) =>= ?36 [36] by invertability3 ?36
32199:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
32199: Goal:
32199:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
32199: Order:
32199:   lpo
32199: Leaf order:
32199:  n0 1 0 0 
32199:  n1 2 0 0 
32199:  b 3 0 3 1,2,2
32199:  a 7 0 7 1,2
32199:  complement 14 1 2 0,1,2,2,2,2
32199:  join 18 2 3 0,2,2
32199:  meet 19 2 5 0,2
32198:  Id :  15, {_}:
          join (meet (complement ?38) (join ?38 ?39))
            (join (complement ?39) (meet ?38 ?39))
          =>=
          n1
          [39, 38] by megill ?38 ?39
32198: Goal:
32198:  Id :   1, {_}:
          meet a (join b (meet a (join (complement a) (meet a b))))
          =>=
          meet a (join (complement a) (meet a b))
          [] by prove_this
32198: Order:
32198:   kbo
32198: Leaf order:
32198:  n0 1 0 0 
32198:  n1 2 0 0 
32198:  b 3 0 3 1,2,2
32198:  a 7 0 7 1,2
32198:  complement 14 1 2 0,1,2,2,2,2
32198:  join 18 2 3 0,2,2
32198:  meet 19 2 5 0,2
% SZS status Timeout for LAT053-1.p
NO CLASH, using fixed ground order
32222: Facts:
32222:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32222: Goal:
32222:  Id :   1, {_}: meet a b =<= meet b a [] by prove_normal_axioms_2
32222: Order:
32222:   nrkbo
32222: Leaf order:
32222:  a 2 0 2 1,2
32222:  b 2 0 2 2,2
32222:  join 20 2 0 
32222:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
32223: Facts:
32223:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32223: Goal:
32223:  Id :   1, {_}: meet a b =<= meet b a [] by prove_normal_axioms_2
32223: Order:
32223:   kbo
32223: Leaf order:
32223:  a 2 0 2 1,2
32223:  b 2 0 2 2,2
32223:  join 20 2 0 
32223:  meet 20 2 2 0,2
NO CLASH, using fixed ground order
32224: Facts:
32224:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32224: Goal:
32224:  Id :   1, {_}: meet a b =<= meet b a [] by prove_normal_axioms_2
32224: Order:
32224:   lpo
32224: Leaf order:
32224:  a 2 0 2 1,2
32224:  b 2 0 2 2,2
32224:  join 20 2 0 
32224:  meet 20 2 2 0,2
% SZS status Timeout for LAT081-1.p
NO CLASH, using fixed ground order
32257: Facts:
32257:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32257: Goal:
32257:  Id :   1, {_}: join a b =<= join b a [] by prove_normal_axioms_5
32257: Order:
32257:   nrkbo
32257: Leaf order:
32257:  a 2 0 2 1,2
32257:  b 2 0 2 2,2
32257:  meet 18 2 0 
32257:  join 22 2 2 0,2
NO CLASH, using fixed ground order
32258: Facts:
32258:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32258: Goal:
32258:  Id :   1, {_}: join a b =<= join b a [] by prove_normal_axioms_5
32258: Order:
32258:   kbo
32258: Leaf order:
32258:  a 2 0 2 1,2
32258:  b 2 0 2 2,2
32258:  meet 18 2 0 
32258:  join 22 2 2 0,2
NO CLASH, using fixed ground order
32259: Facts:
32259:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32259: Goal:
32259:  Id :   1, {_}: join a b =<= join b a [] by prove_normal_axioms_5
32259: Order:
32259:   lpo
32259: Leaf order:
32259:  a 2 0 2 1,2
32259:  b 2 0 2 2,2
32259:  meet 18 2 0 
32259:  join 22 2 2 0,2
% SZS status Timeout for LAT084-1.p
NO CLASH, using fixed ground order
32283: Facts:
32283:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32283: Goal:
32283:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
32283: Order:
32283:   nrkbo
32283: Leaf order:
32283:  b 1 0 1 2,2,2
32283:  a 3 0 3 1,2
32283:  meet 19 2 1 0,2
32283:  join 21 2 1 0,2,2
NO CLASH, using fixed ground order
32284: Facts:
32284:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32284: Goal:
32284:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
32284: Order:
32284:   kbo
32284: Leaf order:
32284:  b 1 0 1 2,2,2
32284:  a 3 0 3 1,2
32284:  meet 19 2 1 0,2
32284:  join 21 2 1 0,2,2
NO CLASH, using fixed ground order
32285: Facts:
32285:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32285: Goal:
32285:  Id :   1, {_}: meet a (join a b) =>= a [] by prove_normal_axioms_7
32285: Order:
32285:   lpo
32285: Leaf order:
32285:  b 1 0 1 2,2,2
32285:  a 3 0 3 1,2
32285:  meet 19 2 1 0,2
32285:  join 21 2 1 0,2,2
% SZS status Timeout for LAT086-1.p
NO CLASH, using fixed ground order
32311: Facts:
32311:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32311: Goal:
32311:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
32311: Order:
32311:   nrkbo
32311: Leaf order:
32311:  b 1 0 1 2,2,2
32311:  a 3 0 3 1,2
32311:  meet 19 2 1 0,2,2
32311:  join 21 2 1 0,2
NO CLASH, using fixed ground order
32312: Facts:
32312:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32312: Goal:
32312:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
32312: Order:
32312:   kbo
32312: Leaf order:
32312:  b 1 0 1 2,2,2
32312:  a 3 0 3 1,2
32312:  meet 19 2 1 0,2,2
32312:  join 21 2 1 0,2
NO CLASH, using fixed ground order
32313: Facts:
32313:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
32313: Goal:
32313:  Id :   1, {_}: join a (meet a b) =>= a [] by prove_normal_axioms_8
32313: Order:
32313:   lpo
32313: Leaf order:
32313:  b 1 0 1 2,2,2
32313:  a 3 0 3 1,2
32313:  meet 19 2 1 0,2,2
32313:  join 21 2 1 0,2
% SZS status Timeout for LAT087-1.p
NO CLASH, using fixed ground order
32355: Facts:
32355:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32355:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32355:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32355:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32355:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32355:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32355:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32355:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32355:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
32355: Goal:
32355:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32355: Order:
32355:   nrkbo
32355: Leaf order:
32355:  a 4 0 4 1,2
32355:  b 4 0 4 1,2,2
32355:  c 4 0 4 2,2,2,2
32355:  join 17 2 4 0,2,2
32355:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
32356: Facts:
32356:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32356:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32356:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32356:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32356:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32356:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32356:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32356:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32356:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
32356: Goal:
32356:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32356: Order:
32356:   kbo
32356: Leaf order:
32356:  a 4 0 4 1,2
32356:  b 4 0 4 1,2,2
32356:  c 4 0 4 2,2,2,2
32356:  join 17 2 4 0,2,2
32356:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
32357: Facts:
32357:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32357:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32357:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32357:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32357:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32357:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32357:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32357:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32357:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H3 ?26 ?27 ?28
32357: Goal:
32357:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32357: Order:
32357:   lpo
32357: Leaf order:
32357:  a 4 0 4 1,2
32357:  b 4 0 4 1,2,2
32357:  c 4 0 4 2,2,2,2
32357:  join 17 2 4 0,2,2
32357:  meet 21 2 6 0,2
% SZS status Timeout for LAT099-1.p
NO CLASH, using fixed ground order
32378: Facts:
32378:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32378:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32378:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32378:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32378:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32378:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32378:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32378:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32378:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
32378: Goal:
32378:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
32378: Order:
32378:   nrkbo
32378: Leaf order:
32378:  d 2 0 2 2,2,2,2,2
32378:  b 3 0 3 1,2,2
32378:  c 3 0 3 1,2,2,2
32378:  a 4 0 4 1,2
32378:  meet 19 2 5 0,2
32378:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
32379: Facts:
32379:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32379:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32379:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32379:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32379:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32379:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32379:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32379:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32379:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
32379: Goal:
32379:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
32379: Order:
32379:   kbo
32379: Leaf order:
32379:  d 2 0 2 2,2,2,2,2
32379:  b 3 0 3 1,2,2
32379:  c 3 0 3 1,2,2,2
32379:  a 4 0 4 1,2
32379:  meet 19 2 5 0,2
32379:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
32380: Facts:
32380:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32380:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32380:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32380:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32380:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32380:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32380:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32380:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32380:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
32380: Goal:
32380:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
32380: Order:
32380:   lpo
32380: Leaf order:
32380:  d 2 0 2 2,2,2,2,2
32380:  b 3 0 3 1,2,2
32380:  c 3 0 3 1,2,2,2
32380:  a 4 0 4 1,2
32380:  meet 19 2 5 0,2
32380:  join 19 2 5 0,2,2
% SZS status Timeout for LAT110-1.p
NO CLASH, using fixed ground order
32414: Facts:
32414:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32414:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32414:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32414:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32414:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32414:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32414:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32414:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32414:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
32414: Goal:
32414:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
32414: Order:
32414:   nrkbo
32414: Leaf order:
32414:  b 3 0 3 1,2,2
32414:  c 3 0 3 2,2,2
32414:  a 5 0 5 1,2
32414:  join 17 2 4 0,2,2
32414:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
32415: Facts:
32415:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32415:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32415:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32415:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32415:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32415:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32415:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32415:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32415:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
32415: Goal:
32415:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
32415: Order:
32415:   kbo
32415: Leaf order:
32415:  b 3 0 3 1,2,2
32415:  c 3 0 3 2,2,2
32415:  a 5 0 5 1,2
32415:  join 17 2 4 0,2,2
32415:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
32416: Facts:
32416:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32416:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32416:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32416:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32416:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32416:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32416:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32416:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32416:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join (meet ?26 (join ?27 (meet ?26 ?28))) (meet ?28 ?29))
          [29, 28, 27, 26] by equation_H79 ?26 ?27 ?28 ?29
32416: Goal:
32416:  Id :   1, {_}:
          meet a (join b c)
          =<=
          join (meet a (join c (meet a b))) (meet a (join b (meet a c)))
          [] by prove_H69
32416: Order:
32416:   lpo
32416: Leaf order:
32416:  b 3 0 3 1,2,2
32416:  c 3 0 3 2,2,2
32416:  a 5 0 5 1,2
32416:  join 17 2 4 0,2,2
32416:  meet 20 2 5 0,2
% SZS status Timeout for LAT118-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
32445: Facts:
32445:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32445:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32445:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32445:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32445:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32445:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32445:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32445:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32445:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
32445: Goal:
32445:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32445: Order:
32445:   kbo
32445: Leaf order:
32445:  b 3 0 3 1,2,2
32445:  c 3 0 3 2,2,2,2
32445:  a 6 0 6 1,2
32445:  join 17 2 4 0,2,2
32445:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
32446: Facts:
32446:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32446:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32446:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32446:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32446:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32446:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32446:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32446:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32446:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
32446: Goal:
32446:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32446: Order:
32446:   lpo
32446: Leaf order:
32446:  b 3 0 3 1,2,2
32446:  c 3 0 3 2,2,2,2
32446:  a 6 0 6 1,2
32446:  join 17 2 4 0,2,2
32446:  meet 21 2 6 0,2
32444: Facts:
32444:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32444:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32444:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32444:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32444:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32444:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32444:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32444:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32444:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?28 (meet ?26 ?27)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H22 ?26 ?27 ?28
32444: Goal:
32444:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32444: Order:
32444:   nrkbo
32444: Leaf order:
32444:  b 3 0 3 1,2,2
32444:  c 3 0 3 2,2,2,2
32444:  a 6 0 6 1,2
32444:  join 17 2 4 0,2,2
32444:  meet 21 2 6 0,2
% SZS status Timeout for LAT142-1.p
NO CLASH, using fixed ground order
32541: Facts:
32541:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32541:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32541:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32541:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32541:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32541:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32541:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32541:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32541:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
32541: Goal:
32541:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =<=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
32541: Order:
32541:   nrkbo
32541: Leaf order:
32541:  d 2 0 2 2,2,2,2,2
32541:  b 3 0 3 1,2,2
32541:  c 3 0 3 1,2,2,2
32541:  a 4 0 4 1,2
32541:  join 16 2 3 0,2,2,2
32541:  meet 21 2 7 0,2
NO CLASH, using fixed ground order
32542: Facts:
32542:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32542:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32542:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32542:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32542:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32542:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32542:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32542:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32542:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
32542: Goal:
32542:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =<=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
32542: Order:
32542:   kbo
32542: Leaf order:
32542:  d 2 0 2 2,2,2,2,2
32542:  b 3 0 3 1,2,2
32542:  c 3 0 3 1,2,2,2
32542:  a 4 0 4 1,2
32542:  join 16 2 3 0,2,2,2
32542:  meet 21 2 7 0,2
NO CLASH, using fixed ground order
32543: Facts:
32543:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32543:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32543:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32543:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32543:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32543:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32543:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32543:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32543:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 ?29))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (meet ?29 (join ?27 ?28)))))
          [29, 28, 27, 26] by equation_H34 ?26 ?27 ?28 ?29
32543: Goal:
32543:  Id :   1, {_}:
          meet a (meet b (join c (meet a d)))
          =>=
          meet a (meet b (join c (meet d (join a (meet b c)))))
          [] by prove_H45
32543: Order:
32543:   lpo
32543: Leaf order:
32543:  d 2 0 2 2,2,2,2,2
32543:  b 3 0 3 1,2,2
32543:  c 3 0 3 1,2,2,2
32543:  a 4 0 4 1,2
32543:  join 16 2 3 0,2,2,2
32543:  meet 21 2 7 0,2
% SZS status Timeout for LAT147-1.p
NO CLASH, using fixed ground order
32564: Facts:
32564:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32564:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32564:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32564:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32564:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32564:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32564:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32564:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32564:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
32564: Goal:
32564:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32564: Order:
32564:   nrkbo
32564: Leaf order:
32564:  b 3 0 3 1,2,2
32564:  c 3 0 3 2,2,2,2
32564:  a 6 0 6 1,2
32564:  join 18 2 4 0,2,2
32564:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
32565: Facts:
32565:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32565:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32565:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32565:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32565:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32565:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32565:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32565:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32565:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
32565: Goal:
32565:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32565: Order:
32565:   kbo
32565: Leaf order:
32565:  b 3 0 3 1,2,2
32565:  c 3 0 3 2,2,2,2
32565:  a 6 0 6 1,2
32565:  join 18 2 4 0,2,2
32565:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
32566: Facts:
32566:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32566:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32566:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32566:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32566:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32566:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32566:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32566:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32566:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?27 (join ?29 (meet ?26 ?28)))))
          [29, 28, 27, 26] by equation_H42 ?26 ?27 ?28 ?29
32566: Goal:
32566:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
32566: Order:
32566:   lpo
32566: Leaf order:
32566:  b 3 0 3 1,2,2
32566:  c 3 0 3 2,2,2,2
32566:  a 6 0 6 1,2
32566:  join 18 2 4 0,2,2
32566:  meet 20 2 6 0,2
% SZS status Timeout for LAT154-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
32589: Facts:
32589:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32589:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32589:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32589:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32589:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32589:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32589:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32589:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32589:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
32589: Goal:
32589:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32589: Order:
32589:   kbo
32589: Leaf order:
32589:  a 4 0 4 1,2
32589:  b 4 0 4 1,2,2
32589:  c 4 0 4 2,2,2,2
32589:  join 18 2 4 0,2,2
32589:  meet 20 2 6 0,2
32588: Facts:
32588:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32588:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32588:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32588:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32588:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32588:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32588:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32588:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32588:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
32588: Goal:
32588:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32588: Order:
32588:   nrkbo
32588: Leaf order:
32588:  a 4 0 4 1,2
32588:  b 4 0 4 1,2,2
32588:  c 4 0 4 2,2,2,2
32588:  join 18 2 4 0,2,2
32588:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
32590: Facts:
32590:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32590:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32590:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32590:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32590:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32590:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32590:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32590:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32590:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join (meet ?26 ?28) (meet ?28 (join ?27 ?29))))
          [29, 28, 27, 26] by equation_H49 ?26 ?27 ?28 ?29
32590: Goal:
32590:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
32590: Order:
32590:   lpo
32590: Leaf order:
32590:  a 4 0 4 1,2
32590:  b 4 0 4 1,2,2
32590:  c 4 0 4 2,2,2,2
32590:  join 18 2 4 0,2,2
32590:  meet 20 2 6 0,2
% SZS status Timeout for LAT155-1.p
NO CLASH, using fixed ground order
32615: Facts:
32615:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32615:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32615:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32615:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32615:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32615:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32615:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32615:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32615:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
32615: Goal:
32615:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
32615: Order:
32615:   nrkbo
32615: Leaf order:
32615:  c 2 0 2 2,2,2
32615:  a 4 0 4 1,2
32615:  b 4 0 4 1,2,2
32615:  meet 18 2 4 0,2
32615:  join 18 2 4 0,2,2
NO CLASH, using fixed ground order
32616: Facts:
32616:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32616:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32616:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32616:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32616:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32616:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32616:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32616:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32616:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
32616: Goal:
32616:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
32616: Order:
32616:   kbo
32616: Leaf order:
32616:  c 2 0 2 2,2,2
32616:  a 4 0 4 1,2
32616:  b 4 0 4 1,2,2
32616:  meet 18 2 4 0,2
32616:  join 18 2 4 0,2,2
NO CLASH, using fixed ground order
32617: Facts:
32617:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
32617:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
32617:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
32617:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
32617:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
32617:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
32617:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
32617:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
32617:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet ?27 (meet (join ?26 ?28) (join ?28 (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H49_dual ?26 ?27 ?28 ?29
32617: Goal:
32617:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
32617: Order:
32617:   lpo
32617: Leaf order:
32617:  c 2 0 2 2,2,2
32617:  a 4 0 4 1,2
32617:  b 4 0 4 1,2,2
32617:  meet 18 2 4 0,2
32617:  join 18 2 4 0,2,2
% SZS status Timeout for LAT170-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
32640: Facts:
32640:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
32640:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
32640:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
32640:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
32640:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
32640:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
32640:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
32640:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
32640:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
32640:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
32640:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
32640:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
32640:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
NO CLASH, using fixed ground order
32641: Facts:
32641:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
32641:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
32641:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
32641:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
32641:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
32641:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
32641:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
32641:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
32641:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
32641:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
32641:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
32641:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
32641:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
32641:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
32641: Goal:
32641:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32641: Order:
32641:   lpo
32641: Leaf order:
32641:  y 4 0 4 3,1,1,1,2
32641:  additive_identity 9 0 1 3
32641:  x 9 0 9 1,1,1,1,2
32641:  additive_inverse 6 1 0 
32641:  commutator 1 2 0 
32641:  add 16 2 0 
32641:  multiply 22 2 4 0,2
32641:  associator 5 3 4 0,1,1,1,2
32639: Facts:
32639:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
32639:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
32639:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
32639:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
32639:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
32639:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
32639:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
32639:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
32639:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
32639:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
32639:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
32639:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
32639:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
32639:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
32639: Goal:
32639:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32639: Order:
32639:   nrkbo
32639: Leaf order:
32639:  y 4 0 4 3,1,1,1,2
32639:  additive_identity 9 0 1 3
32639:  x 9 0 9 1,1,1,1,2
32639:  additive_inverse 6 1 0 
32639:  commutator 1 2 0 
32639:  add 16 2 0 
32639:  multiply 22 2 4 0,2
32639:  associator 5 3 4 0,1,1,1,2
32640:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
32640: Goal:
32640:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32640: Order:
32640:   kbo
32640: Leaf order:
32640:  y 4 0 4 3,1,1,1,2
32640:  additive_identity 9 0 1 3
32640:  x 9 0 9 1,1,1,1,2
32640:  additive_inverse 6 1 0 
32640:  commutator 1 2 0 
32640:  add 16 2 0 
32640:  multiply 22 2 4 0,2
32640:  associator 5 3 4 0,1,1,1,2
% SZS status Timeout for RNG031-6.p
NO CLASH, using fixed ground order
32666: Facts:
32666:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
32666:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
32666:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
32666:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
32666:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
32666:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
32666:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
32666:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
32666:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
32666:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
32666:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
32666:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
32666:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
32666:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
32666:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
32666:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
32666:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
32666:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
32666:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
32666:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
32666:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
32666: Goal:
32666:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32666: Order:
32666:   nrkbo
32666: Leaf order:
32666:  y 4 0 4 3,1,1,1,2
32666:  additive_identity 9 0 1 3
32666:  x 9 0 9 1,1,1,1,2
32666:  additive_inverse 22 1 0 
32666:  commutator 1 2 0 
32666:  add 24 2 0 
32666:  multiply 40 2 4 0,2add
32666:  associator 5 3 4 0,1,1,1,2
NO CLASH, using fixed ground order
32667: Facts:
32667:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
32667:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
32667:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
32667:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
32667:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
32667:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
32667:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
32667:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
32667:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
32667:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
32667:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
32667:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
32667:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
32667:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
32667:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
32667:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
32667:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
32667:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
32667:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
32667:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
32667:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
32667: Goal:
32667:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32667: Order:
32667:   kbo
32667: Leaf order:
32667:  y 4 0 4 3,1,1,1,2
32667:  additive_identity 9 0 1 3
32667:  x 9 0 9 1,1,1,1,2
32667:  additive_inverse 22 1 0 
32667:  commutator 1 2 0 
32667:  add 24 2 0 
32667:  multiply 40 2 4 0,2add
32667:  associator 5 3 4 0,1,1,1,2
NO CLASH, using fixed ground order
32668: Facts:
32668:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
32668:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
32668:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
32668:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
32668:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
32668:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
32668:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
32668:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
32668:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
32668:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
32668:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
32668:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
32668:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
32668:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
32668:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
32668:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
32668:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
32668:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
32668:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
32668:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
32668:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
32668: Goal:
32668:  Id :   1, {_}:
          multiply
            (multiply (multiply (associator x x y) (associator x x y)) x)
            (multiply (associator x x y) (associator x x y))
          =>=
          additive_identity
          [] by prove_conjecture_2
32668: Order:
32668:   lpo
32668: Leaf order:
32668:  y 4 0 4 3,1,1,1,2
32668:  additive_identity 9 0 1 3
32668:  x 9 0 9 1,1,1,1,2
32668:  additive_inverse 22 1 0 
32668:  commutator 1 2 0 
32668:  add 24 2 0 
32668:  multiply 40 2 4 0,2add
32668:  associator 5 3 4 0,1,1,1,2
% SZS status Timeout for RNG031-7.p
NO CLASH, using fixed ground order
32691: Facts:
32691:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
32691:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
32691: Goal:
32691:  Id :   1, {_}: g1 ?1 =<= g2 ?1 [1] by clause3 ?1
32691: Order:
32691:   nrkbo
32691: Leaf order:
32691:  f 2 1 0 
32691:  g1 2 1 1 0,2
32691:  g2 2 1 1 0,3
NO CLASH, using fixed ground order
32692: Facts:
32692:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
32692:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
32692: Goal:
32692:  Id :   1, {_}: g1 ?1 =<= g2 ?1 [1] by clause3 ?1
32692: Order:
32692:   kbo
32692: Leaf order:
32692:  f 2 1 0 
32692:  g1 2 1 1 0,2
32692:  g2 2 1 1 0,3
NO CLASH, using fixed ground order
32693: Facts:
32693:  Id :   2, {_}: f (g1 ?3) =>= ?3 [3] by clause1 ?3
32693:  Id :   3, {_}: f (g2 ?5) =>= ?5 [5] by clause2 ?5
32693: Goal:
32693:  Id :   1, {_}: g1 ?1 =<= g2 ?1 [1] by clause3 ?1
32693: Order:
32693:   lpo
32693: Leaf order:
32693:  f 2 1 0 
32693:  g1 2 1 1 0,2
32693:  g2 2 1 1 0,3
32691: status GaveUp for SYN305-1.p
32693: status GaveUp for SYN305-1.p
32692: status GaveUp for SYN305-1.p
% SZS status Timeout for SYN305-1.p
CLASH, statistics insufficient
32698: Facts:
32698:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32698:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
32698: Goal:
32698:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32698: Order:
32698:   nrkbo
32698: Leaf order:
32698:  b 1 0 0 
32698:  h 1 0 0 
32698:  f 3 1 3 0,2,2
32698:  apply 14 2 3 0,2
CLASH, statistics insufficient
32699: Facts:
32699:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32699:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
32699: Goal:
32699:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32699: Order:
32699:   kbo
32699: Leaf order:
32699:  b 1 0 0 
32699:  h 1 0 0 
32699:  f 3 1 3 0,2,2
32699:  apply 14 2 3 0,2
CLASH, statistics insufficient
32700: Facts:
32700:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32700:  Id :   3, {_}:
          apply (apply (apply h ?7) ?8) ?9
          =?=
          apply (apply (apply ?7 ?8) ?9) ?8
          [9, 8, 7] by h_definition ?7 ?8 ?9
32700: Goal:
32700:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
32700: Order:
32700:   lpo
32700: Leaf order:
32700:  b 1 0 0 
32700:  h 1 0 0 
32700:  f 3 1 3 0,2,2
32700:  apply 14 2 3 0,2
% SZS status Timeout for COL043-1.p
CLASH, statistics insufficient
32721: Facts:
32721:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32721:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
32721:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
32721: Goal:
32721:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =<=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
32721: Order:
32721:   nrkbo
32721: Leaf order:
32721:  b 1 0 0 
32721:  q 1 0 0 
32721:  w 1 0 0 
32721:  h 2 1 2 0,2,2
32721:  f 3 1 3 0,2,1,1,1,2
32721:  g 4 1 4 0,2,1,1,2
32721:  apply 22 2 8 0,2
CLASH, statistics insufficient
32722: Facts:
32722:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32722:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
32722:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
32722: Goal:
32722:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =<=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
32722: Order:
32722:   kbo
32722: Leaf order:
32722:  b 1 0 0 
32722:  q 1 0 0 
32722:  w 1 0 0 
32722:  h 2 1 2 0,2,2
32722:  f 3 1 3 0,2,1,1,1,2
32722:  g 4 1 4 0,2,1,1,2
32722:  apply 22 2 8 0,2
CLASH, statistics insufficient
32723: Facts:
32723:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
32723:  Id :   3, {_}:
          apply (apply (apply q ?7) ?8) ?9 =>= apply ?8 (apply ?7 ?9)
          [9, 8, 7] by q_definition ?7 ?8 ?9
32723:  Id :   4, {_}:
          apply (apply w ?11) ?12 =?= apply (apply ?11 ?12) ?12
          [12, 11] by w_definition ?11 ?12
32723: Goal:
32723:  Id :   1, {_}:
          apply (apply (apply (apply ?1 (f ?1)) (g ?1)) (g ?1)) (h ?1)
          =>=
          apply (apply (f ?1) (g ?1)) (apply (apply (f ?1) (g ?1)) (h ?1))
          [1] by prove_p_combinator ?1
32723: Order:
32723:   lpo
32723: Leaf order:
32723:  b 1 0 0 
32723:  q 1 0 0 
32723:  w 1 0 0 
32723:  h 2 1 2 0,2,2
32723:  f 3 1 3 0,2,1,1,1,2
32723:  g 4 1 4 0,2,1,1,2
32723:  apply 22 2 8 0,2
% SZS status Timeout for COL066-1.p
NO CLASH, using fixed ground order
32745: Facts:
32745:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
32745:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
32745:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
32745:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
32745:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
32745:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =?= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
32745:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =?= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
32745:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
32745:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
32745:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
32745: Goal:
32745:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
32745: Order:
32745:   nrkbo
32745: Leaf order:
32745:  n0 1 0 0 
32745:  n1 2 0 1 3
32745:  b 4 0 4 2,1,1,1,1,2
32745:  a 5 0 5 1,1,1,1,1,1,2
32745:  complement 15 1 6 0,1,2
32745:  meet 12 2 3 0,1,1,1,1,2
32745:  join 17 2 5 0,2
NO CLASH, using fixed ground order
32746: Facts:
32746:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
32746:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
32746:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
32746:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
32746:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
32746:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
32746:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
32746:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
32746:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
NO CLASH, using fixed ground order
32747: Facts:
32747:  Id :   2, {_}: join (complement ?2) ?2 =>= n1 [2] by top ?2
32747:  Id :   3, {_}: meet (complement ?4) ?4 =>= n0 [4] by bottom ?4
32747:  Id :   4, {_}: join ?6 (meet ?6 ?7) =>= ?6 [7, 6] by absorption2 ?6 ?7
32747:  Id :   5, {_}:
          meet ?9 ?10 =?= meet ?10 ?9
          [10, 9] by commutativity_of_meet ?9 ?10
32747:  Id :   6, {_}:
          join ?12 ?13 =?= join ?13 ?12
          [13, 12] by commutativity_of_join ?12 ?13
32747:  Id :   7, {_}:
          meet (meet ?15 ?16) ?17 =>= meet ?15 (meet ?16 ?17)
          [17, 16, 15] by associativity_of_meet ?15 ?16 ?17
32747:  Id :   8, {_}:
          join (join ?19 ?20) ?21 =>= join ?19 (join ?20 ?21)
          [21, 20, 19] by associativity_of_join ?19 ?20 ?21
32747:  Id :   9, {_}:
          complement (complement ?23) =>= ?23
          [23] by complement_involution ?23
32747:  Id :  10, {_}:
          join ?25 (join ?26 (complement ?26)) =>= join ?26 (complement ?26)
          [26, 25] by join_complement ?25 ?26
32747:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
32747: Goal:
32747:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
32747: Order:
32747:   lpo
32747: Leaf order:
32747:  n0 1 0 0 
32747:  n1 2 0 1 3
32747:  b 4 0 4 2,1,1,1,1,2
32747:  a 5 0 5 1,1,1,1,1,1,2
32747:  complement 15 1 6 0,1,2
32747:  meet 12 2 3 0,1,1,1,1,2
32747:  join 17 2 5 0,2
32746:  Id :  11, {_}:
          meet ?28 ?29 =<= complement (join (complement ?28) (complement ?29))
          [29, 28] by meet_complement ?28 ?29
32746: Goal:
32746:  Id :   1, {_}:
          join
            (complement
              (join
                (join (meet (complement a) b)
                  (meet (complement a) (complement b)))
                (meet a (join (complement a) b)))) (join (complement a) b)
          =>=
          n1
          [] by prove_e3
32746: Order:
32746:   kbo
32746: Leaf order:
32746:  n0 1 0 0 
32746:  n1 2 0 1 3
32746:  b 4 0 4 2,1,1,1,1,2
32746:  a 5 0 5 1,1,1,1,1,1,2
32746:  complement 15 1 6 0,1,2
32746:  meet 12 2 3 0,1,1,1,1,2
32746:  join 17 2 5 0,2
% SZS status Timeout for LAT018-1.p
NO CLASH, using fixed ground order
301: Facts:
301:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
301: Goal:
301:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
301: Order:
301:   nrkbo
301: Leaf order:
301:  a 2 0 2 1,1,2
301:  b 2 0 2 2,1,2
301:  c 2 0 2 2,2
301:  join 20 2 0 
301:  meet 22 2 4 0,2
NO CLASH, using fixed ground order
302: Facts:
302:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
302: Goal:
302:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
302: Order:
302:   kbo
302: Leaf order:
302:  a 2 0 2 1,1,2
302:  b 2 0 2 2,1,2
302:  c 2 0 2 2,2
302:  join 20 2 0 
302:  meet 22 2 4 0,2
NO CLASH, using fixed ground order
303: Facts:
303:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
303: Goal:
303:  Id :   1, {_}:
          meet (meet a b) c =>= meet a (meet b c)
          [] by prove_normal_axioms_3
303: Order:
303:   lpo
303: Leaf order:
303:  a 2 0 2 1,1,2
303:  b 2 0 2 2,1,2
303:  c 2 0 2 2,2
303:  join 20 2 0 
303:  meet 22 2 4 0,2
% SZS status Timeout for LAT082-1.p
NO CLASH, using fixed ground order
337: Facts:
337:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
337: Goal:
337:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
337: Order:
337:   nrkbo
337: Leaf order:
337:  a 2 0 2 1,1,2
337:  b 2 0 2 2,1,2
337:  c 2 0 2 2,2
337:  meet 18 2 0 
337:  join 24 2 4 0,2
NO CLASH, using fixed ground order
338: Facts:
338:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
338: Goal:
338:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
338: Order:
338:   kbo
338: Leaf order:
338:  a 2 0 2 1,1,2
338:  b 2 0 2 2,1,2
338:  c 2 0 2 2,2
338:  meet 18 2 0 
338:  join 24 2 4 0,2
NO CLASH, using fixed ground order
339: Facts:
339:  Id :   2, {_}:
          join (meet (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4)
            (meet
              (join (meet ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))
                (meet
                  (join
                    (meet ?3
                      (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))
                    (meet ?8
                      (join ?3
                        (meet (meet (join ?5 (join ?3 ?6)) (join ?7 ?3)) ?3))))
                  (join ?2 (join (join (meet ?5 ?3) (meet ?3 ?6)) ?3))))
              (join (join (meet ?2 ?3) (meet ?3 (join ?2 ?3))) ?4))
          =>=
          ?3
          [8, 7, 6, 5, 4, 3, 2] by single_axiom ?2 ?3 ?4 ?5 ?6 ?7 ?8
339: Goal:
339:  Id :   1, {_}:
          join (join a b) c =>= join a (join b c)
          [] by prove_normal_axioms_6
339: Order:
339:   lpo
339: Leaf order:
339:  a 2 0 2 1,1,2
339:  b 2 0 2 2,1,2
339:  c 2 0 2 2,2
339:  meet 18 2 0 
339:  join 24 2 4 0,2
% SZS status Timeout for LAT085-1.p
NO CLASH, using fixed ground order
1422: Facts:
1422:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1422:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1422:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1422:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1422:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1422:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1422:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1422:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1422:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
1422: Goal:
1422:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
1422: Order:
1422:   nrkbo
1422: Leaf order:
1422:  a 4 0 4 1,2
1422:  b 4 0 4 1,2,2
1422:  c 4 0 4 2,2,2,2
1422:  join 16 2 4 0,2,2
1422:  meet 22 2 6 0,2
NO CLASH, using fixed ground order
1423: Facts:
1423:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1423:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1423:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1423:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1423:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1423:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1423:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1423:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1423:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
1423: Goal:
1423:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
1423: Order:
1423:   kbo
1423: Leaf order:
1423:  a 4 0 4 1,2
1423:  b 4 0 4 1,2,2
1423:  c 4 0 4 2,2,2,2
1423:  join 16 2 4 0,2,2
1423:  meet 22 2 6 0,2
NO CLASH, using fixed ground order
1424: Facts:
1424:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1424:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1424:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1424:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1424:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1424:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1424:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1424:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1424:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
1424: Goal:
1424:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
1424: Order:
1424:   lpo
1424: Leaf order:
1424:  a 4 0 4 1,2
1424:  b 4 0 4 1,2,2
1424:  c 4 0 4 2,2,2,2
1424:  join 16 2 4 0,2,2
1424:  meet 22 2 6 0,2
% SZS status Timeout for LAT144-1.p
NO CLASH, using fixed ground order
1797: Facts:
1797:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1797:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1797:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1797:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1797:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1797:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1797:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1797:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1797:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
1797: Goal:
1797:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
1797: Order:
1797:   nrkbo
1797: Leaf order:
1797:  d 2 0 2 2,2,2,2,2
1797:  b 3 0 3 1,2,2
1797:  c 3 0 3 1,2,2,2
1797:  a 4 0 4 1,2
1797:  join 18 2 5 0,2,2
1797:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
1798: Facts:
1798:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1798:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1798:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1798:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1798:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1798:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1798:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1798:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1798:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
1798: Goal:
1798:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
1798: Order:
1798:   kbo
1798: Leaf order:
1798:  d 2 0 2 2,2,2,2,2
1798:  b 3 0 3 1,2,2
1798:  c 3 0 3 1,2,2,2
1798:  a 4 0 4 1,2
1798:  join 18 2 5 0,2,2
1798:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
1799: Facts:
1799:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
1799:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
1799:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
1799:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
1799:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
1799:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
1799:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
1799:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
1799:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
1799: Goal:
1799:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
1799: Order:
1799:   lpo
1799: Leaf order:
1799:  d 2 0 2 2,2,2,2,2
1799:  b 3 0 3 1,2,2
1799:  c 3 0 3 1,2,2,2
1799:  a 4 0 4 1,2
1799:  join 18 2 5 0,2,2
1799:  meet 19 2 5 0,2
% SZS status Timeout for LAT150-1.p
NO CLASH, using fixed ground order
3353: Facts:
3353:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
3353:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
3353:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
3353:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
3353:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
3353:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
3353:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
3353:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
3353:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
3353: Goal:
3353:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
3353: Order:
3353:   nrkbo
3353: Leaf order:
3353:  d 2 0 2 2,2,2,2,2
3353:  b 3 0 3 1,2,2
3353:  c 3 0 3 1,2,2,2
3353:  a 4 0 4 1,2
3353:  join 18 2 5 0,2,2
3353:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
3358: Facts:
3358:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
3358:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
3358:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
3358:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
3358:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
3358:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
3358:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
3358:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
3358:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
3358: Goal:
3358:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
3358: Order:
3358:   kbo
3358: Leaf order:
3358:  d 2 0 2 2,2,2,2,2
3358:  b 3 0 3 1,2,2
3358:  c 3 0 3 1,2,2,2
3358:  a 4 0 4 1,2
3358:  join 18 2 5 0,2,2
3358:  meet 19 2 5 0,2
NO CLASH, using fixed ground order
3361: Facts:
3361:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
3361:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
3361:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
3361:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
3361:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
3361:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
3361:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
3361:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
3361:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?28))))
          [29, 28, 27, 26] by equation_H39 ?26 ?27 ?28 ?29
3361: Goal:
3361:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
3361: Order:
3361:   lpo
3361: Leaf order:
3361:  d 2 0 2 2,2,2,2,2
3361:  b 3 0 3 1,2,2
3361:  c 3 0 3 1,2,2,2
3361:  a 4 0 4 1,2
3361:  join 18 2 5 0,2,2
3361:  meet 19 2 5 0,2
% SZS status Timeout for LAT151-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
4534: Facts:
4534:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
4534:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
4534:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
4534:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
4534:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
4534:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
4534:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
4534:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
4534:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
4534: Goal:
4534:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
4534: Order:
4534:   kbo
4534: Leaf order:
4534:  b 3 0 3 1,2,2
4534:  c 3 0 3 2,2,2,2
4534:  a 6 0 6 1,2
4534:  join 18 2 4 0,2,2
4534:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
4537: Facts:
4537:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
4537:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
4537:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
4537:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
4537:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
4537:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
4537:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
4537:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
4537:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
4537: Goal:
4537:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
4537: Order:
4537:   lpo
4537: Leaf order:
4537:  b 3 0 3 1,2,2
4537:  c 3 0 3 2,2,2,2
4537:  a 6 0 6 1,2
4537:  join 18 2 4 0,2,2
4537:  meet 20 2 6 0,2
4533: Facts:
4533:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
4533:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
4533:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
4533:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
4533:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
4533:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
4533:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
4533:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
4533:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
4533: Goal:
4533:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
4533: Order:
4533:   nrkbo
4533: Leaf order:
4533:  b 3 0 3 1,2,2
4533:  c 3 0 3 2,2,2,2
4533:  a 6 0 6 1,2
4533:  join 18 2 4 0,2,2
4533:  meet 20 2 6 0,2
% SZS status Timeout for LAT152-1.p
NO CLASH, using fixed ground order
5952: Facts:
5952:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
5952:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
5952:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
5952:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
5952:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
5952:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
5952:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
5952:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
5952:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
5952: Goal:
5952:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
5952: Order:
5952:   nrkbo
5952: Leaf order:
5952:  c 2 0 2 2,2,2,2
5952:  b 4 0 4 1,2,2
5952:  a 6 0 6 1,2
5952:  join 18 2 4 0,2,2
5952:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
5958: Facts:
5958:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
5958:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
5958:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
5958:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
5958:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
5958:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
5958:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
5958:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
5958:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
5958: Goal:
5958:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
5958: Order:
5958:   kbo
5958: Leaf order:
5958:  c 2 0 2 2,2,2,2
5958:  b 4 0 4 1,2,2
5958:  a 6 0 6 1,2
5958:  join 18 2 4 0,2,2
5958:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
5959: Facts:
5959:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
5959:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
5959:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
5959:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
5959:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
5959:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
5959:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
5959:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
5959:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
5959: Goal:
5959:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
5959: Order:
5959:   lpo
5959: Leaf order:
5959:  c 2 0 2 2,2,2,2
5959:  b 4 0 4 1,2,2
5959:  a 6 0 6 1,2
5959:  join 18 2 4 0,2,2
5959:  meet 20 2 6 0,2
% SZS status Timeout for LAT159-1.p
NO CLASH, using fixed ground order
7548: Facts:
7548:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
7548:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
7548:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
7548:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
7548:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
7548:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
7548:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
7548:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
7548:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
7548: Goal:
7548:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
7548: Order:
7548:   nrkbo
7548: Leaf order:
7548:  d 2 0 2 2,2,2,2
7548:  a 3 0 3 1,2
7548:  b 3 0 3 1,2,2
7548:  c 3 0 3 1,2,2,2
7548:  join 15 2 3 0,2,2,2
7548:  meet 19 2 6 0,2
NO CLASH, using fixed ground order
7549: Facts:
7549:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
7549:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
7549:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
7549:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
7549:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
7549:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
7549:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
7549:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
7549:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
7549: Goal:
7549:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
7549: Order:
7549:   kbo
7549: Leaf order:
7549:  d 2 0 2 2,2,2,2
7549:  a 3 0 3 1,2
7549:  b 3 0 3 1,2,2
7549:  c 3 0 3 1,2,2,2
7549:  join 15 2 3 0,2,2,2
7549:  meet 19 2 6 0,2
NO CLASH, using fixed ground order
7552: Facts:
7552:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
7552:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
7552:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
7552:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
7552:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
7552:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
7552:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
7552:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
7552:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet ?26 (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H68 ?26 ?27 ?28
7552: Goal:
7552:  Id :   1, {_}:
          meet a (meet b (join c d))
          =<=
          meet a (meet b (join c (meet a (join d (meet b c)))))
          [] by prove_H73
7552: Order:
7552:   lpo
7552: Leaf order:
7552:  d 2 0 2 2,2,2,2
7552:  a 3 0 3 1,2
7552:  b 3 0 3 1,2,2
7552:  c 3 0 3 1,2,2,2
7552:  join 15 2 3 0,2,2,2
7552:  meet 19 2 6 0,2
% SZS status Timeout for LAT162-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
8627: Facts:
8627:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
8627:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
8627:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
8627:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
8627:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
8627:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
8627:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
8627:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
8627:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
8627: Goal:
8627:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
8627: Order:
8627:   kbo
8627: Leaf order:
8627:  b 3 0 3 1,2,2
8627:  c 3 0 3 2,2,2,2
8627:  a 6 0 6 1,2
8627:  join 17 2 4 0,2,2
8627:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
8628: Facts:
8628:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
8628:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
8628:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
8628:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
8628:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
8628:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
8628:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
8628:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
8628:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
8628: Goal:
8628:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
8628: Order:
8628:   lpo
8628: Leaf order:
8628:  b 3 0 3 1,2,2
8628:  c 3 0 3 2,2,2,2
8628:  a 6 0 6 1,2
8628:  join 17 2 4 0,2,2
8628:  meet 20 2 6 0,2
8626: Facts:
8626:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
8626:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
8626:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
8626:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
8626:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
8626:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
8626:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
8626:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
8626:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
8626: Goal:
8626:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
8626: Order:
8626:   nrkbo
8626: Leaf order:
8626:  b 3 0 3 1,2,2
8626:  c 3 0 3 2,2,2,2
8626:  a 6 0 6 1,2
8626:  join 17 2 4 0,2,2
8626:  meet 20 2 6 0,2
% SZS status Timeout for LAT164-1.p
NO CLASH, using fixed ground order
10913: Facts:
10913:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
10913:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
10913:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
10913:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
10913:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
10913:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
10913:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
10913:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
10913:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
10913: Goal:
10913:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
10913: Order:
10913:   nrkbo
10913: Leaf order:
10913:  c 2 0 2 2,2,2
10913:  a 4 0 4 1,2
10913:  b 4 0 4 1,2,2
10913:  meet 17 2 4 0,2
10913:  join 19 2 4 0,2,2
NO CLASH, using fixed ground order
10920: Facts:
10920:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
10920:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
10920:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
10920:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
10920:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
10920:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
10920:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
10920:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
10920:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
10920: Goal:
10920:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
10920: Order:
10920:   kbo
10920: Leaf order:
10920:  c 2 0 2 2,2,2
10920:  a 4 0 4 1,2
10920:  b 4 0 4 1,2,2
10920:  meet 17 2 4 0,2
10920:  join 19 2 4 0,2,2
NO CLASH, using fixed ground order
10926: Facts:
10926:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
10926:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
10926:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
10926:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
10926:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
10926:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
10926:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
10926:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
10926:  Id :  10, {_}:
          meet (join ?26 ?27) (join ?26 ?28)
          =<=
          join ?26
            (meet (join ?27 (meet ?26 (join ?27 ?28)))
              (join ?28 (meet ?26 ?27)))
          [28, 27, 26] by equation_H21_dual ?26 ?27 ?28
10926: Goal:
10926:  Id :   1, {_}:
          meet a (join b c)
          =<=
          meet a (join b (meet (join a b) (join c (meet a b))))
          [] by prove_H58
10926: Order:
10926:   lpo
10926: Leaf order:
10926:  c 2 0 2 2,2,2
10926:  a 4 0 4 1,2
10926:  b 4 0 4 1,2,2
10926:  meet 17 2 4 0,2
10926:  join 19 2 4 0,2,2
% SZS status Timeout for LAT169-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
11323: Facts:
11323:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11323:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11323:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11323:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11323:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11323:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11323:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11323:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11323:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
11323: Goal:
11323:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
11323: Order:
11323:   kbo
11323: Leaf order:
11323:  b 3 0 3 1,2,2
11323:  c 3 0 3 2,2,2,2
11323:  a 6 0 6 1,2
11323:  join 18 2 4 0,2,2
11323:  meet 19 2 6 0,2
NO CLASH, using fixed ground order
11324: Facts:
11324:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11324:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11324:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11324:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11324:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11324:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11324:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11324:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11324:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
11324: Goal:
11324:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
11324: Order:
11324:   lpo
11324: Leaf order:
11324:  b 3 0 3 1,2,2
11324:  c 3 0 3 2,2,2,2
11324:  a 6 0 6 1,2
11324:  join 18 2 4 0,2,2
11324:  meet 19 2 6 0,2
11322: Facts:
11322:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11322:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11322:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11322:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11322:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11322:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11322:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11322:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11322:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
11322: Goal:
11322:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
11322: Order:
11322:   nrkbo
11322: Leaf order:
11322:  b 3 0 3 1,2,2
11322:  c 3 0 3 2,2,2,2
11322:  a 6 0 6 1,2
11322:  join 18 2 4 0,2,2
11322:  meet 19 2 6 0,2
% SZS status Timeout for LAT174-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
11474: Facts:
11474:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11474:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11474:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11474:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11474:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11474:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11474:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11474:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11474:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11474:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11474:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11474:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11474:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11474:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11474:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11474: Goal:
11474:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
11474: Order:
11474:   kbo
11474: Leaf order:
11474:  cz 2 0 2 1,2
11474:  cy 2 0 2 1,2,2,2
11474:  cx 4 0 4 1,2,2
11474:  additive_identity 8 0 0 
11474:  additive_inverse 6 1 0 
11474:  commutator 1 2 0 
11474:  add 16 2 0 
11474:  multiply 28 2 6 0,2
11474:  associator 1 3 0 
NO CLASH, using fixed ground order
11475: Facts:
11475:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11475:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11475:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11475:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11475:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11475:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11475:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11475:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11475:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11475:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11475:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11475:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11475:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11475:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11475:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11475: Goal:
11475:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
11475: Order:
11475:   lpo
11475: Leaf order:
11475:  cz 2 0 2 1,2
11475:  cy 2 0 2 1,2,2,2
11475:  cx 4 0 4 1,2,2
11475:  additive_identity 8 0 0 
11475:  additive_inverse 6 1 0 
11475:  commutator 1 2 0 
11475:  add 16 2 0 
11475:  multiply 28 2 6 0,2
11475:  associator 1 3 0 
11473: Facts:
11473:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
11473:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
11473:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
11473:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
11473:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
11473:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
11473:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
11473:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
11473:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
11473:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
11473:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
11473:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
11473:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
11473:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
11473:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
11473: Goal:
11473:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
11473: Order:
11473:   nrkbo
11473: Leaf order:
11473:  cz 2 0 2 1,2
11473:  cy 2 0 2 1,2,2,2
11473:  cx 4 0 4 1,2,2
11473:  additive_identity 8 0 0 
11473:  additive_inverse 6 1 0 
11473:  commutator 1 2 0 
11473:  add 16 2 0 
11473:  multiply 28 2 6 0,2
11473:  associator 1 3 0 
% SZS status Timeout for RNG027-5.p
NO CLASH, using fixed ground order
12546: Facts:
12546:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
12546:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
12546:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
12546:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
12546:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
12546:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
12546:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
12546:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
12546:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
12546:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
12546:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
12546:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
12546:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
12546:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
NO CLASH, using fixed ground order
12546:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
12546:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
12546:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
12546:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
12546:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
12546:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
12547: Facts:
12546:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
12546:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
12546: Goal:
12546:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
12546: Order:
12546:   nrkbo
12546: Leaf order:
12546:  cz 2 0 2 1,2
12546:  cy 2 0 2 1,2,2,2
12546:  cx 4 0 4 1,2,2
12546:  additive_identity 8 0 0 
12546:  additive_inverse 22 1 0 
12546:  commutator 1 2 0 
12546:  add 24 2 0 
12546:  multiply 46 2 6 0,2
12547:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
12547:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
12547:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
12547:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
12547:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
12547:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
12547:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
12546:  associator 1 3 0 
12547:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
12547:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
12547:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
12547:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
12547:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
12547:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
12547:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
12547:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
12547:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
12547:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
12547:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
12547:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
12547:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
12547:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
12547:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
12547: Goal:
12547:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
12547: Order:
12547:   kbo
12547: Leaf order:
12547:  cz 2 0 2 1,2
12547:  cy 2 0 2 1,2,2,2
12547:  cx 4 0 4 1,2,2
12547:  additive_identity 8 0 0 
12547:  additive_inverse 22 1 0 
12547:  commutator 1 2 0 
12547:  add 24 2 0 
12547:  multiply 46 2 6 0,2
12547:  associator 1 3 0 
NO CLASH, using fixed ground order
12548: Facts:
12548:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
12548:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
12548:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
12548:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
12548:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
12548:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
12548:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
12548:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
12548:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
12548:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
12548:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
12548:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
12548:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
12548:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
12548:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
12548:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
12548:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
12548:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
12548:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
12548:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
12548:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
12548:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
12548: Goal:
12548:  Id :   1, {_}:
          multiply cz (multiply cx (multiply cy cx))
          =<=
          multiply (multiply (multiply cz cx) cy) cx
          [] by prove_right_moufang
12548: Order:
12548:   lpo
12548: Leaf order:
12548:  cz 2 0 2 1,2
12548:  cy 2 0 2 1,2,2,2
12548:  cx 4 0 4 1,2,2
12548:  additive_identity 8 0 0 
12548:  additive_inverse 22 1 0 
12548:  commutator 1 2 0 
12548:  add 24 2 0 
12548:  multiply 46 2 6 0,2
12548:  associator 1 3 0 
% SZS status Timeout for RNG027-7.p
NO CLASH, using fixed ground order
14022: Facts:
14022:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
14022:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
14022:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
14022:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
14022:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
14022:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
14022:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
14022:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
NO CLASH, using fixed ground order
14022:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
14022:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
14022:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
14022:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
14022:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
14022:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
14022:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
14022: Goal:
14022:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
14022: Order:
14022:   nrkbo
14022: Leaf order:
14022:  y 2 0 2 2,2,2
14022:  z 2 0 2 3,2
14022:  x 4 0 4 1,2
14022:  additive_identity 8 0 0 
14022:  additive_inverse 6 1 0 
14022:  commutator 1 2 0 
14022:  add 16 2 0 
14022:  multiply 24 2 2 0,2,2
14022:  associator 3 3 2 0,2
14023: Facts:
14023:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
14023:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
14023:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
14023:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
14023:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
14023:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
14023:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
14023:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
14023:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
14023:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
14023:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
14023:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
14023:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
14023:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
14023:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
14023: Goal:
14023:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
14023: Order:
14023:   kbo
14023: Leaf order:
14023:  y 2 0 2 2,2,2
14023:  z 2 0 2 3,2
14023:  x 4 0 4 1,2
14023:  additive_identity 8 0 0 
14023:  additive_inverse 6 1 0 
14023:  commutator 1 2 0 
14023:  add 16 2 0 
14023:  multiply 24 2 2 0,2,2
14023:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
14025: Facts:
14025:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
14025:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
14025:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
14025:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
14025:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
14025:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
14025:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
14025:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
14025:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
14025:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
14025:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
14025:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
14025:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
14025:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
14025:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
14025: Goal:
14025:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
14025: Order:
14025:   lpo
14025: Leaf order:
14025:  y 2 0 2 2,2,2
14025:  z 2 0 2 3,2
14025:  x 4 0 4 1,2
14025:  additive_identity 8 0 0 
14025:  additive_inverse 6 1 0 
14025:  commutator 1 2 0 
14025:  add 16 2 0 
14025:  multiply 24 2 2 0,2,2
14025:  associator 3 3 2 0,2
% SZS status Timeout for RNG027-8.p
NO CLASH, using fixed ground order
15720: Facts:
15720:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
15720:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
15720:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
15720:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
15720:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
15720:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
15720:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
15720:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
15720:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
15720:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
15720:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
15720:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
15720:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
15720:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
15720:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
15720:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
15720:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
15720:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
15720:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
15720:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
15720:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
15720:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
15720: Goal:
15720:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
15720: Order:
15720:   nrkbo
15720: Leaf order:
15720:  y 2 0 2 2,2,2
15720:  z 2 0 2 3,2
15720:  x 4 0 4 1,2
15720:  additive_identity 8 0 0 
15720:  additive_inverse 22 1 0 
15720:  commutator 1 2 0 
15720:  add 24 2 0 
15720:  multiply 42 2 2 0,2,2
15720:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
15721: Facts:
15721:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
15721:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
15721:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
15721:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
15721:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
15721:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
15721:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
15721:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
15721:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
15721:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
15721:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
15721:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
15721:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
15721:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
15721:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
15721:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
15721:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
15721:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
15721:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
15721:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
15721:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
15721:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
15721: Goal:
15721:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
15721: Order:
15721:   kbo
15721: Leaf order:
15721:  y 2 0 2 2,2,2
15721:  z 2 0 2 3,2
15721:  x 4 0 4 1,2
15721:  additive_identity 8 0 0 
15721:  additive_inverse 22 1 0 
15721:  commutator 1 2 0 
15721:  add 24 2 0 
15721:  multiply 42 2 2 0,2,2
15721:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
15722: Facts:
15722:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
15722:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
15722:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
15722:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
15722:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
15722:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
15722:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
15722:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
15722:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
15722:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
15722:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
15722:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
15722:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
15722:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
15722:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
15722:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
15722:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
15722:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
15722:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
15722:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
15722:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
15722:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
15722: Goal:
15722:  Id :   1, {_}:
          associator x (multiply x y) z =>= multiply (associator x y z) x
          [] by prove_right_moufang
15722: Order:
15722:   lpo
15722: Leaf order:
15722:  y 2 0 2 2,2,2
15722:  z 2 0 2 3,2
15722:  x 4 0 4 1,2
15722:  additive_identity 8 0 0 
15722:  additive_inverse 22 1 0 
15722:  commutator 1 2 0 
15722:  add 24 2 0 
15722:  multiply 42 2 2 0,2,2
15722:  associator 3 3 2 0,2
% SZS status Timeout for RNG027-9.p
NO CLASH, using fixed ground order
16372: Facts:
16372:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
16372:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
16372:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
16372:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
16372:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
16372:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
16372:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
16372:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
16372:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
16372:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
16372:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
16372:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
16372:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
16372:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
16372:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
16372: Goal:
16372:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
16372: Order:
16372:   nrkbo
16372: Leaf order:
16372:  cy 2 0 2 1,2,1,2
16372:  cz 2 0 2 2,2
16372:  cx 4 0 4 1,1,2
16372:  additive_identity 8 0 0 
16372:  additive_inverse 6 1 0 
16372:  commutator 1 2 0 
16372:  add 16 2 0 
16372:  multiply 28 2 6 0,2
16372:  associator 1 3 0 
NO CLASH, using fixed ground order
16373: Facts:
16373:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
16373:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
16373:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
16373:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
16373:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
16373:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
16373:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
16373:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
16373:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
NO CLASH, using fixed ground order
16374: Facts:
16374:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
16374:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
16374:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
16374:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
16374:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
16374:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
16374:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
16374:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
16374:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
16373:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
16373:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
16373:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
16373:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
16373:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
16373:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
16373: Goal:
16373:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
16373: Order:
16373:   kbo
16373: Leaf order:
16373:  cy 2 0 2 1,2,1,2
16373:  cz 2 0 2 2,2
16373:  cx 4 0 4 1,1,2
16373:  additive_identity 8 0 0 
16373:  additive_inverse 6 1 0 
16373:  commutator 1 2 0 
16373:  add 16 2 0 
16373:  multiply 28 2 6 0,2
16373:  associator 1 3 0 
16374:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
16374:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
16374:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
16374:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
16374:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
16374:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
16374: Goal:
16374:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
16374: Order:
16374:   lpo
16374: Leaf order:
16374:  cy 2 0 2 1,2,1,2
16374:  cz 2 0 2 2,2
16374:  cx 4 0 4 1,1,2
16374:  additive_identity 8 0 0 
16374:  additive_inverse 6 1 0 
16374:  commutator 1 2 0 
16374:  add 16 2 0 
16374:  multiply 28 2 6 0,2
16374:  associator 1 3 0 
% SZS status Timeout for RNG028-5.p
NO CLASH, using fixed ground order
18637: Facts:
18637:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
18637:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
18637:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
18637:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
18637:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
18637:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
18637:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
18637:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
18637:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
18637:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
18637:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
18637:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
18637:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
18637:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
18637:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
18637:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
18637:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
18637:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
18637:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
18637:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
18637:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
18637:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
18637: Goal:
18637:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
18637: Order:
18637:   nrkbo
18637: Leaf order:
18637:  cy 2 0 2 1,2,1,2
18637:  cz 2 0 2 2,2
18637:  cx 4 0 4 1,1,2
18637:  additive_identity 8 0 0 
18637:  additive_inverse 22 1 0 
18637:  commutator 1 2 0 
18637:  add 24 2 0 
18637:  multiply 46 2 6 0,2
18637:  associator 1 3 0 
NO CLASH, using fixed ground order
18660: Facts:
18660:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
18660:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
18660:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
18660:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
18660:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
18660:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
18660:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
18660:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
18660:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
18660:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
18660:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
18660:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
18660:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
18660:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
18660:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
18660:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
18660:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
18660:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
18660:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
18660:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
18660:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
18660:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
18660: Goal:
18660:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
18660: Order:
18660:   kbo
18660: Leaf order:
18660:  cy 2 0 2 1,2,1,2
18660:  cz 2 0 2 2,2
18660:  cx 4 0 4 1,1,2
18660:  additive_identity 8 0 0 
18660:  additive_inverse 22 1 0 
18660:  commutator 1 2 0 
18660:  add 24 2 0 
18660:  multiply 46 2 6 0,2
18660:  associator 1 3 0 
NO CLASH, using fixed ground order
18670: Facts:
18670:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
18670:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
18670:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
18670:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
18670:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
18670:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
18670:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
18670:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
18670:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
18670:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
18670:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
18670:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
18670:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
18670:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
18670:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
18670:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
18670:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
18670:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
18670:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
18670:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
18670:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
18670:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
18670: Goal:
18670:  Id :   1, {_}:
          multiply (multiply cx (multiply cy cx)) cz
          =>=
          multiply cx (multiply cy (multiply cx cz))
          [] by prove_left_moufang
18670: Order:
18670:   lpo
18670: Leaf order:
18670:  cy 2 0 2 1,2,1,2
18670:  cz 2 0 2 2,2
18670:  cx 4 0 4 1,1,2
18670:  additive_identity 8 0 0 
18670:  additive_inverse 22 1 0 
18670:  commutator 1 2 0 
18670:  add 24 2 0 
18670:  multiply 46 2 6 0,2
18670:  associator 1 3 0 
% SZS status Timeout for RNG028-7.p
NO CLASH, using fixed ground order
20636: Facts:
20636:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20636:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20636:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20636:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20636:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20636:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20636:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20636:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20636:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20636:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20636:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20636:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20636:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20636:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20636:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20636: Goal:
20636:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
20636: Order:
20636:   nrkbo
20636: Leaf order:
20636:  y 2 0 2 1,2,2
20636:  z 2 0 2 3,2
20636:  x 4 0 4 1,2
20636:  additive_identity 8 0 0 
20636:  additive_inverse 6 1 0 
20636:  commutator 1 2 0 
20636:  add 16 2 0 
20636:  multiply 24 2 2 0,2,2
20636:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
20637: Facts:
20637:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20637:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20637:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20637:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20637:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20637:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20637:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20637:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20637:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20637:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20637:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20637:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20637:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20637:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20637:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20637: Goal:
20637:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
20637: Order:
20637:   kbo
20637: Leaf order:
20637:  y 2 0 2 1,2,2
20637:  z 2 0 2 3,2
20637:  x 4 0 4 1,2
20637:  additive_identity 8 0 0 
20637:  additive_inverse 6 1 0 
20637:  commutator 1 2 0 
20637:  add 16 2 0 
20637:  multiply 24 2 2 0,2,2
20637:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
20638: Facts:
20638:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
20638:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
20638:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
20638:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
20638:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
20638:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
20638:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
20638:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
20638:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
20638:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
20638:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
20638:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
20638:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
20638:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
20638:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
20638: Goal:
20638:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
20638: Order:
20638:   lpo
20638: Leaf order:
20638:  y 2 0 2 1,2,2
20638:  z 2 0 2 3,2
20638:  x 4 0 4 1,2
20638:  additive_identity 8 0 0 
20638:  additive_inverse 6 1 0 
20638:  commutator 1 2 0 
20638:  add 16 2 0 
20638:  multiply 24 2 2 0,2,2
20638:  associator 3 3 2 0,2
% SZS status Timeout for RNG028-8.p
NO CLASH, using fixed ground order
22095: Facts:
22095:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22095:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22095:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22095:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22095:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22095:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22095:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22095:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22095:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22095:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22095:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22095:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22095:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22095:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22095:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22095:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22095:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22095:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22095:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22095:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22095:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22095:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22095: Goal:
22095:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
22095: Order:
22095:   nrkbo
22095: Leaf order:
22095:  y 2 0 2 1,2,2
22095:  z 2 0 2 3,2
22095:  x 4 0 4 1,2
22095:  additive_identity 8 0 0 
22095:  additive_inverse 22 1 0 
22095:  commutator 1 2 0 
22095:  add 24 2 0 
22095:  multiply 42 2 2 0,2,2
22095:  associator 3 3 2 0,2
NO CLASH, using fixed ground order
22098: Facts:
NO CLASH, using fixed ground order
22098:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22098:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22098:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22098:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22098:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22098:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22098:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22098:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22098:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22098:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22098:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22098:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22098:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22098:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22098:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22098:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22098:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22098:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22098:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22098:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22098:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22098:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22098: Goal:
22098:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
22098: Order:
22098:   kbo
22098: Leaf order:
22098:  y 2 0 2 1,2,2
22098:  z 2 0 2 3,2
22098:  x 4 0 4 1,2
22098:  additive_identity 8 0 0 
22098:  additive_inverse 22 1 0 
22098:  commutator 1 2 0 
22098:  add 24 2 0 
22098:  multiply 42 2 2 0,2,2
22098:  associator 3 3 2 0,2
22100: Facts:
22100:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
22100:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
22100:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
22100:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
22100:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
22100:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
22100:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
22100:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
22100:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
22100:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
22100:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
22100:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
22100:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
22100:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
22100:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
22100:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
22100:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
22100:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
22100:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
22100:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
22100:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
22100:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
22100: Goal:
22100:  Id :   1, {_}:
          associator x (multiply y x) z =>= multiply x (associator x y z)
          [] by prove_left_moufang
22100: Order:
22100:   lpo
22100: Leaf order:
22100:  y 2 0 2 1,2,2
22100:  z 2 0 2 3,2
22100:  x 4 0 4 1,2
22100:  additive_identity 8 0 0 
22100:  additive_inverse 22 1 0 
22100:  commutator 1 2 0 
22100:  add 24 2 0 
22100:  multiply 42 2 2 0,2,2
22100:  associator 3 3 2 0,2
% SZS status Timeout for RNG028-9.p
NO CLASH, using fixed ground order
23750: Facts:
23750:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23750:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23750:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
23750:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
23750:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
23750:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
23750:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
23750:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
23750:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
23750:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
23750:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
23750:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
23750:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
23750:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
23750:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
23750: Goal:
23750:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
23750: Order:
23750:   nrkbo
23750: Leaf order:
23750:  cz 2 0 2 1,2,2
23750:  cy 2 0 2 2,1,2
23750:  cx 4 0 4 1,1,2
23750:  additive_identity 8 0 0 
23750:  additive_inverse 6 1 0 
23750:  commutator 1 2 0 
23750:  add 16 2 0 
23750:  multiply 28 2 6 0,2
23750:  associator 1 3 0 
NO CLASH, using fixed ground order
23751: Facts:
23751:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23751:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23751:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
23751:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
23751:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
23751:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
23751:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
23751:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
23751:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
23751:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
23751:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
23751:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
23751:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
23751:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
23751:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
23751: Goal:
23751:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
23751: Order:
23751:   kbo
23751: Leaf order:
23751:  cz 2 0 2 1,2,2
23751:  cy 2 0 2 2,1,2
23751:  cx 4 0 4 1,1,2
23751:  additive_identity 8 0 0 
23751:  additive_inverse 6 1 0 
23751:  commutator 1 2 0 
23751:  add 16 2 0 
23751:  multiply 28 2 6 0,2
23751:  associator 1 3 0 
NO CLASH, using fixed ground order
23752: Facts:
23752:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23752:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23752:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
23752:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
23752:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
23752:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
23752:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
23752:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
23752:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
23752:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
23752:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
23752:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
23752:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
23752:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
23752:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
23752: Goal:
23752:  Id :   1, {_}:
          multiply (multiply cx cy) (multiply cz cx)
          =>=
          multiply cx (multiply (multiply cy cz) cx)
          [] by prove_middle_law
23752: Order:
23752:   lpo
23752: Leaf order:
23752:  cz 2 0 2 1,2,2
23752:  cy 2 0 2 2,1,2
23752:  cx 4 0 4 1,1,2
23752:  additive_identity 8 0 0 
23752:  additive_inverse 6 1 0 
23752:  commutator 1 2 0 
23752:  add 16 2 0 
23752:  multiply 28 2 6 0,2
23752:  associator 1 3 0 
% SZS status Timeout for RNG029-5.p
NO CLASH, using fixed ground order
24862: Facts:
24862:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24862:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24862:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24862:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24862:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24862:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24862:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24862:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24862:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24862:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24862:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24862:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24862:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24862:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24862:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24862: Goal:
24862:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
24862: Order:
24862:   nrkbo
24862: Leaf order:
24862:  z 2 0 2 1,2,2
24862:  y 2 0 2 2,1,2
24862:  x 4 0 4 1,1,2
24862:  additive_identity 8 0 0 
24862:  additive_inverse 6 1 0 
24862:  commutator 1 2 0 
24862:  add 16 2 0 
24862:  multiply 28 2 6 0,2
24862:  associator 1 3 0 
NO CLASH, using fixed ground order
24863: Facts:
24863:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24863:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24863:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24863:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24863:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24863:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24863:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24863:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24863:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24863:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24863:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24863:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24863:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24863:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24863:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24863: Goal:
24863:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
24863: Order:
24863:   kbo
24863: Leaf order:
24863:  z 2 0 2 1,2,2
24863:  y 2 0 2 2,1,2
24863:  x 4 0 4 1,1,2
24863:  additive_identity 8 0 0 
24863:  additive_inverse 6 1 0 
24863:  commutator 1 2 0 
24863:  add 16 2 0 
24863:  multiply 28 2 6 0,2
24863:  associator 1 3 0 
NO CLASH, using fixed ground order
24864: Facts:
24864:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
24864:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
24864:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
24864:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
24864:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
24864:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
24864:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
24864:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
24864:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
24864:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
24864:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
24864:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
24864:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
24864:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
24864:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
24864: Goal:
24864:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
24864: Order:
24864:   lpo
24864: Leaf order:
24864:  z 2 0 2 1,2,2
24864:  y 2 0 2 2,1,2
24864:  x 4 0 4 1,1,2
24864:  additive_identity 8 0 0 
24864:  additive_inverse 6 1 0 
24864:  commutator 1 2 0 
24864:  add 16 2 0 
24864:  multiply 28 2 6 0,2
24864:  associator 1 3 0 
% SZS status Timeout for RNG029-6.p
NO CLASH, using fixed ground order
26436: Facts:
26436:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26436:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26436:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26436:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26436:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26436:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26436:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26436:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26436:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26436:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26436:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26436:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26436:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26436:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26436:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26436:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26436:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26436:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26436:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26436:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26436:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26436:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26436: Goal:
26436:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
26436: Order:
26436:   nrkbo
26436: Leaf order:
26436:  z 2 0 2 1,2,2
26436:  y 2 0 2 2,1,2
26436:  x 4 0 4 1,1,2
26436:  additive_identity 8 0 0 
26436:  additive_inverse 22 1 0 
26436:  commutator 1 2 0 
26436:  add 24 2 0 
26436:  multiply 46 2 6 0,2
26436:  associator 1 3 0 
NO CLASH, using fixed ground order
26437: Facts:
26437:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26437:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26437:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26437:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26437:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26437:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
NO CLASH, using fixed ground order
26438: Facts:
26438:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26438:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26438:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26438:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26438:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26438:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26438:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26438:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26438:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26438:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26438:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26438:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26438:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26438:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26438:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26438:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26438:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26438:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26438:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26438:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26438:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26438:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26438: Goal:
26438:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
26438: Order:
26438:   lpo
26438: Leaf order:
26438:  z 2 0 2 1,2,2
26438:  y 2 0 2 2,1,2
26438:  x 4 0 4 1,1,2
26438:  additive_identity 8 0 0 
26438:  additive_inverse 22 1 0 
26438:  commutator 1 2 0 
26438:  add 24 2 0 
26438:  multiply 46 2 6 0,2
26438:  associator 1 3 0 
26437:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26437:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26437:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26437:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26437:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26437:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26437:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26437:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26437:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26437:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26437:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26437:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26437:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26437:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26437:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26437:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26437: Goal:
26437:  Id :   1, {_}:
          multiply (multiply x y) (multiply z x)
          =<=
          multiply (multiply x (multiply y z)) x
          [] by prove_middle_moufang
26437: Order:
26437:   kbo
26437: Leaf order:
26437:  z 2 0 2 1,2,2
26437:  y 2 0 2 2,1,2
26437:  x 4 0 4 1,1,2
26437:  additive_identity 8 0 0 
26437:  additive_inverse 22 1 0 
26437:  commutator 1 2 0 
26437:  add 24 2 0 
26437:  multiply 46 2 6 0,2
26437:  associator 1 3 0 
% SZS status Timeout for RNG029-7.p
NO CLASH, using fixed ground order
28162: Facts:
28162:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
28162:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
28162:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
28162:  Id :   5, {_}: add c d =>= d [] by absorbtion
28162: Goal:
28162:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
28162: Order:
28162:   nrkbo
28162: Leaf order:
28162:  c 1 0 0 
28162:  d 2 0 0 
28162:  a 2 0 2 1,1,1,2
28162:  b 3 0 3 1,2,1,1,2
28162:  negate 9 1 5 0,1,2
28162:  add 13 2 3 0,2
NO CLASH, using fixed ground order
28167: Facts:
28167:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
28167:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
28167:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
28167:  Id :   5, {_}: add c d =>= d [] by absorbtion
28167: Goal:
28167:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
28167: Order:
28167:   kbo
28167: Leaf order:
28167:  c 1 0 0 
28167:  d 2 0 0 
28167:  a 2 0 2 1,1,1,2
28167:  b 3 0 3 1,2,1,1,2
28167:  negate 9 1 5 0,1,2
28167:  add 13 2 3 0,2
NO CLASH, using fixed ground order
28168: Facts:
28168:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
28168:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
28168:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
28168:  Id :   5, {_}: add c d =>= d [] by absorbtion
28168: Goal:
28168:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
28168: Order:
28168:   lpo
28168: Leaf order:
28168:  c 1 0 0 
28168:  d 2 0 0 
28168:  a 2 0 2 1,1,1,2
28168:  b 3 0 3 1,2,1,1,2
28168:  negate 9 1 5 0,1,2
28168:  add 13 2 3 0,2
% SZS status Timeout for ROB006-1.p
NO CLASH, using fixed ground order
30020: Facts:
30020:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30020:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30020:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30020:  Id :   5, {_}: add c d =>= d [] by absorbtion
30020: Goal:
30020:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30020: Order:
30020:   nrkbo
30020: Leaf order:
30020:  c 1 0 0 
30020:  d 2 0 0 
30020:  negate 4 1 0 
30020:  add 11 2 1 0,2
NO CLASH, using fixed ground order
30021: Facts:
30021:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30021:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30021:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30021:  Id :   5, {_}: add c d =>= d [] by absorbtion
30021: Goal:
30021:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30021: Order:
30021:   kbo
30021: Leaf order:
30021:  c 1 0 0 
30021:  d 2 0 0 
30021:  negate 4 1 0 
30021:  add 11 2 1 0,2
NO CLASH, using fixed ground order
30022: Facts:
30022:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
30022:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
30022:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
30022:  Id :   5, {_}: add c d =>= d [] by absorbtion
30022: Goal:
30022:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
30022: Order:
30022:   lpo
30022: Leaf order:
30022:  c 1 0 0 
30022:  d 2 0 0 
30022:  negate 4 1 0 
30022:  add 11 2 1 0,2
% SZS status Timeout for ROB006-2.p
NO CLASH, using fixed ground order
31074: Facts:
31074:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
31074:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
31074:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
31074:  Id :   5, {_}: add c d =>= c [] by identity_constant
31074: Goal:
31074:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
31074: Order:
31074:   nrkbo
31074: Leaf order:
31074:  d 1 0 0 
31074:  c 2 0 0 
31074:  a 2 0 2 1,1,1,2
31074:  b 3 0 3 1,2,1,1,2
31074:  negate 9 1 5 0,1,2
31074:  add 13 2 3 0,2
NO CLASH, using fixed ground order
31075: Facts:
31075:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
31075:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
31075:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
31075:  Id :   5, {_}: add c d =>= c [] by identity_constant
31075: Goal:
31075:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
31075: Order:
31075:   kbo
31075: Leaf order:
31075:  d 1 0 0 
31075:  c 2 0 0 
31075:  a 2 0 2 1,1,1,2
31075:  b 3 0 3 1,2,1,1,2
31075:  negate 9 1 5 0,1,2
31075:  add 13 2 3 0,2
NO CLASH, using fixed ground order
31076: Facts:
31076:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
31076:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
31076:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
31076:  Id :   5, {_}: add c d =>= c [] by identity_constant
31076: Goal:
31076:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
31076: Order:
31076:   lpo
31076: Leaf order:
31076:  d 1 0 0 
31076:  c 2 0 0 
31076:  a 2 0 2 1,1,1,2
31076:  b 3 0 3 1,2,1,1,2
31076:  negate 9 1 5 0,1,2
31076:  add 13 2 3 0,2
% SZS status Timeout for ROB026-1.p
NO CLASH, using fixed ground order
32629: Facts:
32629:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
32629:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
32629:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
32629:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
32629:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
32629:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
32629:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
32629:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
32629:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
32629:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
32629:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
32629:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
32629:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
32629:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
32629:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
32629: Goal:
32629:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =<=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
32629: Order:
32629:   nrkbo
32629: Leaf order:
32629:  identity 2 0 0 
32629:  b 2 0 2 1,2,2
32629:  c 2 0 2 2,2,2
32629:  a 3 0 3 1,2
32629:  inverse 1 1 0 
32629:  greatest_lower_bound 15 2 2 0,2,2
32629:  least_upper_bound 16 2 3 0,2
32629:  multiply 18 2 0 
NO CLASH, using fixed ground order
32630: Facts:
32630:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
32630:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
32630:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
32630:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
32630:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
32630:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
32630:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
32630:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
32630:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
32630:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
32630:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
32630:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
32630:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
32630:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
32630:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
32630: Goal:
32630:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =<=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
32630: Order:
32630:   kbo
32630: Leaf order:
32630:  identity 2 0 0 
32630:  b 2 0 2 1,2,2
32630:  c 2 0 2 2,2,2
32630:  a 3 0 3 1,2
32630:  inverse 1 1 0 
32630:  greatest_lower_bound 15 2 2 0,2,2
32630:  least_upper_bound 16 2 3 0,2
32630:  multiply 18 2 0 
NO CLASH, using fixed ground order
32631: Facts:
32631:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
32631:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
32631:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
32631:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
32631:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
32631:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
32631:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
32631:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
32631:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
32631:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
32631:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
32631:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
32631:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
32631:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
32631:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
32631: Goal:
32631:  Id :   1, {_}:
          least_upper_bound a (greatest_lower_bound b c)
          =>=
          greatest_lower_bound (least_upper_bound a b) (least_upper_bound a c)
          [] by prove_distrnu
32631: Order:
32631:   lpo
32631: Leaf order:
32631:  identity 2 0 0 
32631:  b 2 0 2 1,2,2
32631:  c 2 0 2 2,2,2
32631:  a 3 0 3 1,2
32631:  inverse 1 1 0 
32631:  greatest_lower_bound 15 2 2 0,2,2
32631:  least_upper_bound 16 2 3 0,2
32631:  multiply 18 2 0 
% SZS status Timeout for GRP164-1.p
NO CLASH, using fixed ground order
2296: Facts:
2296:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
2296:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
2296:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
2296:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
2296:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
2296:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
2296:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
2296:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
2296:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
2296:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
2296:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
2296:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
2296:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
2296:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
2296:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
2296: Goal:
2296:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =<=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
2296: Order:
2296:   nrkbo
2296: Leaf order:
2296:  identity 2 0 0 
2296:  b 2 0 2 1,2,2
2296:  c 2 0 2 2,2,2
2296:  a 3 0 3 1,2
2296:  inverse 1 1 0 
2296:  least_upper_bound 15 2 2 0,2,2
2296:  greatest_lower_bound 16 2 3 0,2
2296:  multiply 18 2 0 
NO CLASH, using fixed ground order
2305: Facts:
2305:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
2305:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
2305:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
2305:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
2305:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
2305:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
2305:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
2305:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
2305:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
2305:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
2305:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
2305:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
2305:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
2305:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
2305:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
2305: Goal:
2305:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =<=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
2305: Order:
2305:   kbo
2305: Leaf order:
2305:  identity 2 0 0 
2305:  b 2 0 2 1,2,2
2305:  c 2 0 2 2,2,2
2305:  a 3 0 3 1,2
2305:  inverse 1 1 0 
2305:  least_upper_bound 15 2 2 0,2,2
2305:  greatest_lower_bound 16 2 3 0,2
2305:  multiply 18 2 0 
NO CLASH, using fixed ground order
2309: Facts:
2309:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
2309:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
2309:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
2309:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
2309:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
2309:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
2309:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
2309:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
2309:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
2309:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
2309:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
2309:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
2309:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
2309:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
2309:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
2309: Goal:
2309:  Id :   1, {_}:
          greatest_lower_bound a (least_upper_bound b c)
          =>=
          least_upper_bound (greatest_lower_bound a b)
            (greatest_lower_bound a c)
          [] by prove_distrun
2309: Order:
2309:   lpo
2309: Leaf order:
2309:  identity 2 0 0 
2309:  b 2 0 2 1,2,2
2309:  c 2 0 2 2,2,2
2309:  a 3 0 3 1,2
2309:  inverse 1 1 0 
2309:  least_upper_bound 15 2 2 0,2,2
2309:  greatest_lower_bound 16 2 3 0,2
2309:  multiply 18 2 0 
% SZS status Timeout for GRP164-2.p
NO CLASH, using fixed ground order
4004: Facts:
4004:  Id :   2, {_}:
          multiply (multiply ?2 ?3) ?4 =?= multiply ?2 (multiply ?3 ?4)
          [4, 3, 2] by associativity_of_multiply ?2 ?3 ?4
4004:  Id :   3, {_}:
          multiply ?6 (multiply ?7 (multiply ?7 ?7))
          =?=
          multiply ?7 (multiply ?7 (multiply ?7 ?6))
          [7, 6] by condition ?6 ?7
4004: Goal:
4004:  Id :   1, {_}:
          multiply a
            (multiply b
              (multiply a
                (multiply b
                  (multiply a
                    (multiply b
                      (multiply a
                        (multiply b
                          (multiply a
                            (multiply b
                              (multiply a
                                (multiply b
                                  (multiply a
                                    (multiply b
                                      (multiply a (multiply b (multiply a b))))))))))))))))
          =>=
          multiply a
            (multiply a
              (multiply a
                (multiply a
                  (multiply a
                    (multiply a
                      (multiply a
                        (multiply a
                          (multiply a
                            (multiply b
                              (multiply b
                                (multiply b
                                  (multiply b
                                    (multiply b
                                      (multiply b (multiply b (multiply b b))))))))))))))))
          [] by prove_this
4004: Order:
4004:   nrkbo
4004: Leaf order:
4004:  a 18 0 18 1,2
4004:  b 18 0 18 1,2,2
4004:  multiply 44 2 34 0,2
NO CLASH, using fixed ground order
4005: Facts:
4005:  Id :   2, {_}:
          multiply (multiply ?2 ?3) ?4 =>= multiply ?2 (multiply ?3 ?4)
          [4, 3, 2] by associativity_of_multiply ?2 ?3 ?4
4005:  Id :   3, {_}:
          multiply ?6 (multiply ?7 (multiply ?7 ?7))
          =?=
          multiply ?7 (multiply ?7 (multiply ?7 ?6))
          [7, 6] by condition ?6 ?7
4005: Goal:
4005:  Id :   1, {_}:
          multiply a
            (multiply b
              (multiply a
                (multiply b
                  (multiply a
                    (multiply b
                      (multiply a
                        (multiply b
                          (multiply a
                            (multiply b
                              (multiply a
                                (multiply b
                                  (multiply a
                                    (multiply b
                                      (multiply a (multiply b (multiply a b))))))))))))))))
          =?=
          multiply a
            (multiply a
              (multiply a
                (multiply a
                  (multiply a
                    (multiply a
                      (multiply a
                        (multiply a
                          (multiply a
                            (multiply b
                              (multiply b
                                (multiply b
                                  (multiply b
                                    (multiply b
                                      (multiply b (multiply b (multiply b b))))))))))))))))
          [] by prove_this
4005: Order:
4005:   kbo
4005: Leaf order:
4005:  a 18 0 18 1,2
4005:  b 18 0 18 1,2,2
4005:  multiply 44 2 34 0,2
NO CLASH, using fixed ground order
% SZS status Timeout for GRP196-1.p
NO CLASH, using fixed ground order
7093: Facts:
7093:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
7093: Goal:
7093:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
7093: Order:
7093:   nrkbo
7093: Leaf order:
7093:  a 3 0 3 1,2
7093:  c 3 0 3 2,1,2,2
7093:  b 4 0 4 1,1,2,2
7093:  f 18 2 8 0,2
NO CLASH, using fixed ground order
7104: Facts:
7104:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
7104: Goal:
7104:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
7104: Order:
7104:   kbo
7104: Leaf order:
7104:  a 3 0 3 1,2
7104:  c 3 0 3 2,1,2,2
7104:  b 4 0 4 1,1,2,2
7104:  f 18 2 8 0,2
NO CLASH, using fixed ground order
7109: Facts:
7109:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?3 (f (f ?2 ?2) ?2)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by ol_23A ?2 ?3 ?4 ?5
7109: Goal:
7109:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
7109: Order:
7109:   lpo
7109: Leaf order:
7109:  a 3 0 3 1,2
7109:  c 3 0 3 2,1,2,2
7109:  b 4 0 4 1,1,2,2
7109:  f 18 2 8 0,2
% SZS status Timeout for LAT070-1.p
NO CLASH, using fixed ground order
9646: Facts:
9646:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
9646:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
9646:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
9646:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
9646:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
9646:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
9646:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
9646:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
9646:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
9646: Goal:
9646:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
9646: Order:
9646:   nrkbo
9646: Leaf order:
9646:  b 3 0 3 1,2,2
9646:  c 3 0 3 2,2,2,2
9646:  a 6 0 6 1,2
9646:  join 17 2 4 0,2,2
9646:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
9648: Facts:
9648:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
9648:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
9648:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
9648:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
9648:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
9648:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
9648:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
9648:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
9648:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
9648: Goal:
9648:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
9648: Order:
9648:   kbo
9648: Leaf order:
9648:  b 3 0 3 1,2,2
9648:  c 3 0 3 2,2,2,2
9648:  a 6 0 6 1,2
9648:  join 17 2 4 0,2,2
9648:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
9649: Facts:
9649:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
9649:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
9649:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
9649:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
9649:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
9649:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
9649:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
9649:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
9649:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?26 (join (meet ?26 ?27) (meet ?28 (join ?26 ?27)))))
          [28, 27, 26] by equation_H7 ?26 ?27 ?28
9649: Goal:
9649:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
9649: Order:
9649:   lpo
9649: Leaf order:
9649:  b 3 0 3 1,2,2
9649:  c 3 0 3 2,2,2,2
9649:  a 6 0 6 1,2
9649:  join 17 2 4 0,2,2
9649:  meet 21 2 6 0,2
% SZS status Timeout for LAT138-1.p
NO CLASH, using fixed ground order
11119: Facts:
11119:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11119:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11119:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11119:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11119:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11119:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11119:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11119:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11119:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
11119: Goal:
11119:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
11119: Order:
11119:   kbo
11119: Leaf order:
11119:  a 4 0 4 1,2
11119:  b 4 0 4 1,2,2
11119:  c 4 0 4 2,2,2,2
11119:  join 17 2 4 0,2,2
11119:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
11120: Facts:
11120:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11120:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11120:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11120:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11120:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11120:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11120:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11120:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11120:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
11120: Goal:
11120:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
11120: Order:
11120:   lpo
11120: Leaf order:
11120:  a 4 0 4 1,2
11120:  b 4 0 4 1,2,2
11120:  c 4 0 4 2,2,2,2
11120:  join 17 2 4 0,2,2
11120:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
11118: Facts:
11118:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
11118:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
11118:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
11118:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
11118:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
11118:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
11118:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
11118:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
11118:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
11118: Goal:
11118:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
11118: Order:
11118:   nrkbo
11118: Leaf order:
11118:  a 4 0 4 1,2
11118:  b 4 0 4 1,2,2
11118:  c 4 0 4 2,2,2,2
11118:  join 17 2 4 0,2,2
11118:  meet 21 2 6 0,2
% SZS status Timeout for LAT140-1.p
NO CLASH, using fixed ground order
12763: Facts:
12763:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
12763:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
12763:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
12763:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
12763:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
12763:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
12763:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
12763:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
12763:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
12763: Goal:
12763:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
12763: Order:
12763:   nrkbo
12763: Leaf order:
12763:  b 3 0 3 1,2,2
12763:  c 3 0 3 2,2,2,2
12763:  a 6 0 6 1,2
12763:  join 16 2 4 0,2,2
12763:  meet 22 2 6 0,2
NO CLASH, using fixed ground order
12764: Facts:
12764:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
12764:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
12764:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
12764:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
12764:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
12764:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
12764:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
12764:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
12764:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
12764: Goal:
12764:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
12764: Order:
12764:   kbo
12764: Leaf order:
12764:  b 3 0 3 1,2,2
12764:  c 3 0 3 2,2,2,2
12764:  a 6 0 6 1,2
12764:  join 16 2 4 0,2,2
12764:  meet 22 2 6 0,2
NO CLASH, using fixed ground order
12765: Facts:
12765:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
12765:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
12765:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
12765:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
12765:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
12765:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
12765:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
12765:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
12765:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 (meet ?28 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join (meet ?26 ?29) (meet ?27 ?29))))
          [29, 28, 27, 26] by equation_H32 ?26 ?27 ?28 ?29
12765: Goal:
12765:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
12765: Order:
12765:   lpo
12765: Leaf order:
12765:  b 3 0 3 1,2,2
12765:  c 3 0 3 2,2,2,2
12765:  a 6 0 6 1,2
12765:  join 16 2 4 0,2,2
12765:  meet 22 2 6 0,2
% SZS status Timeout for LAT145-1.p
NO CLASH, using fixed ground order
13612: Facts:
13612:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13612:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13612:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13612:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13612:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13612:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13612:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13612:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13612:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
13612: Goal:
13612:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
13612: Order:
13612:   nrkbo
13612: Leaf order:
13612:  c 2 0 2 1,2,2,2
13612:  a 3 0 3 1,2
13612:  d 3 0 3 2,2,2,2,2
13612:  b 4 0 4 1,2,2
13612:  meet 19 2 5 0,2
13612:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
13613: Facts:
13613:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13613:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13613:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13613:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13613:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13613:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13613:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13613:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13613:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =<=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
13613: Goal:
13613:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
13613: Order:
13613:   kbo
13613: Leaf order:
13613:  c 2 0 2 1,2,2,2
13613:  a 3 0 3 1,2
13613:  d 3 0 3 2,2,2,2,2
13613:  b 4 0 4 1,2,2
13613:  meet 19 2 5 0,2
13613:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
13614: Facts:
13614:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
13614:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
13614:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
13614:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
13614:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
13614:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
13614:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
13614:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
13614:  Id :  10, {_}:
          meet ?26 (join ?27 (join ?28 (meet ?26 ?29)))
          =?=
          meet ?26 (join ?27 (join ?28 (meet ?29 (join ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H37 ?26 ?27 ?28 ?29
13614: Goal:
13614:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (join b d)))))
          [] by prove_H43
13614: Order:
13614:   lpo
13614: Leaf order:
13614:  c 2 0 2 1,2,2,2
13614:  a 3 0 3 1,2
13614:  d 3 0 3 2,2,2,2,2
13614:  b 4 0 4 1,2,2
13614:  meet 19 2 5 0,2
13614:  join 19 2 5 0,2,2
% SZS status Timeout for LAT149-1.p
NO CLASH, using fixed ground order
14638: Facts:
14638:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14638:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14638:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14638:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14638:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14638:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14638:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14638:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14638:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
14638: Goal:
14638:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
14638: Order:
14638:   nrkbo
14638: Leaf order:
14638:  c 2 0 2 2,2,2,2
14638:  b 4 0 4 1,2,2
14638:  a 6 0 6 1,2
14638:  join 18 2 4 0,2,2
14638:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
14639: Facts:
14639:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14639:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14639:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14639:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14639:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14639:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14639:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14639:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14639:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
14639: Goal:
14639:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
14639: Order:
NO CLASH, using fixed ground order
14640: Facts:
14640:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
14640:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
14640:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
14640:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
14640:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
14640:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
14640:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
14640:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
14640:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?28 (join ?26 ?27)))))
          [29, 28, 27, 26] by equation_H40 ?26 ?27 ?28 ?29
14640: Goal:
14640:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet a (join (meet a b) (meet c (join a b)))))
          [] by prove_H7
14640: Order:
14640:   lpo
14640: Leaf order:
14640:  c 2 0 2 2,2,2,2
14640:  b 4 0 4 1,2,2
14640:  a 6 0 6 1,2
14640:  join 18 2 4 0,2,2
14640:  meet 20 2 6 0,2
14639:   kbo
14639: Leaf order:
14639:  c 2 0 2 2,2,2,2
14639:  b 4 0 4 1,2,2
14639:  a 6 0 6 1,2
14639:  join 18 2 4 0,2,2
14639:  meet 20 2 6 0,2
% SZS status Timeout for LAT153-1.p
NO CLASH, using fixed ground order
15430: Facts:
15430:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15430:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15430:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15430:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15430:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15430:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15430:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15430:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15430:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
15430: Goal:
15430:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
15430: Order:
15430:   nrkbo
15430: Leaf order:
15430:  a 4 0 4 1,2
15430:  b 4 0 4 1,2,2
15430:  c 4 0 4 2,2,2,2
15430:  join 18 2 4 0,2,2
15430:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
15431: Facts:
15431:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15431:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15431:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15431:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15431:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15431:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15431:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15431:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15431:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
15431: Goal:
15431:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
15431: Order:
15431:   kbo
15431: Leaf order:
15431:  a 4 0 4 1,2
15431:  b 4 0 4 1,2,2
15431:  c 4 0 4 2,2,2,2
15431:  join 18 2 4 0,2,2
15431:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
15432: Facts:
15432:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
15432:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
15432:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
15432:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
15432:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
15432:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
15432:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
15432:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
15432:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
15432: Goal:
15432:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join (meet a (join b c)) (meet b c))))
          [] by prove_H2
15432: Order:
15432:   lpo
15432: Leaf order:
15432:  a 4 0 4 1,2
15432:  b 4 0 4 1,2,2
15432:  c 4 0 4 2,2,2,2
15432:  join 18 2 4 0,2,2
15432:  meet 20 2 6 0,2
% SZS status Timeout for LAT157-1.p
NO CLASH, using fixed ground order
16370: Facts:
16370:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
16370:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
16370:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
16370:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
16370:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
16370:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
16370:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
16370:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
16370:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
16370: Goal:
16370:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
16370: Order:
16370:   nrkbo
16370: Leaf order:
16370:  d 2 0 2 2,2,2,2,2
16370:  b 3 0 3 1,2,2
16370:  c 3 0 3 1,2,2,2
16370:  a 4 0 4 1,2
16370:  meet 19 2 5 0,2
16370:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
16387: Facts:
16387:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
16387:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
16387:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
16387:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
16387:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
16387:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
16387:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
16387:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
16387:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
16387: Goal:
16387:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
16387: Order:
16387:   kbo
16387: Leaf order:
16387:  d 2 0 2 2,2,2,2,2
16387:  b 3 0 3 1,2,2
16387:  c 3 0 3 1,2,2,2
16387:  a 4 0 4 1,2
16387:  meet 19 2 5 0,2
16387:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
16398: Facts:
16398:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
16398:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
16398:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
16398:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
16398:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
16398:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
16398:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
16398:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
16398:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?26 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?26 (meet ?28 (join ?27 ?29)))))
          [29, 28, 27, 26] by equation_H50 ?26 ?27 ?28 ?29
16398: Goal:
16398:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (join (meet a c) (meet c (join b d))))
          [] by prove_H49
16398: Order:
16398:   lpo
16398: Leaf order:
16398:  d 2 0 2 2,2,2,2,2
16398:  b 3 0 3 1,2,2
16398:  c 3 0 3 1,2,2,2
16398:  a 4 0 4 1,2
16398:  meet 19 2 5 0,2
16398:  join 19 2 5 0,2,2
% SZS status Timeout for LAT158-1.p
NO CLASH, using fixed ground order
17619: Facts:
17619:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17619:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17619:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17619:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17619:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17619:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17619:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17619:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17619:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17619: Goal:
17619:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
17619: Order:
17619:   nrkbo
17619: Leaf order:
17619:  c 2 0 2 1,2,2,2,2
17619:  b 3 0 3 1,2,2
17619:  d 3 0 3 2,2,2,2,2
17619:  a 4 0 4 1,2
17619:  join 16 2 3 0,2,2
17619:  meet 21 2 7 0,2
NO CLASH, using fixed ground order
17620: Facts:
17620:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17620:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17620:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17620:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17620:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17620:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17620:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17620:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17620:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17620: Goal:
NO CLASH, using fixed ground order
17620:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
17620: Order:
17620:   kbo
17620: Leaf order:
17620:  c 2 0 2 1,2,2,2,2
17620:  b 3 0 3 1,2,2
17620:  d 3 0 3 2,2,2,2,2
17620:  a 4 0 4 1,2
17620:  join 16 2 3 0,2,2
17620:  meet 21 2 7 0,2
17622: Facts:
17622:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17622:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17622:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17622:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17622:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17622:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17622:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17622:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17622:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17622: Goal:
17622:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
17622: Order:
17622:   lpo
17622: Leaf order:
17622:  c 2 0 2 1,2,2,2,2
17622:  b 3 0 3 1,2,2
17622:  d 3 0 3 2,2,2,2,2
17622:  a 4 0 4 1,2
17622:  join 16 2 3 0,2,2
17622:  meet 21 2 7 0,2
% SZS status Timeout for LAT163-1.p
NO CLASH, using fixed ground order
17778: Facts:
17778:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17778:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17778:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17778:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17778:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17778:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17778:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17778:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17778:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17778: Goal:
17778:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
17778: Order:
17778:   nrkbo
17778: Leaf order:
17778:  d 2 0 2 2,2,2,2,2
17778:  a 3 0 3 1,2
17778:  c 3 0 3 1,2,2,2
17778:  b 4 0 4 1,2,2
17778:  join 17 2 4 0,2,2
17778:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
17779: Facts:
17779:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17779:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17779:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17779:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17779:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17779:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17779:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17779:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17779:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17779: Goal:
17779:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
17779: Order:
17779:   kbo
17779: Leaf order:
17779:  d 2 0 2 2,2,2,2,2
17779:  a 3 0 3 1,2
17779:  c 3 0 3 1,2,2,2
17779:  b 4 0 4 1,2,2
17779:  join 17 2 4 0,2,2
17779:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
17780: Facts:
17780:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
17780:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
17780:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
17780:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
17780:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
17780:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
17780:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
17780:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
17780:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 ?27))))
          [29, 28, 27, 26] by equation_H76 ?26 ?27 ?28 ?29
17780: Goal:
17780:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
17780: Order:
17780:   lpo
17780: Leaf order:
17780:  d 2 0 2 2,2,2,2,2
17780:  a 3 0 3 1,2
17780:  c 3 0 3 1,2,2,2
17780:  b 4 0 4 1,2,2
17780:  join 17 2 4 0,2,2
17780:  meet 20 2 6 0,2
% SZS status Timeout for LAT165-1.p
NO CLASH, using fixed ground order
18025: Facts:
18025:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18025:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18025:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18025:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18025:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18025:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18025:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18025:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18025:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
18025: Goal:
18025:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
18025: Order:
18025:   nrkbo
18025: Leaf order:
18025:  c 2 0 2 1,2,2,2
18025:  a 3 0 3 1,2
18025:  d 3 0 3 2,2,2,2,2
18025:  b 4 0 4 1,2,2
18025:  join 18 2 5 0,2,2
18025:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
18026: Facts:
18026:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18026:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18026:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18026:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18026:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18026:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18026:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18026:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18026:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
18026: Goal:
18026:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
18026: Order:
18026:   kbo
18026: Leaf order:
18026:  c 2 0 2 1,2,2,2
18026:  a 3 0 3 1,2
18026:  d 3 0 3 2,2,2,2,2
18026:  b 4 0 4 1,2,2
18026:  join 18 2 5 0,2,2
18026:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
18027: Facts:
18027:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18027:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18027:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18027:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18027:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18027:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18027:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18027:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18027:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =?=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?26 (meet ?27 ?28)))))
          [29, 28, 27, 26] by equation_H77 ?26 ?27 ?28 ?29
18027: Goal:
18027:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet b (join a d)))))
          [] by prove_H78
18027: Order:
18027:   lpo
18027: Leaf order:
18027:  c 2 0 2 1,2,2,2
18027:  a 3 0 3 1,2
18027:  d 3 0 3 2,2,2,2,2
18027:  b 4 0 4 1,2,2
18027:  join 18 2 5 0,2,2
18027:  meet 20 2 5 0,2
% SZS status Timeout for LAT166-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
18051: Facts:
18051:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18051:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18051:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18051:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18051:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18051:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18051:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18051:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18051:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
18051: Goal:
18051:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
18051: Order:
18051:   kbo
18051: Leaf order:
18051:  d 2 0 2 2,2,2,2,2
18051:  a 3 0 3 1,2
18051:  c 3 0 3 1,2,2,2
18051:  b 4 0 4 1,2,2
18051:  join 18 2 4 0,2,2
18051:  meet 20 2 6 0,2
NO CLASH, using fixed ground order
18052: Facts:
18052:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18052:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18052:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18052:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18052:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18052:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18052:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18052:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18052:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
18052: Goal:
18052:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
18052: Order:
18052:   lpo
18052: Leaf order:
18052:  d 2 0 2 2,2,2,2,2
18052:  a 3 0 3 1,2
18052:  c 3 0 3 1,2,2,2
18052:  b 4 0 4 1,2,2
18052:  join 18 2 4 0,2,2
18052:  meet 20 2 6 0,2
18050: Facts:
18050:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18050:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18050:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18050:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18050:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18050:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18050:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18050:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18050:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?28 (join ?27 ?29)))
          =<=
          meet ?26 (join ?27 (meet ?28 (join ?29 (meet ?27 (join ?26 ?29)))))
          [29, 28, 27, 26] by equation_H78 ?26 ?27 ?28 ?29
18050: Goal:
18050:  Id :   1, {_}:
          meet a (join b (meet c (join b d)))
          =<=
          meet a (join b (meet c (join d (meet a (meet b c)))))
          [] by prove_H77
18050: Order:
18050:   nrkbo
18050: Leaf order:
18050:  d 2 0 2 2,2,2,2,2
18050:  a 3 0 3 1,2
18050:  c 3 0 3 1,2,2,2
18050:  b 4 0 4 1,2,2
18050:  join 18 2 4 0,2,2
18050:  meet 20 2 6 0,2
% SZS status Timeout for LAT167-1.p
NO CLASH, using fixed ground order
18084: Facts:
18084:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18084:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18084:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18084:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18084:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18084:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18084:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18084:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18084:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18084: Goal:
18084:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
18084: Order:
18084:   nrkbo
18084: Leaf order:
18084:  c 2 0 2 1,2,2,2,2
18084:  b 3 0 3 1,2,2
18084:  d 3 0 3 2,2,2,2,2
18084:  a 4 0 4 1,2
18084:  join 17 2 3 0,2,2
18084:  meet 20 2 7 0,2
NO CLASH, using fixed ground order
18085: Facts:
18085:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18085:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18085:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18085:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18085:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18085:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18085:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18085:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18085:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18085: Goal:
18085:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
18085: Order:
18085:   kbo
18085: Leaf order:
18085:  c 2 0 2 1,2,2,2,2
18085:  b 3 0 3 1,2,2
18085:  d 3 0 3 2,2,2,2,2
18085:  a 4 0 4 1,2
18085:  join 17 2 3 0,2,2
18085:  meet 20 2 7 0,2
NO CLASH, using fixed ground order
18086: Facts:
18086:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18086:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18086:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18086:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18086:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18086:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18086:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18086:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18086:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18086: Goal:
18086:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
18086: Order:
18086:   lpo
18086: Leaf order:
18086:  c 2 0 2 1,2,2,2,2
18086:  b 3 0 3 1,2,2
18086:  d 3 0 3 2,2,2,2,2
18086:  a 4 0 4 1,2
18086:  join 17 2 3 0,2,2
18086:  meet 20 2 7 0,2
% SZS status Timeout for LAT172-1.p
NO CLASH, using fixed ground order
18325: Facts:
18325:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18325:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18325:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18325:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18325:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18325:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18325:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18325:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18325:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18325: Goal:
18325:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
18325: Order:
18325:   nrkbo
18325: Leaf order:
18325:  d 2 0 2 2,2,2,2,2
18325:  b 3 0 3 1,2,2
18325:  c 3 0 3 1,2,2,2
18325:  a 4 0 4 1,2
18325:  meet 18 2 5 0,2
18325:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
18329: Facts:
18329:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18329:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18329:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18329:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18329:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18329:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18329:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18329:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18329:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =<=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18329: Goal:
18329:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
18329: Order:
18329:   kbo
18329: Leaf order:
18329:  d 2 0 2 2,2,2,2,2
18329:  b 3 0 3 1,2,2
18329:  c 3 0 3 1,2,2,2
18329:  a 4 0 4 1,2
18329:  meet 18 2 5 0,2
18329:  join 19 2 5 0,2,2
NO CLASH, using fixed ground order
18330: Facts:
18330:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
18330:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
18330:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
18330:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
18330:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
18330:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
18330:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
18330:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
18330:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?27 ?29)))
          =?=
          join ?26 (meet ?27 (join ?28 (meet ?29 (join ?26 ?27))))
          [29, 28, 27, 26] by equation_H76_dual ?26 ?27 ?28 ?29
18330: Goal:
18330:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join d (meet c (join a b)))))
          [] by prove_H40
18330: Order:
18330:   lpo
18330: Leaf order:
18330:  d 2 0 2 2,2,2,2,2
18330:  b 3 0 3 1,2,2
18330:  c 3 0 3 1,2,2,2
18330:  a 4 0 4 1,2
18330:  meet 18 2 5 0,2
18330:  join 19 2 5 0,2,2
% SZS status Timeout for LAT173-1.p
NO CLASH, using fixed ground order
19752: Facts:
19752:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19752:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19752:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19752:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19752:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19752:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19752:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
NO CLASH, using fixed ground order
19755: Facts:
19755:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19755:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19755:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19755:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19755:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19755:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19755:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19755:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
NO CLASH, using fixed ground order
19757: Facts:
19757:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
19757:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
19757:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
19757:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
19757:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
19757:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
19757:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
19757:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19757:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
19757: Goal:
19757:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =>=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
19757: Order:
19757:   lpo
19757: Leaf order:
19757:  c 2 0 2 1,2,2,2,2
19757:  b 3 0 3 1,2,2
19757:  d 3 0 3 2,2,2,2,2
19757:  a 4 0 4 1,2
19757:  join 18 2 3 0,2,2
19757:  meet 20 2 7 0,2
19752:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
19752:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
19752: Goal:
19752:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
19752: Order:
19752:   nrkbo
19752: Leaf order:
19752:  c 2 0 2 1,2,2,2,2
19752:  b 3 0 3 1,2,2
19752:  d 3 0 3 2,2,2,2,2
19752:  a 4 0 4 1,2
19752:  join 18 2 3 0,2,2
19752:  meet 20 2 7 0,2
19755:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
19755: Goal:
19755:  Id :   1, {_}:
          meet a (join b (meet a (meet c d)))
          =<=
          meet a (join b (meet c (join (meet a d) (meet b d))))
          [] by prove_H32
19755: Order:
19755:   kbo
19755: Leaf order:
19755:  c 2 0 2 1,2,2,2,2
19755:  b 3 0 3 1,2,2
19755:  d 3 0 3 2,2,2,2,2
19755:  a 4 0 4 1,2
19755:  join 18 2 3 0,2,2
19755:  meet 20 2 7 0,2
% SZS status Timeout for LAT175-1.p
NO CLASH, using fixed ground order
21153: Facts:
21153:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21153:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21153:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
21153:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
21153:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
21153:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
21153:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
21153:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
21153:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
21153: Goal:
21153:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
21153: Order:
21153:   nrkbo
21153: Leaf order:
21153:  d 2 0 2 2,2,2,2,2
21153:  b 3 0 3 1,2,2
21153:  c 3 0 3 1,2,2,2
21153:  a 4 0 4 1,2
21153:  meet 18 2 5 0,2
21153:  join 20 2 5 0,2,2
NO CLASH, using fixed ground order
21154: Facts:
21154:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21154:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21154:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
21154:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
21154:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
21154:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
21154:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
21154:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
21154:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
21154: Goal:
21154:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =<=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
21154: Order:
21154:   kbo
21154: Leaf order:
21154:  d 2 0 2 2,2,2,2,2
21154:  b 3 0 3 1,2,2
21154:  c 3 0 3 1,2,2,2
21154:  a 4 0 4 1,2
21154:  meet 18 2 5 0,2
21154:  join 20 2 5 0,2,2
NO CLASH, using fixed ground order
21155: Facts:
21155:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
21155:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
21155:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
21155:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
21155:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
21155:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
21155:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
21155:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
21155:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =?=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
21155: Goal:
21155:  Id :   1, {_}:
          meet a (join b (meet c (join a d)))
          =>=
          meet a (join b (meet c (join b (join d (meet a c)))))
          [] by prove_H42
21155: Order:
21155:   lpo
21155: Leaf order:
21155:  d 2 0 2 2,2,2,2,2
21155:  b 3 0 3 1,2,2
21155:  c 3 0 3 1,2,2,2
21155:  a 4 0 4 1,2
21155:  meet 18 2 5 0,2
21155:  join 20 2 5 0,2,2
% SZS status Timeout for LAT176-1.p
NO CLASH, using fixed ground order
23137: Facts:
23137:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23137:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23137:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
23137:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
23137:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
23137:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
23137:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
23137:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
23137:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
23137:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
23137:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
23137: Goal:
23137:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
23137: Order:
23137:   nrkbo
23137: Leaf order:
23137:  b 2 0 1 1,2
23137:  a 2 0 1 2,2
23137:  c 2 0 1 3
23137:  additive_identity 4 0 0 
23137:  additive_inverse 2 1 0 
23137:  add 14 2 0 
23137:  multiply 15 2 1 0,2
NO CLASH, using fixed ground order
23138: Facts:
23138:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23138:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23138:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
23138:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
23138:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
23138:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
23138:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
23138:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
23138:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
23138:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
23138:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
23138: Goal:
23138:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
23138: Order:
23138:   kbo
23138: Leaf order:
23138:  b 2 0 1 1,2
23138:  a 2 0 1 2,2
23138:  c 2 0 1 3
23138:  additive_identity 4 0 0 
23138:  additive_inverse 2 1 0 
23138:  add 14 2 0 
23138:  multiply 15 2 1 0,2
NO CLASH, using fixed ground order
23139: Facts:
23139:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
23139:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
23139:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
23139:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
23139:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
23139:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
23139:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
23139:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
23139:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
23139:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 ?29)) =>= ?29
          [29] by x_fourthed_is_x ?29
23139:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
23139: Goal:
23139:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
23139: Order:
23139:   lpo
23139: Leaf order:
23139:  b 2 0 1 1,2
23139:  a 2 0 1 2,2
23139:  c 2 0 1 3
23139:  additive_identity 4 0 0 
23139:  additive_inverse 2 1 0 
23139:  add 14 2 0 
23139:  multiply 15 2 1 0,2
% SZS status Timeout for RNG035-7.p
NO CLASH, using fixed ground order
23161: Facts:
NO CLASH, using fixed ground order
23162: Facts:
23162:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23162: Goal:
23162:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23162: Order:
23162:   kbo
23162: Leaf order:
23162:  b 1 0 1 1,2,2
23162:  a 4 0 4 1,1,2
23162:  nand 9 2 3 0,2
23161:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23161: Goal:
23161:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23161: Order:
23161:   nrkbo
23161: Leaf order:
23161:  b 1 0 1 1,2,2
23161:  a 4 0 4 1,1,2
23161:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23163: Facts:
23163:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23163: Goal:
23163:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23163: Order:
23163:   lpo
23163: Leaf order:
23163:  b 1 0 1 1,2,2
23163:  a 4 0 4 1,1,2
23163:  nand 9 2 3 0,2
% SZS status Timeout for BOO077-1.p
NO CLASH, using fixed ground order
23212: Facts:
23212:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23212: Goal:
23212:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23212: Order:
23212:   nrkbo
23212: Leaf order:
23212:  c 2 0 2 2,2,2,2
23212:  a 3 0 3 1,2
23212:  b 3 0 3 1,2,2
23212:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23213: Facts:
23213:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23213: Goal:
23213:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23213: Order:
23213:   kbo
23213: Leaf order:
23213:  c 2 0 2 2,2,2,2
23213:  a 3 0 3 1,2
23213:  b 3 0 3 1,2,2
23213:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23214: Facts:
23214:  Id :   2, {_}:
          nand (nand ?2 (nand (nand ?3 ?2) ?2)) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c1 ?2 ?3 ?4
23214: Goal:
23214:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23214: Order:
23214:   lpo
23214: Leaf order:
23214:  c 2 0 2 2,2,2,2
23214:  a 3 0 3 1,2
23214:  b 3 0 3 1,2,2
23214:  nand 12 2 6 0,2
% SZS status Timeout for BOO078-1.p
NO CLASH, using fixed ground order
23320: Facts:
23320:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23320: Goal:
23320:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23320: Order:
23320:   nrkbo
23320: Leaf order:
23320:  b 1 0 1 1,2,2
23320:  a 4 0 4 1,1,2
23320:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23321: Facts:
23321:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23321: Goal:
23321:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23321: Order:
23321:   kbo
23321: Leaf order:
23321:  b 1 0 1 1,2,2
23321:  a 4 0 4 1,1,2
23321:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23322: Facts:
23322:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23322: Goal:
23322:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23322: Order:
23322:   lpo
23322: Leaf order:
23322:  b 1 0 1 1,2,2
23322:  a 4 0 4 1,1,2
23322:  nand 9 2 3 0,2
% SZS status Timeout for BOO079-1.p
NO CLASH, using fixed ground order
23351: Facts:
23351:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23351: Goal:
NO CLASH, using fixed ground order
23352: Facts:
23352:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23352: Goal:
23352:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23352: Order:
23352:   kbo
23352: Leaf order:
23352:  c 2 0 2 2,2,2,2
23352:  a 3 0 3 1,2
23352:  b 3 0 3 1,2,2
23352:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23353: Facts:
23353:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?2))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c2 ?2 ?3 ?4
23353: Goal:
23353:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23353: Order:
23353:   lpo
23353: Leaf order:
23353:  c 2 0 2 2,2,2,2
23353:  a 3 0 3 1,2
23353:  b 3 0 3 1,2,2
23353:  nand 12 2 6 0,2
23351:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23351: Order:
23351:   nrkbo
23351: Leaf order:
23351:  c 2 0 2 2,2,2,2
23351:  a 3 0 3 1,2
23351:  b 3 0 3 1,2,2
23351:  nand 12 2 6 0,2
% SZS status Timeout for BOO080-1.p
NO CLASH, using fixed ground order
23376: Facts:
23376:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23376: Goal:
23376:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23376: Order:
23376:   nrkbo
23376: Leaf order:
23376:  b 1 0 1 1,2,2
23376:  a 4 0 4 1,1,2
23376:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23377: Facts:
23377:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23377: Goal:
23377:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23377: Order:
23377:   kbo
23377: Leaf order:
23377:  b 1 0 1 1,2,2
23377:  a 4 0 4 1,1,2
23377:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23378: Facts:
23378:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23378: Goal:
23378:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23378: Order:
23378:   lpo
23378: Leaf order:
23378:  b 1 0 1 1,2,2
23378:  a 4 0 4 1,1,2
23378:  nand 9 2 3 0,2
% SZS status Timeout for BOO081-1.p
NO CLASH, using fixed ground order
23400: Facts:
23400:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23400: Goal:
23400:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23400: Order:
23400:   nrkbo
23400: Leaf order:
23400:  c 2 0 2 2,2,2,2
23400:  a 3 0 3 1,2
23400:  b 3 0 3 1,2,2
23400:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23401: Facts:
23401:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23401: Goal:
23401:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23401: Order:
23401:   kbo
23401: Leaf order:
23401:  c 2 0 2 2,2,2,2
23401:  a 3 0 3 1,2
23401:  b 3 0 3 1,2,2
23401:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23402: Facts:
23402:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c3 ?2 ?3 ?4
23402: Goal:
23402:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23402: Order:
23402:   lpo
23402: Leaf order:
23402:  c 2 0 2 2,2,2,2
23402:  a 3 0 3 1,2
23402:  b 3 0 3 1,2,2
23402:  nand 12 2 6 0,2
% SZS status Timeout for BOO082-1.p
NO CLASH, using fixed ground order
23425: Facts:
23425:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23425: Goal:
23425:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23425: Order:
23425:   nrkbo
23425: Leaf order:
23425:  b 1 0 1 1,2,2
23425:  a 4 0 4 1,1,2
23425:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23426: Facts:
23426:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23426: Goal:
23426:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23426: Order:
23426:   kbo
23426: Leaf order:
23426:  b 1 0 1 1,2,2
23426:  a 4 0 4 1,1,2
23426:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23427: Facts:
23427:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23427: Goal:
23427:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23427: Order:
23427:   lpo
23427: Leaf order:
23427:  b 1 0 1 1,2,2
23427:  a 4 0 4 1,1,2
23427:  nand 9 2 3 0,2
% SZS status Timeout for BOO083-1.p
NO CLASH, using fixed ground order
23456: Facts:
23456:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23456: Goal:
23456:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23456: Order:
23456:   nrkbo
23456: Leaf order:
23456:  c 2 0 2 2,2,2,2
23456:  a 3 0 3 1,2
23456:  b 3 0 3 1,2,2
23456:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
23458: Facts:
23458:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23458: Goal:
23458:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23458: Order:
23458:   lpo
23458: Leaf order:
23458:  c 2 0 2 2,2,2,2
23458:  a 3 0 3 1,2
23458:  b 3 0 3 1,2,2
23458:  nand 12 2 6 0,2
23457: Facts:
23457:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?2 ?3))) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c4 ?2 ?3 ?4
23457: Goal:
23457:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23457: Order:
23457:   kbo
23457: Leaf order:
23457:  c 2 0 2 2,2,2,2
23457:  a 3 0 3 1,2
23457:  b 3 0 3 1,2,2
23457:  nand 12 2 6 0,2
% SZS status Timeout for BOO084-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
23485: Facts:
23485:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23485: Goal:
23485:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23485: Order:
23485:   kbo
23485: Leaf order:
23485:  b 1 0 1 1,2,2
23485:  a 4 0 4 1,1,2
23485:  nand 9 2 3 0,2
23484: Facts:
23484:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23484: Goal:
23484:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23484: Order:
23484:   nrkbo
23484: Leaf order:
23484:  b 1 0 1 1,2,2
23484:  a 4 0 4 1,1,2
23484:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23486: Facts:
23486:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23486: Goal:
23486:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23486: Order:
23486:   lpo
23486: Leaf order:
23486:  b 1 0 1 1,2,2
23486:  a 4 0 4 1,1,2
23486:  nand 9 2 3 0,2
% SZS status Timeout for BOO085-1.p
NO CLASH, using fixed ground order
23521: Facts:
23521:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23521: Goal:
23521:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23521: Order:
23521:   nrkbo
23521: Leaf order:
23521:  c 2 0 2 2,2,2,2
23521:  a 3 0 3 1,2
23521:  b 3 0 3 1,2,2
23521:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23522: Facts:
23522:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23522: Goal:
23522:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23522: Order:
23522:   kbo
23522: Leaf order:
23522:  c 2 0 2 2,2,2,2
23522:  a 3 0 3 1,2
23522:  b 3 0 3 1,2,2
23522:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23523: Facts:
23523:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c5 ?2 ?3 ?4
23523: Goal:
23523:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23523: Order:
23523:   lpo
23523: Leaf order:
23523:  c 2 0 2 2,2,2,2
23523:  a 3 0 3 1,2
23523:  b 3 0 3 1,2,2
23523:  nand 12 2 6 0,2
% SZS status Timeout for BOO086-1.p
NO CLASH, using fixed ground order
23545: Facts:
23545:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23545: Goal:
23545:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23545: Order:
23545:   nrkbo
23545: Leaf order:
23545:  b 1 0 1 1,2,2
23545:  a 4 0 4 1,1,2
23545:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23546: Facts:
23546:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23546: Goal:
23546:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23546: Order:
23546:   kbo
23546: Leaf order:
23546:  b 1 0 1 1,2,2
23546:  a 4 0 4 1,1,2
23546:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23547: Facts:
23547:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23547: Goal:
23547:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23547: Order:
23547:   lpo
23547: Leaf order:
23547:  b 1 0 1 1,2,2
23547:  a 4 0 4 1,1,2
23547:  nand 9 2 3 0,2
% SZS status Timeout for BOO087-1.p
NO CLASH, using fixed ground order
23572: Facts:
23572:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23572: Goal:
23572:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23572: Order:
23572:   nrkbo
23572: Leaf order:
23572:  c 2 0 2 2,2,2,2
23572:  a 3 0 3 1,2
23572:  b 3 0 3 1,2,2
23572:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23573: Facts:
23573:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23573: Goal:
23573:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23573: Order:
23573:   kbo
23573: Leaf order:
23573:  c 2 0 2 2,2,2,2
23573:  a 3 0 3 1,2
23573:  b 3 0 3 1,2,2
23573:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23574: Facts:
23574:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?4))) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c6 ?2 ?3 ?4
23574: Goal:
23574:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23574: Order:
23574:   lpo
23574: Leaf order:
23574:  c 2 0 2 2,2,2,2
23574:  a 3 0 3 1,2
23574:  b 3 0 3 1,2,2
23574:  nand 12 2 6 0,2
% SZS status Timeout for BOO088-1.p
NO CLASH, using fixed ground order
23605: Facts:
23605:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23605: Goal:
23605:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23605: Order:
23605:   nrkbo
23605: Leaf order:
23605:  b 1 0 1 1,2,2
23605:  a 4 0 4 1,1,2
23605:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23606: Facts:
23606:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23606: Goal:
23606:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23606: Order:
23606:   kbo
23606: Leaf order:
23606:  b 1 0 1 1,2,2
23606:  a 4 0 4 1,1,2
23606:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23607: Facts:
23607:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23607: Goal:
23607:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23607: Order:
23607:   lpo
23607: Leaf order:
23607:  b 1 0 1 1,2,2
23607:  a 4 0 4 1,1,2
23607:  nand 9 2 3 0,2
% SZS status Timeout for BOO089-1.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
23696: Facts:
23696:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23696: Goal:
23696:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23696: Order:
23696:   kbo
23696: Leaf order:
23696:  c 2 0 2 2,2,2,2
23696:  a 3 0 3 1,2
23696:  b 3 0 3 1,2,2
23696:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23697: Facts:
23697:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23697: Goal:
23697:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23697: Order:
23697:   lpo
23697: Leaf order:
23697:  c 2 0 2 2,2,2,2
23697:  a 3 0 3 1,2
23697:  b 3 0 3 1,2,2
23697:  nand 12 2 6 0,2
23695: Facts:
23695:  Id :   2, {_}:
          nand (nand ?2 (nand ?2 (nand ?3 ?3))) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c7 ?2 ?3 ?4
23695: Goal:
23695:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23695: Order:
23695:   nrkbo
23695: Leaf order:
23695:  c 2 0 2 2,2,2,2
23695:  a 3 0 3 1,2
23695:  b 3 0 3 1,2,2
23695:  nand 12 2 6 0,2
% SZS status Timeout for BOO090-1.p
NO CLASH, using fixed ground order
23723: Facts:
23723:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23723: Goal:
23723:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23723: Order:
23723:   nrkbo
23723: Leaf order:
23723:  b 1 0 1 1,2,2
23723:  a 4 0 4 1,1,2
23723:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23724: Facts:
23724:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23724: Goal:
23724:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23724: Order:
23724:   kbo
23724: Leaf order:
23724:  b 1 0 1 1,2,2
23724:  a 4 0 4 1,1,2
23724:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23725: Facts:
23725:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23725: Goal:
23725:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23725: Order:
23725:   lpo
23725: Leaf order:
23725:  b 1 0 1 1,2,2
23725:  a 4 0 4 1,1,2
23725:  nand 9 2 3 0,2
% SZS status Timeout for BOO091-1.p
NO CLASH, using fixed ground order
23747: Facts:
23747:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23747: Goal:
23747:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23747: Order:
23747:   nrkbo
23747: Leaf order:
23747:  c 2 0 2 2,2,2,2
23747:  a 3 0 3 1,2
23747:  b 3 0 3 1,2,2
23747:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23748: Facts:
23748:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23748: Goal:
23748:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23748: Order:
23748:   kbo
23748: Leaf order:
23748:  c 2 0 2 2,2,2,2
23748:  a 3 0 3 1,2
23748:  b 3 0 3 1,2,2
23748:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23749: Facts:
23749:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c8 ?2 ?3 ?4
23749: Goal:
23749:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23749: Order:
23749:   lpo
23749: Leaf order:
23749:  c 2 0 2 2,2,2,2
23749:  a 3 0 3 1,2
23749:  b 3 0 3 1,2,2
23749:  nand 12 2 6 0,2
% SZS status Timeout for BOO092-1.p
NO CLASH, using fixed ground order
23772: Facts:
23772:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23772: Goal:
NO CLASH, using fixed ground order
23773: Facts:
23773:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23773: Goal:
23773:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23773: Order:
23773:   kbo
23773: Leaf order:
23773:  b 1 0 1 1,2,2
23773:  a 4 0 4 1,1,2
23773:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23774: Facts:
23774:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23774: Goal:
23774:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23774: Order:
23774:   lpo
23774: Leaf order:
23774:  b 1 0 1 1,2,2
23774:  a 4 0 4 1,1,2
23774:  nand 9 2 3 0,2
23772:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23772: Order:
23772:   nrkbo
23772: Leaf order:
23772:  b 1 0 1 1,2,2
23772:  a 4 0 4 1,1,2
23772:  nand 9 2 3 0,2
% SZS status Timeout for BOO093-1.p
NO CLASH, using fixed ground order
23798: Facts:
23798:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23798: Goal:
23798:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23798: Order:
23798:   nrkbo
23798: Leaf order:
23798:  c 2 0 2 2,2,2,2
23798:  a 3 0 3 1,2
23798:  b 3 0 3 1,2,2
23798:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23799: Facts:
23799:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23799: Goal:
23799:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23799: Order:
23799:   kbo
23799: Leaf order:
23799:  c 2 0 2 2,2,2,2
23799:  a 3 0 3 1,2
23799:  b 3 0 3 1,2,2
23799:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23800: Facts:
23800:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?3)) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c9 ?2 ?3 ?4
23800: Goal:
23800:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23800: Order:
23800:   lpo
23800: Leaf order:
23800:  c 2 0 2 2,2,2,2
23800:  a 3 0 3 1,2
23800:  b 3 0 3 1,2,2
23800:  nand 12 2 6 0,2
% SZS status Timeout for BOO094-1.p
NO CLASH, using fixed ground order
23822: Facts:
23822:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23822: Goal:
23822:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23822: Order:
23822:   nrkbo
23822: Leaf order:
23822:  b 1 0 1 1,2,2
23822:  a 4 0 4 1,1,2
23822:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23823: Facts:
23823:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23823: Goal:
23823:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23823: Order:
23823:   kbo
23823: Leaf order:
23823:  b 1 0 1 1,2,2
23823:  a 4 0 4 1,1,2
23823:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23824: Facts:
23824:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23824: Goal:
23824:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23824: Order:
23824:   lpo
23824: Leaf order:
23824:  b 1 0 1 1,2,2
23824:  a 4 0 4 1,1,2
23824:  nand 9 2 3 0,2
% SZS status Timeout for BOO095-1.p
NO CLASH, using fixed ground order
23854: Facts:
23854:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23854: Goal:
23854:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23854: Order:
23854:   nrkbo
23854: Leaf order:
23854:  c 2 0 2 2,2,2,2
23854:  a 3 0 3 1,2
23854:  b 3 0 3 1,2,2
23854:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23855: Facts:
23855:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23855: Goal:
23855:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23855: Order:
23855:   kbo
23855: Leaf order:
23855:  c 2 0 2 2,2,2,2
23855:  a 3 0 3 1,2
23855:  b 3 0 3 1,2,2
23855:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23856: Facts:
23856:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c10 ?2 ?3 ?4
23856: Goal:
23856:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23856: Order:
23856:   lpo
23856: Leaf order:
23856:  c 2 0 2 2,2,2,2
23856:  a 3 0 3 1,2
23856:  b 3 0 3 1,2,2
23856:  nand 12 2 6 0,2
% SZS status Timeout for BOO096-1.p
NO CLASH, using fixed ground order
23878: Facts:
23878:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23878: Goal:
23878:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23878: Order:
23878:   nrkbo
23878: Leaf order:
23878:  b 1 0 1 1,2,2
23878:  a 4 0 4 1,1,2
23878:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23879: Facts:
23879:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23879: Goal:
23879:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23879: Order:
23879:   kbo
23879: Leaf order:
23879:  b 1 0 1 1,2,2
23879:  a 4 0 4 1,1,2
23879:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23880: Facts:
23880:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23880: Goal:
23880:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23880: Order:
23880:   lpo
23880: Leaf order:
23880:  b 1 0 1 1,2,2
23880:  a 4 0 4 1,1,2
23880:  nand 9 2 3 0,2
% SZS status Timeout for BOO097-1.p
NO CLASH, using fixed ground order
23905: Facts:
23905:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23905: Goal:
23905:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23905: Order:
23905:   nrkbo
23905: Leaf order:
23905:  c 2 0 2 2,2,2,2
23905:  a 3 0 3 1,2
23905:  b 3 0 3 1,2,2
23905:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23906: Facts:
23906:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23906: Goal:
23906:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23906: Order:
23906:   kbo
23906: Leaf order:
23906:  c 2 0 2 2,2,2,2
23906:  a 3 0 3 1,2
23906:  b 3 0 3 1,2,2
23906:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23907: Facts:
23907:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?3 ?4)) ?2) (nand ?4 (nand ?2 ?3)) =>= ?4
          [4, 3, 2] by c11 ?2 ?3 ?4
23907: Goal:
23907:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23907: Order:
23907:   lpo
23907: Leaf order:
23907:  c 2 0 2 2,2,2,2
23907:  a 3 0 3 1,2
23907:  b 3 0 3 1,2,2
23907:  nand 12 2 6 0,2
% SZS status Timeout for BOO098-1.p
NO CLASH, using fixed ground order
23950: Facts:
23950:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23950: Goal:
23950:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23950: Order:
23950:   kbo
23950: Leaf order:
23950:  b 1 0 1 1,2,2
23950:  a 4 0 4 1,1,2
23950:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23951: Facts:
23951:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23951: Goal:
23951:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23951: Order:
23951:   lpo
23951: Leaf order:
23951:  b 1 0 1 1,2,2
23951:  a 4 0 4 1,1,2
23951:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
23949: Facts:
23949:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23949: Goal:
23949:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
23949: Order:
23949:   nrkbo
23949: Leaf order:
23949:  b 1 0 1 1,2,2
23949:  a 4 0 4 1,1,2
23949:  nand 9 2 3 0,2
% SZS status Timeout for BOO099-1.p
NO CLASH, using fixed ground order
23972: Facts:
23972:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23972: Goal:
23972:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23972: Order:
23972:   nrkbo
23972: Leaf order:
23972:  c 2 0 2 2,2,2,2
23972:  a 3 0 3 1,2
23972:  b 3 0 3 1,2,2
23972:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23973: Facts:
23973:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23973: Goal:
23973:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23973: Order:
23973:   kbo
23973: Leaf order:
23973:  c 2 0 2 2,2,2,2
23973:  a 3 0 3 1,2
23973:  b 3 0 3 1,2,2
23973:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
23974: Facts:
23974:  Id :   2, {_}:
          nand (nand (nand ?2 (nand ?2 ?3)) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c12 ?2 ?3 ?4
23974: Goal:
23974:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
23974: Order:
23974:   lpo
23974: Leaf order:
23974:  c 2 0 2 2,2,2,2
23974:  a 3 0 3 1,2
23974:  b 3 0 3 1,2,2
23974:  nand 12 2 6 0,2
% SZS status Timeout for BOO100-1.p
NO CLASH, using fixed ground order
24933: Facts:
24933:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24933: Goal:
24933:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24933: Order:
24933:   nrkbo
24933: Leaf order:
24933:  b 1 0 1 1,2,2
24933:  a 4 0 4 1,1,2
24933:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
24934: Facts:
24934:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24934: Goal:
24934:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24934: Order:
24934:   kbo
24934: Leaf order:
24934:  b 1 0 1 1,2,2
24934:  a 4 0 4 1,1,2
24934:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
24935: Facts:
24935:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24935: Goal:
24935:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24935: Order:
24935:   lpo
24935: Leaf order:
24935:  b 1 0 1 1,2,2
24935:  a 4 0 4 1,1,2
24935:  nand 9 2 3 0,2
% SZS status Timeout for BOO101-1.p
NO CLASH, using fixed ground order
24957: Facts:
NO CLASH, using fixed ground order
24958: Facts:
24958:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24958: Goal:
24958:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
24958: Order:
24958:   kbo
24958: Leaf order:
24958:  c 2 0 2 2,2,2,2
24958:  a 3 0 3 1,2
24958:  b 3 0 3 1,2,2
24958:  nand 12 2 6 0,2
24957:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24957: Goal:
24957:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
24957: Order:
24957:   nrkbo
24957: Leaf order:
24957:  c 2 0 2 2,2,2,2
24957:  a 3 0 3 1,2
24957:  b 3 0 3 1,2,2
24957:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
24959: Facts:
24959:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c13 ?2 ?3 ?4
24959: Goal:
24959:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
24959: Order:
24959:   lpo
24959: Leaf order:
24959:  c 2 0 2 2,2,2,2
24959:  a 3 0 3 1,2
24959:  b 3 0 3 1,2,2
24959:  nand 12 2 6 0,2
% SZS status Timeout for BOO102-1.p
NO CLASH, using fixed ground order
24983: Facts:
24983:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
24983: Goal:
24983:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24983: Order:
24983:   nrkbo
24983: Leaf order:
24983:  b 1 0 1 1,2,2
24983:  a 4 0 4 1,1,2
24983:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
24984: Facts:
24984:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
24984: Goal:
24984:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24984: Order:
24984:   kbo
24984: Leaf order:
24984:  b 1 0 1 1,2,2
24984:  a 4 0 4 1,1,2
24984:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
24985: Facts:
24985:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
24985: Goal:
24985:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
24985: Order:
24985:   lpo
24985: Leaf order:
24985:  b 1 0 1 1,2,2
24985:  a 4 0 4 1,1,2
24985:  nand 9 2 3 0,2
% SZS status Timeout for BOO103-1.p
NO CLASH, using fixed ground order
25006: Facts:
25006:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
25006: Goal:
25006:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25006: Order:
25006:   nrkbo
25006: Leaf order:
25006:  c 2 0 2 2,2,2,2
25006:  a 3 0 3 1,2
25006:  b 3 0 3 1,2,2
25006:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25007: Facts:
25007:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
25007: Goal:
25007:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25007: Order:
25007:   kbo
25007: Leaf order:
25007:  c 2 0 2 2,2,2,2
25007:  a 3 0 3 1,2
25007:  b 3 0 3 1,2,2
25007:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25008: Facts:
25008:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?2) ?2) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c14 ?2 ?3 ?4
25008: Goal:
25008:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25008: Order:
25008:   lpo
25008: Leaf order:
25008:  c 2 0 2 2,2,2,2
25008:  a 3 0 3 1,2
25008:  b 3 0 3 1,2,2
25008:  nand 12 2 6 0,2
% SZS status Timeout for BOO104-1.p
NO CLASH, using fixed ground order
25030: Facts:
25030:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25030: Goal:
25030:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25030: Order:
25030:   nrkbo
25030: Leaf order:
25030:  b 1 0 1 1,2,2
25030:  a 4 0 4 1,1,2
25030:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
25031: Facts:
25031:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25031: Goal:
25031:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25031: Order:
25031:   kbo
25031: Leaf order:
25031:  b 1 0 1 1,2,2
25031:  a 4 0 4 1,1,2
25031:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
25032: Facts:
25032:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25032: Goal:
25032:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25032: Order:
25032:   lpo
25032: Leaf order:
25032:  b 1 0 1 1,2,2
25032:  a 4 0 4 1,1,2
25032:  nand 9 2 3 0,2
% SZS status Timeout for BOO105-1.p
NO CLASH, using fixed ground order
25053: Facts:
25053:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25053: Goal:
25053:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25053: Order:
25053:   nrkbo
25053: Leaf order:
25053:  c 2 0 2 2,2,2,2
25053:  a 3 0 3 1,2
25053:  b 3 0 3 1,2,2
25053:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25054: Facts:
25054:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25054: Goal:
25054:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25054: Order:
25054:   kbo
25054: Leaf order:
25054:  c 2 0 2 2,2,2,2
25054:  a 3 0 3 1,2
25054:  b 3 0 3 1,2,2
25054:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25055: Facts:
25055:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?2 ?4)) =>= ?3
          [4, 3, 2] by c15 ?2 ?3 ?4
25055: Goal:
25055:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25055: Order:
25055:   lpo
25055: Leaf order:
25055:  c 2 0 2 2,2,2,2
25055:  a 3 0 3 1,2
25055:  b 3 0 3 1,2,2
25055:  nand 12 2 6 0,2
% SZS status Timeout for BOO106-1.p
NO CLASH, using fixed ground order
25082: Facts:
25082:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25082: Goal:
25082:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25082: Order:
25082:   nrkbo
25082: Leaf order:
25082:  b 1 0 1 1,2,2
25082:  a 4 0 4 1,1,2
25082:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
25083: Facts:
25083:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25083: Goal:
25083:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25083: Order:
25083:   kbo
25083: Leaf order:
25083:  b 1 0 1 1,2,2
25083:  a 4 0 4 1,1,2
25083:  nand 9 2 3 0,2
NO CLASH, using fixed ground order
25084: Facts:
25084:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25084: Goal:
25084:  Id :   1, {_}: nand (nand a a) (nand b a) =>= a [] by prove_meredith_2_basis_1
25084: Order:
25084:   lpo
25084: Leaf order:
25084:  b 1 0 1 1,2,2
25084:  a 4 0 4 1,1,2
25084:  nand 9 2 3 0,2
% SZS status Timeout for BOO107-1.p
NO CLASH, using fixed ground order
25109: Facts:
25109:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25109: Goal:
25109:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25109: Order:
25109:   nrkbo
25109: Leaf order:
25109:  c 2 0 2 2,2,2,2
25109:  a 3 0 3 1,2
25109:  b 3 0 3 1,2,2
25109:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25110: Facts:
25110:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25110: Goal:
25110:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25110: Order:
25110:   kbo
25110: Leaf order:
25110:  c 2 0 2 2,2,2,2
25110:  a 3 0 3 1,2
25110:  b 3 0 3 1,2,2
25110:  nand 12 2 6 0,2
NO CLASH, using fixed ground order
25111: Facts:
25111:  Id :   2, {_}:
          nand (nand (nand (nand ?2 ?3) ?4) ?4) (nand ?3 (nand ?4 ?2)) =>= ?3
          [4, 3, 2] by c16 ?2 ?3 ?4
25111: Goal:
25111:  Id :   1, {_}:
          nand a (nand b (nand a c)) =<= nand (nand (nand c b) b) a
          [] by prove_meredith_2_basis_2
25111: Order:
25111:   lpo
25111: Leaf order:
25111:  c 2 0 2 2,2,2,2
25111:  a 3 0 3 1,2
25111:  b 3 0 3 1,2,2
25111:  nand 12 2 6 0,2
% SZS status Timeout for BOO108-1.p
CLASH, statistics insufficient
25136: Facts:
25136:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25136:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25136: Goal:
25136:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25136: Order:
25136:   nrkbo
25136: Leaf order:
25136:  s 1 0 0 
25136:  b 1 0 0 
25136:  f 3 1 3 0,2,2
25136:  apply 14 2 3 0,2
CLASH, statistics insufficient
25137: Facts:
25137:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25137:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25137: Goal:
25137:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25137: Order:
25137:   kbo
25137: Leaf order:
25137:  s 1 0 0 
25137:  b 1 0 0 
25137:  f 3 1 3 0,2,2
25137:  apply 14 2 3 0,2
CLASH, statistics insufficient
25138: Facts:
25138:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25138:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25138: Goal:
25138:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25138: Order:
25138:   lpo
25138: Leaf order:
25138:  s 1 0 0 
25138:  b 1 0 0 
25138:  f 3 1 3 0,2,2
25138:  apply 14 2 3 0,2
% SZS status Timeout for COL067-1.p
CLASH, statistics insufficient
25159: Facts:
25159:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25159:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25159: Goal:
25159:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
25159: Order:
25159:   nrkbo
25159: Leaf order:
25159:  s 1 0 0 
25159:  b 1 0 0 
25159:  combinator 1 0 1 1,3
25159:  apply 12 2 1 0,3
CLASH, statistics insufficient
25160: Facts:
25160:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25160:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25160: Goal:
25160:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
25160: Order:
25160:   kbo
25160: Leaf order:
25160:  s 1 0 0 
25160:  b 1 0 0 
25160:  combinator 1 0 1 1,3
25160:  apply 12 2 1 0,3
CLASH, statistics insufficient
25161: Facts:
25161:  Id :   2, {_}:
          apply (apply (apply s ?3) ?4) ?5
          =?=
          apply (apply ?3 ?5) (apply ?4 ?5)
          [5, 4, 3] by s_definition ?3 ?4 ?5
25161:  Id :   3, {_}:
          apply (apply (apply b ?7) ?8) ?9 =>= apply ?7 (apply ?8 ?9)
          [9, 8, 7] by b_definition ?7 ?8 ?9
25161: Goal:
25161:  Id :   1, {_}: ?1 =<= apply combinator ?1 [1] by prove_fixed_point ?1
25161: Order:
25161:   lpo
25161: Leaf order:
25161:  s 1 0 0 
25161:  b 1 0 0 
25161:  combinator 1 0 1 1,3
25161:  apply 12 2 1 0,3
% SZS status Timeout for COL068-1.p
CLASH, statistics insufficient
25183: Facts:
25183:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25183:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
25183: Goal:
25183:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25183: Order:
25183:   nrkbo
25183: Leaf order:
25183:  b 1 0 0 
25183:  l 1 0 0 
25183:  f 3 1 3 0,2,2
25183:  apply 12 2 3 0,2
CLASH, statistics insufficient
25184: Facts:
25184:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25184:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
25184: Goal:
25184:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25184: Order:
25184:   kbo
25184: Leaf order:
25184:  b 1 0 0 
25184:  l 1 0 0 
25184:  f 3 1 3 0,2,2
25184:  apply 12 2 3 0,2
CLASH, statistics insufficient
25185: Facts:
25185:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by b_definition ?3 ?4 ?5
25185:  Id :   3, {_}:
          apply (apply l ?7) ?8 =?= apply ?7 (apply ?8 ?8)
          [8, 7] by l_definition ?7 ?8
25185: Goal:
25185:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by prove_fixed_point ?1
25185: Order:
25185:   lpo
25185: Leaf order:
25185:  b 1 0 0 
25185:  l 1 0 0 
25185:  f 3 1 3 0,2,2
25185:  apply 12 2 3 0,2
% SZS status Timeout for COL069-1.p
CLASH, statistics insufficient
25251: Facts:
25251:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
25251:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
25251: Goal:
25251:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
25251: Order:
25251:   nrkbo
25251: Leaf order:
25251:  b 1 0 0 
25251:  m 1 0 0 
25251:  f 3 1 3 0,2,2
25251:  apply 10 2 3 0,2
CLASH, statistics insufficient
25252: Facts:
25252:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
25252:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
25252: Goal:
25252:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
25252: Order:
25252:   kbo
25252: Leaf order:
25252:  b 1 0 0 
25252:  m 1 0 0 
25252:  f 3 1 3 0,2,2
25252:  apply 10 2 3 0,2
CLASH, statistics insufficient
25253: Facts:
25253:  Id :   2, {_}:
          apply (apply (apply b ?3) ?4) ?5 =>= apply ?3 (apply ?4 ?5)
          [5, 4, 3] by definition_B ?3 ?4 ?5
25253:  Id :   3, {_}: apply m ?7 =?= apply ?7 ?7 [7] by definition_M ?7
25253: Goal:
25253:  Id :   1, {_}:
          apply ?1 (f ?1) =<= apply (f ?1) (apply ?1 (f ?1))
          [1] by strong_fixpoint ?1
25253: Order:
25253:   lpo
25253: Leaf order:
25253:  b 1 0 0 
25253:  m 1 0 0 
25253:  f 3 1 3 0,2,2
25253:  apply 10 2 3 0,2
% SZS status Timeout for COL087-1.p
NO CLASH, using fixed ground order
25281: Facts:
25281:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25281:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25281:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =?= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25281:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25281:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25281:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =?=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25281:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =?=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25281:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25281:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25281:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25281:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25281:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25281:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25281:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25281:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25281:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
25281:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
25281:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
25281: Goal:
25281:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
25281: Order:
25281:   nrkbo
25281: Leaf order:
25281:  identity 5 0 0 
25281:  b 5 0 3 1,2,1,2
25281:  c 5 0 3 2,2,1,2
25281:  a 7 0 5 1,1,2
25281:  inverse 1 1 0 
25281:  least_upper_bound 17 2 1 0,2
25281:  greatest_lower_bound 18 2 5 0,1,2
25281:  multiply 21 2 3 0,2,1,2
NO CLASH, using fixed ground order
25282: Facts:
25282:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25282:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25282:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25282:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25282:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25282:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25282:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25282:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25282:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25282:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25282:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25282:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =<=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25282:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =<=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25282:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =<=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25282:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =<=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25282:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
25282:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
25282:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
25282: Goal:
25282:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
25282: Order:
25282:   kbo
25282: Leaf order:
25282:  identity 5 0 0 
25282:  b 5 0 3 1,2,1,2
25282:  c 5 0 3 2,2,1,2
25282:  a 7 0 5 1,1,2
25282:  inverse 1 1 0 
25282:  least_upper_bound 17 2 1 0,2
25282:  greatest_lower_bound 18 2 5 0,1,2
25282:  multiply 21 2 3 0,2,1,2
NO CLASH, using fixed ground order
25283: Facts:
25283:  Id :   2, {_}: multiply identity ?2 =>= ?2 [2] by left_identity ?2
25283:  Id :   3, {_}: multiply (inverse ?4) ?4 =>= identity [4] by left_inverse ?4
25283:  Id :   4, {_}:
          multiply (multiply ?6 ?7) ?8 =>= multiply ?6 (multiply ?7 ?8)
          [8, 7, 6] by associativity ?6 ?7 ?8
25283:  Id :   5, {_}:
          greatest_lower_bound ?10 ?11 =?= greatest_lower_bound ?11 ?10
          [11, 10] by symmetry_of_glb ?10 ?11
25283:  Id :   6, {_}:
          least_upper_bound ?13 ?14 =?= least_upper_bound ?14 ?13
          [14, 13] by symmetry_of_lub ?13 ?14
25283:  Id :   7, {_}:
          greatest_lower_bound ?16 (greatest_lower_bound ?17 ?18)
          =<=
          greatest_lower_bound (greatest_lower_bound ?16 ?17) ?18
          [18, 17, 16] by associativity_of_glb ?16 ?17 ?18
25283:  Id :   8, {_}:
          least_upper_bound ?20 (least_upper_bound ?21 ?22)
          =<=
          least_upper_bound (least_upper_bound ?20 ?21) ?22
          [22, 21, 20] by associativity_of_lub ?20 ?21 ?22
25283:  Id :   9, {_}: least_upper_bound ?24 ?24 =>= ?24 [24] by idempotence_of_lub ?24
25283:  Id :  10, {_}:
          greatest_lower_bound ?26 ?26 =>= ?26
          [26] by idempotence_of_gld ?26
25283:  Id :  11, {_}:
          least_upper_bound ?28 (greatest_lower_bound ?28 ?29) =>= ?28
          [29, 28] by lub_absorbtion ?28 ?29
25283:  Id :  12, {_}:
          greatest_lower_bound ?31 (least_upper_bound ?31 ?32) =>= ?31
          [32, 31] by glb_absorbtion ?31 ?32
25283:  Id :  13, {_}:
          multiply ?34 (least_upper_bound ?35 ?36)
          =>=
          least_upper_bound (multiply ?34 ?35) (multiply ?34 ?36)
          [36, 35, 34] by monotony_lub1 ?34 ?35 ?36
25283:  Id :  14, {_}:
          multiply ?38 (greatest_lower_bound ?39 ?40)
          =>=
          greatest_lower_bound (multiply ?38 ?39) (multiply ?38 ?40)
          [40, 39, 38] by monotony_glb1 ?38 ?39 ?40
25283:  Id :  15, {_}:
          multiply (least_upper_bound ?42 ?43) ?44
          =>=
          least_upper_bound (multiply ?42 ?44) (multiply ?43 ?44)
          [44, 43, 42] by monotony_lub2 ?42 ?43 ?44
25283:  Id :  16, {_}:
          multiply (greatest_lower_bound ?46 ?47) ?48
          =>=
          greatest_lower_bound (multiply ?46 ?48) (multiply ?47 ?48)
          [48, 47, 46] by monotony_glb2 ?46 ?47 ?48
25283:  Id :  17, {_}: least_upper_bound identity a =>= a [] by p08a_1
25283:  Id :  18, {_}: least_upper_bound identity b =>= b [] by p08a_2
25283:  Id :  19, {_}: least_upper_bound identity c =>= c [] by p08a_3
25283: Goal:
25283:  Id :   1, {_}:
          least_upper_bound (greatest_lower_bound a (multiply b c))
            (multiply (greatest_lower_bound a b) (greatest_lower_bound a c))
          =>=
          multiply (greatest_lower_bound a b) (greatest_lower_bound a c)
          [] by prove_p08a
25283: Order:
25283:   lpo
25283: Leaf order:
25283:  identity 5 0 0 
25283:  b 5 0 3 1,2,1,2
25283:  c 5 0 3 2,2,1,2
25283:  a 7 0 5 1,1,2
25283:  inverse 1 1 0 
25283:  least_upper_bound 17 2 1 0,2
25283:  greatest_lower_bound 18 2 5 0,1,2
25283:  multiply 21 2 3 0,2,1,2
% SZS status Timeout for GRP177-1.p
NO CLASH, using fixed ground order
25304: Facts:
25304:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
25304: Goal:
25304:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25304: Order:
25304:   nrkbo
25304: Leaf order:
25304:  a 3 0 3 1,2
25304:  c 3 0 3 2,1,2,2
25304:  b 4 0 4 1,1,2,2
25304:  f 17 2 8 0,2
NO CLASH, using fixed ground order
25305: Facts:
25305:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
25305: Goal:
25305:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25305: Order:
25305:   kbo
25305: Leaf order:
25305:  a 3 0 3 1,2
25305:  c 3 0 3 2,1,2,2
25305:  b 4 0 4 1,1,2,2
25305:  f 17 2 8 0,2
NO CLASH, using fixed ground order
25306: Facts:
25306:  Id :   2, {_}:
          f (f ?2 ?3) (f (f (f (f ?2 ?3) ?3) (f ?4 ?3)) (f (f ?3 ?3) ?5))
          =>=
          ?3
          [5, 4, 3, 2] by oml_21C ?2 ?3 ?4 ?5
25306: Goal:
25306:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25306: Order:
25306:   lpo
25306: Leaf order:
25306:  a 3 0 3 1,2
25306:  c 3 0 3 2,1,2,2
25306:  b 4 0 4 1,1,2,2
25306:  f 17 2 8 0,2
% SZS status Timeout for LAT071-1.p
NO CLASH, using fixed ground order
25332: Facts:
25332:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
25332: Goal:
25332:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25332: Order:
25332:   nrkbo
25332: Leaf order:
25332:  a 3 0 3 1,2
25332:  c 3 0 3 2,1,2,2
25332:  b 4 0 4 1,1,2,2
25332:  f 18 2 8 0,2
NO CLASH, using fixed ground order
25333: Facts:
25333:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
25333: Goal:
25333:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25333: Order:
25333:   kbo
25333: Leaf order:
25333:  a 3 0 3 1,2
25333:  c 3 0 3 2,1,2,2
25333:  b 4 0 4 1,1,2,2
25333:  f 18 2 8 0,2
NO CLASH, using fixed ground order
25334: Facts:
25334:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f ?4 (f (f ?3 ?3) ?4)) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by oml_23A ?2 ?3 ?4 ?5
25334: Goal:
25334:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25334: Order:
25334:   lpo
25334: Leaf order:
25334:  a 3 0 3 1,2
25334:  c 3 0 3 2,1,2,2
25334:  b 4 0 4 1,1,2,2
25334:  f 18 2 8 0,2
% SZS status Timeout for LAT072-1.p
NO CLASH, using fixed ground order
25355: Facts:
25355:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
25355: Goal:
25355:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
25355: Order:
25355:   nrkbo
25355: Leaf order:
25355:  b 3 0 3 1,2,2
25355:  c 3 0 3 1,2,2,2,2
25355:  a 4 0 4 1,2
25355:  f 18 2 8 0,2
NO CLASH, using fixed ground order
25356: Facts:
25356:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
25356: Goal:
25356:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
25356: Order:
25356:   kbo
25356: Leaf order:
25356:  b 3 0 3 1,2,2
25356:  c 3 0 3 1,2,2,2,2
25356:  a 4 0 4 1,2
25356:  f 18 2 8 0,2
NO CLASH, using fixed ground order
25357: Facts:
25357:  Id :   2, {_}:
          f (f (f ?2 (f ?3 ?2)) ?2)
            (f ?3 (f ?4 (f (f ?3 ?2) (f (f ?4 ?4) ?5))))
          =>=
          ?3
          [5, 4, 3, 2] by mol_23C ?2 ?3 ?4 ?5
25357: Goal:
25357:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
25357: Order:
25357:   lpo
25357: Leaf order:
25357:  b 3 0 3 1,2,2
25357:  c 3 0 3 1,2,2,2,2
25357:  a 4 0 4 1,2
25357:  f 18 2 8 0,2
% SZS status Timeout for LAT073-1.p
NO CLASH, using fixed ground order
25379: Facts:
NO CLASH, using fixed ground order
25381: Facts:
25381:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25381: Goal:
25381:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25381: Order:
25381:   lpo
25381: Leaf order:
25381:  a 3 0 3 1,2
25381:  c 3 0 3 2,1,2,2
25381:  b 4 0 4 1,1,2,2
25381:  f 19 2 8 0,2
NO CLASH, using fixed ground order
25380: Facts:
25380:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25380: Goal:
25380:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25380: Order:
25380:   kbo
25380: Leaf order:
25380:  a 3 0 3 1,2
25380:  c 3 0 3 2,1,2,2
25380:  b 4 0 4 1,1,2,2
25380:  f 19 2 8 0,2
25379:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25379: Goal:
25379:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25379: Order:
25379:   nrkbo
25379: Leaf order:
25379:  a 3 0 3 1,2
25379:  c 3 0 3 2,1,2,2
25379:  b 4 0 4 1,1,2,2
25379:  f 19 2 8 0,2
% SZS status Timeout for LAT074-1.p
NO CLASH, using fixed ground order
25407: Facts:
25407:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25407: Goal:
25407:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
25407: Order:
25407:   nrkbo
25407: Leaf order:
25407:  b 3 0 3 1,2,2
25407:  c 3 0 3 1,2,2,2,2
25407:  a 4 0 4 1,2
25407:  f 19 2 8 0,2
NO CLASH, using fixed ground order
25408: Facts:
25408:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25408: Goal:
25408:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
25408: Order:
25408:   kbo
25408: Leaf order:
25408:  b 3 0 3 1,2,2
25408:  c 3 0 3 1,2,2,2,2
25408:  a 4 0 4 1,2
25408:  f 19 2 8 0,2
NO CLASH, using fixed ground order
25409: Facts:
25409:  Id :   2, {_}:
          f (f ?2 ?3)
            (f (f (f ?3 ?3) ?4) (f (f (f (f (f ?3 ?2) ?4) ?4) ?3) (f ?3 ?5)))
          =>=
          ?3
          [5, 4, 3, 2] by mol_25A ?2 ?3 ?4 ?5
25409: Goal:
25409:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
25409: Order:
25409:   lpo
25409: Leaf order:
25409:  b 3 0 3 1,2,2
25409:  c 3 0 3 1,2,2,2,2
25409:  a 4 0 4 1,2
25409:  f 19 2 8 0,2
% SZS status Timeout for LAT075-1.p
NO CLASH, using fixed ground order
25460: Facts:
25460:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25460: Goal:
25460:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25460: Order:
25460:   nrkbo
25460: Leaf order:
25460:  a 3 0 3 1,2
25460:  c 3 0 3 2,1,2,2
25460:  b 4 0 4 1,1,2,2
25460:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25461: Facts:
25461:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25461: Goal:
25461:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25461: Order:
25461:   kbo
25461: Leaf order:
25461:  a 3 0 3 1,2
25461:  c 3 0 3 2,1,2,2
25461:  b 4 0 4 1,1,2,2
25461:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25462: Facts:
25462:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25462: Goal:
25462:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25462: Order:
25462:   lpo
25462: Leaf order:
25462:  a 3 0 3 1,2
25462:  c 3 0 3 2,1,2,2
25462:  b 4 0 4 1,1,2,2
25462:  f 20 2 8 0,2
% SZS status Timeout for LAT076-1.p
NO CLASH, using fixed ground order
25483: Facts:
25483:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25483: Goal:
25483:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
25483: Order:
25483:   nrkbo
25483: Leaf order:
25483:  b 3 0 3 1,2,2
25483:  c 3 0 3 1,2,2,2,2
25483:  a 4 0 4 1,2
25483:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25484: Facts:
25484:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25484: Goal:
25484:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
25484: Order:
25484:   kbo
25484: Leaf order:
25484:  b 3 0 3 1,2,2
25484:  c 3 0 3 1,2,2,2,2
25484:  a 4 0 4 1,2
25484:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25485: Facts:
25485:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?4 ?3)) ?5)
            (f ?3 (f (f (f (f (f (f ?2 ?2) ?3) ?4) ?4) ?3) ?2))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B1 ?2 ?3 ?4 ?5
25485: Goal:
25485:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
25485: Order:
25485:   lpo
25485: Leaf order:
25485:  b 3 0 3 1,2,2
25485:  c 3 0 3 1,2,2,2,2
25485:  a 4 0 4 1,2
25485:  f 20 2 8 0,2
% SZS status Timeout for LAT077-1.p
NO CLASH, using fixed ground order
25507: Facts:
25507:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25507: Goal:
25507:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25507: Order:
25507:   nrkbo
25507: Leaf order:
25507:  a 3 0 3 1,2
25507:  c 3 0 3 2,1,2,2
25507:  b 4 0 4 1,1,2,2
25507:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25508: Facts:
25508:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25508: Goal:
25508:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =<= f c (f (f b a) (f b a))
          [] by associativity
25508: Order:
25508:   kbo
25508: Leaf order:
25508:  a 3 0 3 1,2
25508:  c 3 0 3 2,1,2,2
25508:  b 4 0 4 1,1,2,2
25508:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25509: Facts:
25509:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25509: Goal:
25509:  Id :   1, {_}:
          f a (f (f b c) (f b c)) =>= f c (f (f b a) (f b a))
          [] by associativity
25509: Order:
25509:   lpo
25509: Leaf order:
25509:  a 3 0 3 1,2
25509:  c 3 0 3 2,1,2,2
25509:  b 4 0 4 1,1,2,2
25509:  f 20 2 8 0,2
% SZS status Timeout for LAT078-1.p
NO CLASH, using fixed ground order
25531: Facts:
25531:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25531: Goal:
25531:  Id :   1, {_}:
          f a (f b (f a (f c c))) =<= f a (f c (f a (f b b)))
          [] by modularity
25531: Order:
25531:   nrkbo
25531: Leaf order:
25531:  b 3 0 3 1,2,2
25531:  c 3 0 3 1,2,2,2,2
25531:  a 4 0 4 1,2
25531:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25532: Facts:
25532:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25532: Goal:
25532:  Id :   1, {_}:
          f a (f b (f a (f c c))) =?= f a (f c (f a (f b b)))
          [] by modularity
25532: Order:
25532:   kbo
25532: Leaf order:
25532:  b 3 0 3 1,2,2
25532:  c 3 0 3 1,2,2,2,2
25532:  a 4 0 4 1,2
25532:  f 20 2 8 0,2
NO CLASH, using fixed ground order
25533: Facts:
25533:  Id :   2, {_}:
          f (f (f (f ?2 ?3) (f ?3 ?4)) ?5)
            (f ?3 (f (f (f ?2 (f ?2 (f (f ?4 ?4) ?3))) ?3) ?4))
          =>=
          ?3
          [5, 4, 3, 2] by mol_27B2 ?2 ?3 ?4 ?5
25533: Goal:
25533:  Id :   1, {_}:
          f a (f b (f a (f c c))) =>= f a (f c (f a (f b b)))
          [] by modularity
25533: Order:
25533:   lpo
25533: Leaf order:
25533:  b 3 0 3 1,2,2
25533:  c 3 0 3 1,2,2,2,2
25533:  a 4 0 4 1,2
25533:  f 20 2 8 0,2
% SZS status Timeout for LAT079-1.p
NO CLASH, using fixed ground order
25631: Facts:
25631:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25631:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25631:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25631:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25631:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25631:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25631:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25631:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25631:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
25631: Goal:
25631:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
25631: Order:
25631:   nrkbo
25631: Leaf order:
25631:  b 3 0 3 1,2,2
25631:  c 3 0 3 2,2,2,2
25631:  a 4 0 4 1,2
25631:  join 16 2 3 0,2,2
25631:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
25633: Facts:
25633:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25633:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25633:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25633:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25633:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25633:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25633:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25633:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25633:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =?=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
25633: Goal:
25633:  Id :   1, {_}:
          meet a (join b (meet a c))
          =>=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
25633: Order:
25633:   lpo
25633: Leaf order:
25633:  b 3 0 3 1,2,2
25633:  c 3 0 3 2,2,2,2
25633:  a 4 0 4 1,2
25633:  join 16 2 3 0,2,2
25633:  meet 20 2 5 0,2
NO CLASH, using fixed ground order
25632: Facts:
25632:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25632:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25632:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25632:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25632:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25632:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25632:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25632:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25632:  Id :  10, {_}:
          meet ?26 (join ?27 (meet ?26 ?28))
          =<=
          meet ?26
            (join ?27
              (meet ?28 (join ?26 (meet ?27 (join ?28 (meet ?26 ?27))))))
          [28, 27, 26] by equation_H11 ?26 ?27 ?28
25632: Goal:
25632:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join b (meet c (join a (meet b c))))
          [] by prove_H10
25632: Order:
25632:   kbo
25632: Leaf order:
25632:  b 3 0 3 1,2,2
25632:  c 3 0 3 2,2,2,2
25632:  a 4 0 4 1,2
25632:  join 16 2 3 0,2,2
25632:  meet 20 2 5 0,2
% SZS status Timeout for LAT139-1.p
NO CLASH, using fixed ground order
25659: Facts:
25659:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25659:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25659:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25659:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25659:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25659:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25659:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25659:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25659:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25659: Goal:
25659:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25659: Order:
25659:   nrkbo
25659: Leaf order:
25659:  b 3 0 3 1,2,2
25659:  c 3 0 3 2,2,2,2
25659:  a 6 0 6 1,2
25659:  join 17 2 4 0,2,2
25659:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
25660: Facts:
25660:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25660:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25660:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25660:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25660:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25660:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25660:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25660:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25660:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25660: Goal:
25660:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25660: Order:
25660:   kbo
25660: Leaf order:
25660:  b 3 0 3 1,2,2
25660:  c 3 0 3 2,2,2,2
25660:  a 6 0 6 1,2
25660:  join 17 2 4 0,2,2
25660:  meet 21 2 6 0,2
NO CLASH, using fixed ground order
25661: Facts:
25661:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25661:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25661:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25661:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25661:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25661:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25661:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25661:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25661:  Id :  10, {_}:
          join (meet ?26 ?27) (meet ?26 ?28)
          =<=
          meet ?26
            (join (meet ?27 (join ?26 (meet ?27 ?28)))
              (meet ?28 (join ?26 ?27)))
          [28, 27, 26] by equation_H21 ?26 ?27 ?28
25661: Goal:
25661:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25661: Order:
25661:   lpo
25661: Leaf order:
25661:  b 3 0 3 1,2,2
25661:  c 3 0 3 2,2,2,2
25661:  a 6 0 6 1,2
25661:  join 17 2 4 0,2,2
25661:  meet 21 2 6 0,2
% SZS status Timeout for LAT141-1.p
NO CLASH, using fixed ground order
25683: Facts:
25683:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25683:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25683:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25683:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25683:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25683:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25683:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25683:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25683:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
25683: Goal:
25683:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
25683: Order:
25683:   nrkbo
25683: Leaf order:
25683:  c 2 0 2 2,1,2,2
25683:  d 2 0 2 2,2,2,2
25683:  a 3 0 3 1,2
25683:  b 5 0 5 1,1,2,2
25683:  join 18 2 5 0,1,2,2
25683:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
25684: Facts:
25684:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25684:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25684:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25684:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25684:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25684:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25684:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25684:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25684:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
25684: Goal:
25684:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
25684: Order:
25684:   kbo
25684: Leaf order:
25684:  c 2 0 2 2,1,2,2
25684:  d 2 0 2 2,2,2,2
25684:  a 3 0 3 1,2
25684:  b 5 0 5 1,1,2,2
25684:  join 18 2 5 0,1,2,2
25684:  meet 18 2 5 0,2
NO CLASH, using fixed ground order
25685: Facts:
25685:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25685:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25685:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25685:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25685:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25685:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25685:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25685:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25685:  Id :  10, {_}:
          meet ?26 (join ?27 ?28)
          =<=
          meet ?26 (join ?27 (meet (join ?26 ?27) (join ?28 (meet ?26 ?27))))
          [28, 27, 26] by equation_H58 ?26 ?27 ?28
25685: Goal:
25685:  Id :   1, {_}:
          meet a (meet (join b c) (join b d))
          =<=
          meet a (join b (meet (join b d) (join c (meet a b))))
          [] by prove_H59
25685: Order:
25685:   lpo
25685: Leaf order:
25685:  c 2 0 2 2,1,2,2
25685:  d 2 0 2 2,2,2,2
25685:  a 3 0 3 1,2
25685:  b 5 0 5 1,1,2,2
25685:  join 18 2 5 0,1,2,2
25685:  meet 18 2 5 0,2
% SZS status Timeout for LAT161-1.p
NO CLASH, using fixed ground order
25706: Facts:
25706:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25706:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25706:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25706:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25706:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25706:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25706:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =?= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25706:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =?= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
NO CLASH, using fixed ground order
25707: Facts:
25707:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25707:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25707:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25707:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25707:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25707:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25707:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25707:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25707:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
25707: Goal:
25707:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25707: Order:
25707:   kbo
25707: Leaf order:
25707:  b 3 0 3 1,2,2
25707:  c 3 0 3 2,2,2,2
25707:  a 6 0 6 1,2
25707:  join 19 2 4 0,2,2
25707:  meet 19 2 6 0,2
NO CLASH, using fixed ground order
25708: Facts:
25708:  Id :   2, {_}: meet ?2 ?2 =>= ?2 [2] by idempotence_of_meet ?2
25708:  Id :   3, {_}: join ?4 ?4 =>= ?4 [4] by idempotence_of_join ?4
25708:  Id :   4, {_}: meet ?6 (join ?6 ?7) =>= ?6 [7, 6] by absorption1 ?6 ?7
25708:  Id :   5, {_}: join ?9 (meet ?9 ?10) =>= ?9 [10, 9] by absorption2 ?9 ?10
25708:  Id :   6, {_}:
          meet ?12 ?13 =?= meet ?13 ?12
          [13, 12] by commutativity_of_meet ?12 ?13
25708:  Id :   7, {_}:
          join ?15 ?16 =?= join ?16 ?15
          [16, 15] by commutativity_of_join ?15 ?16
25708:  Id :   8, {_}:
          meet (meet ?18 ?19) ?20 =>= meet ?18 (meet ?19 ?20)
          [20, 19, 18] by associativity_of_meet ?18 ?19 ?20
25708:  Id :   9, {_}:
          join (join ?22 ?23) ?24 =>= join ?22 (join ?23 ?24)
          [24, 23, 22] by associativity_of_join ?22 ?23 ?24
25708:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
25708: Goal:
25708:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25708: Order:
25708:   lpo
25708: Leaf order:
25708:  b 3 0 3 1,2,2
25708:  c 3 0 3 2,2,2,2
25708:  a 6 0 6 1,2
25708:  join 19 2 4 0,2,2
25708:  meet 19 2 6 0,2
25706:  Id :  10, {_}:
          join ?26 (meet ?27 (join ?28 (meet ?26 ?29)))
          =<=
          join ?26 (meet (join ?26 (meet ?27 (join ?26 ?28))) (join ?28 ?29))
          [29, 28, 27, 26] by equation_H79_dual ?26 ?27 ?28 ?29
25706: Goal:
25706:  Id :   1, {_}:
          meet a (join b (meet a c))
          =<=
          meet a (join (meet a (join b (meet a c))) (meet c (join a b)))
          [] by prove_H6
25706: Order:
25706:   nrkbo
25706: Leaf order:
25706:  b 3 0 3 1,2,2
25706:  c 3 0 3 2,2,2,2
25706:  a 6 0 6 1,2
25706:  join 19 2 4 0,2,2
25706:  meet 19 2 6 0,2
% SZS status Timeout for LAT177-1.p
NO CLASH, using fixed ground order
25759: Facts:
25759:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
25759:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
25759:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
25759:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
25759:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
25759:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
25759:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
25759:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
25759:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =<=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
25759:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
25759:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
25759:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
25759:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
25759:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =>=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
25759:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =>=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
25759:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =<=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
25759:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =<=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
25759:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =?= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
25759:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =<=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
25759:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
25759:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
25759:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =?= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
25759:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =<=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
25759:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =?=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
25759:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =?=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
25759:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =?=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
25759: Goal:
25759:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25759: Order:
25759:   nrkbo
25759: Leaf order:
25759:  a 2 0 2 1,2
25759:  b 2 0 2 2,2
25759:  c 2 0 2 3,2
25759:  d 2 0 2 4,2
25759:  additive_identity 11 0 0 
25759:  additive_inverse 20 1 1 0,3
25759:  commutator 1 2 0 
25759:  add 22 2 0 
25759:  multiply 51 2 0 
25759:  associator 6 3 0 
25759:  s 3 4 2 0,2
NO CLASH, using fixed ground order
25760: Facts:
25760:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
25760:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
25760:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
25760:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
25760:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
25760:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
25760:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
25760:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
25760:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =<=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
25760:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
25760:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
25760:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
25760:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
25760:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =>=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
25760:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =>=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
25760:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =<=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
25760:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =<=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
25760:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =>= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
25760:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =<=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
25760:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
25760:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
25760:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =>= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
25760:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =<=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
25760:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =<=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
25760:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =>=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
25760:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =<=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
25760: Goal:
25760:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25760: Order:
25760:   kbo
25760: Leaf order:
25760:  a 2 0 2 1,2
25760:  b 2 0 2 2,2
25760:  c 2 0 2 3,2
25760:  d 2 0 2 4,2
25760:  additive_identity 11 0 0 
25760:  additive_inverse 20 1 1 0,3
25760:  commutator 1 2 0 
25760:  add 22 2 0 
25760:  multiply 51 2 0 
25760:  associator 6 3 0 
25760:  s 3 4 2 0,2
NO CLASH, using fixed ground order
25761: Facts:
25761:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutative_addition ?2 ?3
25761:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associative_addition ?5 ?6 ?7
25761:  Id :   4, {_}: add ?9 additive_identity =>= ?9 [9] by right_identity ?9
25761:  Id :   5, {_}: add additive_identity ?11 =>= ?11 [11] by left_identity ?11
25761:  Id :   6, {_}:
          add ?13 (additive_inverse ?13) =>= additive_identity
          [13] by right_additive_inverse ?13
25761:  Id :   7, {_}:
          add (additive_inverse ?15) ?15 =>= additive_identity
          [15] by left_additive_inverse ?15
25761:  Id :   8, {_}:
          additive_inverse additive_identity =>= additive_identity
          [] by additive_inverse_identity
25761:  Id :   9, {_}:
          add ?18 (add (additive_inverse ?18) ?19) =>= ?19
          [19, 18] by property_of_inverse_and_add ?18 ?19
25761:  Id :  10, {_}:
          additive_inverse (add ?21 ?22)
          =<=
          add (additive_inverse ?21) (additive_inverse ?22)
          [22, 21] by distribute_additive_inverse ?21 ?22
25761:  Id :  11, {_}:
          additive_inverse (additive_inverse ?24) =>= ?24
          [24] by additive_inverse_additive_inverse ?24
25761:  Id :  12, {_}:
          multiply ?26 additive_identity =>= additive_identity
          [26] by multiply_additive_id1 ?26
25761:  Id :  13, {_}:
          multiply additive_identity ?28 =>= additive_identity
          [28] by multiply_additive_id2 ?28
25761:  Id :  14, {_}:
          multiply (additive_inverse ?30) (additive_inverse ?31)
          =>=
          multiply ?30 ?31
          [31, 30] by product_of_inverse ?30 ?31
25761:  Id :  15, {_}:
          multiply ?33 (additive_inverse ?34)
          =>=
          additive_inverse (multiply ?33 ?34)
          [34, 33] by multiply_additive_inverse1 ?33 ?34
25761:  Id :  16, {_}:
          multiply (additive_inverse ?36) ?37
          =>=
          additive_inverse (multiply ?36 ?37)
          [37, 36] by multiply_additive_inverse2 ?36 ?37
25761:  Id :  17, {_}:
          multiply ?39 (add ?40 ?41)
          =>=
          add (multiply ?39 ?40) (multiply ?39 ?41)
          [41, 40, 39] by distribute1 ?39 ?40 ?41
25761:  Id :  18, {_}:
          multiply (add ?43 ?44) ?45
          =>=
          add (multiply ?43 ?45) (multiply ?44 ?45)
          [45, 44, 43] by distribute2 ?43 ?44 ?45
25761:  Id :  19, {_}:
          multiply (multiply ?47 ?48) ?48 =>= multiply ?47 (multiply ?48 ?48)
          [48, 47] by right_alternative ?47 ?48
25761:  Id :  20, {_}:
          associator ?50 ?51 ?52
          =>=
          add (multiply (multiply ?50 ?51) ?52)
            (additive_inverse (multiply ?50 (multiply ?51 ?52)))
          [52, 51, 50] by associator ?50 ?51 ?52
25761:  Id :  21, {_}:
          commutator ?54 ?55
          =<=
          add (multiply ?55 ?54) (additive_inverse (multiply ?54 ?55))
          [55, 54] by commutator ?54 ?55
25761:  Id :  22, {_}:
          multiply (multiply (associator ?57 ?57 ?58) ?57)
            (associator ?57 ?57 ?58)
          =>=
          additive_identity
          [58, 57] by middle_associator ?57 ?58
25761:  Id :  23, {_}:
          multiply (multiply ?60 ?60) ?61 =>= multiply ?60 (multiply ?60 ?61)
          [61, 60] by left_alternative ?60 ?61
25761:  Id :  24, {_}:
          s ?63 ?64 ?65 ?66
          =>=
          add
            (add (associator (multiply ?63 ?64) ?65 ?66)
              (additive_inverse (multiply ?64 (associator ?63 ?65 ?66))))
            (additive_inverse (multiply (associator ?64 ?65 ?66) ?63))
          [66, 65, 64, 63] by defines_s ?63 ?64 ?65 ?66
25761:  Id :  25, {_}:
          multiply ?68 (multiply ?69 (multiply ?70 ?69))
          =<=
          multiply (multiply (multiply ?68 ?69) ?70) ?69
          [70, 69, 68] by right_moufang ?68 ?69 ?70
25761:  Id :  26, {_}:
          multiply (multiply ?72 (multiply ?73 ?72)) ?74
          =>=
          multiply ?72 (multiply ?73 (multiply ?72 ?74))
          [74, 73, 72] by left_moufang ?72 ?73 ?74
25761:  Id :  27, {_}:
          multiply (multiply ?76 ?77) (multiply ?78 ?76)
          =<=
          multiply (multiply ?76 (multiply ?77 ?78)) ?76
          [78, 77, 76] by middle_moufang ?76 ?77 ?78
25761: Goal:
25761:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25761: Order:
25761:   lpo
25761: Leaf order:
25761:  a 2 0 2 1,2
25761:  b 2 0 2 2,2
25761:  c 2 0 2 3,2
25761:  d 2 0 2 4,2
25761:  additive_identity 11 0 0 
25761:  additive_inverse 20 1 1 0,3
25761:  commutator 1 2 0 
25761:  add 22 2 0 
25761:  multiply 51 2 0 
25761:  associator 6 3 0 
25761:  s 3 4 2 0,2
% SZS status Timeout for RNG010-5.p
NO CLASH, using fixed ground order
25787: Facts:
25787:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25787:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25787:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25787:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25787:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25787:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25787:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25787:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25787:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25787:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25787:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25787:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25787:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25787:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25787:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25787:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =<=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
25787:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =?=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
25787:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =?=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
25787:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =?=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
25787: Goal:
25787:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25787: Order:
25787:   nrkbo
25787: Leaf order:
25787:  a 2 0 2 1,2
25787:  b 2 0 2 2,2
25787:  c 2 0 2 3,2
25787:  d 2 0 2 4,2
25787:  additive_identity 8 0 0 
25787:  additive_inverse 9 1 1 0,3
25787:  commutator 1 2 0 
25787:  add 18 2 0 
25787:  multiply 43 2 0 
25787:  associator 4 3 0 
25787:  s 3 4 2 0,2
NO CLASH, using fixed ground order
25788: Facts:
25788:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25788:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25788:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25788:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25788:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25788:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25788:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25788:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25788:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25788:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25788:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25788:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25788:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25788:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25788:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25788:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =<=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
25788:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =<=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
25788:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =>=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
25788:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =<=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
25788: Goal:
25788:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25788: Order:
25788:   kbo
25788: Leaf order:
25788:  a 2 0 2 1,2
25788:  b 2 0 2 2,2
25788:  c 2 0 2 3,2
25788:  d 2 0 2 4,2
25788:  additive_identity 8 0 0 
25788:  additive_inverse 9 1 1 0,3
25788:  commutator 1 2 0 
25788:  add 18 2 0 
25788:  multiply 43 2 0 
25788:  associator 4 3 0 
25788:  s 3 4 2 0,2
NO CLASH, using fixed ground order
25789: Facts:
25789:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25789:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25789:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25789:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25789:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25789:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25789:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25789:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25789:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25789:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25789:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25789:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25789:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25789:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25789:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25789:  Id :  17, {_}:
          s ?44 ?45 ?46 ?47
          =>=
          add
            (add (associator (multiply ?44 ?45) ?46 ?47)
              (additive_inverse (multiply ?45 (associator ?44 ?46 ?47))))
            (additive_inverse (multiply (associator ?45 ?46 ?47) ?44))
          [47, 46, 45, 44] by defines_s ?44 ?45 ?46 ?47
25789:  Id :  18, {_}:
          multiply ?49 (multiply ?50 (multiply ?51 ?50))
          =<=
          multiply (multiply (multiply ?49 ?50) ?51) ?50
          [51, 50, 49] by right_moufang ?49 ?50 ?51
25789:  Id :  19, {_}:
          multiply (multiply ?53 (multiply ?54 ?53)) ?55
          =>=
          multiply ?53 (multiply ?54 (multiply ?53 ?55))
          [55, 54, 53] by left_moufang ?53 ?54 ?55
25789:  Id :  20, {_}:
          multiply (multiply ?57 ?58) (multiply ?59 ?57)
          =<=
          multiply (multiply ?57 (multiply ?58 ?59)) ?57
          [59, 58, 57] by middle_moufang ?57 ?58 ?59
25789: Goal:
25789:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25789: Order:
25789:   lpo
25789: Leaf order:
25789:  a 2 0 2 1,2
25789:  b 2 0 2 2,2
25789:  c 2 0 2 3,2
25789:  d 2 0 2 4,2
25789:  additive_identity 8 0 0 
25789:  additive_inverse 9 1 1 0,3
25789:  commutator 1 2 0 
25789:  add 18 2 0 
25789:  multiply 43 2 0 
25789:  associator 4 3 0 
25789:  s 3 4 2 0,2
% SZS status Timeout for RNG010-6.p
NO CLASH, using fixed ground order
25814: Facts:
25814:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25814:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25814:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25814:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25814:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25814:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25814:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25814:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25814:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25814:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25814:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25814:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25814:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25814:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25814:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25814:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25814:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25814:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25814:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25814:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25814:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25814:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25814:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =<=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
25814:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =?=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
25814:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =?=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
25814:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =?=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
25814: Goal:
25814:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25814: Order:
25814:   nrkbo
25814: Leaf order:
25814:  a 2 0 2 1,2
25814:  b 2 0 2 2,2
25814:  c 2 0 2 3,2
25814:  d 2 0 2 4,2
25814:  additive_identity 8 0 0 
25814:  additive_inverse 25 1 1 0,3
25814:  commutator 1 2 0 
25814:  add 26 2 0 
25814:  multiply 61 2 0 
25814:  associator 4 3 0 
25814:  s 3 4 2 0,2
NO CLASH, using fixed ground order
25815: Facts:
NO CLASH, using fixed ground order
25816: Facts:
25816:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25816:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25816:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25816:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25816:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25816:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25816:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25816:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25816:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25816:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25816:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25816:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25816:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25816:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25816:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25816:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25816:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25816:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25816:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25816:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25816:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25816:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25816:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =>=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
25816:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =<=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
25816:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =>=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
25816:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =<=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
25816: Goal:
25816:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25816: Order:
25816:   lpo
25816: Leaf order:
25816:  a 2 0 2 1,2
25816:  b 2 0 2 2,2
25816:  c 2 0 2 3,2
25816:  d 2 0 2 4,2
25816:  additive_identity 8 0 0 
25816:  additive_inverse 25 1 1 0,3
25816:  commutator 1 2 0 
25816:  add 26 2 0 
25816:  multiply 61 2 0 
25816:  associator 4 3 0 
25816:  s 3 4 2 0,2
25815:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
25815:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
25815:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
25815:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
25815:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
25815:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
25815:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
25815:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
25815:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
25815:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
25815:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
25815:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25815:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
25815:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
25815:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
25815:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
25815:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
25815:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
25815:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
25815:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
25815:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
25815:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
25815:  Id :  24, {_}:
          s ?69 ?70 ?71 ?72
          =<=
          add
            (add (associator (multiply ?69 ?70) ?71 ?72)
              (additive_inverse (multiply ?70 (associator ?69 ?71 ?72))))
            (additive_inverse (multiply (associator ?70 ?71 ?72) ?69))
          [72, 71, 70, 69] by defines_s ?69 ?70 ?71 ?72
25815:  Id :  25, {_}:
          multiply ?74 (multiply ?75 (multiply ?76 ?75))
          =<=
          multiply (multiply (multiply ?74 ?75) ?76) ?75
          [76, 75, 74] by right_moufang ?74 ?75 ?76
25815:  Id :  26, {_}:
          multiply (multiply ?78 (multiply ?79 ?78)) ?80
          =>=
          multiply ?78 (multiply ?79 (multiply ?78 ?80))
          [80, 79, 78] by left_moufang ?78 ?79 ?80
25815:  Id :  27, {_}:
          multiply (multiply ?82 ?83) (multiply ?84 ?82)
          =<=
          multiply (multiply ?82 (multiply ?83 ?84)) ?82
          [84, 83, 82] by middle_moufang ?82 ?83 ?84
25815: Goal:
25815:  Id :   1, {_}:
          s a b c d =<= additive_inverse (s b a c d)
          [] by prove_skew_symmetry
25815: Order:
25815:   kbo
25815: Leaf order:
25815:  a 2 0 2 1,2
25815:  b 2 0 2 2,2
25815:  c 2 0 2 3,2
25815:  d 2 0 2 4,2
25815:  additive_identity 8 0 0 
25815:  additive_inverse 25 1 1 0,3
25815:  commutator 1 2 0 
25815:  add 26 2 0 
25815:  multiply 61 2 0 
25815:  associator 4 3 0 
25815:  s 3 4 2 0,2
% SZS status Timeout for RNG010-7.p
NO CLASH, using fixed ground order
25837: Facts:
25837:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25837:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25837:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25837:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25837:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25837:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25837:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25837:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25837:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25837:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25837:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25837:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25837:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25837:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25837: Goal:
25837:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25837: Order:
25837:   nrkbo
25837: Leaf order:
25837:  y 6 0 6 3,1,1,2
25837:  additive_identity 9 0 1 3
25837:  x 12 0 12 1,1,1,2
25837:  additive_inverse 6 1 0 
25837:  commutator 1 2 0 
25837:  add 17 2 1 0,2
25837:  multiply 22 2 4 0,1,2
25837:  associator 7 3 6 0,1,1,2
NO CLASH, using fixed ground order
25838: Facts:
25838:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25838:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25838:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25838:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25838:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25838:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25838:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25838:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25838:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25838:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25838:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25838:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25838:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25838:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25838: Goal:
25838:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25838: Order:
25838:   kbo
25838: Leaf order:
25838:  y 6 0 6 3,1,1,2
25838:  additive_identity 9 0 1 3
25838:  x 12 0 12 1,1,1,2
25838:  additive_inverse 6 1 0 
25838:  commutator 1 2 0 
25838:  add 17 2 1 0,2
25838:  multiply 22 2 4 0,1,2
25838:  associator 7 3 6 0,1,1,2
NO CLASH, using fixed ground order
25839: Facts:
25839:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25839:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25839:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25839:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25839:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25839:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25839:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25839:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25839:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25839:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25839:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25839:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25839:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25839:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25839: Goal:
25839:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25839: Order:
25839:   lpo
25839: Leaf order:
25839:  y 6 0 6 3,1,1,2
25839:  additive_identity 9 0 1 3
25839:  x 12 0 12 1,1,1,2
25839:  additive_inverse 6 1 0 
25839:  commutator 1 2 0 
25839:  add 17 2 1 0,2
25839:  multiply 22 2 4 0,1,2
25839:  associator 7 3 6 0,1,1,2
% SZS status Timeout for RNG030-6.p
NO CLASH, using fixed ground order
25861: Facts:
25861:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25861:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25861:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25861:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25861:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25861:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25861:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25861:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25861:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25861:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25861:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25861:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25861:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25861:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25861:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25861:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25861:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25861:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25861:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25861:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25861:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25861: Goal:
25861:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25861: Order:
25861:   nrkbo
25861: Leaf order:
25861:  y 6 0 6 3,1,1,2
25861:  additive_identity 9 0 1 3
25861:  x 12 0 12 1,1,1,2
25861:  additive_inverse 22 1 0 
25861:  commutator 1 2 0 
25861:  add 25 2 1 0,2
25861:  multiply 40 2 4 0,1,2add
25861:  associator 7 3 6 0,1,1,2
NO CLASH, using fixed ground order
25862: Facts:
NO CLASH, using fixed ground order
25863: Facts:
25863:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25863:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25863:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25863:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25863:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25863:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25863:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25863:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25863:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25863:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25863:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25863:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25863:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25863:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25863:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25863:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25863:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25863:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25863:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25863:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25863:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25863: Goal:
25863:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25863: Order:
25863:   lpo
25863: Leaf order:
25863:  y 6 0 6 3,1,1,2
25863:  additive_identity 9 0 1 3
25863:  x 12 0 12 1,1,1,2
25863:  additive_inverse 22 1 0 
25863:  commutator 1 2 0 
25863:  add 25 2 1 0,2
25863:  multiply 40 2 4 0,1,2add
25863:  associator 7 3 6 0,1,1,2
25862:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25862:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25862:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25862:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25862:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25862:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25862:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25862:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25862:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25862:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25862:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25862:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25862:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25862:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25862:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25862:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25862:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25862:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25862:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25862:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25862:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25862: Goal:
25862:  Id :   1, {_}:
          add
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_1
25862: Order:
25862:   kbo
25862: Leaf order:
25862:  y 6 0 6 3,1,1,2
25862:  additive_identity 9 0 1 3
25862:  x 12 0 12 1,1,1,2
25862:  additive_inverse 22 1 0 
25862:  commutator 1 2 0 
25862:  add 25 2 1 0,2
25862:  multiply 40 2 4 0,1,2add
25862:  associator 7 3 6 0,1,1,2
% SZS status Timeout for RNG030-7.p
NO CLASH, using fixed ground order
25886: Facts:
25886:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25886:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =?= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25886:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25886:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25886:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25886:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25886:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25886:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25886:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25886:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25886:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25886:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25886:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25886:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25886: Goal:
25886:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25886: Order:
25886:   nrkbo
25886: Leaf order:
25886:  additive_identity 9 0 1 3
25886:  y 18 0 18 3,1,1,1,1,1,1,2
25886:  x 36 0 36 1,1,1,1,1,1,1,2
25886:  additive_inverse 6 1 0 
25886:  commutator 1 2 0 
25886:  add 21 2 5 0,2
25886:  multiply 30 2 12 0,1,1,1,1,1,2
25886:  associator 19 3 18 0,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
25887: Facts:
25887:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25887:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25887:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25887:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25887:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25887:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25887:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25887:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25887:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25887:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25887:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25887:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25887:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =<=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25887:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25887: Goal:
25887:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25887: Order:
25887:   kbo
25887: Leaf order:
25887:  additive_identity 9 0 1 3
25887:  y 18 0 18 3,1,1,1,1,1,1,2
25887:  x 36 0 36 1,1,1,1,1,1,1,2
25887:  additive_inverse 6 1 0 
25887:  commutator 1 2 0 
25887:  add 21 2 5 0,2
25887:  multiply 30 2 12 0,1,1,1,1,1,2
25887:  associator 19 3 18 0,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
25888: Facts:
25888:  Id :   2, {_}:
          add ?2 ?3 =?= add ?3 ?2
          [3, 2] by commutativity_for_addition ?2 ?3
25888:  Id :   3, {_}:
          add ?5 (add ?6 ?7) =<= add (add ?5 ?6) ?7
          [7, 6, 5] by associativity_for_addition ?5 ?6 ?7
25888:  Id :   4, {_}: add additive_identity ?9 =>= ?9 [9] by left_additive_identity ?9
25888:  Id :   5, {_}:
          add ?11 additive_identity =>= ?11
          [11] by right_additive_identity ?11
25888:  Id :   6, {_}:
          multiply additive_identity ?13 =>= additive_identity
          [13] by left_multiplicative_zero ?13
25888:  Id :   7, {_}:
          multiply ?15 additive_identity =>= additive_identity
          [15] by right_multiplicative_zero ?15
25888:  Id :   8, {_}:
          add (additive_inverse ?17) ?17 =>= additive_identity
          [17] by left_additive_inverse ?17
25888:  Id :   9, {_}:
          add ?19 (additive_inverse ?19) =>= additive_identity
          [19] by right_additive_inverse ?19
25888:  Id :  10, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
25888:  Id :  11, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
25888:  Id :  12, {_}:
          additive_inverse (additive_inverse ?29) =>= ?29
          [29] by additive_inverse_additive_inverse ?29
25888:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
25888:  Id :  14, {_}:
          associator ?34 ?35 ?36
          =>=
          add (multiply (multiply ?34 ?35) ?36)
            (additive_inverse (multiply ?34 (multiply ?35 ?36)))
          [36, 35, 34] by associator ?34 ?35 ?36
25888:  Id :  15, {_}:
          commutator ?38 ?39
          =<=
          add (multiply ?39 ?38) (additive_inverse (multiply ?38 ?39))
          [39, 38] by commutator ?38 ?39
25888: Goal:
25888:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25888: Order:
25888:   lpo
25888: Leaf order:
25888:  additive_identity 9 0 1 3
25888:  y 18 0 18 3,1,1,1,1,1,1,2
25888:  x 36 0 36 1,1,1,1,1,1,1,2
25888:  additive_inverse 6 1 0 
25888:  commutator 1 2 0 
25888:  add 21 2 5 0,2
25888:  multiply 30 2 12 0,1,1,1,1,1,2
25888:  associator 19 3 18 0,1,1,1,1,1,1,2
% SZS status Timeout for RNG032-6.p
NO CLASH, using fixed ground order
25915: Facts:
25915:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25915:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25915:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25915:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25915:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25915:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25915:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25915:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25915:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =?= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25915:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25915:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25915:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25915:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25915:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25915:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25915:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25915:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25915:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25915:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =?= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25915:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25915:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25915: Goal:
25915:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25915: Order:
25915:   nrkbo
25915: Leaf order:
25915:  additive_identity 9 0 1 3
25915:  y 18 0 18 3,1,1,1,1,1,1,2
25915:  x 36 0 36 1,1,1,1,1,1,1,2
25915:  additive_inverse 22 1 0 
25915:  commutator 1 2 0 
25915:  add 29 2 5 0,2
25915:  multiply 48 2 12 0,1,1,1,1,1,2add
25915:  associator 19 3 18 0,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
25916: Facts:
25916:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25916:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25916:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25916:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =<=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25916:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =<=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25916:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =<=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25916:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =<=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25916:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25916:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25916:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25916:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25916:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25916:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25916:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25916:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25916:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =<=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25916:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =<=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25916:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25916:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25916:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =<=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25916:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25916: Goal:
25916:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25916: Order:
25916:   kbo
25916: Leaf order:
25916:  additive_identity 9 0 1 3
25916:  y 18 0 18 3,1,1,1,1,1,1,2
25916:  x 36 0 36 1,1,1,1,1,1,1,2
25916:  additive_inverse 22 1 0 
25916:  commutator 1 2 0 
25916:  add 29 2 5 0,2
25916:  multiply 48 2 12 0,1,1,1,1,1,2add
25916:  associator 19 3 18 0,1,1,1,1,1,1,2
NO CLASH, using fixed ground order
25917: Facts:
25917:  Id :   2, {_}:
          multiply (additive_inverse ?2) (additive_inverse ?3)
          =>=
          multiply ?2 ?3
          [3, 2] by product_of_inverses ?2 ?3
25917:  Id :   3, {_}:
          multiply (additive_inverse ?5) ?6
          =>=
          additive_inverse (multiply ?5 ?6)
          [6, 5] by inverse_product1 ?5 ?6
25917:  Id :   4, {_}:
          multiply ?8 (additive_inverse ?9)
          =>=
          additive_inverse (multiply ?8 ?9)
          [9, 8] by inverse_product2 ?8 ?9
25917:  Id :   5, {_}:
          multiply ?11 (add ?12 (additive_inverse ?13))
          =>=
          add (multiply ?11 ?12) (additive_inverse (multiply ?11 ?13))
          [13, 12, 11] by distributivity_of_difference1 ?11 ?12 ?13
25917:  Id :   6, {_}:
          multiply (add ?15 (additive_inverse ?16)) ?17
          =>=
          add (multiply ?15 ?17) (additive_inverse (multiply ?16 ?17))
          [17, 16, 15] by distributivity_of_difference2 ?15 ?16 ?17
25917:  Id :   7, {_}:
          multiply (additive_inverse ?19) (add ?20 ?21)
          =>=
          add (additive_inverse (multiply ?19 ?20))
            (additive_inverse (multiply ?19 ?21))
          [21, 20, 19] by distributivity_of_difference3 ?19 ?20 ?21
25917:  Id :   8, {_}:
          multiply (add ?23 ?24) (additive_inverse ?25)
          =>=
          add (additive_inverse (multiply ?23 ?25))
            (additive_inverse (multiply ?24 ?25))
          [25, 24, 23] by distributivity_of_difference4 ?23 ?24 ?25
25917:  Id :   9, {_}:
          add ?27 ?28 =?= add ?28 ?27
          [28, 27] by commutativity_for_addition ?27 ?28
25917:  Id :  10, {_}:
          add ?30 (add ?31 ?32) =<= add (add ?30 ?31) ?32
          [32, 31, 30] by associativity_for_addition ?30 ?31 ?32
25917:  Id :  11, {_}:
          add additive_identity ?34 =>= ?34
          [34] by left_additive_identity ?34
25917:  Id :  12, {_}:
          add ?36 additive_identity =>= ?36
          [36] by right_additive_identity ?36
25917:  Id :  13, {_}:
          multiply additive_identity ?38 =>= additive_identity
          [38] by left_multiplicative_zero ?38
25917:  Id :  14, {_}:
          multiply ?40 additive_identity =>= additive_identity
          [40] by right_multiplicative_zero ?40
25917:  Id :  15, {_}:
          add (additive_inverse ?42) ?42 =>= additive_identity
          [42] by left_additive_inverse ?42
25917:  Id :  16, {_}:
          add ?44 (additive_inverse ?44) =>= additive_identity
          [44] by right_additive_inverse ?44
25917:  Id :  17, {_}:
          multiply ?46 (add ?47 ?48)
          =>=
          add (multiply ?46 ?47) (multiply ?46 ?48)
          [48, 47, 46] by distribute1 ?46 ?47 ?48
25917:  Id :  18, {_}:
          multiply (add ?50 ?51) ?52
          =>=
          add (multiply ?50 ?52) (multiply ?51 ?52)
          [52, 51, 50] by distribute2 ?50 ?51 ?52
25917:  Id :  19, {_}:
          additive_inverse (additive_inverse ?54) =>= ?54
          [54] by additive_inverse_additive_inverse ?54
25917:  Id :  20, {_}:
          multiply (multiply ?56 ?57) ?57 =>= multiply ?56 (multiply ?57 ?57)
          [57, 56] by right_alternative ?56 ?57
25917:  Id :  21, {_}:
          associator ?59 ?60 ?61
          =>=
          add (multiply (multiply ?59 ?60) ?61)
            (additive_inverse (multiply ?59 (multiply ?60 ?61)))
          [61, 60, 59] by associator ?59 ?60 ?61
25917:  Id :  22, {_}:
          commutator ?63 ?64
          =<=
          add (multiply ?64 ?63) (additive_inverse (multiply ?63 ?64))
          [64, 63] by commutator ?63 ?64
25917: Goal:
25917:  Id :   1, {_}:
          add
            (add
              (add
                (add
                  (add
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y)))
                    (multiply (associator x x y)
                      (multiply (associator x x y) (associator x x y))))
                  (multiply (associator x x y)
                    (multiply (associator x x y) (associator x x y))))
                (multiply (associator x x y)
                  (multiply (associator x x y) (associator x x y))))
              (multiply (associator x x y)
                (multiply (associator x x y) (associator x x y))))
            (multiply (associator x x y)
              (multiply (associator x x y) (associator x x y)))
          =>=
          additive_identity
          [] by prove_conjecture_3
25917: Order:
25917:   lpo
25917: Leaf order:
25917:  additive_identity 9 0 1 3
25917:  y 18 0 18 3,1,1,1,1,1,1,2
25917:  x 36 0 36 1,1,1,1,1,1,1,2
25917:  additive_inverse 22 1 0 
25917:  commutator 1 2 0 
25917:  add 29 2 5 0,2
25917:  multiply 48 2 12 0,1,1,1,1,1,2add
25917:  associator 19 3 18 0,1,1,1,1,1,1,2
% SZS status Timeout for RNG032-7.p
NO CLASH, using fixed ground order
26009: Facts:
26009:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26009:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26009:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26009:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26009:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26009:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26009:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26009:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26009:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26009:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26009:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
NO CLASH, using fixed ground order
26010: Facts:
26010:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26010:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26010:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26010:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26010:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26010:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26010:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26010:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26010:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26010:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26010:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26010:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26010:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26010:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26010:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26010: Goal:
26010:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26010: Order:
26010:   lpo
26010: Leaf order:
26010:  x 4 0 4 1,1,1,2
26010:  y 4 0 4 2,1,1,2
26010:  z 4 0 4 2,1,2
26010:  w 4 0 4 3,1,2
26010:  additive_identity 8 0 0 
26010:  additive_inverse 6 1 0 
26010:  commutator 2 2 1 0,3,2,2
26010:  add 18 2 2 0,2
26010:  multiply 25 2 3 0,1,1,2
26010:  associator 5 3 4 0,1,2
26009:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26009:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26009:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26009:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26009: Goal:
26009:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26009: Order:
26009:   kbo
26009: Leaf order:
26009:  x 4 0 4 1,1,1,2
26009:  y 4 0 4 2,1,1,2
26009:  z 4 0 4 2,1,2
26009:  w 4 0 4 3,1,2
26009:  additive_identity 8 0 0 
26009:  additive_inverse 6 1 0 
26009:  commutator 2 2 1 0,3,2,2
26009:  add 18 2 2 0,2
26009:  multiply 25 2 3 0,1,1,2
26009:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26008: Facts:
26008:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26008:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26008:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26008:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26008:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26008:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26008:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26008:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26008:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26008:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26008:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26008:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26008:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26008:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26008:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26008: Goal:
26008:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26008: Order:
26008:   nrkbo
26008: Leaf order:
26008:  x 4 0 4 1,1,1,2
26008:  y 4 0 4 2,1,1,2
26008:  z 4 0 4 2,1,2
26008:  w 4 0 4 3,1,2
26008:  additive_identity 8 0 0 
26008:  additive_inverse 6 1 0 
26008:  commutator 2 2 1 0,3,2,2
26008:  add 18 2 2 0,2
26008:  multiply 25 2 3 0,1,1,2
26008:  associator 5 3 4 0,1,2
% SZS status Timeout for RNG033-6.p
NO CLASH, using fixed ground order
26035: Facts:
26035:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26035:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26035:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26035:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26035:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26035:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26035:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26035:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26035:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26035:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26035:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26035:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26035:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26035:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26035:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26035:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26035:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26035:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26035:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26035:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26035:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26035:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26035: Goal:
26035:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26035: Order:
26035:   nrkbo
26035: Leaf order:
26035:  x 4 0 4 1,1,1,2
26035:  y 4 0 4 2,1,1,2
26035:  z 4 0 4 2,1,2
26035:  w 4 0 4 3,1,2
26035:  additive_identity 8 0 0 
26035:  additive_inverse 22 1 0 
26035:  commutator 2 2 1 0,3,2,2
26035:  add 26 2 2 0,2
26035:  multiply 43 2 3 0,1,1,2
26035:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26036: Facts:
26036:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26036:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26036:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26036:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26036:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26036:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26036:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26036:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26036:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26036:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26036:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26036:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26036:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26036:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26036:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26036:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26036:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26036:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26036:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26036:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26036:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26036:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26036: Goal:
26036:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26036: Order:
26036:   kbo
26036: Leaf order:
26036:  x 4 0 4 1,1,1,2
26036:  y 4 0 4 2,1,1,2
26036:  z 4 0 4 2,1,2
26036:  w 4 0 4 3,1,2
26036:  additive_identity 8 0 0 
26036:  additive_inverse 22 1 0 
26036:  commutator 2 2 1 0,3,2,2
26036:  add 26 2 2 0,2
26036:  multiply 43 2 3 0,1,1,2
26036:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26037: Facts:
26037:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26037:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26037:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26037:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26037:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26037:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26037:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26037:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26037:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26037:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26037:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26037:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26037:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26037:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26037:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26037:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26037:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26037:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26037:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26037:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26037:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26037:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26037: Goal:
26037:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26037: Order:
26037:   lpo
26037: Leaf order:
26037:  x 4 0 4 1,1,1,2
26037:  y 4 0 4 2,1,1,2
26037:  z 4 0 4 2,1,2
26037:  w 4 0 4 3,1,2
26037:  additive_identity 8 0 0 
26037:  additive_inverse 22 1 0 
26037:  commutator 2 2 1 0,3,2,2
26037:  add 26 2 2 0,2
26037:  multiply 43 2 3 0,1,1,2
26037:  associator 5 3 4 0,1,2
% SZS status Timeout for RNG033-7.p
NO CLASH, using fixed ground order
26058: Facts:
26058:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26058:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26058:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26058:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26058:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26058:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26058:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26058:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26058:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26058:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26058:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26058:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26058:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26058:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26058:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26058:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =?=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
26058: Goal:
26058:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26058: Order:
26058:   nrkbo
26058: Leaf order:
26058:  x 4 0 4 1,1,1,2
26058:  y 4 0 4 2,1,1,2
26058:  z 4 0 4 2,1,2
26058:  w 4 0 4 3,1,2
26058:  additive_identity 8 0 0 
26058:  additive_inverse 6 1 0 
26058:  commutator 2 2 1 0,3,2,2
26058:  add 18 2 2 0,2
26058:  multiply 31 2 3 0,1,1,2
26058:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26059: Facts:
26059:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26059:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26059:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26059:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26059:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26059:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26059:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26059:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26059:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26059:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26059:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26059:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26059:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26059:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26059:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26059:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =<=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
26059: Goal:
26059:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26059: Order:
26059:   kbo
26059: Leaf order:
26059:  x 4 0 4 1,1,1,2
26059:  y 4 0 4 2,1,1,2
26059:  z 4 0 4 2,1,2
26059:  w 4 0 4 3,1,2
26059:  additive_identity 8 0 0 
26059:  additive_inverse 6 1 0 
26059:  commutator 2 2 1 0,3,2,2
26059:  add 18 2 2 0,2
26059:  multiply 31 2 3 0,1,1,2
26059:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26060: Facts:
26060:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26060:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26060:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26060:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26060:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26060:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26060:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26060:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26060:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26060:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26060:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26060:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26060:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26060:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26060:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26060:  Id :  17, {_}:
          multiply ?44 (multiply ?45 (multiply ?46 ?45))
          =<=
          multiply (multiply (multiply ?44 ?45) ?46) ?45
          [46, 45, 44] by right_moufang ?44 ?45 ?46
26060: Goal:
26060:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26060: Order:
26060:   lpo
26060: Leaf order:
26060:  x 4 0 4 1,1,1,2
26060:  y 4 0 4 2,1,1,2
26060:  z 4 0 4 2,1,2
26060:  w 4 0 4 3,1,2
26060:  additive_identity 8 0 0 
26060:  additive_inverse 6 1 0 
26060:  commutator 2 2 1 0,3,2,2
26060:  add 18 2 2 0,2
26060:  multiply 31 2 3 0,1,1,2
26060:  associator 5 3 4 0,1,2
% SZS status Timeout for RNG033-8.p
NO CLASH, using fixed ground order
26087: Facts:
26087:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26087:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26087:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26087:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26087:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26087:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26087:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26087:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26087:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26087:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26087:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =?= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26087:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =?= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26087:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =?= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26087:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26087:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26087:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26087:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26087:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26087:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26087:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26087:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26087:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26087:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =?=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
26087: Goal:
26087:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26087: Order:
26087:   nrkbo
26087: Leaf order:
26087:  x 4 0 4 1,1,1,2
26087:  y 4 0 4 2,1,1,2
26087:  z 4 0 4 2,1,2
26087:  w 4 0 4 3,1,2
26087:  additive_identity 8 0 0 
26087:  additive_inverse 22 1 0 
26087:  commutator 2 2 1 0,3,2,2
26087:  add 26 2 2 0,2
26087:  multiply 49 2 3 0,1,1,2
26087:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26089: Facts:
26089:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26089:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26089:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26089:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26089:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26089:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26089:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26089:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =>=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26089:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =>=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26089:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26089:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26089:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26089:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26089:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =>=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26089:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26089:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26089:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26089:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26089:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =>=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26089:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =>=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26089:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =>=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26089:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =>=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26089:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =<=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
26089: Goal:
26089:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26089: Order:
26089:   lpo
26089: Leaf order:
26089:  x 4 0 4 1,1,1,2
26089:  y 4 0 4 2,1,1,2
26089:  z 4 0 4 2,1,2
26089:  w 4 0 4 3,1,2
26089:  additive_identity 8 0 0 
26089:  additive_inverse 22 1 0 
26089:  commutator 2 2 1 0,3,2,2
26089:  add 26 2 2 0,2
26089:  multiply 49 2 3 0,1,1,2
26089:  associator 5 3 4 0,1,2
NO CLASH, using fixed ground order
26088: Facts:
26088:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26088:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26088:  Id :   4, {_}:
          multiply additive_identity ?6 =>= additive_identity
          [6] by left_multiplicative_zero ?6
26088:  Id :   5, {_}:
          multiply ?8 additive_identity =>= additive_identity
          [8] by right_multiplicative_zero ?8
26088:  Id :   6, {_}:
          add (additive_inverse ?10) ?10 =>= additive_identity
          [10] by left_additive_inverse ?10
26088:  Id :   7, {_}:
          add ?12 (additive_inverse ?12) =>= additive_identity
          [12] by right_additive_inverse ?12
26088:  Id :   8, {_}:
          additive_inverse (additive_inverse ?14) =>= ?14
          [14] by additive_inverse_additive_inverse ?14
26088:  Id :   9, {_}:
          multiply ?16 (add ?17 ?18)
          =<=
          add (multiply ?16 ?17) (multiply ?16 ?18)
          [18, 17, 16] by distribute1 ?16 ?17 ?18
26088:  Id :  10, {_}:
          multiply (add ?20 ?21) ?22
          =<=
          add (multiply ?20 ?22) (multiply ?21 ?22)
          [22, 21, 20] by distribute2 ?20 ?21 ?22
26088:  Id :  11, {_}:
          add ?24 ?25 =?= add ?25 ?24
          [25, 24] by commutativity_for_addition ?24 ?25
26088:  Id :  12, {_}:
          add ?27 (add ?28 ?29) =<= add (add ?27 ?28) ?29
          [29, 28, 27] by associativity_for_addition ?27 ?28 ?29
26088:  Id :  13, {_}:
          multiply (multiply ?31 ?32) ?32 =>= multiply ?31 (multiply ?32 ?32)
          [32, 31] by right_alternative ?31 ?32
26088:  Id :  14, {_}:
          multiply (multiply ?34 ?34) ?35 =>= multiply ?34 (multiply ?34 ?35)
          [35, 34] by left_alternative ?34 ?35
26088:  Id :  15, {_}:
          associator ?37 ?38 ?39
          =<=
          add (multiply (multiply ?37 ?38) ?39)
            (additive_inverse (multiply ?37 (multiply ?38 ?39)))
          [39, 38, 37] by associator ?37 ?38 ?39
26088:  Id :  16, {_}:
          commutator ?41 ?42
          =<=
          add (multiply ?42 ?41) (additive_inverse (multiply ?41 ?42))
          [42, 41] by commutator ?41 ?42
26088:  Id :  17, {_}:
          multiply (additive_inverse ?44) (additive_inverse ?45)
          =>=
          multiply ?44 ?45
          [45, 44] by product_of_inverses ?44 ?45
26088:  Id :  18, {_}:
          multiply (additive_inverse ?47) ?48
          =>=
          additive_inverse (multiply ?47 ?48)
          [48, 47] by inverse_product1 ?47 ?48
26088:  Id :  19, {_}:
          multiply ?50 (additive_inverse ?51)
          =>=
          additive_inverse (multiply ?50 ?51)
          [51, 50] by inverse_product2 ?50 ?51
26088:  Id :  20, {_}:
          multiply ?53 (add ?54 (additive_inverse ?55))
          =<=
          add (multiply ?53 ?54) (additive_inverse (multiply ?53 ?55))
          [55, 54, 53] by distributivity_of_difference1 ?53 ?54 ?55
26088:  Id :  21, {_}:
          multiply (add ?57 (additive_inverse ?58)) ?59
          =<=
          add (multiply ?57 ?59) (additive_inverse (multiply ?58 ?59))
          [59, 58, 57] by distributivity_of_difference2 ?57 ?58 ?59
26088:  Id :  22, {_}:
          multiply (additive_inverse ?61) (add ?62 ?63)
          =<=
          add (additive_inverse (multiply ?61 ?62))
            (additive_inverse (multiply ?61 ?63))
          [63, 62, 61] by distributivity_of_difference3 ?61 ?62 ?63
26088:  Id :  23, {_}:
          multiply (add ?65 ?66) (additive_inverse ?67)
          =<=
          add (additive_inverse (multiply ?65 ?67))
            (additive_inverse (multiply ?66 ?67))
          [67, 66, 65] by distributivity_of_difference4 ?65 ?66 ?67
26088:  Id :  24, {_}:
          multiply ?69 (multiply ?70 (multiply ?71 ?70))
          =<=
          multiply (multiply (multiply ?69 ?70) ?71) ?70
          [71, 70, 69] by right_moufang ?69 ?70 ?71
26088: Goal:
26088:  Id :   1, {_}:
          add (associator (multiply x y) z w) (associator x y (commutator z w))
          =>=
          add (multiply x (associator y z w)) (multiply (associator x z w) y)
          [] by prove_challenge
26088: Order:
26088:   kbo
26088: Leaf order:
26088:  x 4 0 4 1,1,1,2
26088:  y 4 0 4 2,1,1,2
26088:  z 4 0 4 2,1,2
26088:  w 4 0 4 3,1,2
26088:  additive_identity 8 0 0 
26088:  additive_inverse 22 1 0 
26088:  commutator 2 2 1 0,3,2,2
26088:  add 26 2 2 0,2
26088:  multiply 49 2 3 0,1,1,2
26088:  associator 5 3 4 0,1,2
% SZS status Timeout for RNG033-9.p
NO CLASH, using fixed ground order
NO CLASH, using fixed ground order
26115: Facts:
26115:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26116: Facts:
26116:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26116:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26116:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
26116:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
26116:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
26116:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
26116:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
26116:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
26115:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26116:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
26115:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
26115:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
26115:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =?= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
26115:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
26115:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =?= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
26115:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =<=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
26115:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =<=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
26115:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
26115:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
26115: Goal:
NO CLASH, using fixed ground order
26117: Facts:
26117:  Id :   2, {_}: add additive_identity ?2 =>= ?2 [2] by left_additive_identity ?2
26117:  Id :   3, {_}:
          add ?4 additive_identity =>= ?4
          [4] by right_additive_identity ?4
26117:  Id :   4, {_}:
          add (additive_inverse ?6) ?6 =>= additive_identity
          [6] by left_additive_inverse ?6
26117:  Id :   5, {_}:
          add ?8 (additive_inverse ?8) =>= additive_identity
          [8] by right_additive_inverse ?8
26117:  Id :   6, {_}:
          add ?10 (add ?11 ?12) =<= add (add ?10 ?11) ?12
          [12, 11, 10] by associativity_for_addition ?10 ?11 ?12
26117:  Id :   7, {_}:
          add ?14 ?15 =?= add ?15 ?14
          [15, 14] by commutativity_for_addition ?14 ?15
26117:  Id :   8, {_}:
          multiply ?17 (multiply ?18 ?19) =<= multiply (multiply ?17 ?18) ?19
          [19, 18, 17] by associativity_for_multiplication ?17 ?18 ?19
26117:  Id :   9, {_}:
          multiply ?21 (add ?22 ?23)
          =>=
          add (multiply ?21 ?22) (multiply ?21 ?23)
          [23, 22, 21] by distribute1 ?21 ?22 ?23
26117:  Id :  10, {_}:
          multiply (add ?25 ?26) ?27
          =>=
          add (multiply ?25 ?27) (multiply ?26 ?27)
          [27, 26, 25] by distribute2 ?25 ?26 ?27
26117:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
26117:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
26117: Goal:
26117:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
26117: Order:
26117:   lpo
26117: Leaf order:
26117:  b 2 0 1 1,2
26117:  a 2 0 1 2,2
26117:  c 2 0 1 3
26117:  additive_identity 4 0 0 
26117:  additive_inverse 2 1 0 
26117:  add 14 2 0 
26117:  multiply 16 2 1 0,2
26116:  Id :  11, {_}:
          multiply ?29 (multiply ?29 (multiply ?29 (multiply ?29 ?29))) =>= ?29
          [29] by x_fifthed_is_x ?29
26116:  Id :  12, {_}: multiply a b =>= c [] by a_times_b_is_c
26116: Goal:
26116:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
26116: Order:
26116:   kbo
26116: Leaf order:
26116:  b 2 0 1 1,2
26116:  a 2 0 1 2,2
26116:  c 2 0 1 3
26116:  additive_identity 4 0 0 
26116:  additive_inverse 2 1 0 
26116:  add 14 2 0 
26116:  multiply 16 2 1 0,2
26115:  Id :   1, {_}: multiply b a =>= c [] by prove_commutativity
26115: Order:
26115:   nrkbo
26115: Leaf order:
26115:  b 2 0 1 1,2
26115:  a 2 0 1 2,2
26115:  c 2 0 1 3
26115:  additive_identity 4 0 0 
26115:  additive_inverse 2 1 0 
26115:  add 14 2 0 
26115:  multiply 16 2 1 0,2
% SZS status Timeout for RNG036-7.p
NO CLASH, using fixed ground order
26159: Facts:
26159:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26159:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26159:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26159: Goal:
26159:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26159: Order:
26159:   nrkbo
26159: Leaf order:
26159:  a 2 0 2 1,1,1,2
26159:  b 3 0 3 1,2,1,1,2
26159:  negate 9 1 5 0,1,2
26159:  add 12 2 3 0,2
NO CLASH, using fixed ground order
26160: Facts:
26160:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26160:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26160:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26160: Goal:
26160:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26160: Order:
26160:   kbo
26160: Leaf order:
26160:  a 2 0 2 1,1,1,2
26160:  b 3 0 3 1,2,1,1,2
26160:  negate 9 1 5 0,1,2
26160:  add 12 2 3 0,2
NO CLASH, using fixed ground order
26161: Facts:
26161:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26161:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26161:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26161: Goal:
26161:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26161: Order:
26161:   lpo
26161: Leaf order:
26161:  a 2 0 2 1,1,1,2
26161:  b 3 0 3 1,2,1,1,2
26161:  negate 9 1 5 0,1,2
26161:  add 12 2 3 0,2
% SZS status Timeout for ROB001-1.p
NO CLASH, using fixed ground order
26183: Facts:
26183:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26183:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26183:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26183:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26183: Goal:
26183:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26183: Order:
26183:   nrkbo
26183: Leaf order:
26183:  a 3 0 2 1,1,1,2
26183:  b 5 0 3 1,2,1,1,2
26183:  negate 11 1 5 0,1,2
26183:  add 13 2 3 0,2
NO CLASH, using fixed ground order
26184: Facts:
26184:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26184:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26184:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26184:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26184: Goal:
26184:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26184: Order:
26184:   kbo
26184: Leaf order:
26184:  a 3 0 2 1,1,1,2
26184:  b 5 0 3 1,2,1,1,2
26184:  negate 11 1 5 0,1,2
26184:  add 13 2 3 0,2
NO CLASH, using fixed ground order
26185: Facts:
26185:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26185:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26185:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26185:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26185: Goal:
26185:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26185: Order:
26185:   lpo
26185: Leaf order:
26185:  a 3 0 2 1,1,1,2
26185:  b 5 0 3 1,2,1,1,2
26185:  negate 11 1 5 0,1,2
26185:  add 13 2 3 0,2
% SZS status Timeout for ROB007-1.p
NO CLASH, using fixed ground order
26215: Facts:
26215:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26215:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26215:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26215:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26215: Goal:
26215:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26215: Order:
26215:   nrkbo
26215: Leaf order:
26215:  a 1 0 0 
26215:  b 2 0 0 
26215:  negate 6 1 0 
26215:  add 11 2 1 0,2
NO CLASH, using fixed ground order
26216: Facts:
26216:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26216:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26216:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26216:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26216: Goal:
26216:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26216: Order:
26216:   kbo
26216: Leaf order:
26216:  a 1 0 0 
26216:  b 2 0 0 
26216:  negate 6 1 0 
26216:  add 11 2 1 0,2
NO CLASH, using fixed ground order
26217: Facts:
26217:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26217:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26217:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26217:  Id :   5, {_}: negate (add a b) =>= negate b [] by condition
26217: Goal:
26217:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26217: Order:
26217:   lpo
26217: Leaf order:
26217:  a 1 0 0 
26217:  b 2 0 0 
26217:  negate 6 1 0 
26217:  add 11 2 1 0,2
% SZS status Timeout for ROB007-2.p
NO CLASH, using fixed ground order
26249: Facts:
26249:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26249:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26249:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26249:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26249: Goal:
26249:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26249: Order:
26249:   nrkbo
26249: Leaf order:
26249:  a 3 0 2 1,1,1,2
26249:  b 5 0 3 1,2,1,1,2
26249:  negate 11 1 5 0,1,2
26249:  add 13 2 3 0,2
NO CLASH, using fixed ground order
26250: Facts:
26250:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26250:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26250:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26250:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26250: Goal:
26250:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26250: Order:
26250:   kbo
26250: Leaf order:
26250:  a 3 0 2 1,1,1,2
26250:  b 5 0 3 1,2,1,1,2
26250:  negate 11 1 5 0,1,2
26250:  add 13 2 3 0,2
NO CLASH, using fixed ground order
26251: Facts:
26251:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26251:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26251:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26251:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26251: Goal:
26251:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26251: Order:
26251:   lpo
26251: Leaf order:
26251:  a 3 0 2 1,1,1,2
26251:  b 5 0 3 1,2,1,1,2
26251:  negate 11 1 5 0,1,2
26251:  add 13 2 3 0,2
% SZS status Timeout for ROB020-1.p
NO CLASH, using fixed ground order
26275: Facts:
26275:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26275:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =?= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26275:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26275:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26275: Goal:
26275:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26275: Order:
26275:   nrkbo
26275: Leaf order:
26275:  a 1 0 0 
26275:  b 2 0 0 
26275:  negate 6 1 0 
26275:  add 11 2 1 0,2
NO CLASH, using fixed ground order
26276: Facts:
26276:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26276:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26276:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26276:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26276: Goal:
26276:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26276: Order:
26276:   kbo
26276: Leaf order:
26276:  a 1 0 0 
26276:  b 2 0 0 
26276:  negate 6 1 0 
26276:  add 11 2 1 0,2
NO CLASH, using fixed ground order
26277: Facts:
26277:  Id :   2, {_}: add ?3 ?4 =?= add ?4 ?3 [4, 3] by commutativity_of_add ?3 ?4
26277:  Id :   3, {_}:
          add (add ?6 ?7) ?8 =>= add ?6 (add ?7 ?8)
          [8, 7, 6] by associativity_of_add ?6 ?7 ?8
26277:  Id :   4, {_}:
          negate (add (negate (add ?10 ?11)) (negate (add ?10 (negate ?11))))
          =>=
          ?10
          [11, 10] by robbins_axiom ?10 ?11
26277:  Id :   5, {_}: negate (add a (negate b)) =>= b [] by condition1
26277: Goal:
26277:  Id :   1, {_}: add ?1 ?1 =>= ?1 [1] by prove_idempotence ?1
26277: Order:
26277:   lpo
26277: Leaf order:
26277:  a 1 0 0 
26277:  b 2 0 0 
26277:  negate 6 1 0 
26277:  add 11 2 1 0,2
% SZS status Timeout for ROB020-2.p
NO CLASH, using fixed ground order
26303: Facts:
26303:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26303:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26303:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26303:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
26303: Goal:
26303:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26303: Order:
26303:   nrkbo
26303: Leaf order:
26303:  b 5 0 3 1,2,1,1,2
26303:  a 6 0 2 1,1,1,2
26303:  negate 13 1 5 0,1,2
26303:  add 16 2 3 0,2
NO CLASH, using fixed ground order
26304: Facts:
26304:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26304:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26304:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26304:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
26304: Goal:
26304:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26304: Order:
26304:   kbo
26304: Leaf order:
26304:  b 5 0 3 1,2,1,1,2
26304:  a 6 0 2 1,1,1,2
26304:  negate 13 1 5 0,1,2
26304:  add 16 2 3 0,2
NO CLASH, using fixed ground order
26305: Facts:
26305:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26305:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26305:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26305:  Id :   5, {_}:
          negate (add (negate (add a (add a b))) (negate (add a (negate b))))
          =>=
          a
          [] by the_condition
26305: Goal:
26305:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26305: Order:
26305:   lpo
26305: Leaf order:
26305:  b 5 0 3 1,2,1,1,2
26305:  a 6 0 2 1,1,1,2
26305:  negate 13 1 5 0,1,2
26305:  add 16 2 3 0,2
% SZS status Timeout for ROB024-1.p
NO CLASH, using fixed ground order
26392: Facts:
26392:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26392:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =?= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26392:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26392:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
26392: Goal:
26392:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26392: Order:
26392:   nrkbo
26392: Leaf order:
26392:  c 2 0 0 
26392:  a 2 0 2 1,1,1,2
26392:  b 3 0 3 1,2,1,1,2
26392:  negate 11 1 5 0,1,2
26392:  add 12 2 3 0,2
NO CLASH, using fixed ground order
26393: Facts:
26393:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26393:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26393:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26393:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
26393: Goal:
26393:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26393: Order:
26393:   kbo
26393: Leaf order:
26393:  c 2 0 0 
26393:  a 2 0 2 1,1,1,2
26393:  b 3 0 3 1,2,1,1,2
26393:  negate 11 1 5 0,1,2
26393:  add 12 2 3 0,2
NO CLASH, using fixed ground order
26394: Facts:
26394:  Id :   2, {_}: add ?2 ?3 =?= add ?3 ?2 [3, 2] by commutativity_of_add ?2 ?3
26394:  Id :   3, {_}:
          add (add ?5 ?6) ?7 =>= add ?5 (add ?6 ?7)
          [7, 6, 5] by associativity_of_add ?5 ?6 ?7
26394:  Id :   4, {_}:
          negate (add (negate (add ?9 ?10)) (negate (add ?9 (negate ?10))))
          =>=
          ?9
          [10, 9] by robbins_axiom ?9 ?10
26394:  Id :   5, {_}: negate (negate c) =>= c [] by double_negation
26394: Goal:
26394:  Id :   1, {_}:
          add (negate (add a (negate b))) (negate (add (negate a) (negate b)))
          =>=
          b
          [] by prove_huntingtons_axiom
26394: Order:
26394:   lpo
26394: Leaf order:
26394:  c 2 0 0 
26394:  a 2 0 2 1,1,1,2
26394:  b 3 0 3 1,2,1,1,2
26394:  negate 11 1 5 0,1,2
26394:  add 12 2 3 0,2
% SZS status Timeout for ROB027-1.p
NO CLASH, using fixed ground order
26415: Facts:
26415:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26415:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =?= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26415:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26415: Goal:
26415:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
26415: Order:
26415:   nrkbo
26415: Leaf order:
26415:  negate 6 1 2 0,2
26415:  add 10 2 1 0,1,2
NO CLASH, using fixed ground order
26416: Facts:
26416:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26416:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26416:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26416: Goal:
26416:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
26416: Order:
26416:   kbo
26416: Leaf order:
26416:  negate 6 1 2 0,2
26416:  add 10 2 1 0,1,2
NO CLASH, using fixed ground order
26417: Facts:
26417:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26417:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26417:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26417: Goal:
26417:  Id :   1, {_}:
          negate (add ?1 ?2) =>= negate ?2
          [2, 1] by prove_absorption_within_negation ?1 ?2
26417: Order:
26417:   lpo
26417: Leaf order:
26417:  negate 6 1 2 0,2
26417:  add 10 2 1 0,1,2
% SZS status Timeout for ROB031-1.p
NO CLASH, using fixed ground order
26440: Facts:
26440:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26440:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26440:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26440: Goal:
26440:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
26440: Order:
26440:   kbo
26440: Leaf order:
26440:  negate 4 1 0 
26440:  add 10 2 1 0,2
NO CLASH, using fixed ground order
26441: Facts:
26441:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26441:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =>= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26441:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26441: Goal:
26441:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
26441: Order:
26441:   lpo
26441: Leaf order:
26441:  negate 4 1 0 
26441:  add 10 2 1 0,2
NO CLASH, using fixed ground order
26439: Facts:
26439:  Id :   2, {_}: add ?4 ?5 =?= add ?5 ?4 [5, 4] by commutativity_of_add ?4 ?5
26439:  Id :   3, {_}:
          add (add ?7 ?8) ?9 =?= add ?7 (add ?8 ?9)
          [9, 8, 7] by associativity_of_add ?7 ?8 ?9
26439:  Id :   4, {_}:
          negate (add (negate (add ?11 ?12)) (negate (add ?11 (negate ?12))))
          =>=
          ?11
          [12, 11] by robbins_axiom ?11 ?12
26439: Goal:
26439:  Id :   1, {_}: add ?1 ?2 =>= ?2 [2, 1] by prove_absorbtion ?1 ?2
26439: Order:
26439:   nrkbo
26439: Leaf order:
26439:  negate 4 1 0 
26439:  add 10 2 1 0,2
% SZS status Timeout for ROB032-1.p
